; /=========================================================================\
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º	Copyright (c) 2003 by DataRescue sa/nv,	<ida@datarescue.com>	    º
; \=========================================================================/
;
; Disassembly created by drx
; thanks to Hivebrain and Rika_Chou

; Processor:	    68000
; Target Assembler: 680x0 Assembler in MRI compatible mode
; This file should be compiled with "as	-M"


	include	"s2.constants.asm"

; ---------------------------------------------------------------------------
; Macros
align macro
	cnop 0,\1
	endm

stopZ80 macro
	move.w	#$100,(Z80_Bus_Request).l
@loop:	btst	#0,(Z80_Bus_Request).l
	bne.s	@loop
	endm

startZ80 macro
	move.w	#0,(Z80_Bus_Request).l
	endm

StartOfRom:
Vectors:	dc.l $FFFE00,EntryPoint,BusError,AddressError
		dc.l IllegalInstr,ZeroDivide,ChkInstr,TrapvInstr
		dc.l PrivilegeViol,Trace,Line1010Emu,Line1111Emu
		dc.l ErrorExcept,ErrorExcept,ErrorExcept,ErrorExcept
		dc.l ErrorExcept,ErrorExcept,ErrorExcept,ErrorExcept
		dc.l ErrorExcept,ErrorExcept,ErrorExcept,ErrorExcept
		dc.l ErrorExcept,ErrorTrap,ErrorTrap,ErrorTrap
		dc.l H_Int,ErrorTrap,V_Int,ErrorTrap
		dc.l ErrorTrap,ErrorTrap,ErrorTrap,ErrorTrap
		dc.l ErrorTrap,ErrorTrap,ErrorTrap,ErrorTrap
		dc.l ErrorTrap,ErrorTrap,ErrorTrap,ErrorTrap
		dc.l ErrorTrap,ErrorTrap,ErrorTrap,ErrorTrap
		dc.l ErrorTrap,ErrorTrap,ErrorTrap,ErrorTrap
		dc.l ErrorTrap,ErrorTrap,ErrorTrap,ErrorTrap
		dc.l ErrorTrap,ErrorTrap,ErrorTrap,ErrorTrap
		dc.l ErrorTrap,ErrorTrap,ErrorTrap,ErrorTrap
; byte_100
Header:
		dc.b "SEGA MEGA DRIVE " ; Console name
		dc.b "(C)SEGA 1991.APR" ; Copyright holder and release year (leftover from Sonic 1)
		dc.b "SONIC THE             HEDGEHOG 2                " ; Domestic name
		dc.b "SONIC THE             HEDGEHOG 2                " ; International name
		dc.b "GM 00004049-01"   ; Version (leftover from Sonic 1)
; word_18E
Checksum:
		dc.w $AFC7		; Checksum (patched later if incorrect)
		dc.b "J               " ; I/O support
		dc.l StartOfRom		; Start address of ROM
; dword_1A4
ROMEndLoc:
		dc.l $7FFFF		; End address of ROM (leftover from Sonic 1)
		dc.l $FF0000		; Start address of RAM
		dc.l $FFFFFF		; End address of RAM
		dc.l $20202020		; Backup RAM ID
		dc.l $20202020		; Backup RAM start address
		dc.l $20202020		; Backup RAM end address
		dc.l $20202020		; Modem support
		dc.b "                                                " ; Notes (unused, anything can be put in this space, but it has to be 48 bytes.)
		dc.b "JUE             " ; Country code (region)
EndOfHeader:

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ErrorTrap:
		nop
		nop
		bra.s	ErrorTrap
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

EntryPoint:
		tst.l	($A10008).l	; test Port A Ctrl
		bne.s	PortA_OK
		tst.w	($A1000C).l	; test Port C Ctrl

PortA_OK:
		bne.s	PortC_OK
		lea	InitValues(pc),a5
		movem.w	(a5)+,d5-d7
		movem.l	(a5)+,a0-a4
		move.b	-$10FF(a1),d0	; get hardware version
		andi.b	#$F,d0
		beq.s	SkipSecurity
		move.l	#'SEGA',$2F00(a1)

SkipSecurity:
		move.w	(a4),d0
		moveq	#0,d0
		movea.l	d0,a6
		move.l	a6,usp
		moveq	#$17,d1

VDPInitLoop:
		move.b	(a5)+,d5
		move.w	d5,(a4)
		add.w	d7,d5
		dbf	d1,VDPInitLoop
		move.l	(a5)+,(a4)
		move.w	d0,(a3)
		move.w	d7,(a1)
		move.w	d7,(a2)

WaitForZ80:
		btst	d0,(a1)
		bne.s	WaitForZ80
		moveq	#$25,d2

Z80InitLoop:
		move.b	(a5)+,(a0)+
		dbf	d2,Z80InitLoop
		move.w	d0,(a2)
		move.w	d0,(a1)
		move.w	d7,(a2)

ClearRAMLoop:
		move.l	d0,-(a6)

loc_264:
		dbf	d6,ClearRAMLoop
		move.l	(a5)+,(a4)
		move.l	(a5)+,(a4)
		moveq	#$1F,d3

ClearCRAMLoop:
		move.l	d0,(a3)
		dbf	d3,ClearCRAMLoop
		move.l	(a5)+,(a4)
		moveq	#$13,d4

ClearVSRAMLoop:
		move.l	d0,(a3)
		dbf	d4,ClearVSRAMLoop
		moveq	#3,d5

PSGInitLoop:
		move.b	(a5)+,$11(a3)
		dbf	d5,PSGInitLoop
		move.w	d0,(a2)
		movem.l	(a6),d0-a6
		move	#$2700,sr

PortC_OK:
		bra.s	GameProgram
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
InitValues:	dc.w $8000
		dc.w $3FFF
		dc.w $100

		dc.l Z80_RAM		; Z80 RAM start	location
dword_29E:	dc.l Z80_Bus_Request	; Z80 bus request
		dc.l Z80_Reset		; Z80 reset
		dc.l VDP_data_port	; VDP data port
		dc.l VDP_control_port	; VDP control port

		dc.b   4,$14,$30,$3C	; 0 ; values for VDP registers
		dc.b   7,$6C,  0,  0	; 4
		dc.b   0,  0,$FF,  0	; 8
		dc.b $81,$37,  0,  1	; 12
		dc.b   1,  0,  0,$FF	; 16
		dc.b $FF,  0,  0,$80	; 20

		dc.l $40000080		; value	for VRAM fill

		dc.b $AF,  1,$D9,$1F,$11,$27,  0,$21,$26,  0,$F9,$77,$ED,$B0,$DD,$E1; 0	; Z80 instructions
		dc.b $FD,$E1,$ED,$47,$ED,$4F,$D1,$E1,$F1,  8,$D9,$C1,$D1,$E1,$F1,$F9; 16
		dc.b $F3,$ED,$56,$36,$E9,$E9; 32

		dc.w $8104		; VDP display mode
		dc.w $8F02		; VDP increment
		dc.l $C0000000		; value	for CRAM Write mode
		dc.l $40000010		; value	for VSRAM write	mode

		dc.b  $9F, $BF,	$DF, $FF; 0 ; values for PSG channel volumes
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

GameProgram:
		tst.w	(VDP_control_port).l
		btst	#6,(HW_Expansion_Control).l
		beq.s	ChecksumTest
		cmpi.l	#'init',($FFFFFFFC).w
		beq.w	GameInit

ChecksumTest:
		movea.l	#ErrorTrap,a0	; start checking bytes after header ($200)
		movea.l	#ROMEndLoc,a1	; stop at end of ROM (but not really since it's half the ROM, leftover from Sonic 1)
		move.l	(a1),d0
		move.l	#$7FFFF,d0
		moveq	#0,d1

ChecksumLoop:
		add.w	(a0)+,d1
		cmp.l	a0,d0
		bcc.s	ChecksumLoop
		movea.l	#Checksum,a1	; read the checksum
		cmp.w	(a1),d1		; compare correct checksum to one in ROM...
		nop			; ...and do nothing since this has been noped out...
		nop
		lea	($FFFFFE00).w,a6
		moveq	#0,d7
		move.w	#$7F,d6

loc_350:
		move.l	d7,(a6)+
		dbf	d6,loc_350
		move.b	(HW_Version).l,d0
		andi.b	#$C0,d0
		move.b	d0,($FFFFFFF8).w
		move.l	#'init',($FFFFFFFC).w

GameInit:
		lea	($FF0000).l,a6
		moveq	#0,d7
		move.w	#$3F7F,d6

GameClrRAM:
		move.l	d7,(a6)+
		dbf	d6,GameClrRAM
		bsr.w	VDPSetupGame
		bsr.w	SoundDriverLoad
		bsr.w	JoypadInit
		move.b	#GameModeID_SegaScreen,(Game_Mode).w

MainGameLoop:
		move.b	(Game_Mode).w,d0
		andi.w	#$1C,d0
		jsr	GameModeArray(pc,d0.w)
		bra.s	MainGameLoop
; ===========================================================================
; loc_3A8:
GameModeArray:
GameMode_SegaScreen:	bra.w	SegaScreen	; SEGA screen mode
GameMode_TitleScreen:	bra.w	TitleScreen	; Title screen mode
GameMode_Demo:		bra.w	Level		; Demo mode
GameMode_Level:		bra.w	Level		; Zone play mode
GameMode_SpecialStage:	bra.w	SpecialStage	; Special Stage play mode
; ===========================================================================
; Leftover from Sonic 1, turns the screen red if the checksum check fails
ChecksumError:
		bsr.w	VDPSetupGame
		move.l	#$C0000000,(VDP_control_port).l
		moveq	#$3F,d7

Checksum_Red:
		move.w	#$E,(VDP_data_port).l
		dbf	d7,Checksum_Red

ChecksumFailed_Loop:
		bra.s	ChecksumFailed_Loop
; ===========================================================================

BusError:
		move.b	#2,($FFFFFC44).w
		bra.s	ErrorMsg_TwoAddresses
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

AddressError:
		move.b	#4,($FFFFFC44).w
		bra.s	ErrorMsg_TwoAddresses
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

IllegalInstr:
		move.b	#6,($FFFFFC44).w
		addq.l	#2,2(sp)
		bra.s	ErrorMessage
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ZeroDivide:
		move.b	#8,($FFFFFC44).w
		bra.s	ErrorMessage
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ChkInstr:
		move.b	#$A,($FFFFFC44).w
		bra.s	ErrorMessage
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

TrapvInstr:
		move.b	#$C,($FFFFFC44).w
		bra.s	ErrorMessage
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

PrivilegeViol:
		move.b	#$E,($FFFFFC44).w
		bra.s	ErrorMessage
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Trace:
		move.b	#$10,($FFFFFC44).w
		bra.s	ErrorMessage
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Line1010Emu:
		move.b	#$12,($FFFFFC44).w
		addq.l	#2,2(sp)
		bra.s	ErrorMessage
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Line1111Emu:
		move.b	#$14,($FFFFFC44).w
		addq.l	#2,2(sp)
		bra.s	ErrorMessage
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ErrorExcept:
		move.b	#0,($FFFFFC44).w
		bra.s	ErrorMessage
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ErrorMsg_TwoAddresses:
		move	#$2700,sr
		addq.w	#2,sp
		move.l	(sp)+,($FFFFFC40).w
		addq.w	#2,sp
		movem.l	d0-a7,($FFFFFC00).w
		bsr.w	ShowErrorMsg
		move.l	2(sp),d0
		bsr.w	ShowErrAddress
		move.l	($FFFFFC40).w,d0
		bsr.w	ShowErrAddress
		bra.s	ErrorMsg_Wait
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ErrorMessage:
		move	#$2700,sr
		movem.l	d0-a7,($FFFFFC00).w
		bsr.w	ShowErrorMsg
		move.l	2(sp),d0
		bsr.w	ShowErrAddress

ErrorMsg_Wait:
		bsr.w	Error_WaitForC
		movem.l	($FFFFFC00).w,d0-a7
		move	#$2300,sr
		rte

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ShowErrorMsg:
		lea	(VDP_data_port).l,a6
		move.l	#$78000003,(VDP_control_port).l
		lea	(Art_Text).l,a0
		move.w	#$27F,d1

Error_LoadGfx:
		move.w	(a0)+,(a6)
		dbf	d1,Error_LoadGfx
		moveq	#0,d0
		move.b	($FFFFFC44).w,d0

loc_4A6:
		move.w	ErrorText(pc,d0.w),d0
		lea	ErrorText(pc,d0.w),a0
		move.l	#$46040003,(VDP_control_port).l
		moveq	#$12,d1

Error_CharsLoop:
		moveq	#0,d0
		move.b	(a0)+,d0
		addi.w	#$790,d0
		move.w	d0,(a6)
		dbf	d1,Error_CharsLoop
		rts
; End of function ShowErrorMsg

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
ErrorText:	dc.w ErrText_Exept-ErrorText
		dc.w ErrText_BusErr-ErrorText
		dc.w ErrText_AddrErr-ErrorText
		dc.w ErrText_IllInstr-ErrorText
		dc.w ErrText_ZeroDiv-ErrorText
		dc.w ErrText_ChkInstr-ErrorText
		dc.w ErrText_TrapV-ErrorText
		dc.w ErrText_PrivViol-ErrorText
		dc.w ErrText_Trace-ErrorText
		dc.w ErrText_Line1010-ErrorText
		dc.w ErrText_Line1111-ErrorText
ErrText_Exept:		dc.b 'ERROR EXCEPTION    '
ErrText_BusErr:		dc.b 'BUS ERROR          '
ErrText_AddrErr:	dc.b 'ADDRESS ERROR      '
ErrText_IllInstr:	dc.b 'ILLEGAL INSTRUCTION'
ErrText_ZeroDiv:	dc.b '@ERO DIVIDE        '
ErrText_ChkInstr:	dc.b 'CHK INSTRUCTION    '
ErrText_TrapV:		dc.b 'TRAPV INSTRUCTION  '
ErrText_PrivViol:	dc.b 'PRIVILEGE VIOLATION'
ErrText_Trace:		dc.b 'TRACE              '
ErrText_Line1010:	dc.b 'LINE 1010 EMULATOR '
ErrText_Line1111:	dc.b 'LINE 1111 EMULATOR ',0

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ShowErrAddress:
		move.w	#$7CA,(a6)
		moveq	#7,d2

ShowErrAddress_DigitLoop:
		rol.l	#4,d0
		bsr.s	ShowErrDigit
		dbf	d2,ShowErrAddress_DigitLoop
		rts
; End of function ShowErrAddress


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ShowErrDigit:
		move.w	d0,d1
		andi.w	#$F,d1
		cmpi.w	#$A,d1
		bcs.s	ShowErrDigit_NoOverflow
		addq.w	#7,d1

ShowErrDigit_NoOverflow:
		addi.w	#$7C0,d1
		move.w	d1,(a6)
		rts
; End of function ShowErrDigit


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Error_WaitForC:	
		bsr.w	ReadJoypads
		cmpi.b	#$20,($FFFFF605).w
		bne.w	Error_WaitForC
		rts
; End of function Error_WaitForC

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Art_Text:	incbin	"art/uncompressed/Level select and Debug Mode text.bin"
		even
; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; vertical and horizontal interrupt handlers
; VERTICAL INTERRUPT HANDLER:
V_Int:
		movem.l	d0-a6,-(sp)
		tst.b	(Vint_routine).w
		beq.s	Vint_Lag

loc_B12:
		move.w	(VDP_control_port).l,d0
		andi.w	#8,d0
		beq.s	loc_B12
		move.l	#$40000010,(VDP_control_port).l
		move.l	(Vscroll_Factor).w,(VDP_data_port).l
		btst	#6,($FFFFFFF8).w
		beq.s	loc_B40
		move.w	#$700,d0

loc_B3C:
		dbf	d0,loc_B3C

loc_B40:
		move.b	(Vint_routine).w,d0
		move.b	#VintID_Lag,(Vint_routine).w
		move.w	#1,(Hint_flag).w
		andi.w	#$3E,d0
		move.w	Vint_SwitchTbl(pc,d0.w),d0
		jsr	Vint_SwitchTbl(pc,d0.w)
; loc_B5C:
Vint_SoundDriver:
		jsr	(sub_71B4C).l
; loc_B62:
VintRet:
		addq.l	#1,(Vint_runcount).w
		movem.l	(sp)+,d0-a6
		rte
; ===========================================================================
; off_B6C:
Vint_SwitchTbl:
Vint_Lag_ptr:		dc.w Vint_Lag-Vint_SwitchTbl		; 0
Vint_SEGA_ptr:		dc.w Vint_SEGA-Vint_SwitchTbl		; 2
Vint_Title_ptr:		dc.w Vint_Title-Vint_SwitchTbl		; 4
Vint_Unused6_ptr:	dc.w Vint_Unused6-Vint_SwitchTbl	; 6
Vint_Level_ptr:		dc.w Vint_Level-Vint_SwitchTbl		; 8
Vint_S1SS_ptr:		dc.w Vint_S1SS-Vint_SwitchTbl		; $A
Vint_TitleCard_ptr:	dc.w Vint_TitleCard-Vint_SwitchTbl	; $C
Vint_UnusedE_ptr:	dc.w Vint_UnusedE-Vint_SwitchTbl	; $E
Vint_Pause_ptr:		dc.w Vint_Pause-Vint_SwitchTbl		; $10
Vint_Fade_ptr:		dc.w Vint_Fade-Vint_SwitchTbl		; $12
Vint_PCM_ptr:		dc.w Vint_PCM-Vint_SwitchTbl		; $14
Vint_SSResults_ptr:	dc.w Vint_SSResults-Vint_SwitchTbl	; $16
Vint_TitleCard2_ptr:	dc.w Vint_TitleCard-Vint_SwitchTbl	; $18
; ===========================================================================
; loc_B86: VintSub0:
Vint_Lag:
		cmpi.b	#GameModeID_TitleCard|GameModeID_Level,(Game_Mode).w
		beq.s	loc_BA0
		cmpi.b	#GameModeID_Demo,(Game_Mode).w
		beq.s	loc_BA0
		cmpi.b	#GameModeID_Level,(Game_Mode).w
		bne.w	Vint_SoundDriver

loc_BA0:
		tst.b	(Water_flag).w
		beq.w	Vint0_noWater
		move.w	(VDP_control_port).l,d0
		btst	#6,($FFFFFFF8).w
		beq.s	loc_BBE
		move.w	#$700,d0

loc_BBA:
		dbf	d0,loc_BBA

loc_BBE:
		move.w	#1,(Hint_flag).w
		stopZ80
		tst.b	(Water_fullscreen_flag).w
		bne.s	loc_C02
		lea	(VDP_control_port).l,a5
		move.l	#$94009340,(a5)
		move.l	#$96FD9580,(a5)
		move.w	#$977F,(a5)
		move.w	#$C000,(a5)
		move.w	#$80,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		bra.s	loc_C26
; ---------------------------------------------------------------------------

loc_C02:
		lea	(VDP_control_port).l,a5
		move.l	#$94009340,(a5)
		move.l	#$96FD9540,(a5)
		move.w	#$977F,(a5)
		move.w	#$C000,(a5)
		move.w	#$80,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)

loc_C26:
		move.w	(Hint_counter_reserve).w,(a5)
		move.w	#$8230,(VDP_control_port).l
		startZ80
		bra.w	Vint_SoundDriver
; ---------------------------------------------------------------------------
; loc_C3E:
Vint0_noWater:
		move.w	(VDP_control_port).l,d0
		move.l	#$40000010,(VDP_control_port).l
		move.l	(Vscroll_Factor).w,(VDP_data_port).l
		btst	#6,($FFFFFFF8).w
		beq.s	loc_C66
		move.w	#$700,d0

loc_C62:
		dbf	d0,loc_C62

loc_C66:
		move.w	#1,(Hint_flag).w
		move.w	(Hint_counter_reserve).w,(VDP_control_port).l
		move.w	#$8230,(VDP_control_port).l
		move.l	($FFFFF61E).w,($FFFFEEF0).w
		lea	(VDP_control_port).l,a5
		move.l	#$94019340,(a5)
		move.l	#$96FC9500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		bra.w	Vint_SoundDriver
; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; loc_CAA: VintSub2:
Vint_SEGA:
		bsr.w	Do_ControllerPal
; loc_CAE: VintSub14:
Vint_PCM:
		tst.w	(Demo_Time_left).w
		beq.w	locret_CBA
		subq.w	#1,(Demo_Time_left).w

locret_CBA:
		rts
; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; loc_CBC: VintSub4:
Vint_Title:
		bsr.w	Do_ControllerPal
		bsr.w	ProcessDPLC
		tst.w	(Demo_Time_left).w
		beq.w	locret_CD0

loc_CCC:
		subq.w	#1,(Demo_Time_left).w

locret_CD0:
		rts
; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; loc_CD2: VintSub6:
Vint_Unused6:
		bsr.w	Do_ControllerPal
		rts
; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; loc_CD8: VintSub10:
Vint_Pause:
		cmpi.b	#GameModeID_SpecialStage,(Game_Mode).w
		beq.w	Vint_S1SS
; loc_CE2: VintSub8:
Vint_Level:
		stopZ80
		bsr.w	ReadJoypads
		tst.b	(Water_fullscreen_flag).w
		bne.s	loc_D24

		lea	(VDP_control_port).l,a5
		move.l	#$94009340,(a5)
		move.l	#$96FD9580,(a5)
		move.w	#$977F,(a5)
		move.w	#$C000,(a5)
		move.w	#$80,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		bra.s	loc_D48
; ---------------------------------------------------------------------------

loc_D24:
		lea	(VDP_control_port).l,a5
		move.l	#$94009340,(a5)

loc_D30:
		move.l	#$96FD9540,(a5)
		move.w	#$977F,(a5)
		move.w	#$C000,(a5)
		move.w	#$80,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)

loc_D48:
		move.w	(Hint_counter_reserve).w,(a5)
		move.w	#$8230,(VDP_control_port).l
		lea	(VDP_control_port).l,a5
		move.l	#$940193C0,(a5)

loc_D60:
		move.l	#$96F09500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7C00,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#$94019340,(a5)
		move.l	#$96FC9500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		bsr.w	ProcessDMAQueue
		startZ80
		movem.l	($FFFFEE00).w,d0-d7
		movem.l	d0-d7,($FFFFEE60).w
		movem.l	($FFFFEE20).w,d0-d7
		movem.l	d0-d7,($FFFFEE80).w
		movem.l	($FFFFEE50).w,d0-d3
		movem.l	d0-d3,($FFFFEEA0).w
		move.l	($FFFFF61E).w,($FFFFEEF0).w
		cmpi.b	#96,(Hint_counter_reserve+1).w
		bcc.s	Do_Updates
		move.b	#1,(Do_Updates_in_H_int).w
		addq.l	#4,sp
		bra.w	VintRet

; ---------------------------------------------------------------------------
; Subroutine to run a demo for an amount of time
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; Demo_Time:
Do_Updates:
		bsr.w	LoadTilesAsYouMove
		jsr	(HudUpdate).l
		bsr.w	ProcessDPLC2
		tst.w	(Demo_Time_left).w
		beq.w	Do_Updates_End
		subq.w	#1,(Demo_Time_left).w

Do_Updates_End:	
		rts
; End of function Do_Updates

; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; loc_E02: VintSubA:
Vint_S1SS:
		stopZ80
		bsr.w	ReadJoypads
		lea	(VDP_control_port).l,a5
		move.l	#$94009340,(a5)
		move.l	#$96FD9580,(a5)
		move.w	#$977F,(a5)
		move.w	#$C000,(a5)
		move.w	#$80,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#$94019340,(a5)
		move.l	#$96FC9500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#$940193C0,(a5)
		move.l	#$96F09500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7C00,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		bsr.w	ProcessDMAQueue
		startZ80
		bsr.w	PalCycle_S1SS
		tst.w	(Demo_Time_left).w
		beq.w	locret_EA0
		subq.w	#1,(Demo_Time_left).w

locret_EA0:
		rts
; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; loc_EA2: VintSubC: VintSub18:
Vint_TitleCard:	
		stopZ80
		bsr.w	ReadJoypads
		tst.b	(Water_fullscreen_flag).w
		bne.s	loc_EE4
		lea	(VDP_control_port).l,a5
		move.l	#$94009340,(a5)
		move.l	#$96FD9580,(a5)
		move.w	#$977F,(a5)
		move.w	#$C000,(a5)
		move.w	#$80,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		bra.s	loc_F08
; ---------------------------------------------------------------------------

loc_EE4:
		lea	(VDP_control_port).l,a5

loc_EEA:
		move.l	#$94009340,(a5)
		move.l	#$96FD9540,(a5)
		move.w	#$977F,(a5)
		move.w	#$C000,(a5)
		move.w	#$80,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)

loc_F08:
		move.w	(Hint_counter_reserve).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#$940193C0,(a5)
		move.l	#$96F09500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7C00,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#$94019340,(a5)
		move.l	#$96FC9500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		bsr.w	ProcessDMAQueue
		startZ80
		movem.l	($FFFFEE00).w,d0-d7
		movem.l	d0-d7,($FFFFEE60).w
		movem.l	($FFFFEE50).w,d0-d1
		movem.l	d0-d1,($FFFFEEA0).w
		bsr.w	LoadTilesAsYouMove
		jsr	(HudUpdate).l
		bsr.w	ProcessDPLC
		rts
; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; loc_F88: VintSubE:
Vint_UnusedE:
		bsr.w	Do_ControllerPal
		addq.b	#1,($FFFFF628).w
		move.b	#$E,(Vint_routine).w
		rts
; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; loc_F98: VintSub12:
Vint_Fade:
		bsr.w	Do_ControllerPal
		move.w	(Hint_counter_reserve).w,(a5)
		bra.w	ProcessDPLC
; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; loc_FA4: VintSub16:
Vint_SSResults:
		stopZ80
		bsr.w	ReadJoypads
		lea	(VDP_control_port).l,a5
		move.l	#$94009340,(a5)
		move.l	#$96FD9580,(a5)
		move.w	#$977F,(a5)
		move.w	#$C000,(a5)
		move.w	#$80,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#$94019340,(a5)
		move.l	#$96FC9500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#$940193C0,(a5)
		move.l	#$96F09500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7C00,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		startZ80
		tst.w	(Demo_Time_left).w
		beq.w	locret_103A
		subq.w	#1,(Demo_Time_left).w

locret_103A:
		rts

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_103C:
Do_ControllerPal:
		stopZ80
		bsr.w	ReadJoypads
		tst.b	(Water_fullscreen_flag).w
		bne.s	loc_107E
		lea	(VDP_control_port).l,a5
		move.l	#$94009340,(a5)
		move.l	#$96FD9580,(a5)
		move.w	#$977F,(a5)
		move.w	#$C000,(a5)
		move.w	#$80,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		bra.s	loc_10A2
; ---------------------------------------------------------------------------

loc_107E:
		lea	(VDP_control_port).l,a5
		move.l	#$94009340,(a5)
		move.l	#$96FD9540,(a5)
		move.w	#$977F,(a5)
		move.w	#$C000,(a5)
		move.w	#$80,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)

loc_10A2:
		lea	(VDP_control_port).l,a5
		move.l	#$94019340,(a5)
		move.l	#$96FC9500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#$940193C0,(a5)
		move.l	#$96F09500,(a5)
		move.w	#$977F,(a5)
		move.w	#$7C00,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)
		startZ80
		rts
; End of function Do_ControllerPal

; ||||||||||||||| E N D   O F   V - I N T |||||||||||||||||||||||||||||||||||

; ===========================================================================
; Start of H-INT code
H_Int:
		tst.w	(Hint_flag).w
		beq.w	locret_1184
		tst.w	(Two_player_mode).w
		beq.w	PalToCRAM
		move.w	#0,(Hint_flag).w
		move.l	a5,-(sp)
		move.l	d0,-(sp)

loc_110E:
		move.w	(VDP_control_port).l,d0
		andi.w	#4,d0
		beq.s	loc_110E
		move.w	(VDP_Reg1_val).w,d0
		andi.b	#$BF,d0
		move.w	d0,(VDP_control_port).l
		move.w	#$8228,(VDP_control_port).l
		move.l	#$40000010,(VDP_control_port).l
		move.l	($FFFFEEF0).w,(VDP_data_port).l
		lea	(VDP_control_port).l,a5
		move.l	#$94019340,(a5)
		move.l	#$96EE9580,(a5)
		move.w	#$977F,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_data_thunk).w
		move.w	(DMA_data_thunk).w,(a5)

loc_1166:
		move.w	(VDP_control_port).l,d0
		andi.w	#4,d0
		beq.s	loc_1166
		move.w	(VDP_Reg1_val).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		move.l	(sp)+,d0
		movea.l	(sp)+,a5

locret_1184:
		rte

; ---------------------------------------------------------------------------
; loc_1188:
PalToCRAM:
		move	#$2700,sr
		move.w	#0,(Hint_flag).w
		movem.l	a0-a1,-(sp)
		lea	(VDP_data_port).l,a1
		lea	($FFFFFA80).w,a0	; load palette from RAM
		move.l	#$C0000000,4(a1)	; set VDP to write to CRAM address $00
	rept 32
		move.l	(a0)+,(a1)		; move palette to CRAM (all 64 colors at once)
	endr
		move.w	#$8ADF,4(a1)		; write %1101 %1111 to register 10 (interrupt every 224th line)
		movem.l	(sp)+,a0-a1
		tst.b	(Do_Updates_in_H_int).w
		bne.s	Hint_SoundDriver
		rte
; ===========================================================================
; loc_11F8:
Hint_SoundDriver:
		clr.b	(Do_Updates_in_H_int).w
		movem.l	d0-a6,-(sp)
		bsr.w	Do_Updates
		jsr	(sub_71B4C).l
		movem.l	(sp)+,d0-a6
		rte

; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; game code
; ---------------------------------------------------------------------------
; Subroutine to initialize joypads
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


JoypadInit:
		stopZ80
		moveq	#$40,d0
		move.b	d0,(HW_Port_1_Control).l
		move.b	d0,(HW_Port_2_Control).l
		move.b	d0,(HW_Expansion_Control).l
		startZ80
		rts
; End of function JoypadInit

; ---------------------------------------------------------------------------
; Subroutine to read joypad input, and send it to the RAM
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


ReadJoypads:
		lea	($FFFFF604).w,a0	; address where joypad states are written
		lea	(HW_Port_1_Data).l,a1	; first joypad port
		bsr.s	Joypad_Read		; do the first joypad
		addq.w	#2,a1			; do the second joypad

Joypad_Read:
		move.b	#0,(a1)
		nop
		nop
		move.b	(a1),d0
		lsl.b	#2,d0
		andi.b	#$C0,d0
		move.b	#$40,(a1)
		nop
		nop
		move.b	(a1),d1
		andi.b	#$3F,d1
		or.b	d1,d0
		not.b	d0
		move.b	(a0),d1
		eor.b	d0,d1
		move.b	d0,(a0)+
		and.b	d0,d1
		move.b	d1,(a0)+
		rts
; End of function ReadJoypads


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


VDPSetupGame:
		lea	(VDP_control_port).l,a0
		lea	(VDP_data_port).l,a1
		lea	(VDPSetupArray).l,a2
		moveq	#$12,d7

VDP_Loop:
		move.w	(a2)+,(a0)
		dbf	d7,VDP_Loop
		move.w	(VDPSetupArray+2).l,d0
		move.w	d0,(VDP_Reg1_val).w
		move.w	#$8ADF,(Hint_counter_reserve).w
		moveq	#0,d0
		move.l	#$40000010,(VDP_control_port).l
		move.w	d0,(a1)
		move.w	d0,(a1)
		move.l	#$C0000000,(VDP_control_port).l
		move.w	#$3F,d7

VDP_ClrCRAM:
		move.w	d0,(a1)
		dbf	d7,VDP_ClrCRAM
		clr.l	(Vscroll_Factor).w
		clr.l	($FFFFF61A).w
		move.l	d1,-(sp)
		lea	(VDP_control_port).l,a5
		move.w	#$8F01,(a5)
		move.l	#$94FF93FF,(a5)
		move.w	#$9780,(a5)
		move.l	#$40000080,(a5)
		move.w	#0,(VDP_data_port).l

VDP_WaitDMA:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	VDP_WaitDMA

loc_12FE:
		move.w	#$8F02,(a5)
		move.l	(sp)+,d1
		rts
; End of function VDPSetupGame

; ===========================================================================
VDPSetupArray:	dc.w $8004
		dc.w $8134
		dc.w $8230
		dc.w $8328
		dc.w $8407
		dc.w $857C
		dc.w $8600
		dc.w $8700
		dc.w $8800
		dc.w $8900
		dc.w $8A00
		dc.w $8B00
		dc.w $8C81
		dc.w $8D3F
		dc.w $8E00
		dc.w $8F02
		dc.w $9001
		dc.w $9100
		dc.w $9200

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


ClearScreen:
		lea	(VDP_control_port).l,a5
		move.w	#$8F01,(a5)
		move.l	#$940F93FF,(a5)
		move.w	#$9780,(a5)
		move.l	#$40000083,(a5)
		move.w	#0,(VDP_data_port).l

ClearScreen_DMAWait:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	ClearScreen_DMAWait
		move.w	#$8F02,(a5)
		lea	(VDP_control_port).l,a5
		move.w	#$8F01,(a5)
		move.l	#$940F93FF,(a5)
		move.w	#$9780,(a5)
		move.l	#$60000083,(a5)
		move.w	#0,(VDP_data_port).l

ClearScreen_DMAWait2:	
		move.w	(a5),d1
		btst	#1,d1
		bne.s	ClearScreen_DMAWait2
		move.w	#$8F02,(a5)

loc_1388:
		clr.l	(Vscroll_Factor).w
		clr.l	($FFFFF61A).w
		lea	(Sprite_Table).w,a1
		moveq	#0,d0
		move.w	#$A0,d1

ClearScreen_ClearBuffer1:
		move.l	d0,(a1)+
		dbf	d1,ClearScreen_ClearBuffer1
		lea	($FFFFE000).w,a1
		moveq	#0,d0
		move.w	#$100,d1

ClearScreen_ClearBuffer2:
		move.l	d0,(a1)+
		dbf	d1,ClearScreen_ClearBuffer2
		rts
; End of function ClearScreen

; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to load the compressed DAC driver
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_380
SoundDriverLoad:
		nop
		move.w	#$100,(Z80_Bus_Request).l
		move.w	#$100,(Z80_Reset).l
		lea	(Kos_Z80).l,a0
		lea	(Z80_RAM).l,a1
		bsr.w	KosDec
		move.w	#0,(Z80_Reset).l
		nop
		nop
		nop
		nop
		move.w	#$100,(Z80_Reset).l
		startZ80
		rts
; End of function SoundDriverLoad


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


PlaySound:
		move.b	d0,($FFFFF000+SFXToPlay).w
		rts
; End of function PlaySound


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


PlaySound_Special:
		move.b	d0,($FFFFF000+SFXToPlay2).w
		rts
; End of function PlaySound_Special


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


PlaySound_Unk:
		move.b	d0,($FFFFF000+SFXToPlay3).w
		rts
; End of functions PlaySound_Unk


; ---------------------------------------------------------------------------
; Subroutine to pause the game
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


PauseGame:
		nop
		tst.b	($FFFFFE12).w
		beq.s	Unpause
		tst.w	($FFFFF63A).w
		bne.s	Pause_AlreadyPaused
		btst	#7,($FFFFF605).w
		beq.s	Pause_DoNothing

Pause_AlreadyPaused:
		move.w	#1,($FFFFF63A).w
		move.b	#1,($FFFFF000+StopMusic).w

Pause_Loop:
		move.b	#VintID_Pause,(Vint_routine).w
		bsr.w	WaitForVint
		tst.b	($FFFFFFE1).w
		beq.s	Pause_ChkStart
		btst	#6,($FFFFF605).w
		beq.s	Pause_ChkBC
		move.b	#GameModeID_TitleScreen,(Game_Mode).w
		nop
		bra.s	Pause_Resume
; ===========================================================================

Pause_ChkBC:
		btst	#4,($FFFFF604).w
		bne.s	Pause_SlowMo
		btst	#5,($FFFFF605).w
		bne.s	Pause_SlowMo

Pause_ChkStart:
		btst	#7,($FFFFF605).w
		beq.s	Pause_Loop
; loc_1464:
Pause_Resume:
		move.b	#$80,($FFFFF000+StopMusic).w

Unpause:
		move.w	#0,($FFFFF63A).w

Pause_DoNothing:
		rts
; ===========================================================================
; loc_1472:
Pause_SlowMo:
		move.w	#1,($FFFFF63A).w
		move.b	#$80,($FFFFF000+StopMusic).w
		rts
; End of function PauseGame

; ---------------------------------------------------------------------------
; Subroutine to transfer a plane map to VRAM
; ---------------------------------------------------------------------------

; control register:
;    CD1 CD0 A13 A12 A11 A10 A09 A08     (D31-D24)
;    A07 A06 A05 A04 A03 A02 A01 A00     (D23-D16)
;     ?   ?   ?   ?   ?   ?   ?   ?      (D15-D8)
;    CD5 CD4 CD3 CD2  ?   ?  A15 A14     (D7-D0)
;
;	A00-A15 - address
;	CD0-CD3 - code
;	CD4 - 1 if VRAM copy DMA mode. 0 otherwise.
;	CD5 - DMA operation
;
;	Bits CD3-CD0:
;	0000 - VRAM read
;	0001 - VRAM write
;	0011 - CRAM write
;	0100 - VSRAM read
;	0101 - VSRAM write
;	1000 - CRAM read
;
; d0 = control register
; d1 = width
; d2 = heigth
; a1 = source address

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; ShowVDPGraphics: PlaneMapToVRAM:
PlaneMapToVRAM_H40:
		lea	(VDP_data_port).l,a6
		move.l	#$800000,d4

PlaneMapToVRAM_H40_LineLoop:
		move.l	d0,4(a6)
		move.w	d1,d3

PlaneMapToVRAM_H40_TileLoop:
		move.w	(a1)+,(a6)
		dbf	d3,PlaneMapToVRAM_H40_TileLoop
		add.l	d4,d0
		dbf	d2,PlaneMapToVRAM_H40_LineLoop
		rts
; End of function PlaneMapToVRAM_H40

; ---------------------------------------------------------------------------
; Subroutine for queueing VDP commands (seems to only queue transfers to VRAM),
; to be issued the next time ProcessDMAQueue is called.
; Can be called a maximum of 18 times before the buffer needs to be cleared
; by issuing the commands (this subroutine DOES check for overflow)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; DMA_68KtoVRAM: QueueCopyToVRAM: QueueVDPCommand: Add_To_DMA_Queue:
QueueDMATransfer:
		movea.l	(VDP_Command_Buffer_Slot).w,a1
		cmpa.w	#VDP_Command_Buffer_Slot,a1
		beq.s	QueueDMATransfer_Done	; return if there's no more room in the buffer

		; piece together some VDP commands and store them for later...
		move.w	#$9300,d0	; command to specify DMA transfer length & $00FF
		move.b	d3,d0
		move.w	d0,(a1)+	; store command

		move.w	#$9400,d0	; command to specify DMA transfer length & $FF00
		lsr.w	#8,d3
		move.b	d3,d0
		move.w	d0,(a1)+	; store command

		move.w	#$9500,d0	; command to specify source address & $0001FE
		lsr.l	#1,d1
		move.b	d1,d0
		move.w	d0,(a1)+	; store command

		move.w	#$9600,d0	; command to specify source address & $01FE00
		lsr.l	#8,d1
		move.b	d1,d0
		move.w	d0,(a1)+	; store command

		move.w	#$9700,d0	; command to specify source address & $FE0000
		lsr.l	#8,d1
		move.b	d1,d0
		move.w	d0,(a1)+	; store command

		andi.l	#$FFFF,d2	; command to specify destination address and begin DMA
		lsl.l	#2,d2
		lsr.w	#2,d2
		swap	d2
		ori.l	#$40000080,d2	; set bits to specify VRAM transfer
		move.l	d2,(a1)+	; store command

		move.l	a1,(VDP_Command_Buffer_Slot).w	; set the next free slot address
		cmpa.w	#VDP_Command_Buffer_Slot,a1
		beq.s	QueueDMATransfer_Done	; return if there's no more room in the buffer
		move.w	#0,(a1)			; put a stop token at the end of the used part of the buffer

QueueDMATransfer_Done:
		rts
; End of function QueueDMATransfer

; ---------------------------------------------------------------------------
; Subroutine for issuing all VDP commands that were queued
; (by earlier calls to QueueDMATransfer)
; Resets the queue when it's done
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; CopyToVRAM: IssueVDPCommands: Process_DMA: Process_DMA_Queue:
ProcessDMAQueue:
		lea	(VDP_control_port).l,a5
		lea	(VDP_Command_Buffer).w,a1

ProcessDMAQueue_Loop:
		move.w	(a1)+,d0
		beq.s	ProcessDMAQueue_Done	; branch if we reached a stop token
		; issue a set of VDP commands
		move.w	d0,(a5)			; transfer length
		move.w	(a1)+,(a5)		; transfer length
		move.w	(a1)+,(a5)		; source address
		move.w	(a1)+,(a5)		; source address
		move.w	(a1)+,(a5)		; source address
		move.w	(a1)+,(a5)		; destination
		move.w	(a1)+,(a5)		; destination
		cmpa.w	#VDP_Command_Buffer_Slot,a1
		bne.s	ProcessDMAQueue_Loop	; loop if we haven't reached end of buffer

ProcessDMAQueue_Done:
		move.w	#0,(VDP_Command_Buffer).w
		move.l	#VDP_Command_Buffer,(VDP_Command_Buffer_Slot).w
		rts
; End of function ProcessDMAQueue

; ---------------------------------------------------------------------------
; START OF NEMESIS DECOMPRESSOR

; For format explanation see http://info.sonicretro.org/Nemesis_compression
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; Nemesis decompression to VRAM
NemDec:
		movem.l	d0-a1/a3-a5,-(sp)
		lea	(NemDec_WriteAndStay).l,a3	; write all data to the same location
		lea	(VDP_data_port).l,a4		; specifically, to the VDP data port
		bra.s	NemDecMain

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; Nemesis decompression to RAM
; input: a4 = starting address of destination

NemDecToRAM:
		movem.l	d0-a1/a3-a5,-(sp)
		lea	(NemDec_WriteAndAdvance).l,a3	; advance to the next location after each write

; loc_154C:
NemDecMain:
		lea	(Decomp_Buffer).w,a1
		move.w	(a0)+,d2
		lsl.w	#1,d2
		bcc.s	loc_155A
		adda.w	#$A,a3

loc_155A:
		lsl.w	#2,d2
		movea.w	d2,a5
		moveq	#8,d3
		moveq	#0,d2
		moveq	#0,d4
		bsr.w	NemDecPrepare
		move.b	(a0)+,d5
		asl.w	#8,d5
		move.b	(a0)+,d5
		move.w	#$10,d6
		bsr.s	NemDecRun
		movem.l	(sp)+,d0-a1/a3-a5
		rts
; End of function NemDec


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; part of the Nemesis decompressor
; sub_157A:
NemDecRun:
		move.w	d6,d7
		subq.w	#8,d7
		move.w	d5,d1
		lsr.w	d7,d1
		cmpi.b	#$FC,d1
		bcc.s	loc_15C6
		andi.w	#$FF,d1
		add.w	d1,d1
		move.b	(a1,d1.w),d0
		ext.w	d0
		sub.w	d0,d6
		cmpi.w	#9,d6
		bcc.s	loc_15A2
		addq.w	#8,d6
		asl.w	#8,d5
		move.b	(a0)+,d5

loc_15A2:
		move.b	1(a1,d1.w),d1
		move.w	d1,d0
		andi.w	#$F,d1
		andi.w	#$F0,d0

loc_15B0:
		lsr.w	#4,d0

loc_15B2:
		lsl.l	#4,d4
		or.b	d1,d4
		subq.w	#1,d3
		bne.s	NemDec_WriteIter_Part2
		jmp	(a3)		; dynamic jump! to NemDec_WriteAndStay, NemDec_WriteAndAdvance, NemDec_WriteAndStay_XOR, or NemDec_WriteAndAdvance_XOR
; ===========================================================================
; NemDec3:
NemDec_WriteIter:
		moveq	#0,d4
		moveq	#8,d3
; loc_15C0:
NemDec_WriteIter_Part2:
		dbf	d0,loc_15B2
		bra.s	NemDecRun
; ===========================================================================

loc_15C6:
		subq.w	#6,d6
		cmpi.w	#9,d6
		bcc.s	loc_15D4
		addq.w	#8,d6
		asl.w	#8,d5
		move.b	(a0)+,d5

loc_15D4:
		subq.w	#7,d6
		move.w	d5,d1
		lsr.w	d6,d1
		move.w	d1,d0
		andi.w	#$F,d1
		andi.w	#$70,d0
		cmpi.w	#9,d6
		bcc.s	loc_15B0
		addq.w	#8,d6
		asl.w	#8,d5
		move.b	(a0)+,d5
		bra.s	loc_15B0
; End of function NemDecRun

; ===========================================================================

NemDec_WriteAndStay:
		move.l	d4,(a4)
		subq.w	#1,a5
		move.w	a5,d4
		bne.s	NemDec_WriteIter
		rts
; ---------------------------------------------------------------------------

NemDec_WriteAndStay_XOR:
		eor.l	d4,d2
		move.l	d2,(a4)
		subq.w	#1,a5
		move.w	a5,d4
		bne.s	NemDec_WriteIter
		rts
; ===========================================================================

NemDec_WriteAndAdvance:
		move.l	d4,(a4)+
		subq.w	#1,a5
		move.w	a5,d4
		bne.s	NemDec_WriteIter
		rts
; ---------------------------------------------------------------------------

NemDec_WriteAndAdvance_XOR:
		eor.l	d4,d2
		move.l	d2,(a4)+
		subq.w	#1,a5
		move.w	a5,d4
		bne.s	NemDec_WriteIter
		rts

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
; Part of the Nemesis decompressor

NemDecPrepare:
		move.b	(a0)+,d0

loc_1620:
		cmpi.b	#$FF,d0
		bne.s	loc_1628
		rts
; ---------------------------------------------------------------------------

loc_1628:
		move.w	d0,d7

loc_162A:
		move.b	(a0)+,d0
		cmpi.b	#$80,d0
		bcc.s	loc_1620
		move.b	d0,d1
		andi.w	#$F,d7
		andi.w	#$70,d1
		or.w	d1,d7
		andi.w	#$F,d0
		move.b	d0,d1
		lsl.w	#8,d1
		or.w	d1,d7
		moveq	#8,d1
		sub.w	d0,d1
		bne.s	loc_1658
		move.b	(a0)+,d0
		add.w	d0,d0
		move.w	d7,(a1,d0.w)
		bra.s	loc_162A
; ---------------------------------------------------------------------------

loc_1658:
		move.b	(a0)+,d0
		lsl.w	d1,d0
		add.w	d0,d0
		moveq	#1,d5
		lsl.w	d1,d5
		subq.w	#1,d5

loc_1664:
		move.w	d7,(a1,d0.w)
		addq.w	#2,d0
		dbf	d5,loc_1664
		bra.s	loc_162A
; End of function NemDecPrepare

; ---------------------------------------------------------------------------
; END OF NEMESIS DECOMPRESSOR
; ---------------------------------------------------------------------------



; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
; ---------------------------------------------------------------------------
; Subroutine to load pattern load cues (aka to queue pattern load requests)
; ---------------------------------------------------------------------------

; ARGUMENTS
; d0 = index of PLC list (see ArtLoadCues)

; NOTICE: This subroutine does not check for buffer overruns. The programmer
;	  (or hacker) is responsible for making sure that no more than
;	  16 load requests are copied into the buffer.
;    _________DO NOT PUT MORE THAN 16 LOAD REQUESTS IN A LIST!__________
;         (or if you change the size of Plc_Buffer, the limit becomes (Plc_Buffer_Only_End-Plc_Buffer)/6)

; PLCLoad:
LoadPLC:
		movem.l	a1-a2,-(sp)
		lea	(ArtLoadCues).l,a1
		add.w	d0,d0
		move.w	(a1,d0.w),d0
		lea	(a1,d0.w),a1
		lea	(Plc_Buffer).w,a2

loc_1688:
		tst.l	(a2)
		beq.s	loc_1690
		addq.w	#6,a2
		bra.s	loc_1688
; ---------------------------------------------------------------------------

loc_1690:
		move.w	(a1)+,d0
		bmi.s	loc_169C

loc_1694:
		move.l	(a1)+,(a2)+
		move.w	(a1)+,(a2)+
		dbf	d0,loc_1694

loc_169C:
		movem.l	(sp)+,a1-a2
		rts
; End of function LoadPLC


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
; Queue pattern load requests, but clear the PLQ first

; ARGUMENTS
; d0 = index of PLC list (see ArtLoadCues)

; NOTICE: This subroutine does not check for buffer overruns. The programmer
;	  (or hacker) is responsible for making sure that no more than
;	  16 load requests are copied into the buffer.
;	  _________DO NOT PUT MORE THAN 16 LOAD REQUESTS IN A LIST!__________
;         (or if you change the size of Plc_Buffer, the limit becomes (Plc_Buffer_Only_End-Plc_Buffer)/6)

LoadPLC2:
		movem.l	a1-a2,-(sp)
		lea	(ArtLoadCues).l,a1
		add.w	d0,d0
		move.w	(a1,d0.w),d0
		lea	(a1,d0.w),a1
		bsr.s	ClearPLC
		lea	(Plc_Buffer).w,a2
		move.w	(a1)+,d0
		bmi.s	loc_16C8

loc_16C0:
		move.l	(a1)+,(a2)+
		move.w	(a1)+,(a2)+
		dbf	d0,loc_16C0

loc_16C8:
		movem.l	(sp)+,a1-a2
		rts
; End of function LoadPLC2


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; Clear the pattern load queue ($FFF680 - $FFF700)

ClearPLC:
		lea	(Plc_Buffer).w,a2
		moveq	#$1F,d0

loc_16D4:
		clr.l	(a2)+
		dbf	d0,loc_16D4
		rts
; End of function ClearPLC


; ---------------------------------------------------------------------------
; Subroutine to use graphics listed in a pattern load cue
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; RunPLC:
RunPLC_RAM:
		tst.l	(Plc_Buffer).w
		beq.s	locret_1730
		tst.w	(Plc_Buffer_Reg18).w
		bne.s	locret_1730
		movea.l	(Plc_Buffer).w,a0
		lea	NemDec_WriteAndStay(pc),a3
		nop
		lea	(Decomp_Buffer).w,a1
		move.w	(a0)+,d2
		bpl.s	loc_16FE
		adda.w	#$A,a3

loc_16FE:
		andi.w	#$7FFF,d2
		move.w	d2,(Plc_Buffer_Reg18).w
		bsr.w	NemDecPrepare
		move.b	(a0)+,d5
		asl.w	#8,d5
		move.b	(a0)+,d5
		moveq	#$10,d6
		moveq	#0,d0
		move.l	a0,(Plc_Buffer).w
		move.l	a3,(Plc_Buffer_Reg0).w
		move.l	d0,(Plc_Buffer_Reg4).w
		move.l	d0,(Plc_Buffer_Reg8).w
		move.l	d0,(Plc_Buffer_RegC).w
		move.l	d5,(Plc_Buffer_Reg10).w
		move.l	d6,(Plc_Buffer_Reg14).w

locret_1730:
		rts
; End of function RunPLC_RAM


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
; Process one PLC from the queue

; sub_1732:
ProcessDPLC:
		tst.w	(Plc_Buffer_Reg18).w
		beq.w	locret_17CA
		move.w	#9,(Plc_Buffer_Reg1A).w
		moveq	#0,d0
		move.w	(Plc_Buffer+4).w,d0
		addi.w	#$120,(Plc_Buffer+4).w
		bra.s	ProcessDPLC_Main

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
; Process one PLC from the queue

; loc_174E:
ProcessDPLC2:
		tst.w	(Plc_Buffer_Reg18).w
		beq.s	locret_17CA
		move.w	#3,(Plc_Buffer_Reg1A).w
		moveq	#0,d0
		move.w	(Plc_Buffer+4).w,d0
		addi.w	#$60,(Plc_Buffer+4).w
; loc_1766:
ProcessDPLC_Main:
		lea	(VDP_control_port).l,a4
		lsl.l	#2,d0
		lsr.w	#2,d0
		ori.w	#$4000,d0
		swap	d0
		move.l	d0,(a4)
		subq.w	#4,a4
		movea.l	(Plc_Buffer).w,a0
		movea.l	(Plc_Buffer_Reg0).w,a3
		move.l	(Plc_Buffer_Reg4).w,d0
		move.l	(Plc_Buffer_Reg8).w,d1
		move.l	(Plc_Buffer_RegC).w,d2
		move.l	(Plc_Buffer_Reg10).w,d5
		move.l	(Plc_Buffer_Reg14).w,d6
		lea	(Decomp_Buffer).w,a1

loc_179A:
		movea.w	#8,a5
		bsr.w	NemDec_WriteIter
		subq.w	#1,(Plc_Buffer_Reg18).w
		beq.s	ProcessDPLC_Pop
		subq.w	#1,(Plc_Buffer_Reg1A).w
		bne.s	loc_179A
		move.l	a0,(Plc_Buffer).w
		move.l	a3,(Plc_Buffer_Reg0).w
		move.l	d0,(Plc_Buffer_Reg4).w
		move.l	d1,(Plc_Buffer_Reg8).w
		move.l	d2,(Plc_Buffer_RegC).w
		move.l	d5,(Plc_Buffer_Reg10).w
		move.l	d6,(Plc_Buffer_Reg14).w

locret_17CA:
		rts
; ===========================================================================
; pop one request off the buffer so that the next one can be filled
; loc_17CC:
ProcessDPLC_Pop:
		lea	(Plc_Buffer).w,a0
		moveq	#$15,d0

loc_17D2:
		move.l	6(a0),(a0)+
		dbf	d0,loc_17D2
		rts
; End of function ProcessDPLC


; ---------------------------------------------------------------------------
; Subroutine to execute a pattern load cue directly from the ROM
; rather than loading them into the queue first
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


RunPLC_ROM:
		lea	(ArtLoadCues).l,a1
		add.w	d0,d0
		move.w	(a1,d0.w),d0
		lea	(a1,d0.w),a1
		move.w	(a1)+,d1

loc_17EE:
		movea.l	(a1)+,a0
		moveq	#0,d0
		move.w	(a1)+,d0
		lsl.l	#2,d0
		lsr.w	#2,d0
		ori.w	#$4000,d0
		swap	d0
		move.l	d0,(VDP_control_port).l
		bsr.w	NemDec
		dbf	d1,loc_17EE
		rts
; End of function RunPLC_ROM


; ---------------------------------------------------------------------------
; Enigma Decompression Algorithm

; ARGUMENTS:
; d0 = starting art tile (added to each 8x8 before writing to destination)
; a0 = source address
; a1 = destination address

; For format explanation see http://info.sonicretro.org/Enigma_compression
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


EniDec:
		movem.l	d0-d7/a1-a5,-(sp)
		movea.w	d0,a3
		move.b	(a0)+,d0
		ext.w	d0
		movea.w	d0,a5
		move.b	(a0)+,d4
		lsl.b	#3,d4
		movea.w	(a0)+,a2
		adda.w	a3,a2
		movea.w	(a0)+,a4
		adda.w	a3,a4
		move.b	(a0)+,d5
		asl.w	#8,d5
		move.b	(a0)+,d5
		moveq	#$10,d6

loc_182E:				; CODE XREF: ROM:00001860j
					; ROM:00001868j ...
		moveq	#7,d0
		move.w	d6,d7
		sub.w	d0,d7
		move.w	d5,d1
		lsr.w	d7,d1
		andi.w	#$7F,d1	; ''
		move.w	d1,d2
		cmpi.w	#$40,d1	; '@'
		bcc.s	loc_1848
		moveq	#6,d0
		lsr.w	#1,d2

loc_1848:				; CODE XREF: EniDec+34j
		bsr.w	sub_197C
		andi.w	#$F,d2
		lsr.w	#4,d1
		add.w	d1,d1
		jmp	loc_18A4(pc,d1.w)
; End of function EniDec

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1858:				; CODE XREF: ROM:0000185Cj
					; ROM:loc_18A4j ...
		move.w	a2,(a1)+
		addq.w	#1,a2
		dbf	d2,loc_1858
		bra.s	loc_182E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1862:				; CODE XREF: ROM:00001864j
					; ROM:000018A8j ...
		move.w	a4,(a1)+
		dbf	d2,loc_1862
		bra.s	loc_182E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_186A:				; CODE XREF: ROM:000018ACj
		bsr.w	sub_18CC

loc_186E:				; CODE XREF: ROM:00001870j
		move.w	d1,(a1)+
		dbf	d2,loc_186E
		bra.s	loc_182E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1876:				; CODE XREF: ROM:000018AEj
		bsr.w	sub_18CC

loc_187A:				; CODE XREF: ROM:0000187Ej
		move.w	d1,(a1)+
		addq.w	#1,d1
		dbf	d2,loc_187A
		bra.s	loc_182E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1884:				; CODE XREF: ROM:000018B0j
		bsr.w	sub_18CC

loc_1888:				; CODE XREF: ROM:0000188Cj
		move.w	d1,(a1)+
		subq.w	#1,d1
		dbf	d2,loc_1888
		bra.s	loc_182E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1892:				; CODE XREF: ROM:000018B2j
		cmpi.w	#$F,d2
		beq.s	loc_18B4

loc_1898:				; CODE XREF: ROM:0000189Ej
		bsr.w	sub_18CC
		move.w	d1,(a1)+
		dbf	d2,loc_1898
		bra.s	loc_182E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18A4:
		bra.s	loc_1858
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		bra.s	loc_1858
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		bra.s	loc_1862
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		bra.s	loc_1862
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		bra.s	loc_186A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		bra.s	loc_1876
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		bra.s	loc_1884
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		bra.s	loc_1892
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18B4:				; CODE XREF: ROM:00001896j
		subq.w	#1,a0
		cmpi.w	#$10,d6
		bne.s	loc_18BE
		subq.w	#1,a0

loc_18BE:				; CODE XREF: ROM:000018BAj
		move.w	a0,d0
		lsr.w	#1,d0
		bcc.s	loc_18C6
		addq.w	#1,a0

loc_18C6:				; CODE XREF: ROM:000018C2j
		movem.l	(sp)+,d0-d7/a1-a5
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_18CC:				; CODE XREF: ROM:loc_186Ap
					; ROM:loc_1876p ...
		move.w	a3,d3
		move.b	d4,d1
		add.b	d1,d1
		bcc.s	loc_18DE
		subq.w	#1,d6
		btst	d6,d5
		beq.s	loc_18DE
		ori.w	#$8000,d3

loc_18DE:				; CODE XREF: sub_18CC+6j sub_18CC+Cj
		add.b	d1,d1
		bcc.s	loc_18EC
		subq.w	#1,d6
		btst	d6,d5
		beq.s	loc_18EC
		addi.w	#$4000,d3

loc_18EC:				; CODE XREF: sub_18CC+14j sub_18CC+1Aj
		add.b	d1,d1
		bcc.s	loc_18FA
		subq.w	#1,d6
		btst	d6,d5
		beq.s	loc_18FA
		addi.w	#$2000,d3

loc_18FA:				; CODE XREF: sub_18CC+22j sub_18CC+28j
		add.b	d1,d1
		bcc.s	loc_1908
		subq.w	#1,d6
		btst	d6,d5
		beq.s	loc_1908
		ori.w	#$1000,d3

loc_1908:				; CODE XREF: sub_18CC+30j sub_18CC+36j
		add.b	d1,d1
		bcc.s	loc_1916
		subq.w	#1,d6
		btst	d6,d5
		beq.s	loc_1916
		ori.w	#$800,d3

loc_1916:				; CODE XREF: sub_18CC+3Ej sub_18CC+44j
		move.w	d5,d1
		move.w	d6,d7
		sub.w	a5,d7
		bcc.s	loc_1946
		move.w	d7,d6
		addi.w	#$10,d6
		neg.w	d7
		lsl.w	d7,d1
		move.b	(a0),d5
		rol.b	d7,d5
		add.w	d7,d7
		and.w	loc_195A(pc,d7.w),d5
		add.w	d5,d1

loc_1934:				; CODE XREF: sub_18CC:loc_195Aj
		move.w	a5,d0
		add.w	d0,d0
		and.w	loc_195A(pc,d0.w),d1
		add.w	d3,d1
		move.b	(a0)+,d5
		lsl.w	#8,d5
		move.b	(a0)+,d5
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1946:				; CODE XREF: sub_18CC+50j
		beq.s	loc_1958
		lsr.w	d7,d1
		move.w	a5,d0
		add.w	d0,d0
		and.w	loc_195A(pc,d0.w),d1
		add.w	d3,d1
		move.w	a5,d0
		bra.s	sub_197C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1958:				; CODE XREF: sub_18CC:loc_1946j
		moveq	#$10,d6

loc_195A:
		bra.s	loc_1934
; End of function sub_18CC

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		dc.w	 1,    3,    7,	  $F; 0
		dc.w   $1F,  $3F,  $7F,	 $FF; 4
		dc.w  $1FF, $3FF, $7FF,	$FFF; 8
		dc.w $1FFF,$3FFF,$7FFF,$FFFF; 12

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_197C:				; CODE XREF: EniDec:loc_1848p
					; sub_18CC+8Aj
		sub.w	d0,d6
		cmpi.w	#9,d6
		bcc.s	locret_198A
		addq.w	#8,d6
		asl.w	#8,d5
		move.b	(a0)+,d5

locret_198A:				; CODE XREF: sub_197C+6j
		rts
; End of function sub_197C

; ---------------------------------------------------------------------------
; Kosinski Decompression Algorithm
; LZSS/dictionary-based, only function that stores variables on the stack

; ARGUMENTS:
; a0 = source address
; a1 = destination address

; MORE INFO:
; http://info.sonicretro.org/Kosinski_compression
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


KosDec:
		subq.l	#2,sp	; make space for two bytes on the stack
		move.b	(a0)+,1(sp)
		move.b	(a0)+,(sp)
		move.w	(sp),d5	; copy first description field
		moveq	#$F,d4	; copy 16 bits in a byte
; loc_1998:
KosDec_Loop:
		lsr.w	#1,d5	; bit which is shifted out goes into C flag
		move	sr,d6
		dbf	d4,KosDec_ChkBit
		move.b	(a0)+,1(sp)
		move.b	(a0)+,(sp)
		move.w	(sp),d5	; get next descriptor field in neccesary
		moveq	#$F,d4	; reset bit counter
; loc_19AA:
KosDec_ChkBit:
		move	d6,ccr		; was the bit set?
		bcc.s	KosDec_Match	; if not, branch (C flag clear means bit was clear)
		move.b	(a0)+,(a1)+	; otherwise, copy byte as-is
		bra.s	KosDec_Loop
; ===========================================================================
; loc_19B2:
KosDec_Match:
		moveq	#0,d3
		lsr.w	#1,d5	; get next bit
		move	sr,d6
		dbf	d4,KosDec_ChkBit2
		move.b	(a0)+,1(sp)
		move.b	(a0)+,(sp)
		move.w	(sp),d5
		moveq	#$F,d4
; loc_19C6:
KosDec_ChkBit2:
		move	d6,ccr		; was the bit set?
		bcs.s	KosDec_FullMatch; if yes, branch
		lsr.w	#1,d5		; bit which is shifted out goes into X flag
		dbf	d4,loc_19DA
		move.b	(a0)+,1(sp)
		move.b	(a0)+,(sp)
		move.w	(sp),d5
		moveq	#$F,d4

loc_19DA:
		roxl.w	#1,d3	; get high repeat count bit (shift X flag in)
		lsr.w	#1,d5
		dbf	d4,loc_19EC
		move.b	(a0)+,1(sp)
		move.b	(a0)+,(sp)
		move.w	(sp),d5
		moveq	#$F,d4

loc_19EC:
		roxl.w	#1,d3		; get low repeat count bit
		addq.w	#1,d3		; increment repeat count
		moveq	#-1,d2
		move.b	(a0)+,d2	; calculate offset
		bra.s	KosDec_MatchLoop
; ===========================================================================
; loc_19F6:
KosDec_FullMatch:
		move.b	(a0)+,d0	; get first byte
		move.b	(a0)+,d1	; get second byte
		moveq	#-1,d2
		move.b	d1,d2
		lsl.w	#5,d2
		move.b	d0,d2	; calculate offset
		andi.w	#7,d1	; does a third byte need to be read?
		beq.s	KosDec_FullMatch2	; if it does, branch
		move.b	d1,d3	; copy repeat count
		addq.w	#1,d3	; and increment it
; loc_1A0C:
KosDec_MatchLoop:
		move.b	(a1,d2.w),d0
		move.b	d0,(a1)+	; copy appropriate byte
		dbf	d3,KosDec_MatchLoop	; and repeat the copying
		bra.s	KosDec_Loop
; ===========================================================================
; loc_1A18:
KosDec_FullMatch2:
		move.b	(a0)+,d1
		beq.s	KosDec_Done	; 0 indicates end of compressed data
		cmpi.b	#1,d1
		beq.w	KosDec_Loop	; 1 indicates a new description needs to be read
		move.b	d1,d3		; otherwise, copy repeat count
		bra.s	KosDec_MatchLoop
; ===========================================================================
; loc_1A28:
KosDec_Done:
		addq.l	#2,sp	; restore stack pointer to original state
		rts
; End of function KosDec

; ---------------------------------------------------------------------------
; Chameleon Decompression Algorithm
; LZSS/dictionary-based, uses unrolling for fast decompression speeds

; ARGUMENTS (I think...):
; a0 = starting address
; a1 = starting art tile
; a2 = destination address
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


ChaDec:
		moveq	#0,d0
		move.w	#$7FF,d4
		moveq	#0,d5
		moveq	#0,d6
		move.w	a3,d7
		subq.w	#1,d2
		beq.w	loc_1DCC
		subq.w	#1,d2
		beq.w	loc_1D4E
		subq.w	#1,d2
		beq.w	loc_1CD0
		subq.w	#1,d2
		beq.w	loc_1C52
		subq.w	#1,d2
		beq.w	loc_1BD6
		subq.w	#1,d2
		beq.w	loc_1B58
		subq.w	#1,d2
		beq.w	loc_1ADE

loc_1A62:
		move.b	(a0)+,d1
		add.b	d1,d1
		bcs.s	loc_1ADC
		movea.l	a2,a6
		add.b	d1,d1
		bcs.s	loc_1A84
		move.b	(a1)+,d5
		suba.l	d5,a6
		add.b	d1,d1
		bcc.s	loc_1A78
		move.b	(a6)+,(a2)+

loc_1A78:				; CODE XREF: ChaDec+48j
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1ACC
		bra.w	loc_1BD6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A84:				; CODE XREF: ChaDec+40j
		lsl.w	#3,d1
		move.w	d1,d6
		and.w	d4,d6
		move.b	(a1)+,d6
		suba.l	d6,a6
		add.b	d1,d1
		bcs.s	loc_1A98
		add.b	d1,d1
		bcs.s	loc_1AAE
		bra.s	loc_1AB0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A98:				; CODE XREF: ChaDec+64j
		add.b	d1,d1
		bcc.s	loc_1AAC
		moveq	#0,d0
		move.b	(a1)+,d0
		beq.s	loc_1ABE
		subq.w	#6,d0
		bmi.s	loc_1AC4

loc_1AA6:				; CODE XREF: ChaDec+7Cj
		move.b	(a6)+,(a2)+
		dbf	d0,loc_1AA6

loc_1AAC:				; CODE XREF: ChaDec+6Ej
		move.b	(a6)+,(a2)+

loc_1AAE:				; CODE XREF: ChaDec+68j
		move.b	(a6)+,(a2)+

loc_1AB0:				; CODE XREF: ChaDec+6Aj
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1AD4
		bra.w	loc_1DCC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1ABE:				; CODE XREF: ChaDec+74j
		move.w	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1AC4:				; CODE XREF: ChaDec+78j
		move.w	#$FFFF,d0
		moveq	#1,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1ACC:				; CODE XREF: ChaDec+52j
		move.w	#1,d0
		moveq	#5,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1AD4:				; CODE XREF: ChaDec+8Cj
		move.w	#1,d0
		moveq	#1,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1ADC:				; CODE XREF: ChaDec+3Aj
		move.b	(a1)+,(a2)+

loc_1ADE:				; CODE XREF: ChaDec+32j
					; ChaDec+186j ...
		add.b	d1,d1
		bcs.s	loc_1B56
		movea.l	a2,a6
		add.b	d1,d1
		bcs.s	loc_1AFE
		move.b	(a1)+,d5
		suba.l	d5,a6
		add.b	d1,d1
		bcc.s	loc_1AF2
		move.b	(a6)+,(a2)+

loc_1AF2:				; CODE XREF: ChaDec+C2j
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1B46
		bra.w	loc_1C52
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1AFE:				; CODE XREF: ChaDec+BAj
		lsl.w	#3,d1
		move.w	d1,d6
		and.w	d4,d6
		move.b	(a1)+,d6
		suba.l	d6,a6
		add.b	d1,d1
		bcs.s	loc_1B12
		add.b	d1,d1
		bcs.s	loc_1B28
		bra.s	loc_1B2A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B12:				; CODE XREF: ChaDec+DEj
		add.b	d1,d1
		bcc.s	loc_1B26
		moveq	#0,d0
		move.b	(a1)+,d0
		beq.s	loc_1B38
		subq.w	#6,d0
		bmi.s	loc_1B3E

loc_1B20:				; CODE XREF: ChaDec+F6j
		move.b	(a6)+,(a2)+
		dbf	d0,loc_1B20

loc_1B26:				; CODE XREF: ChaDec+E8j
		move.b	(a6)+,(a2)+

loc_1B28:				; CODE XREF: ChaDec+E2j
		move.b	(a6)+,(a2)+

loc_1B2A:				; CODE XREF: ChaDec+E4j
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1B4E
		bra.w	loc_1A62
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B38:				; CODE XREF: ChaDec+EEj
		move.w	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B3E:				; CODE XREF: ChaDec+F2j
		move.w	#$FFFF,d0
		moveq	#0,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B46:				; CODE XREF: ChaDec+CCj
		move.w	#1,d0
		moveq	#4,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B4E:				; CODE XREF: ChaDec+106j
		move.w	#1,d0
		moveq	#0,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B56:				; CODE XREF: ChaDec+B4j
		move.b	(a1)+,(a2)+

loc_1B58:				; CODE XREF: ChaDec+2Cj
					; ChaDec+202j ...
		add.b	d1,d1
		bcs.s	loc_1BD4
		movea.l	a2,a6
		add.b	d1,d1
		bcs.s	loc_1B78
		move.b	(a1)+,d5
		suba.l	d5,a6
		add.b	d1,d1
		bcc.s	loc_1B6C
		move.b	(a6)+,(a2)+

loc_1B6C:				; CODE XREF: ChaDec+13Cj
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1BC4
		bra.w	loc_1CD0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B78:				; CODE XREF: ChaDec+134j
		lsl.w	#3,d1
		move.w	d1,d6
		and.w	d4,d6
		move.b	(a1)+,d6
		suba.l	d6,a6
		add.b	d1,d1
		bcs.s	loc_1B8E
		move.b	(a0)+,d1
		add.b	d1,d1
		bcs.s	loc_1BA6
		bra.s	loc_1BA8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B8E:				; CODE XREF: ChaDec+158j
		move.b	(a0)+,d1
		add.b	d1,d1
		bcc.s	loc_1BA4
		moveq	#0,d0
		move.b	(a1)+,d0
		beq.s	loc_1BB6
		subq.w	#6,d0
		bmi.s	loc_1BBC

loc_1B9E:				; CODE XREF: ChaDec+174j
		move.b	(a6)+,(a2)+
		dbf	d0,loc_1B9E

loc_1BA4:				; CODE XREF: ChaDec+166j
		move.b	(a6)+,(a2)+

loc_1BA6:				; CODE XREF: ChaDec+15Ej
		move.b	(a6)+,(a2)+

loc_1BA8:				; CODE XREF: ChaDec+160j
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1BCC
		bra.w	loc_1ADE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1BB6:				; CODE XREF: ChaDec+16Cj
		move.w	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1BBC:				; CODE XREF: ChaDec+170j
		move.w	#$FFFF,d0
		moveq	#7,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1BC4:				; CODE XREF: ChaDec+146j
		move.w	#1,d0
		moveq	#3,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1BCC:				; CODE XREF: ChaDec+184j
		move.w	#1,d0
		moveq	#7,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1BD4:				; CODE XREF: ChaDec+12Ej
		move.b	(a1)+,(a2)+

loc_1BD6:				; CODE XREF: ChaDec+26j
					; ChaDec+54j ...
		add.b	d1,d1
		bcs.s	loc_1C50
		movea.l	a2,a6
		add.b	d1,d1
		bcs.s	loc_1BF6
		move.b	(a1)+,d5
		suba.l	d5,a6
		add.b	d1,d1
		bcc.s	loc_1BEA
		move.b	(a6)+,(a2)+

loc_1BEA:				; CODE XREF: ChaDec+1BAj
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1C40
		bra.w	loc_1D4E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1BF6:				; CODE XREF: ChaDec+1B2j
		lsl.w	#3,d1
		move.b	(a0)+,d1
		move.w	d1,d6
		and.w	d4,d6
		move.b	(a1)+,d6
		suba.l	d6,a6
		add.b	d1,d1
		bcs.s	loc_1C0C
		add.b	d1,d1
		bcs.s	loc_1C22
		bra.s	loc_1C24
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1C0C:				; CODE XREF: ChaDec+1D8j
		add.b	d1,d1
		bcc.s	loc_1C20
		moveq	#0,d0
		move.b	(a1)+,d0
		beq.s	loc_1C32
		subq.w	#6,d0
		bmi.s	loc_1C38

loc_1C1A:				; CODE XREF: ChaDec+1F0j
		move.b	(a6)+,(a2)+
		dbf	d0,loc_1C1A

loc_1C20:				; CODE XREF: ChaDec+1E2j
		move.b	(a6)+,(a2)+

loc_1C22:				; CODE XREF: ChaDec+1DCj
		move.b	(a6)+,(a2)+

loc_1C24:				; CODE XREF: ChaDec+1DEj
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1C48
		bra.w	loc_1B58
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1C32:				; CODE XREF: ChaDec+1E8j
		move.w	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1C38:				; CODE XREF: ChaDec+1ECj
		move.w	#$FFFF,d0
		moveq	#6,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1C40:				; CODE XREF: ChaDec+1C4j
		move.w	#1,d0
		moveq	#2,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1C48:
		move.w	#1,d0
		moveq	#6,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1C50:
		move.b	(a1)+,(a2)+

loc_1C52:
		add.b	d1,d1
		bcs.s	loc_1CCE
		movea.l	a2,a6
		add.b	d1,d1
		bcs.s	loc_1C72
		move.b	(a1)+,d5
		suba.l	d5,a6
		add.b	d1,d1
		bcc.s	loc_1C66
		move.b	(a6)+,(a2)+

loc_1C66:
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1CBE
		bra.w	loc_1DCC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1C72:
		lsl.w	#2,d1
		move.b	(a0)+,d1
		add.w	d1,d1
		move.w	d1,d6
		and.w	d4,d6
		move.b	(a1)+,d6
		suba.l	d6,a6
		add.b	d1,d1
		bcs.s	loc_1C8A
		add.b	d1,d1
		bcs.s	loc_1CA0
		bra.s	loc_1CA2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1C8A:
		add.b	d1,d1
		bcc.s	loc_1C9E
		moveq	#0,d0
		move.b	(a1)+,d0
		beq.s	loc_1CB0
		subq.w	#6,d0
		bmi.s	loc_1CB6

loc_1C98:
		move.b	(a6)+,(a2)+
		dbf	d0,loc_1C98

loc_1C9E:
		move.b	(a6)+,(a2)+

loc_1CA0:
		move.b	(a6)+,(a2)+

loc_1CA2:
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1CC6
		bra.w	loc_1BD6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1CB0:
		move.w	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1CB6:				; CODE XREF: ChaDec+26Aj
		move.w	#$FFFF,d0
		moveq	#5,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1CBE:				; CODE XREF: ChaDec+240j
		move.w	#1,d0
		moveq	#1,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1CC6:				; CODE XREF: ChaDec+27Ej
		move.w	#1,d0
		moveq	#5,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1CCE:				; CODE XREF: ChaDec+228j
		move.b	(a1)+,(a2)+

loc_1CD0:				; CODE XREF: ChaDec+1Aj
					; ChaDec+148j ...
		add.b	d1,d1
		bcs.s	loc_1D4C
		movea.l	a2,a6
		add.b	d1,d1
		bcs.s	loc_1CF0
		move.b	(a1)+,d5
		suba.l	d5,a6
		add.b	d1,d1
		bcc.s	loc_1CE4
		move.b	(a6)+,(a2)+

loc_1CE4:				; CODE XREF: ChaDec+2B4j
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1D3C
		bra.w	loc_1A62
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1CF0:				; CODE XREF: ChaDec+2ACj
		add.w	d1,d1
		move.b	(a0)+,d1
		lsl.w	#2,d1
		move.w	d1,d6
		and.w	d4,d6
		move.b	(a1)+,d6
		suba.l	d6,a6
		add.b	d1,d1
		bcs.s	loc_1D08
		add.b	d1,d1
		bcs.s	loc_1D1E
		bra.s	loc_1D20
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1D08:				; CODE XREF: ChaDec+2D4j
		add.b	d1,d1
		bcc.s	loc_1D1C
		moveq	#0,d0
		move.b	(a1)+,d0
		beq.s	loc_1D2E
		subq.w	#6,d0
		bmi.s	loc_1D34

loc_1D16:				; CODE XREF: ChaDec+2ECj
		move.b	(a6)+,(a2)+
		dbf	d0,loc_1D16

loc_1D1C:				; CODE XREF: ChaDec+2DEj
		move.b	(a6)+,(a2)+

loc_1D1E:				; CODE XREF: ChaDec+2D8j
		move.b	(a6)+,(a2)+

loc_1D20:				; CODE XREF: ChaDec+2DAj
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1D44
		bra.w	loc_1C52
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1D2E:				; CODE XREF: ChaDec+2E4j
		move.w	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1D34:				; CODE XREF: ChaDec+2E8j
		move.w	#$FFFF,d0
		moveq	#4,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1D3C:				; CODE XREF: ChaDec+2BEj
		move.w	#1,d0
		moveq	#8,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1D44:				; CODE XREF: ChaDec+2FCj
		move.w	#1,d0
		moveq	#4,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1D4C:				; CODE XREF: ChaDec+2A6j
		move.b	(a1)+,(a2)+

loc_1D4E:				; CODE XREF: ChaDec+14j
					; ChaDec+1C6j ...
		add.b	d1,d1
		bcs.s	loc_1DCA
		movea.l	a2,a6
		add.b	d1,d1
		bcs.s	loc_1D70
		move.b	(a0)+,d1
		move.b	(a1)+,d5
		suba.l	d5,a6
		add.b	d1,d1
		bcc.s	loc_1D64
		move.b	(a6)+,(a2)+

loc_1D64:				; CODE XREF: ChaDec+334j
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1DBA
		bra.w	loc_1ADE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1D70:				; CODE XREF: ChaDec+32Aj
		move.b	(a0)+,d1
		lsl.w	#3,d1
		move.w	d1,d6
		and.w	d4,d6
		move.b	(a1)+,d6
		suba.l	d6,a6
		add.b	d1,d1
		bcs.s	loc_1D86
		add.b	d1,d1
		bcs.s	loc_1D9C
		bra.s	loc_1D9E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1D86:				; CODE XREF: ChaDec+352j
		add.b	d1,d1
		bcc.s	loc_1D9A
		moveq	#0,d0
		move.b	(a1)+,d0
		beq.s	loc_1DAC
		subq.w	#6,d0
		bmi.s	loc_1DB2

loc_1D94:				; CODE XREF: ChaDec+36Aj
		move.b	(a6)+,(a2)+
		dbf	d0,loc_1D94

loc_1D9A:				; CODE XREF: ChaDec+35Cj
		move.b	(a6)+,(a2)+

loc_1D9C:				; CODE XREF: ChaDec+356j
		move.b	(a6)+,(a2)+

loc_1D9E:				; CODE XREF: ChaDec+358j
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1DC2
		bra.w	loc_1CD0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1DAC:				; CODE XREF: ChaDec+362j
		move.w	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1DB2:				; CODE XREF: ChaDec+366j
		move.w	#$FFFF,d0
		moveq	#3,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1DBA:				; CODE XREF: ChaDec+33Ej
		move.w	#1,d0
		moveq	#7,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1DC2:				; CODE XREF: ChaDec+37Aj
		move.w	#1,d0
		moveq	#3,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1DCA:				; CODE XREF: ChaDec+324j
		move.b	(a1)+,(a2)+

loc_1DCC:
		add.b	d1,d1
		bcs.s	loc_1E46
		move.b	(a0)+,d1
		movea.l	a2,a6
		add.b	d1,d1
		bcs.s	loc_1DEE
		move.b	(a1)+,d5
		suba.l	d5,a6
		add.b	d1,d1
		bcc.s	loc_1DE2
		move.b	(a6)+,(a2)+

loc_1DE2:				; CODE XREF: ChaDec+3B2j
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1E36
		bra.w	loc_1B58
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1DEE:				; CODE XREF: ChaDec+3AAj
		lsl.w	#3,d1
		move.w	d1,d6
		and.w	d4,d6
		move.b	(a1)+,d6
		suba.l	d6,a6
		add.b	d1,d1
		bcs.s	loc_1E02
		add.b	d1,d1
		bcs.s	loc_1E18
		bra.s	loc_1E1A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1E02:				; CODE XREF: ChaDec+3CEj
		add.b	d1,d1
		bcc.s	loc_1E16
		moveq	#0,d0
		move.b	(a1)+,d0
		beq.s	loc_1E28
		subq.w	#6,d0
		bmi.s	loc_1E2E

loc_1E10:				; CODE XREF: ChaDec+3E6j
		move.b	(a6)+,(a2)+
		dbf	d0,loc_1E10

loc_1E16:				; CODE XREF: ChaDec+3D8j
		move.b	(a6)+,(a2)+

loc_1E18:				; CODE XREF: ChaDec+3D2j
		move.b	(a6)+,(a2)+

loc_1E1A:				; CODE XREF: ChaDec+3D4j
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		move.b	(a6)+,(a2)+
		cmp.w	a2,d7
		bls.s	loc_1E3E
		bra.w	loc_1D4E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1E28:				; CODE XREF: ChaDec+3DEj
		move.w	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1E2E:				; CODE XREF: ChaDec+3E2j
		move.w	#$FFFF,d0
		moveq	#2,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1E36:				; CODE XREF: ChaDec+3BCj
		move.w	#1,d0
		moveq	#6,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1E3E:				; CODE XREF: ChaDec+3F6j
		move.w	#1,d0
		moveq	#2,d2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1E46:				; CODE XREF: ChaDec+3A2j
		move.b	(a1)+,(a2)+
		bra.w	loc_1A62
; End of function ChaDec


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


PalCycle_Load:
		moveq	#0,d2
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		add.w	d0,d0
		move.w	PalCycle(pc,d0.w),d0
		jmp	PalCycle(pc,d0.w)
; ---------------------------------------------------------------------------
		rts
; End of function PalCycle_Load

; ===========================================================================
PalCycle:	dc.w PalCycle_GHZ-PalCycle
		dc.w PalCycle_CPZ-PalCycle
		dc.w PalCycle_CPZ-PalCycle
		dc.w PalCycle_EHZ-PalCycle
		dc.w PalCycle_HPZ-PalCycle
		dc.w PalCycle_HTZ-PalCycle
		dc.w PalCycle_GHZ-PalCycle
; ===========================================================================

PalCycle_S1TitleScreen:
		lea	(Pal_S1TitleCyc).l,a0
		bra.s	loc_1E7C
; ===========================================================================

PalCycle_GHZ:
		lea	(Pal_GHZCyc).l,a0

loc_1E7C:
		subq.w	#1,($FFFFF634).w
		bpl.s	locret_1EA2
		move.w	#5,($FFFFF634).w
		move.w	($FFFFF632).w,d0
		addq.w	#1,($FFFFF632).w
		andi.w	#3,d0
		lsl.w	#3,d0
		lea	($FFFFFB50).w,a1
		move.l	(a0,d0.w),(a1)+
		move.l	4(a0,d0.w),(a1)

locret_1EA2:
		rts
; ===========================================================================

PalCycle_CPZ:
		subq.w	#1,($FFFFF634).w
		bpl.s	locret_1F14
		move.w	#7,($FFFFF634).w
		lea	(Pal_CPZCyc1).l,a0
		move.w	($FFFFF632).w,d0
		addq.w	#6,($FFFFF632).w
		cmpi.w	#$36,($FFFFF632).w
		bcs.s	loc_1ECC
		move.w	#0,($FFFFF632).w

loc_1ECC:
		lea	($FFFFFB78).w,a1
		move.l	(a0,d0.w),(a1)+
		move.w	4(a0,d0.w),(a1)
		lea	(Pal_CPZCyc2).l,a0
		move.w	($FFFFF652).w,d0
		addq.w	#2,($FFFFF652).w
		cmpi.w	#$2A,($FFFFF652).w
		bcs.s	loc_1EF4
		move.w	#0,($FFFFF652).w

loc_1EF4:
		move.w	(a0,d0.w),($FFFFFB7E).w
		lea	(Pal_CPZCyc3).l,a0
		move.w	($FFFFF654).w,d0
		addq.w	#2,($FFFFF654).w
		andi.w	#$1E,($FFFFF654).w
		move.w	(a0,d0.w),($FFFFFB5E).w

locret_1F14:
		rts
; ===========================================================================

PalCycle_HPZ:
		subq.w	#1,($FFFFF634).w
		bpl.s	locret_1F56
		move.w	#4,($FFFFF634).w
		lea	(Pal_HPZCyc1).l,a0
		move.w	($FFFFF632).w,d0
		subq.w	#2,($FFFFF632).w
		bcc.s	loc_1F38
		move.w	#6,($FFFFF632).w

loc_1F38:
		lea	($FFFFFB72).w,a1
		move.l	(a0,d0.w),(a1)+
		move.l	4(a0,d0.w),(a1)
		lea	(Pal_HPZCyc2).l,a0
		lea	($FFFFFAF2).w,a1
		move.l	(a0,d0.w),(a1)+
		move.l	4(a0,d0.w),(a1)

locret_1F56:
		rts
; ===========================================================================

PalCycle_EHZ:
		lea	(Pal_EHZCyc).l,a0
		subq.w	#1,($FFFFF634).w
		bpl.s	locret_1F84
		move.w	#7,($FFFFF634).w
		move.w	($FFFFF632).w,d0
		addq.w	#1,($FFFFF632).w
		andi.w	#3,d0
		lsl.w	#3,d0
		move.l	(a0,d0.w),($FFFFFB26).w
		move.l	4(a0,d0.w),($FFFFFB3C).w

locret_1F84:
		rts
; ===========================================================================

PalCycle_HTZ:
		lea	(Pal_HTZCyc1).l,a0
		subq.w	#1,($FFFFF634).w
		bpl.s	locret_1FB8
		move.w	#0,($FFFFF634).w
		move.w	($FFFFF632).w,d0
		addq.w	#1,($FFFFF632).w
		andi.w	#$F,d0
		move.b	Pal_HTZCyc2(pc,d0.w),($FFFFF635).w
		lsl.w	#3,d0
		move.l	(a0,d0.w),($FFFFFB26).w
		move.l	4(a0,d0.w),($FFFFFB3C).w

locret_1FB8:
		rts
; ===========================================================================
Pal_HTZCyc2:	incbin "art/palettes/Hill Top Lava Delay.bin"
Pal_S1TitleCyc:	incbin "art/palettes/S1 Title Water.bin"
Pal_GHZCyc:	incbin "art/palettes/GHZ Water.bin"
Pal_EHZCyc:	incbin "art/palettes/EHZ Water.bin"
Pal_HTZCyc1:	incbin "art/palettes/Hill Top Lava.bin"
Pal_CPZCyc1:	incbin "art/palettes/CPZ Cycle 1.bin"
Pal_CPZCyc2:	incbin "art/palettes/CPZ Cycle 2.bin"
Pal_CPZCyc3:	incbin "art/palettes/CPZ Cycle 3.bin"
Pal_HPZCyc1:	incbin "art/palettes/HPZ Water Cycle.bin"
Pal_HPZCyc2:	incbin "art/palettes/HPZ Underwater Cycle.bin"

; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to fade in from black
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; Pal_FadeTo:
Pal_FadeFromBlack:
		move.w	#$3F,($FFFFF626).w
; Pal_FadeTo2:
Pal_FadeFromBlack2:
		moveq	#0,d0
		lea	($FFFFFB00).w,a0
		move.b	($FFFFF626).w,d0
		adda.w	d0,a0
		moveq	#0,d1
		move.b	($FFFFF627).w,d0

loc_2162:
		move.w	d1,(a0)+
		dbf	d0,loc_2162		; fill palette with $000 (black)
		move.w	#$15,d4

loc_216C:
		move.b	#VintID_Fade,(Vint_routine).w
		bsr.w	WaitForVint
		bsr.s	Pal_FadeIn
		bsr.w	RunPLC_RAM
		dbf	d4,loc_216C
		rts
; End of function Pal_FadeFromBlack

; ---------------------------------------------------------------------------
; Subroutine to update all colours once
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Pal_FadeIn:
		moveq	#0,d0
		lea	($FFFFFB00).w,a0
		lea	($FFFFFB80).w,a1
		move.b	($FFFFF626).w,d0
		adda.w	d0,a0
		adda.w	d0,a1
		move.b	($FFFFF627).w,d0

loc_2198:
		bsr.s	Pal_AddColor
		dbf	d0,loc_2198
		tst.b	(Water_flag).w
		beq.s	locret_21C0
		moveq	#0,d0
		lea	($FFFFFA80).w,a0
		lea	($FFFFFA00).w,a1
		move.b	($FFFFF626).w,d0
		adda.w	d0,a0
		adda.w	d0,a1
		move.b	($FFFFF627).w,d0

loc_21BA:
		bsr.s	Pal_AddColor
		dbf	d0,loc_21BA

locret_21C0:
		rts
; End of function Pal_FadeIn

; ---------------------------------------------------------------------------
; Subroutine to update a single colour once
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Pal_AddColor:
		move.w	(a1)+,d2
		move.w	(a0),d3
		cmp.w	d2,d3
		beq.s	Pal_AddNone
		move.w	d3,d1
		addi.w	#$200,d1
		cmp.w	d2,d1
		bhi.s	Pal_AddGreen
		move.w	d1,(a0)+
		rts
; ---------------------------------------------------------------------------

Pal_AddGreen:
		move.w	d3,d1
		addi.w	#$20,d1
		cmp.w	d2,d1
		bhi.s	Pal_AddRed
		move.w	d1,(a0)+
		rts
; ---------------------------------------------------------------------------

Pal_AddRed:
		addq.w	#2,(a0)+
		rts
; ---------------------------------------------------------------------------
; Pal_NoAdd:
Pal_AddNone:
		addq.w	#2,a0
		rts
; End of function Pal_AddColor


; ---------------------------------------------------------------------------
; Subroutine to fade out to black
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; Pal_FadeFrom:
Pal_FadeToBlack:
		move.w	#$3F,($FFFFF626).w
		move.w	#$15,d4

loc_21F8:
		move.b	#VintID_Fade,(Vint_routine).w
		bsr.w	WaitForVint
		bsr.s	Pal_FadeOut
		bsr.w	RunPLC_RAM
		dbf	d4,loc_21F8
		rts
; End of function Pal_FadeFrom

; ---------------------------------------------------------------------------
; Subroutine to update all colours once
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Pal_FadeOut:
		moveq	#0,d0
		lea	($FFFFFB00).w,a0
		move.b	($FFFFF626).w,d0
		adda.w	d0,a0
		move.b	($FFFFF627).w,d0

loc_221E:
		bsr.s	Pal_DecColor
		dbf	d0,loc_221E
		moveq	#0,d0
		lea	($FFFFFA80).w,a0
		move.b	($FFFFF626).w,d0
		adda.w	d0,a0
		move.b	($FFFFF627).w,d0

loc_2234:
		bsr.s	Pal_DecColor
		dbf	d0,loc_2234
		rts
; End of function Pal_FadeOut


; ---------------------------------------------------------------------------
; Subroutine to update a single colour once
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Pal_DecColor:
		move.w	(a0),d2
		beq.s	Pal_NoDec
		move.w	d2,d1
		andi.w	#$E,d1
		beq.s	Pal_DecGreen
		subq.w	#2,(a0)+
		rts
; ---------------------------------------------------------------------------

Pal_DecGreen:
		move.w	d2,d1
		andi.w	#$E0,d1
		beq.s	Pal_DecBlue
		subi.w	#$20,(a0)+
		rts
; ---------------------------------------------------------------------------

Pal_DecBlue:
		move.w	d2,d1
		andi.w	#$E00,d1
		beq.s	Pal_NoDec
		subi.w	#$200,(a0)+
		rts
; ---------------------------------------------------------------------------

Pal_NoDec:
		addq.w	#2,a0
		rts
; End of function Pal_DecColor


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Pal_MakeWhite:				; CODE XREF: ROM:00005166p
		move.w	#$3F,($FFFFF626).w ; '?'
		moveq	#0,d0
		lea	($FFFFFB00).w,a0
		move.b	($FFFFF626).w,d0
		adda.w	d0,a0
		move.w	#$EEE,d1
		move.b	($FFFFF627).w,d0

loc_2286:				; CODE XREF: Pal_MakeWhite+1Cj
		move.w	d1,(a0)+
		dbf	d0,loc_2286
		move.w	#$15,d4

loc_2290:				; CODE XREF: Pal_MakeWhite+34j
		move.b	#VintID_Fade,(Vint_routine).w
		bsr.w	WaitForVint
		bsr.s	Pal_WhiteToBlack
		bsr.w	RunPLC_RAM
		dbf	d4,loc_2290
		rts
; End of function Pal_MakeWhite


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Pal_WhiteToBlack:			; CODE XREF: Pal_MakeWhite+2Ep
		moveq	#0,d0
		lea	($FFFFFB00).w,a0
		lea	($FFFFFB80).w,a1
		move.b	($FFFFF626).w,d0
		adda.w	d0,a0
		adda.w	d0,a1
		move.b	($FFFFF627).w,d0

loc_22BC:				; CODE XREF: Pal_WhiteToBlack+18j
		bsr.s	Pal_DecColor2
		dbf	d0,loc_22BC
		tst.b	(Water_flag).w
		beq.s	locret_22E4
		moveq	#0,d0
		lea	($FFFFFA80).w,a0
		lea	($FFFFFA00).w,a1
		move.b	($FFFFF626).w,d0
		adda.w	d0,a0
		adda.w	d0,a1
		move.b	($FFFFF627).w,d0

loc_22DE:				; CODE XREF: Pal_WhiteToBlack+3Aj
		bsr.s	Pal_DecColor2
		dbf	d0,loc_22DE

locret_22E4:				; CODE XREF: Pal_WhiteToBlack+20j
		rts
; End of function Pal_WhiteToBlack


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Pal_DecColor2:				; CODE XREF: Pal_WhiteToBlack:loc_22BCp
					; Pal_WhiteToBlack:loc_22DEp
		move.w	(a1)+,d2
		move.w	(a0),d3
		cmp.w	d2,d3
		beq.s	loc_2312
		move.w	d3,d1
		subi.w	#$200,d1
		bcs.s	loc_22FE
		cmp.w	d2,d1
		bcs.s	loc_22FE
		move.w	d1,(a0)+
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_22FE:				; CODE XREF: Pal_DecColor2+Ej
					; Pal_DecColor2+12j
		move.w	d3,d1
		subi.w	#$20,d1	; ' '
		bcs.s	loc_230E
		cmp.w	d2,d1
		bcs.s	loc_230E
		move.w	d1,(a0)+
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_230E:				; CODE XREF: Pal_DecColor2+1Ej
					; Pal_DecColor2+22j
		subq.w	#2,(a0)+
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_2312:				; CODE XREF: Pal_DecColor2+6j
		addq.w	#2,a0
		rts
; End of function Pal_DecColor2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Pal_MakeFlash:				; CODE XREF: ROM:00005024p
					; ROM:000052CEp
		move.w	#$3F,($FFFFF626).w ; '?'
		move.w	#$15,d4

loc_2320:				; CODE XREF: Pal_MakeFlash+1Aj
		move.b	#VintID_Fade,(Vint_routine).w
		bsr.w	WaitForVint
		bsr.s	Pal_ToWhite
		bsr.w	RunPLC_RAM
		dbf	d4,loc_2320
		rts
; End of function Pal_MakeFlash


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Pal_ToWhite:				; CODE XREF: Pal_MakeFlash+14p
					; ROM:00005210p
		moveq	#0,d0
		lea	($FFFFFB00).w,a0
		move.b	($FFFFF626).w,d0
		adda.w	d0,a0
		move.b	($FFFFF627).w,d0

loc_2346:				; CODE XREF: Pal_ToWhite+12j
		bsr.s	Pal_AddColor2
		dbf	d0,loc_2346
		moveq	#0,d0

loc_234E:
		lea	($FFFFFA80).w,a0
		move.b	($FFFFF626).w,d0
		adda.w	d0,a0
		move.b	($FFFFF627).w,d0

loc_235C:				; CODE XREF: Pal_ToWhite+28j
		bsr.s	Pal_AddColor2
		dbf	d0,loc_235C
		rts
; End of function Pal_ToWhite


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Pal_AddColor2:				; CODE XREF: Pal_ToWhite:loc_2346p
					; Pal_ToWhite:loc_235Cp
		move.w	(a0),d2
		cmpi.w	#$EEE,d2
		beq.s	loc_23A0
		move.w	d2,d1
		andi.w	#$E,d1
		cmpi.w	#$E,d1
		beq.s	loc_237C
		addq.w	#2,(a0)+
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_237C:				; CODE XREF: Pal_AddColor2+12j
		move.w	d2,d1
		andi.w	#$E0,d1	; 'à'
		cmpi.w	#$E0,d1	; 'à'
		beq.s	loc_238E

loc_2388:
		addi.w	#$20,(a0)+ ; ' '
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_238E:				; CODE XREF: Pal_AddColor2+22j
		move.w	d2,d1
		andi.w	#$E00,d1
		cmpi.w	#$E00,d1
		beq.s	loc_23A0
		addi.w	#$200,(a0)+
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_23A0:				; CODE XREF: Pal_AddColor2+6j
					; Pal_AddColor2+34j
		addq.w	#2,a0
		rts
; End of function Pal_AddColor2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


PalCycle_Sega:				; CODE XREF: ROM:000031A0p
		tst.b	($FFFFF635).w
		bne.s	loc_2404
		lea	($FFFFFB20).w,a1
		lea	(Pal_Sega1).l,a0
		moveq	#5,d1
		move.w	($FFFFF632).w,d0

loc_23BA:				; CODE XREF: PalCycle_Sega+1Ej
		bpl.s	loc_23C4
		addq.w	#2,a0
		subq.w	#1,d1
		addq.w	#2,d0
		bra.s	loc_23BA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_23C4:				; CODE XREF: PalCycle_Sega:loc_23BAj
					; PalCycle_Sega+36j
		move.w	d0,d2
		andi.w	#$1E,d2
		bne.s	loc_23CE
		addq.w	#2,d0

loc_23CE:				; CODE XREF: PalCycle_Sega+26j
		cmpi.w	#$60,d0	; '`'
		bcc.s	loc_23D8
		move.w	(a0)+,(a1,d0.w)

loc_23D8:				; CODE XREF: PalCycle_Sega+2Ej
		addq.w	#2,d0
		dbf	d1,loc_23C4
		move.w	($FFFFF632).w,d0
		addq.w	#2,d0
		move.w	d0,d2
		andi.w	#$1E,d2
		bne.s	loc_23EE
		addq.w	#2,d0

loc_23EE:				; CODE XREF: PalCycle_Sega+46j
		cmpi.w	#$64,d0	; 'd'
		blt.s	loc_23FC
		move.w	#$401,($FFFFF634).w
		moveq	#$FFFFFFF4,d0

loc_23FC:				; CODE XREF: PalCycle_Sega+4Ej
		move.w	d0,($FFFFF632).w
		moveq	#1,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_2404:				; CODE XREF: PalCycle_Sega+4j
		subq.b	#1,($FFFFF634).w
		bpl.s	loc_2456
		move.b	#4,($FFFFF634).w
		move.w	($FFFFF632).w,d0
		addi.w	#$C,d0
		cmpi.w	#$30,d0	; '0'
		bcs.s	loc_2422
		moveq	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_2422:				; CODE XREF: PalCycle_Sega+78j
		move.w	d0,($FFFFF632).w
		lea	(Pal_Sega2).l,a0
		lea	(a0,d0.w),a0
		lea	($FFFFFB04).w,a1
		move.l	(a0)+,(a1)+
		move.l	(a0)+,(a1)+
		move.w	(a0)+,(a1)
		lea	($FFFFFB20).w,a1
		moveq	#0,d0
		moveq	#$2C,d1	; ','

loc_2442:				; CODE XREF: PalCycle_Sega+AEj
		move.w	d0,d2
		andi.w	#$1E,d2
		bne.s	loc_244C
		addq.w	#2,d0

loc_244C:				; CODE XREF: PalCycle_Sega+A4j
		move.w	(a0),(a1,d0.w)
		addq.w	#2,d0
		dbf	d1,loc_2442

loc_2456:				; CODE XREF: PalCycle_Sega+64j
		moveq	#1,d0
		rts
; End of function PalCycle_Sega

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Pal_Sega1:	dc.w  $EEE, $EEA, $EE4,	$EC0, $EE4, $EEA; 0 ; DATA XREF: PalCycle_Sega
Pal_Sega2:	dc.w  $EEC, $EEA, $EEA,	$EEA, $EEA, $EEA, $EEC,	$EEA, $EE4, $EC0, $EC0,	$EC0, $EEC, $EEA, $EE4,	$EC0
		dc.w  $EA0, $E60, $EEA,	$EE4, $EC0, $EA0, $E80,	$E00

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


PalLoad1:
		lea	(PalPointers).l,a1
		lsl.w	#3,d0
		adda.w	d0,a1
		movea.l	(a1)+,a2
		movea.w	(a1)+,a3
		adda.w	#$80,a3
		move.w	(a1)+,d7

loc_24AA:
		move.l	(a2)+,(a3)+
		dbf	d7,loc_24AA
		rts
; End of function PalLoad1


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


PalLoad2:
		lea	(PalPointers).l,a1
		lsl.w	#3,d0
		adda.w	d0,a1
		movea.l	(a1)+,a2
		movea.w	(a1)+,a3
		move.w	(a1)+,d7

loc_24C2:
		move.l	(a2)+,(a3)+
		dbf	d7,loc_24C2
		rts
; End of function PalLoad2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


PalLoad3_Water:
		lea	(PalPointers).l,a1
		lsl.w	#3,d0
		adda.w	d0,a1
		movea.l	(a1)+,a2
		movea.w	(a1)+,a3
		suba.w	#$80,a3
		move.w	(a1)+,d7

loc_24DE:
		move.l	(a2)+,(a3)+
		dbf	d7,loc_24DE
		rts
; End of function PalLoad3_Water


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


PalLoad4_Water:
		lea	(PalPointers).l,a1
		lsl.w	#3,d0
		adda.w	d0,a1
		movea.l	(a1)+,a2
		movea.w	(a1)+,a3
		suba.w	#$100,a3
		move.w	(a1)+,d7

loc_24FA:
		move.l	(a2)+,(a3)+
		dbf	d7,loc_24FA
		rts
; End of function PalLoad4_Water

; ===========================================================================
; ---------------------------------------------------------------------------
; Palette pointers
; (PALETTE DESCRIPTOR ARRAY)
; This struct array defines the palette to use for each level.
; ---------------------------------------------------------------------------

palptr	macro	ptr,ram,size
	dc.l ptr	; Pointer to palette
	dc.w ram	; Location in ram to load palette into
	dc.w size	; Size of palette in (bytes / 4)
	endm

PalPointers:	palptr	Pal_SegaBG,$FB00,$1F
		palptr	Pal_Title,$FB00,$1F
		palptr	Pal_LevelSelect,$FB00,$1F
		palptr	Pal_SonicTails,$FB00,7
		palptr	Pal_GHZ,$FB20,$17
		palptr	Pal_CPZ,$FB20,$17
		palptr	Pal_CPZ,$FB20,$17
		palptr	Pal_EHZ,$FB20,$17
		palptr	Pal_HPZ,$FB20,$17
		palptr	Pal_HTZ,$FB20,$17
		palptr	Pal_S1SpecialStage,$FB00,$1F
		palptr	Pal_HPZWater,$FB00,$1F
		; the following are leftover Sonic 1 entries
		palptr	Pal_LZ4,$FB20,$17
		palptr	Pal_LZ4Water,$FB00,$17
		palptr	Pal_HTZ,$FB20,$17
		palptr	Pal_LZSonicWater,$FB00,7
		palptr	Pal_LZ4SonicWater,$FB00,7
		palptr	Pal_S1SpeResults,$FB00,$1F
		palptr	Pal_S1Continue,$FB00,$F
		palptr	Pal_S1Ending,$FB00,$1F
; ---------------------------------------------------------------------------
Pal_SegaBG:		incbin	"art/palettes/Sega screen background.bin"
Pal_Title:		incbin	"art/palettes/Title screen.bin"
Pal_LevelSelect:	incbin	"art/palettes/Level select.bin"
Pal_SonicTails:		incbin	"art/palettes/Sonic and Tails.bin"
Pal_GHZ:		incbin	"art/palettes/GHZ.bin"
Pal_HPZWater:		incbin	"art/palettes/HPZ underwater.bin"
Pal_CPZ:		incbin	"art/palettes/CPZ.bin"
Pal_EHZ:		incbin	"art/palettes/EHZ.bin"
Pal_HPZ:		incbin	"art/palettes/HPZ.bin"
Pal_HTZ:		incbin	"art/palettes/HTZ.bin"
			; Sonic 1 leftovers
Pal_S1SpecialStage:	incbin	"art/palettes/S1 Special Stage.bin"
Pal_LZ4:		incbin	"art/palettes/LZ4.bin"
Pal_LZ4Water:		incbin	"art/palettes/LZ4 underwater.bin"
Pal_LZSonicWater:	incbin	"art/palettes/LZ Sonic underwater.bin"
Pal_LZ4SonicWater:	incbin	"art/palettes/LZ4 Sonic underwater.bin"
Pal_S1SpeResults:	incbin	"art/palettes/S1 Special Stage results.bin"
Pal_S1Continue:		incbin	"art/palettes/S1 Continue screen.bin"
Pal_S1Ending:		incbin	"art/palettes/S1 Ending.bin"
; ===========================================================================
		nop
; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to perform vertical synchronization
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; DelayProgram:
WaitForVint:
		move	#$2300,sr

loc_2C88:
		tst.b	(Vint_routine).w
		bne.s	loc_2C88
		rts
; End of function WaitForVint

; ---------------------------------------------------------------------------
; Subroutine to generate a pseudo-random number in d0
; d0 = (RNG & $FFFF0000) | ((RNG*41 & $FFFF) + ((RNG*41 & $FFFF0000) >> 16))
; RNG = ((RNG*41 + ((RNG*41 & $FFFF) << 16)) & $FFFF0000) | (RNG*41 & $FFFF)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; PseudoRandomNumber:
RandomNumber:
		move.l	($FFFFF636).w,d1
		bne.s	loc_2C9C
		move.l	#$2A6D365A,d1

loc_2C9C:
		; set the high word of d0 to be the high word of the RNG
		; and multiply the RNG by 41
		move.l	d1,d0
		asl.l	#2,d1
		add.l	d0,d1
		asl.l	#3,d1
		add.l	d0,d1

		; add the low word of the RNG to the high word of the RNG
		; and set the low word of d0 to be the result
		move.w	d1,d0
		swap	d1
		add.w	d1,d0
		move.w	d0,d1
		swap	d1

		move.l	d1,($FFFFF636).w
		rts
; End of function RandomNumber

; ---------------------------------------------------------------------------
; Subroutine to calculate sine and cosine of an angle
; d0 = input byte = angle (360 degrees == 256)
; d0 = output word = 255 * sine(angle)
; d1 = output word = 255 * cosine(angle)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


CalcSine:
		andi.w	#$FF,d0
		add.w	d0,d0
		addi.w	#$80,d0
		move.w	Sine_Data(pc,d0.w),d1 ; cos
		subi.w	#$80,d0
		move.w	Sine_Data(pc,d0.w),d0 ; sin
		rts
; End of function CalcSine

; ===========================================================================
Sine_Data:	dc.w	  0,	 6,    $C,   $12,   $19,   $1F,	  $25,	 $2B; 0
		dc.w	$31,   $38,   $3E,   $44,   $4A,   $50,	  $56,	 $5C; 8
		dc.w	$61,   $67,   $6D,   $73,   $78,   $7E,	  $83,	 $88; 16
		dc.w	$8E,   $93,   $98,   $9D,   $A2,   $A7,	  $AB,	 $B0; 24
		dc.w	$B5,   $B9,   $BD,   $C1,   $C5,   $C9,	  $CD,	 $D1; 32
		dc.w	$D4,   $D8,   $DB,   $DE,   $E1,   $E4,	  $E7,	 $EA; 40
		dc.w	$EC,   $EE,   $F1,   $F3,   $F4,   $F6,	  $F8,	 $F9; 48
		dc.w	$FB,   $FC,   $FD,   $FE,   $FE,   $FF,	  $FF,	 $FF; 56
		dc.w   $100,   $FF,   $FF,   $FF,   $FE,   $FE,	  $FD,	 $FC; 64
		dc.w	$FB,   $F9,   $F8,   $F6,   $F4,   $F3,	  $F1,	 $EE; 72
		dc.w	$EC,   $EA,   $E7,   $E4,   $E1,   $DE,	  $DB,	 $D8; 80
		dc.w	$D4,   $D1,   $CD,   $C9,   $C5,   $C1,	  $BD,	 $B9; 88
		dc.w	$B5,   $B0,   $AB,   $A7,   $A2,   $9D,	  $98,	 $93; 96
		dc.w	$8E,   $88,   $83,   $7E,   $78,   $73,	  $6D,	 $67; 104
		dc.w	$61,   $5C,   $56,   $50,   $4A,   $44,	  $3E,	 $38; 112
		dc.w	$31,   $2B,   $25,   $1F,   $19,   $12,	   $C,	   6; 120
		dc.w	  0,	-6,   -$C,  -$12,  -$19,  -$1F,	 -$25,	-$2B; 128
		dc.w   -$31,  -$38,  -$3E,  -$44,  -$4A,  -$50,	 -$56,	-$5C; 136
		dc.w   -$61,  -$67,  -$6D,  -$75,  -$78,  -$7E,	 -$83,	-$88; 144
		dc.w   -$8E,  -$93,  -$98,  -$9D,  -$A2,  -$A7,	 -$AB,	-$B0; 152
		dc.w   -$B5,  -$B9,  -$BD,  -$C1,  -$C5,  -$C9,	 -$CD,	-$D1; 160
		dc.w   -$D4,  -$D8,  -$DB,  -$DE,  -$E1,  -$E4,	 -$E7,	-$EA; 168
		dc.w   -$EC,  -$EE,  -$F1,  -$F3,  -$F4,  -$F6,	 -$F8,	-$F9; 176
		dc.w   -$FB,  -$FC,  -$FD,  -$FE,  -$FE,  -$FF,	 -$FF,	-$FF; 184
		dc.w  -$100,  -$FF,  -$FF,  -$FF,  -$FE,  -$FE,	 -$FD,	-$FC; 192
		dc.w   -$FB,  -$F9,  -$F8,  -$F6,  -$F4,  -$F3,	 -$F1,	-$EE; 200
		dc.w   -$EC,  -$EA,  -$E7,  -$E4,  -$E1,  -$DE,	 -$DB,	-$D8; 208
		dc.w   -$D4,  -$D1,  -$CD,  -$C9,  -$C5,  -$C1,	 -$BD,	-$B9; 216
		dc.w   -$B5,  -$B0,  -$AB,  -$A7,  -$A2,  -$9D,	 -$98,	-$93; 224
		dc.w   -$8E,  -$88,  -$83,  -$7E,  -$78,  -$75,	 -$6D,	-$67; 232
		dc.w   -$61,  -$5C,  -$56,  -$50,  -$4A,  -$44,	 -$3E,	-$38; 240
		dc.w   -$31,  -$2B,  -$25,  -$1F,  -$19,  -$12,	  -$C,	  -6; 248
		dc.w	  0,	 6,    $C,   $12,   $19,   $1F,	  $25,	 $2B; 256
		dc.w	$31,   $38,   $3E,   $44,   $4A,   $50,	  $56,	 $5C; 264
		dc.w	$61,   $67,   $6D,   $73,   $78,   $7E,	  $83,	 $88; 272
		dc.w	$8E,   $93,   $98,   $9D,   $A2,   $A7,	  $AB,	 $B0; 280
		dc.w	$B5,   $B9,   $BD,   $C1,   $C5,   $C9,	  $CD,	 $D1; 288
		dc.w	$D4,   $D8,   $DB,   $DE,   $E1,   $E4,	  $E7,	 $EA; 296
		dc.w	$EC,   $EE,   $F1,   $F3,   $F4,   $F6,	  $F8,	 $F9; 304
		dc.w	$FB,   $FC,   $FD,   $FE,   $FE,   $FF,	  $FF,	 $FF; 312

; ---------------------------------------------------------------------------
; Subroutine to calculate arctangent of y/x
; d1 = input x
; d2 = input y
; d0 = output angle (360 degrees == 256)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


CalcAngle:
		movem.l	d3-d4,-(sp)
		moveq	#0,d3
		moveq	#0,d4
		move.w	d1,d3
		move.w	d2,d4
		or.w	d3,d4
		beq.s	CalcAngle_Zero	 ; special case return if x and y are both 0
		move.w	d2,d4
		tst.w	d3		; calculate absolute value of x
		bpl.w	loc_2F68
		neg.w	d3

loc_2F68:
		tst.w	d4		; calculate absolute value of y
		bpl.w	loc_2F70
		neg.w	d4

loc_2F70:
		cmp.w	d3,d4
		bcc.w	loc_2F82
		lsl.l	#8,d4
		divu.w	d3,d4
		moveq	#0,d0
		move.b	AngleData(pc,d4.w),d0
		bra.s	loc_2F8C
; ---------------------------------------------------------------------------

loc_2F82:
		lsl.l	#8,d3
		divu.w	d4,d3
		moveq	#$40,d0
		sub.b	AngleData(pc,d3.w),d0

loc_2F8C:
		tst.w	d1
		bpl.w	loc_2F98
		neg.w	d0
		addi.w	#$80,d0

loc_2F98:
		tst.w	d2
		bpl.w	loc_2FA4
		neg.w	d0
		addi.w	#$100,d0

loc_2FA4:
		movem.l	(sp)+,d3-d4
		rts
; ===========================================================================
; loc_2FAA:
CalcAngle_Zero:
		move.w	#$40,d0
		movem.l	(sp)+,d3-d4
		rts
; End of function CalcAngle

; ===========================================================================
AngleData:	dc.b   0,  0,  0,  0,  1,  1,  1,  1; 0
		dc.b   1,  1,  2,  2,  2,  2,  2,  2; 8
		dc.b   3,  3,  3,  3,  3,  3,  3,  4; 16
		dc.b   4,  4,  4,  4,  4,  5,  5,  5; 24
		dc.b   5,  5,  5,  6,  6,  6,  6,  6; 32
		dc.b   6,  6,  7,  7,  7,  7,  7,  7; 40
		dc.b   8,  8,  8,  8,  8,  8,  8,  9; 48
		dc.b   9,  9,  9,  9,  9, $A, $A, $A; 56
		dc.b  $A, $A, $A, $A, $B, $B, $B, $B; 64
		dc.b  $B, $B, $B, $C, $C, $C, $C, $C; 72
		dc.b  $C, $C, $D, $D, $D, $D, $D, $D; 80
		dc.b  $D, $E, $E, $E, $E, $E, $E, $E; 88
		dc.b  $F, $F, $F, $F, $F, $F, $F,$10; 96
		dc.b $10,$10,$10,$10,$10,$10,$11,$11; 104
		dc.b $11,$11,$11,$11,$11,$11,$12,$12; 112
		dc.b $12,$12,$12,$12,$12,$13,$13,$13; 120
		dc.b $13,$13,$13,$13,$13,$14,$14,$14; 128
		dc.b $14,$14,$14,$14,$14,$15,$15,$15; 136
		dc.b $15,$15,$15,$15,$15,$15,$16,$16; 144
		dc.b $16,$16,$16,$16,$16,$16,$17,$17; 152
		dc.b $17,$17,$17,$17,$17,$17,$17,$18; 160
		dc.b $18,$18,$18,$18,$18,$18,$18,$18; 168
		dc.b $19,$19,$19,$19,$19,$19,$19,$19; 176
		dc.b $19,$19,$1A,$1A,$1A,$1A,$1A,$1A; 184
		dc.b $1A,$1A,$1A,$1B,$1B,$1B,$1B,$1B; 192
		dc.b $1B,$1B,$1B,$1B,$1B,$1C,$1C,$1C; 200
		dc.b $1C,$1C,$1C,$1C,$1C,$1C,$1C,$1C; 208
		dc.b $1D,$1D,$1D,$1D,$1D,$1D,$1D,$1D; 216
		dc.b $1D,$1D,$1D,$1E,$1E,$1E,$1E,$1E; 224
		dc.b $1E,$1E,$1E,$1E,$1E,$1E,$1F,$1F; 232
		dc.b $1F,$1F,$1F,$1F,$1F,$1F,$1F,$1F; 240
		dc.b $1F,$1F,$20,$20,$20,$20,$20,$20; 248
		dc.b $20,  0		; 256
; ===========================================================================
		nop
; ===========================================================================
; ---------------------------------------------------------------------------
; Sega logo, exact same as Sonic 1's
; ---------------------------------------------------------------------------

SegaScreen:
		move.b	#$E4,d0
		bsr.w	PlaySound_Special
		bsr.w	ClearPLC
		bsr.w	Pal_FadeToBlack
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$8700,(a6)
		move.w	#$8B00,(a6)
		move.w	#$8C81,(a6)
		clr.b	(Water_fullscreen_flag).w
		move	#$2700,sr
		move.w	(VDP_Reg1_val).w,d0
		andi.b	#$BF,d0
		move.w	d0,(VDP_control_port).l
		bsr.w	ClearScreen
		move.l	#$40000000,(VDP_control_port).l
		lea	(Nem_SegaLogo).l,a0
		bsr.w	NemDec
		lea	($FF0000).l,a1
		lea	(Eni_SegaLogo).l,a0
		move.w	#0,d0
		bsr.w	EniDec
		lea	($FF0000).l,a1
		move.l	#$65100003,d0
		moveq	#$17,d1
		moveq	#7,d2
		bsr.w	PlaneMapToVRAM_H40
		lea	($FF0180).l,a1
		move.l	#$40000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		bsr.w	PlaneMapToVRAM_H40
		tst.b	($FFFFFFF8).w	; is console Japanese?
		bmi.s	loc_316A	; if not, branch
		; hide 'TM' symbol
		lea	($FF0A40).l,a1
		move.l	#$453A0003,d0
		moveq	#2,d1
		moveq	#1,d2
		bsr.w	PlaneMapToVRAM_H40

loc_316A:
		moveq	#0,d0
		bsr.w	PalLoad2
		move.w	#-$A,($FFFFF632).w
		move.w	#0,($FFFFF634).w
		move.w	#0,($FFFFF662).w
		move.w	#0,($FFFFF660).w
		move.w	(VDP_Reg1_val).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l

Sega_WaitPalette:
		move.b	#VintID_SEGA,(Vint_routine).w
		bsr.w	WaitForVint
		bsr.w	PalCycle_Sega
		bne.s	Sega_WaitPalette

		move.b	#$E1,d0
		bsr.w	PlaySound_Special
		move.b	#VintID_PCM,(Vint_routine).w
		bsr.w	WaitForVint
		move.w	#$1E,(Demo_Time_left).w

Sega_WaitEnd:
		move.b	#VintID_SEGA,(Vint_routine).w
		bsr.w	WaitForVint
		tst.w	(Demo_Time_left).w
		beq.s	Sega_GoToTitleScreen
		andi.b	#$80,($FFFFF605).w
		beq.s	Sega_WaitEnd

Sega_GoToTitleScreen:
		move.b	#GameModeID_TitleScreen,(Game_Mode).w
		rts
; ===========================================================================
		dc.w 0
; ===========================================================================

TitleScreen:				; CODE XREF: ROM:000003A0j
		move.b	#$E4,d0
		bsr.w	PlaySound_Special
		bsr.w	ClearPLC
		bsr.w	Pal_FadeToBlack
		move	#$2700,sr
		bsr.w	SoundDriverLoad
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$9001,(a6)
		move.w	#$9200,(a6)
		move.w	#$8B03,(a6)
		move.w	#$8720,(a6)
		clr.b	(Water_fullscreen_flag).w
		move.w	#$8C81,(a6)
		bsr.w	ClearScreen
		lea	($FFFFAC00).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_3230:				; CODE XREF: ROM:00003232j
		move.l	d0,(a1)+
		dbf	d1,loc_3230
		lea	($FFFFB000).w,a1
		moveq	#0,d0
		move.w	#$7FF,d1

loc_3240:				; CODE XREF: ROM:00003242j
		move.l	d0,(a1)+
		dbf	d1,loc_3240
		lea	($FFFFF700).w,a1
		moveq	#0,d0
		move.w	#$3F,d1	; '?'

loc_3250:				; CODE XREF: ROM:00003252j
		move.l	d0,(a1)+
		dbf	d1,loc_3250
		lea	($FFFFEE00).w,a1
		moveq	#0,d0
		move.w	#$3F,d1	; '?'

loc_3260:				; CODE XREF: ROM:00003262j
		move.l	d0,(a1)+
		dbf	d1,loc_3260
		lea	($FFFFFB80).w,a1
		moveq	#0,d0
		move.w	#$1F,d1

loc_3270:				; CODE XREF: ROM:00003272j
		move.l	d0,(a1)+
		dbf	d1,loc_3270
		moveq	#3,d0
		bsr.w	PalLoad1
		bsr.w	Pal_FadeFromBlack
		move	#$2700,sr
		move.l	#$40000000,(VDP_control_port).l
		lea	(Nem_Title).l,a0
		bsr.w	NemDec
		move.l	#$40000001,(VDP_control_port).l
		lea	(Nem_TitleSonicTails).l,a0
		bsr.w	NemDec
		lea	(VDP_data_port).l,a6
		move.l	#$50000003,4(a6)
		lea	(Art_Text).l,a5
		move.w	#$28F,d1

loc_32C4:				; CODE XREF: ROM:000032C6j
		move.w	(a5)+,(a6)
		dbf	d1,loc_32C4
		nop
		move.b	#0,($FFFFFE30).w
		move.w	#0,(Debug_placement_mode).w
		move.w	#0,($FFFFFFF0).w
		move.w	#0,($FFFFFFEA).w
		move.w	#0,(Current_ZoneAndAct).w
		move.w	#0,($FFFFF634).w
		bsr.w	Pal_FadeToBlack
		move	#$2700,sr
		lea	($FFFF0000).l,a1
		lea	(Eni_TitleMap).l,a0
		move.w	#0,d0
		bsr.w	EniDec
		lea	($FFFF0000).l,a1
		move.l	#$40000003,d0
		moveq	#$27,d1	; '''
		moveq	#$1B,d2
		bsr.w	PlaneMapToVRAM_H40
		lea	($FFFF0000).l,a1
		lea	(Eni_TitleBg1).l,a0
		move.w	#0,d0

loc_3330:
		bsr.w	EniDec
		lea	($FFFF0000).l,a1
		move.l	#$60000003,d0
		moveq	#$1F,d1
		moveq	#$1B,d2
		bsr.w	PlaneMapToVRAM_H40
		lea	($FFFF0000).l,a1
		lea	(Eni_TitleBg2).l,a0
		move.w	#0,d0
		bsr.w	EniDec
		lea	($FFFF0000).l,a1
		move.l	#$60400003,d0
		moveq	#$1F,d1
		moveq	#$1B,d2
		bsr.w	PlaneMapToVRAM_H40
		moveq	#1,d0
		bsr.w	PalLoad1
		move.b	#MusID_Title,d0
		bsr.w	PlaySound_Special
		move.b	#0,(Debug_mode_flag).w
		move.w	#0,(Two_player_mode).w
		move.w	#$178,(Demo_Time_left).w
		lea	($FFFFB080).w,a1
		moveq	#0,d0
		move.w	#$F,d1

loc_339A:				; CODE XREF: ROM:0000339Cj
		move.l	d0,(a1)+
		dbf	d1,loc_339A
		move.b	#$E,($FFFFB040).w
		move.b	#$E,($FFFFB080).w
		move.b	#1,($FFFFB09A).w
		jsr	(RunObjects).l
		jsr	(BuildSprites).l
		moveq	#0,d0
		bsr.w	LoadPLC2
		move.w	#0,($FFFFFFE4).w
		move.w	#0,($FFFFFFE6).w
		move.w	#$300,(Current_ZoneAndAct).w
		move.w	#4,(Sonic_Pos_Record_Index).w
		move.w	#0,(Sonic_Pos_Record_Buf).w
		move.w	(VDP_Reg1_val).w,d0
		ori.b	#$40,d0	; '@'
		move.w	d0,(VDP_control_port).l
		bsr.w	Pal_FadeFromBlack

TitleScreen_Loop:			; CODE XREF: ROM:0000349Aj
		move.b	#VintID_Title,(Vint_routine).w
		bsr.w	WaitForVint
		jsr	(RunObjects).l
		bsr.w	Deform_TitleScreen
		jsr	(BuildSprites).l
		bsr.w	RunPLC_RAM
		tst.b	($FFFFFFF8).w
		bpl.s	Title_RegionJ
		lea	(LvlSelCode_US).l,a0
		bra.s	LevelSelectCheat
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Title_RegionJ:				; CODE XREF: ROM:00003416j
		lea	(LvlSelCode_J).l,a0

LevelSelectCheat:			; CODE XREF: ROM:0000341Ej
		move.w	($FFFFFFE4).w,d0
		adda.w	d0,a0
		move.b	($FFFFF605).w,d0
		andi.b	#$F,d0
		cmp.b	(a0),d0
		bne.s	Title_Cheat_NoMatch
		addq.w	#1,($FFFFFFE4).w
		tst.b	d0
		bne.s	Title_Cheat_CountC
		lea	($FFFFFFE0).w,a0
		move.w	($FFFFFFE6).w,d1
		lsr.w	#1,d1
		andi.w	#3,d1
		beq.s	Title_Cheat_PlayRing
		tst.b	($FFFFFFF8).w
		bpl.s	Title_Cheat_PlayRing
		moveq	#1,d1
		move.b	d1,1(a0,d1.w)

Title_Cheat_PlayRing:			; CODE XREF: ROM:0000344Ej
					; ROM:00003454j
		move.b	#1,(a0,d1.w)
		move.b	#$B5,d0
		bsr.w	PlaySound_Special
		bra.s	Title_Cheat_CountC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Title_Cheat_NoMatch:			; CODE XREF: ROM:00003436j
		tst.b	d0
		beq.s	Title_Cheat_CountC
		cmpi.w	#9,($FFFFFFE4).w
		beq.s	Title_Cheat_CountC
		move.w	#0,($FFFFFFE4).w

Title_Cheat_CountC:			; CODE XREF: ROM:0000343Ej
					; ROM:0000346Aj ...
		move.b	($FFFFF605).w,d0
		andi.b	#$20,d0	; ' '
		beq.s	Title_Cheat_NoC
		addq.w	#1,($FFFFFFE6).w

Title_Cheat_NoC:			; CODE XREF: ROM:00003486j
		tst.w	(Demo_Time_left).w
		beq.w	Demo
		andi.b	#$80,($FFFFF605).w
		beq.w	TitleScreen_Loop

Title_CheckLvlSel:			; CODE XREF: ROM:0000365Cj
		tst.b	($FFFFFFE0).w
		beq.w	PlayLevel
		moveq	#2,d0
		bsr.w	PalLoad2
		lea	($FFFFE000).w,a1
		moveq	#0,d0
		move.w	#$DF,d1	; 'ß'

LevelSelect_ClearScroll:		; CODE XREF: ROM:000034B8j
		move.l	d0,(a1)+
		dbf	d1,LevelSelect_ClearScroll
		move.l	d0,(Vscroll_Factor).w
		move	#$2700,sr
		lea	(VDP_data_port).l,a6
		move.l	#$60000003,(VDP_control_port).l
		move.w	#$3FF,d1

LevelSelect_ClearVRAM:			; CODE XREF: ROM:000034DAj
		move.l	d0,(a6)
		dbf	d1,LevelSelect_ClearVRAM
		bsr.w	LevelSelect_TextLoad

LevelSelect_Loop:
		move.b	#VintID_Title,(Vint_routine).w
		bsr.w	WaitForVint
		bsr.w	LevelSelect_Controls
		bsr.w	RunPLC_RAM
		tst.l	(Plc_Buffer).w
		bne.s	LevelSelect_Loop
		andi.b	#$F0,($FFFFF605).w
		beq.s	LevelSelect_Loop
		move.w	#0,(Two_player_mode).w
		btst	#4,($FFFFF604).w
		beq.s	loc_3516
		move.w	#1,(Two_player_mode).w

loc_3516:				; CODE XREF: ROM:0000350Ej
		move.w	($FFFFFF82).w,d0
		cmpi.w	#$14,d0
		bne.s	loc_3570
		move.w	($FFFFFF84).w,d0
		addi.w	#$80,d0	; ''
		tst.b	($FFFFFFE3).w
		beq.s	loc_353A
		cmpi.w	#$9F,d0	; ''
		beq.s	loc_354C
		cmpi.w	#$9E,d0	; ''
		beq.s	loc_355A

loc_353A:				; CODE XREF: ROM:0000352Cj
		cmpi.w	#$94,d0	; ''
		bcs.s	loc_3546
		cmpi.w	#$A0,d0	; ' '
		bcs.s	LevelSelect_Loop

loc_3546:				; CODE XREF: ROM:0000353Ej
		bsr.w	PlaySound_Special
		bra.s	LevelSelect_Loop
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_354C:				; CODE XREF: ROM:00003532j
		move.b	#GameModeID_S1Ending,(Game_Mode).w
		move.w	#$600,(Current_ZoneAndAct).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_355A:				; CODE XREF: ROM:00003538j
		move.b	#GameModeID_S1Credits,(Game_Mode).w
		move.b	#$91,d0
		bsr.w	PlaySound_Special
		move.w	#0,($FFFFFFF4).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_3570:				; CODE XREF: ROM:0000351Ej
		add.w	d0,d0
		move.w	LevelSelect_LevelOrder(pc,d0.w),d0
		bmi.w	LevelSelect_Loop
		cmpi.w	#$700,d0
		bne.s	LevelSelect_Level
		move.b	#GameModeID_SpecialStage,(Game_Mode).w
		clr.w	(Current_ZoneAndAct).w
		move.b	#3,($FFFFFE12).w
		moveq	#0,d0
		move.w	d0,($FFFFFE20).w
		move.l	d0,($FFFFFE22).w
		move.l	d0,($FFFFFE26).w
		move.l	#$1388,($FFFFFFC0).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
LevelSelect_LevelOrder:dc.w	0,    1,    2  ; 0
		dc.w  $200, $201, $202	; 3
		dc.w  $400, $401, $402	; 6
		dc.w  $100, $101, $102	; 9
		dc.w  $300, $301, $302	; 12
		dc.w  $500, $501, $103	; 15
		dc.w  $502, $700,$8000	; 18
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

LevelSelect_Level:			; CODE XREF: ROM:0000357Ej
		andi.w	#$3FFF,d0
		move.w	d0,(Current_ZoneAndAct).w

PlayLevel:				; CODE XREF: ROM:000034A2j
		move.b	#GameModeID_Level,(Game_Mode).w
		move.b	#3,($FFFFFE12).w
		moveq	#0,d0
		move.w	d0,($FFFFFE20).w
		move.l	d0,($FFFFFE22).w
		move.l	d0,($FFFFFE26).w
		move.b	d0,($FFFFFE16).w
		move.b	d0,($FFFFFE57).w
		move.l	d0,($FFFFFE58).w
		move.l	d0,($FFFFFE5C).w
		move.b	d0,($FFFFFE18).w
		move.l	#$1388,($FFFFFFC0).w
		move.b	#$E0,d0
		bsr.w	PlaySound_Special
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
LvlSelCode_J:	dc.b   1,  2,  2,  2,  2,  1,  0,$FF; 0	; DATA XREF: ROM:Title_RegionJo
LvlSelCode_US:	dc.b   1,  2,  2,  2,  2,  1,  0,$FF; 0	; DATA XREF: ROM:00003418o
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Demo:
		move.w	#$1E,(Demo_Time_left).w

loc_3630:
		move.b	#VintID_Title,(Vint_routine).w
		bsr.w	WaitForVint
		bsr.w	RunPLC_RAM
		move.w	($FFFFB008).w,d0
		addq.w	#2,d0
		move.w	d0,($FFFFB008).w
		cmpi.w	#$1C00,d0
		bcs.s	RunDemo
		move.b	#GameModeID_SegaScreen,(Game_Mode).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

RunDemo:				; CODE XREF: ROM:0000364Cj
		andi.b	#$80,($FFFFF605).w
		bne.w	Title_CheckLvlSel
		tst.w	(Demo_Time_left).w
		bne.w	loc_3630
		move.b	#$E0,d0
		bsr.w	PlaySound_Special
		move.w	($FFFFFFF2).w,d0
		andi.w	#7,d0
		add.w	d0,d0
		move.w	Demo_Levels(pc,d0.w),d0
		move.w	d0,(Current_ZoneAndAct).w
		addq.w	#1,($FFFFFFF2).w
		cmpi.w	#4,($FFFFFFF2).w
		bcs.s	loc_3694
		move.w	#0,($FFFFFFF2).w

loc_3694:				; CODE XREF: ROM:0000368Cj
		move.w	#1,($FFFFFFF0).w
		move.b	#GameModeID_Demo,(Game_Mode).w
		cmpi.w	#$300,d0
		bne.s	loc_36AC
		move.w	#1,(Two_player_mode).w

loc_36AC:				; CODE XREF: ROM:000036A4j
		cmpi.w	#$600,d0
		bne.s	loc_36C0
		move.b	#GameModeID_SpecialStage,(Game_Mode).w
		clr.w	(Current_ZoneAndAct).w
		clr.b	($FFFFFE16).w

loc_36C0:				; CODE XREF: ROM:000036B0j
		move.b	#3,($FFFFFE12).w
		moveq	#0,d0
		move.w	d0,($FFFFFE20).w
		move.l	d0,($FFFFFE22).w
		move.l	d0,($FFFFFE26).w
		move.l	#$1388,($FFFFFFC0).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Demo_Levels:	dc.w  $200, $300	; 0
		dc.w  $400, $500	; 2
		dc.w  $500, $500	; 4
		dc.w  $500, $500	; 6
		dc.w  $400, $400	; 8
		dc.w  $400, $400	; 10

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


LevelSelect_Controls:			; CODE XREF: ROM:000034ECp
		move.b	($FFFFF605).w,d1
		andi.b	#3,d1
		bne.s	loc_3706
		subq.w	#1,($FFFFFF80).w
		bpl.s	loc_3740

loc_3706:				; CODE XREF: LevelSelect_Controls+8j
		move.w	#$B,($FFFFFF80).w
		move.b	($FFFFF604).w,d1
		andi.b	#3,d1
		beq.s	loc_3740
		move.w	($FFFFFF82).w,d0
		btst	#0,d1
		beq.s	loc_3726
		subq.w	#1,d0
		bcc.s	loc_3726
		moveq	#$14,d0

loc_3726:				; CODE XREF: LevelSelect_Controls+28j
					; LevelSelect_Controls+2Cj
		btst	#1,d1
		beq.s	loc_3736
		addq.w	#1,d0
		cmpi.w	#$15,d0
		bcs.s	loc_3736
		moveq	#0,d0

loc_3736:				; CODE XREF: LevelSelect_Controls+34j
					; LevelSelect_Controls+3Cj
		move.w	d0,($FFFFFF82).w
		bsr.w	LevelSelect_TextLoad
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_3740:				; CODE XREF: LevelSelect_Controls+Ej
					; LevelSelect_Controls+1Ej
		cmpi.w	#$14,($FFFFFF82).w
		bne.s	locret_377A
		move.b	($FFFFF605).w,d1
		andi.b	#$C,d1
		beq.s	locret_377A
		move.w	($FFFFFF84).w,d0
		btst	#2,d1
		beq.s	loc_3762
		subq.w	#1,d0
		bcc.s	loc_3762
		moveq	#$4F,d0	; 'O'

loc_3762:				; CODE XREF: LevelSelect_Controls+64j
					; LevelSelect_Controls+68j
		btst	#3,d1
		beq.s	loc_3772
		addq.w	#1,d0
		cmpi.w	#$50,d0	; 'P'
		bcs.s	loc_3772
		moveq	#0,d0

loc_3772:				; CODE XREF: LevelSelect_Controls+70j
					; LevelSelect_Controls+78j
		move.w	d0,($FFFFFF84).w
		bsr.w	LevelSelect_TextLoad

locret_377A:				; CODE XREF: LevelSelect_Controls+50j
					; LevelSelect_Controls+5Aj
		rts
; End of function LevelSelect_Controls


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


LevelSelect_TextLoad:			; CODE XREF: ROM:000034DEp
					; LevelSelect_Controls+44p ...
		lea	(LevelSelect_Text).l,a1
		lea	(VDP_data_port).l,a6
		move.l	#$62100003,d4
		move.w	#$8680,d3
		moveq	#$14,d1

loc_3794:				; CODE XREF: LevelSelect_TextLoad+26j
		move.l	d4,4(a6)
		bsr.w	sub_381C
		addi.l	#$800000,d4
		dbf	d1,loc_3794
		moveq	#0,d0
		move.w	($FFFFFF82).w,d0
		move.w	d0,d1
		move.l	#$62100003,d4
		lsl.w	#7,d0
		swap	d0
		add.l	d0,d4
		lea	(LevelSelect_Text).l,a1
		lsl.w	#3,d1
		move.w	d1,d0
		add.w	d1,d1
		add.w	d0,d1
		adda.w	d1,a1
		move.w	#$C680,d3
		move.l	d4,4(a6)
		bsr.w	sub_381C
		move.w	#$8680,d3
		cmpi.w	#$14,($FFFFFF82).w
		bne.s	loc_37E6
		move.w	#$C680,d3

loc_37E6:				; CODE XREF: LevelSelect_TextLoad+64j
		move.l	#$6C300003,(VDP_control_port).l
		move.w	($FFFFFF84).w,d0
		addi.w	#$80,d0	; ''
		move.b	d0,d2
		lsr.b	#4,d0
		bsr.w	sub_3808
		move.b	d2,d0
		bsr.w	sub_3808
		rts
; End of function LevelSelect_TextLoad


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_3808:				; CODE XREF: LevelSelect_TextLoad+80p
					; LevelSelect_TextLoad+86p
		andi.w	#$F,d0
		cmpi.b	#$A,d0
		bcs.s	loc_3816
		addi.b	#7,d0

loc_3816:				; CODE XREF: sub_3808+8j
		add.w	d3,d0
		move.w	d0,(a6)
		rts
; End of function sub_3808


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_381C:				; CODE XREF: LevelSelect_TextLoad+1Cp
					; LevelSelect_TextLoad+56p
		moveq	#$17,d2

loc_381E:				; CODE XREF: sub_381C+Cj sub_381C+16j
		moveq	#0,d0
		move.b	(a1)+,d0
		bpl.s	loc_382E
		move.w	#0,(a6)
		dbf	d2,loc_381E
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_382E:				; CODE XREF: sub_381C+6j
		add.w	d3,d0
		move.w	d0,(a6)
		dbf	d2,loc_381E
		rts
; End of function sub_381C

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
LevelSelect_Text:	incbin	"mappings/misc/Level select text.bin"
		even
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

UnknownSub_1:
		lea	($FF0000).l,a1
		move.w	#$2EB,d2

loc_3A3A:				; CODE XREF: ROM:00003A4Cj
		move.w	(a1),d0
		move.w	d0,d1
		andi.w	#$F800,d1
		andi.w	#$7FF,d0
		lsr.w	#1,d0
		or.w	d0,d1
		move.w	d1,(a1)+
		dbf	d2,loc_3A3A
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

UnknownSub_2:
		lea	($FE0000).l,a1
		lea	($FE0080).l,a2
		lea	($FF0000).l,a3
		move.w	#$3F,d1	; '?'

loc_3A68:				; CODE XREF: ROM:00003A70j
		bsr.w	UnknownSub_4
		bsr.w	UnknownSub_4
		dbf	d1,loc_3A68
		lea	($FE0000).l,a1
		lea	($FF0000).l,a2
		move.w	#$3F,d1	; '?'

loc_3A84:				; CODE XREF: ROM:00003A88j
		move.w	#0,(a2)+
		dbf	d1,loc_3A84
		move.w	#$3FBF,d1

loc_3A90:				; CODE XREF: ROM:00003A92j
		move.w	(a1)+,(a2)+
		dbf	d1,loc_3A90
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

UnknownSub_3:
		lea	($FE0000).l,a1
		lea	($FF0000).l,a3
		moveq	#$1F,d0

loc_3AA6:				; CODE XREF: ROM:00003AA8j
		move.l	(a1)+,(a3)+
		dbf	d0,loc_3AA6
		moveq	#0,d7
		lea	($FE0000).l,a1
		move.w	#$FF,d5

loc_3AB8:				; CODE XREF: ROM:00003AD8j
					; ROM:00003AF4j
		lea	($FF0000).l,a3
		move.w	d7,d6

loc_3AC0:				; CODE XREF: ROM:00003AE6j
		movem.l	a1-a3,-(sp)
		move.w	#$3F,d0	; '?'

loc_3AC8:				; CODE XREF: ROM:00003ACCj
		cmpm.w	(a1)+,(a3)+
		bne.s	loc_3ADE
		dbf	d0,loc_3AC8
		movem.l	(sp)+,a1-a3
		adda.w	#$80,a1	; ''
		dbf	d5,loc_3AB8
		bra.s	loc_3AF8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_3ADE:				; CODE XREF: ROM:00003ACAj
		movem.l	(sp)+,a1-a3
		adda.w	#$80,a3	; ''
		dbf	d6,loc_3AC0
		moveq	#$1F,d0

loc_3AEC:				; CODE XREF: ROM:00003AEEj
		move.l	(a1)+,(a3)+
		dbf	d0,loc_3AEC
		addq.l	#1,d7
		dbf	d5,loc_3AB8

loc_3AF8:				; CODE XREF: ROM:00003ADCj
					; ROM:loc_3AF8j
		bra.s	loc_3AF8

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


UnknownSub_4:				; CODE XREF: ROM:loc_3A68p
					; ROM:00003A6Cp
		moveq	#7,d0

loc_3AFC:				; CODE XREF: UnknownSub_4+12j
		move.l	(a3)+,(a1)+
		move.l	(a3)+,(a1)+
		move.l	(a3)+,(a1)+
		move.l	(a3)+,(a1)+
		move.l	(a3)+,(a2)+
		move.l	(a3)+,(a2)+
		move.l	(a3)+,(a2)+
		move.l	(a3)+,(a2)+
		dbf	d0,loc_3AFC
		adda.w	#$80,a1	; ''
		adda.w	#$80,a2	; ''
		rts
; End of function UnknownSub_4

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
MusicList:	dc.b MusID_GHZ
		dc.b MusID_LZ
		dc.b MusID_CPZ
		dc.b MusID_EHZ
		dc.b MusID_HPZ
		dc.b MusID_HTZ
		dc.b $8D
		dc.b 0
; ===========================================================================
; ---------------------------------------------------------------------------
; Level
; DEMO AND ZONE LOOP (MLS values $08, $0C; bit 7 set indicates that load routine is running)
; ---------------------------------------------------------------------------

Level:	
		bset	#GameModeFlag_TitleCard,(Game_Mode).w
		tst.w	($FFFFFFF0).w
		bmi.s	loc_3B38
		move.b	#$E0,d0
		bsr.w	PlaySound_Special

loc_3B38:
		bsr.w	ClearPLC
		bsr.w	Pal_FadeToBlack
		tst.w	($FFFFFFF0).w
		bmi.s	loc_3BB6
		move	#$2700,sr
		move.l	#$70000002,(VDP_control_port).l
		lea	(Nem_S1TitleCard).l,a0
		bsr.w	NemDec
		bsr.w	ClearScreen
		lea	(VDP_control_port).l,a5
		move.w	#$8F01,(a5)
		move.l	#$940F93FF,(a5)
		move.w	#$9780,(a5)
		move.l	#$60000082,(a5)
		move.w	#0,(VDP_data_port).l

loc_3B84:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	loc_3B84
		move.w	#$8F02,(a5)
		move	#$2300,sr
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		lsl.w	#4,d0
		lea	(LevelArtPointers).l,a2
		lea	(a2,d0.w),a2
		moveq	#0,d0
		move.b	(a2),d0
		beq.s	loc_3BB0
		bsr.w	LoadPLC

loc_3BB0:
		moveq	#1,d0
		bsr.w	LoadPLC

loc_3BB6:
		lea	($FFFFAC00).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_3BC0:
		move.l	d0,(a1)+
		dbf	d1,loc_3BC0
		lea	($FFFFB000).w,a1
		moveq	#0,d0
		move.w	#$7FF,d1

loc_3BD0:
		move.l	d0,(a1)+
		dbf	d1,loc_3BD0
		lea	($FFFFF628).w,a1
		moveq	#0,d0
		move.w	#$15,d1

loc_3BE0:
		move.l	d0,(a1)+
		dbf	d1,loc_3BE0
		lea	($FFFFF700).w,a1
		moveq	#0,d0
		move.w	#$3F,d1

loc_3BF0:
		move.l	d0,(a1)+
		dbf	d1,loc_3BF0
		lea	($FFFFFE60).w,a1
		moveq	#0,d0
		move.w	#$47,d1

loc_3C00:
		move.l	d0,(a1)+
		dbf	d1,loc_3C00
		cmpi.b	#4,(Current_Zone).w
		bne.s	loc_3C1A
		move.b	#1,(Water_flag).w
		move.w	#0,(Two_player_mode).w

loc_3C1A:
		lea	(VDP_control_port).l,a6
		move.w	#$8B03,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$857C,(a6)
		move.w	#$9001,(a6)
		move.w	#$8004,(a6)
		move.w	#$8720,(a6)
		move.w	#$8ADF,(Hint_counter_reserve).w
		tst.w	(Two_player_mode).w
		beq.s	loc_3C56
		move.w	#$8A6B,(Hint_counter_reserve).w
		move.w	#$8014,(a6)
		move.w	#$8C87,(a6)

loc_3C56:
		move.w	(Hint_counter_reserve).w,(a6)
		move.l	#VDP_Command_Buffer,(VDP_Command_Buffer_Slot).w
		tst.b	(Water_flag).w
		beq.s	LevelInit_NoWater
		move.w	#$8014,(a6)
		moveq	#0,d0
		move.b	(Current_Act).w,d0
		add.w	d0,d0
		lea	(WaterHeight).l,a1
		move.w	(a1,d0.w),d0
		move.w	d0,($FFFFF646).w
		move.w	d0,($FFFFF648).w
		move.w	d0,($FFFFF64A).w
		clr.b	($FFFFF64D).w
		clr.b	(Water_fullscreen_flag).w
		move.b	#1,($FFFFF64C).w

LevelInit_NoWater:
		move.w	#$1E,($FFFFFE14).w
		moveq	#3,d0
		bsr.w	PalLoad2
		tst.b	(Water_flag).w
		beq.s	loc_3CC6
		moveq	#$F,d0
		cmpi.b	#3,(Current_Act).w
		bne.s	loc_3CB6
		moveq	#$10,d0

loc_3CB6:
		bsr.w	PalLoad3_Water
		tst.b	($FFFFFE30).w
		beq.s	loc_3CC6
		move.b	($FFFFFE53).w,(Water_fullscreen_flag).w

loc_3CC6:
		tst.w	($FFFFFFF0).w
		bmi.s	loc_3D2A
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		cmpi.w	#$103,(Current_ZoneAndAct).w
		bne.s	loc_3CDC
		moveq	#5,d0

loc_3CDC:
		cmpi.w	#$502,(Current_ZoneAndAct).w
		bne.s	loc_3CE6
		moveq	#6,d0

loc_3CE6:
		lea	MusicList(pc),a1
		nop
		move.b	(a1,d0.w),d0
		bsr.w	PlaySound
		move.b	#$34,($FFFFB080).w

LevelInit_TitleCard:
		move.b	#VintID_TitleCard,(Vint_routine).w
		bsr.w	WaitForVint
		jsr	(RunObjects).l
		jsr	(BuildSprites).l
		bsr.w	RunPLC_RAM
		move.w	($FFFFB108).w,d0
		cmp.w	($FFFFB130).w,d0
		bne.s	LevelInit_TitleCard
		tst.l	(Plc_Buffer).w
		bne.s	LevelInit_TitleCard
		jsr	(HUD_Base).l

loc_3D2A:
		moveq	#3,d0
		bsr.w	PalLoad1
		bsr.w	LevelSizeLoad
		bsr.w	DeformBGLayer
		bset	#2,($FFFFEE50).w
		bsr.w	MainLevelLoadBlock
		jsr	(LoadAnimatedBlocks).l
		bsr.w	LoadTilesFromStart
		jsr	(ConvertCollisionArray).l
		bsr.w	LoadCollisionIndexes
		bsr.w	WaterEffects
		move.b	#1,($FFFFB000).w
		tst.w	($FFFFFFF0).w
		bmi.s	loc_3D6C
		move.b	#$21,($FFFFB380).w

loc_3D6C:
		tst.w	(Two_player_mode).w
		bne.s	LevelInit_LoadTails
		cmpi.b	#3,(Current_Zone).w
		beq.s	LevelInit_SkipTails ; funny how	they skipped Tails in EHZ for the Nick Arcade show

LevelInit_LoadTails:
		move.b	#2,($FFFFB040).w
		move.w	($FFFFB008).w,($FFFFB048).w
		move.w	($FFFFB00C).w,($FFFFB04C).w
		subi.w	#$20,($FFFFB048).w

LevelInit_SkipTails:
		tst.b	($FFFFFFE2).w
		beq.s	loc_3DA6
		btst	#6,($FFFFF604).w
		beq.s	loc_3DA6
		move.b	#1,(Debug_mode_flag).w

loc_3DA6:
		move.w	#0,($FFFFF602).w
		move.w	#0,($FFFFF604).w
		tst.b	(Water_flag).w
		beq.s	loc_3DD0
		move.b	#4,($FFFFB780).w
		move.w	#$60,($FFFFB788).w
		move.b	#4,($FFFFB7C0).w
		move.w	#$120,($FFFFB7C8).w

loc_3DD0:
		jsr	(ObjectsManager).l
		jsr	(RingsManager).l
		jsr	(RunObjects).l
		jsr	(BuildSprites).l
		bsr.w	j_AniArt_Load
		moveq	#0,d0
		tst.b	($FFFFFE30).w
		bne.s	loc_3E00
		move.w	d0,($FFFFFE20).w
		move.l	d0,($FFFFFE22).w
		move.b	d0,($FFFFFE1B).w

loc_3E00:
		move.b	d0,($FFFFFE1A).w
		move.b	d0,($FFFFFE2C).w
		move.b	d0,($FFFFFE2D).w
		move.b	d0,($FFFFFE2E).w
		move.b	d0,($FFFFFE2F).w
		move.w	d0,(Debug_placement_mode).w
		move.w	d0,($FFFFFE02).w
		move.w	d0,($FFFFFE04).w
		bsr.w	OscillateNumInit
		move.b	#1,($FFFFFE1F).w
		move.b	#1,($FFFFFE1D).w
		move.b	#1,($FFFFFE1E).w
		move.w	#4,(Sonic_Pos_Record_Index).w
		move.w	#0,(Sonic_Pos_Record_Buf).w
		move.w	#0,($FFFFF790).w
		move.w	#0,($FFFFF740).w
		lea	(Demo_Index).l,a1
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		lsl.w	#2,d0
		movea.l	(a1,d0.w),a1
		tst.w	($FFFFFFF0).w
		bpl.s	loc_3E78
		lea	(Demo_S1EndIndex).l,a1 ; garbage, leftover from	Sonic 1's ending sequence demos
		move.w	($FFFFFFF4).w,d0
		subq.w	#1,d0
		lsl.w	#2,d0
		movea.l	(a1,d0.w),a1

loc_3E78:
		move.b	1(a1),($FFFFF792).w
		subq.b	#1,($FFFFF792).w
		lea	(Demo_2P).l,a1
		move.b	1(a1),($FFFFF742).w
		subq.b	#1,($FFFFF742).w
		move.w	#$668,(Demo_Time_left).w
		tst.w	($FFFFFFF0).w
		bpl.s	loc_3EB2
		move.w	#$21C,(Demo_Time_left).w
		cmpi.w	#4,($FFFFFFF4).w
		bne.s	loc_3EB2
		move.w	#$1FE,(Demo_Time_left).w

loc_3EB2:
		tst.b	(Water_flag).w
		beq.s	loc_3EC8
		moveq	#$B,d0
		cmpi.b	#3,(Current_Act).w
		bne.s	loc_3EC4
		moveq	#$D,d0

loc_3EC4:
		bsr.w	PalLoad4_Water

loc_3EC8:
		move.w	#3,d1

loc_3ECC:
		move.b	#VintID_Level,(Vint_routine).w
		bsr.w	WaitForVint
		dbf	d1,loc_3ECC
		move.w	#$202F,($FFFFF626).w
		bsr.w	Pal_FadeFromBlack2
		tst.w	($FFFFFFF0).w
		bmi.s	Level_ClrTitleCard
		addq.b	#2,($FFFFB080+routine).w
		addq.b	#4,($FFFFB0C0+routine).w
		addq.b	#4,($FFFFB100+routine).w
		addq.b	#4,($FFFFB140+routine).w
		bra.s	Level_StartGame
; ===========================================================================

Level_ClrTitleCard:
		moveq	#2,d0
		jsr	(LoadPLC).l
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		addi.w	#$15,d0
		jsr	(LoadPLC).l

Level_StartGame:
		bclr	#GameModeFlag_TitleCard,(Game_Mode).w

; ---------------------------------------------------------------------------
; Main level loop (when all title card and loading sequences are finished)
; ---------------------------------------------------------------------------
Level_MainLoop:
		bsr.w	PauseGame
		move.b	#VintID_Level,(Vint_routine).w
		bsr.w	WaitForVint
		addq.w	#1,($FFFFFE04).w
		bsr.w	MoveSonicInDemo
		bsr.w	WaterEffects
		jsr	(RunObjects).l
		tst.w	($FFFFFE02).w
		bne.w	Level
		tst.w	(Debug_placement_mode).w
		bne.s	loc_3F50
		cmpi.b	#6,($FFFFB000+routine).w
		bcc.s	loc_3F54

loc_3F50:
		bsr.w	DeformBGLayer

loc_3F54:
		bsr.w	ChangeWaterSurfacePos
		jsr	(RingsManager).l
		bsr.w	j_AniArt_Load
		bsr.w	PalCycle_Load
		bsr.w	RunPLC_RAM
		bsr.w	OscillateNumDo
		bsr.w	ChangeRingFrame
		bsr.w	SignpostArtLoad
		jsr	(BuildSprites).l
		jsr	(ObjectsManager).l
		cmpi.b	#GameModeID_Demo,(Game_Mode).w
		beq.s	loc_3F96
		cmpi.b	#GameModeID_Level,(Game_Mode).w
		beq.w	Level_MainLoop
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_3F96:				; CODE XREF: ROM:00003F88j
		tst.w	($FFFFFE02).w
		bne.s	loc_3FB4
		tst.w	(Demo_Time_left).w
		beq.s	loc_3FB4
		cmpi.b	#GameModeID_Demo,(Game_Mode).w
		beq.w	Level_MainLoop
		move.b	#GameModeID_SegaScreen,(Game_Mode).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_3FB4:
		cmpi.b	#GameModeID_Demo,(Game_Mode).w
		bne.s	loc_3FCE
		move.b	#GameModeID_SegaScreen,(Game_Mode).w
		tst.w	($FFFFFFF0).w
		bpl.s	loc_3FCE
		move.b	#GameModeID_S1Credits,(Game_Mode).w

loc_3FCE:
		move.w	#$3C,(Demo_Time_left).w
		move.w	#$3F,($FFFFF626).w
		clr.w	($FFFFF794).w

loc_3FDE:
		move.b	#VintID_Level,(Vint_routine).w
		bsr.w	WaitForVint
		bsr.w	MoveSonicInDemo
		jsr	(RunObjects).l
		jsr	(BuildSprites).l
		jsr	(ObjectsManager).l
		subq.w	#1,($FFFFF794).w
		bpl.s	loc_400E
		move.w	#2,($FFFFF794).w
		bsr.w	Pal_FadeOut

loc_400E:
		tst.w	(Demo_Time_left).w
		bne.s	loc_3FDE
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ChangeWaterSurfacePos:			; CODE XREF: ROM:loc_3F54p
		tst.b	(Water_flag).w
		beq.s	locret_403E
		move.w	($FFFFEE00).w,d1
		btst	#0,($FFFFFE05).w
		beq.s	loc_402C
		addi.w	#$20,d1	; ' '

loc_402C:				; CODE XREF: ChangeWaterSurfacePos+10j
		move.w	d1,d0
		addi.w	#$60,d0	; '`'
		move.w	d0,($FFFFB788).w
		addi.w	#$120,d1
		move.w	d1,($FFFFB7C8).w

locret_403E:				; CODE XREF: ChangeWaterSurfacePos+4j
		rts
; End of function ChangeWaterSurfacePos


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


WaterEffects:				; CODE XREF: ROM:00003D56p
					; ROM:00003F30p
		tst.b	(Water_flag).w
		beq.s	locret_4094
		tst.b	($FFFFEEDC).w
		bne.s	loc_4058
		cmpi.b	#6,($FFFFB000+routine).w
		bcc.s	loc_4058
		bsr.w	DynamicWaterHeight

loc_4058:				; CODE XREF: WaterEffects+Aj
					; WaterEffects+12j
		clr.b	(Water_fullscreen_flag).w
		moveq	#0,d0
		move.b	($FFFFFE60).w,d0
		lsr.w	#1,d0
		add.w	($FFFFF648).w,d0
		move.w	d0,($FFFFF646).w
		move.w	($FFFFF646).w,d0
		sub.w	($FFFFEE04).w,d0
		bcc.s	loc_4086
		tst.w	d0
		bpl.s	loc_4086
		move.b	#$DF,(Hint_counter_reserve+1).w
		move.b	#1,(Water_fullscreen_flag).w

loc_4086:				; CODE XREF: WaterEffects+34j
					; WaterEffects+38j
		cmpi.w	#$DF,d0	; 'ß'
		bcs.s	loc_4090
		move.w	#$DF,d0	; 'ß'

loc_4090:				; CODE XREF: WaterEffects+4Aj
		move.b	d0,(Hint_counter_reserve+1).w

locret_4094:				; CODE XREF: WaterEffects+4j
		rts
; End of function WaterEffects

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
WaterHeight:	dc.w  $600, $328, $900,	$228; 0	; DATA XREF: ROM:00003C74o

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


DynamicWaterHeight:			; CODE XREF: WaterEffects+14p
		moveq	#0,d0
		move.b	(Current_Act).w,d0
		add.w	d0,d0
		move.w	DynWater_Index(pc,d0.w),d0
		jsr	DynWater_Index(pc,d0.w)
		moveq	#0,d1
		move.b	($FFFFF64C).w,d1
		move.w	($FFFFF64A).w,d0
		sub.w	($FFFFF648).w,d0
		beq.s	locret_40C6
		bcc.s	loc_40C2
		neg.w	d1

loc_40C2:				; CODE XREF: DynamicWaterHeight+20j
		add.w	d1,($FFFFF648).w

locret_40C6:				; CODE XREF: DynamicWaterHeight+1Ej
		rts
; End of function DynamicWaterHeight

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynWater_Index:	dc.w DynWater_HPZ1-DynWater_Index; 0 ; DATA XREF: ROM:DynWater_Indexo
					; ROM:DynWater_Index+2o ...
		dc.w DynWater_HPZ2-DynWater_Index; 1 ; leftover	from Sonic 1's LZ2
		dc.w DynWater_HPZ3-DynWater_Index; 2
		dc.w DynWater_HPZ4-DynWater_Index; 3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynWater_HPZ1:				; DATA XREF: ROM:DynWater_Indexo
		btst	#0,($FFFFF606).w
		beq.s	loc_40E2
		tst.w	($FFFFF64A).w
		beq.s	loc_40E2
		subq.w	#1,($FFFFF64A).w

loc_40E2:				; CODE XREF: ROM:000040D6j
					; ROM:000040DCj
		btst	#1,($FFFFF606).w
		beq.s	locret_40F6
		cmpi.w	#$700,($FFFFF64A).w
		beq.s	locret_40F6
		addq.w	#1,($FFFFF64A).w

locret_40F6:				; CODE XREF: ROM:000040E8j
					; ROM:000040F0j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1DynWater_LZ1:				; leftover from	Sonic 1
		move.w	($FFFFEE00).w,d0
		move.b	($FFFFF64D).w,d2
		bne.s	loc_4164
		move.w	#$B8,d1	; '¸'
		cmpi.w	#$600,d0
		bcs.s	loc_4148
		move.w	#$108,d1
		cmpi.w	#$200,($FFFFB00C).w
		bcs.s	loc_414E
		cmpi.w	#$C00,d0
		bcs.s	loc_4148
		move.w	#$318,d1
		cmpi.w	#$1080,d0
		bcs.s	loc_4148
		move.b	#$80,($FFFFF7E5).w
		move.w	#$5C8,d1
		cmpi.w	#$1380,d0
		bcs.s	loc_4148
		move.w	#$3A8,d1
		cmp.w	($FFFFF648).w,d1
		bne.s	loc_4148
		move.b	#1,($FFFFF64D).w

loc_4148:				; CODE XREF: ROM:0000410Aj
					; ROM:0000411Cj ...
		move.w	d1,($FFFFF64A).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_414E:				; CODE XREF: ROM:00004116j
		cmpi.w	#$C80,d0
		bcs.s	loc_4148
		move.w	#$E8,d1	; 'è'
		cmpi.w	#$1500,d0
		bcs.s	loc_4148
		move.w	#$108,d1
		bra.s	loc_4148
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4164:				; CODE XREF: ROM:00004100j
		subq.b	#1,d2
		bne.s	locret_4188
		cmpi.w	#$2E0,($FFFFB00C).w
		bcc.s	locret_4188
		move.w	#$3A8,d1
		cmpi.w	#$1300,d0
		bcs.s	loc_4184
		move.w	#$108,d1
		move.b	#2,($FFFFF64D).w

loc_4184:				; CODE XREF: ROM:00004178j
		move.w	d1,($FFFFF64A).w

locret_4188:				; CODE XREF: ROM:00004166j
					; ROM:0000416Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynWater_HPZ2:				; DATA XREF: ROM:DynWater_Indexo
		move.w	($FFFFEE00).w,d0 ; leftover from Sonic 1's LZ2
		move.w	#$328,d1
		cmpi.w	#$500,d0
		bcs.s	loc_41A6
		move.w	#$3C8,d1
		cmpi.w	#$B00,d0
		bcs.s	loc_41A6
		move.w	#$428,d1

loc_41A6:				; CODE XREF: ROM:00004196j
					; ROM:000041A0j
		move.w	d1,($FFFFF64A).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynWater_HPZ3:				; DATA XREF: ROM:DynWater_Indexo
		move.w	($FFFFEE00).w,d0 ; in fact, this is a leftover from Sonic 1's LZ3
		move.b	($FFFFF64D).w,d2
		bne.s	loc_41F2
		move.w	#$900,d1
		cmpi.w	#$600,d0
		bcs.s	loc_41E8
		cmpi.w	#$3C0,($FFFFB00C).w
		bcs.s	loc_41E8
		cmpi.w	#$600,($FFFFB00C).w
		bcc.s	loc_41E8
		move.w	#$4C8,d1
		move.b	#$4B,($FFFF8206).w ; 'K'
		move.b	#1,($FFFFF64D).w
		move.w	#$B7,d0	; '·'
		bsr.w	PlaySound_Special

loc_41E8:				; CODE XREF: ROM:000041BEj
					; ROM:000041C6j ...
		move.w	d1,($FFFFF64A).w
		move.w	d1,($FFFFF648).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_41F2:				; CODE XREF: ROM:000041B4j
		subq.b	#1,d2
		bne.s	loc_423C
		move.w	#$4C8,d1
		cmpi.w	#$770,d0
		bcs.s	loc_4236
		move.w	#$308,d1
		cmpi.w	#$1400,d0
		bcs.s	loc_4236
		cmpi.w	#$508,($FFFFF64A).w
		beq.s	loc_4222
		cmpi.w	#$600,($FFFFB00C).w
		bcc.s	loc_4222
		cmpi.w	#$280,($FFFFB00C).w
		bcc.s	loc_4236

loc_4222:				; CODE XREF: ROM:00004210j
					; ROM:00004218j
		move.w	#$508,d1
		move.w	d1,($FFFFF648).w
		cmpi.w	#$1770,d0
		bcs.s	loc_4236
		move.b	#2,($FFFFF64D).w

loc_4236:				; CODE XREF: ROM:000041FEj
					; ROM:00004208j ...
		move.w	d1,($FFFFF64A).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_423C:				; CODE XREF: ROM:000041F4j
		subq.b	#1,d2
		bne.s	loc_4266
		move.w	#$508,d1
		cmpi.w	#$1860,d0
		bcs.s	loc_4260
		move.w	#$188,d1
		cmpi.w	#$1AF0,d0
		bcc.s	loc_425A
		cmp.w	($FFFFF648).w,d1
		bne.s	loc_4260

loc_425A:				; CODE XREF: ROM:00004252j
		move.b	#3,($FFFFF64D).w

loc_4260:				; CODE XREF: ROM:00004248j
					; ROM:00004258j
		move.w	d1,($FFFFF64A).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4266:				; CODE XREF: ROM:0000423Ej
		subq.b	#1,d2
		bne.s	loc_42A2
		move.w	#$188,d1
		cmpi.w	#$1AF0,d0
		bcs.s	loc_4298
		move.w	#$900,d1
		cmpi.w	#$1BC0,d0
		bcs.s	loc_4298
		move.b	#4,($FFFFF64D).w
		move.w	#$608,($FFFFF64A).w
		move.w	#$7C0,($FFFFF648).w
		move.b	#1,($FFFFF7E8).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4298:				; CODE XREF: ROM:00004272j
					; ROM:0000427Cj
		move.w	d1,($FFFFF64A).w
		move.w	d1,($FFFFF648).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_42A2:				; CODE XREF: ROM:00004268j
		cmpi.w	#$1E00,d0
		bcs.s	locret_42AE
		move.w	#$128,($FFFFF64A).w

locret_42AE:				; CODE XREF: ROM:000042A6j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynWater_HPZ4:				; DATA XREF: ROM:DynWater_Indexo
		move.w	#$228,d1	; in fact, this	is a leftover from Sonic 1's SBZ3
		cmpi.w	#$F00,($FFFFEE00).w
		bcs.s	loc_42C0
		move.w	#$4C8,d1

loc_42C0:				; CODE XREF: ROM:000042BAj
		move.w	d1,($FFFFF64A).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1_LZWindTunnels:			; leftover from	Sonic 1's LZ
		tst.w	(Debug_placement_mode).w
		bne.w	locret_43A2
		lea	(S1LZWind_Data).l,a2
		moveq	#0,d0
		move.b	(Current_Act).w,d0
		lsl.w	#3,d0
		adda.w	d0,a2
		moveq	#0,d1
		tst.b	(Current_Act).w
		bne.s	loc_42EA
		moveq	#1,d1
		subq.w	#8,a2

loc_42EA:				; CODE XREF: ROM:000042E4j
		lea	($FFFFB000).w,a1

loc_42EE:				; CODE XREF: ROM:0000438Ej
		move.w	8(a1),d0
		cmp.w	(a2),d0
		bcs.w	loc_438C
		cmp.w	4(a2),d0
		bcc.w	loc_438C
		move.w	$C(a1),d2
		cmp.w	2(a2),d2
		bcs.w	loc_438C
		cmp.w	6(a2),d2
		bcc.s	loc_438C
		move.b	($FFFFFE0F).w,d0
		andi.b	#$3F,d0	; '?'
		bne.s	loc_4326
		move.w	#$D0,d0	; 'Ğ'
		jsr	(PlaySound_Special).l

loc_4326:				; CODE XREF: ROM:0000431Aj
		tst.b	($FFFFF7C9).w
		bne.w	locret_43A2
		cmpi.b	#4,routine(a1)
		bcc.s	loc_439E
		move.b	#1,($FFFFF7C7).w
		subi.w	#$80,d0	; ''
		cmp.w	(a2),d0
		bcc.s	loc_4354
		moveq	#2,d0
		cmpi.b	#1,(Current_Act).w
		bne.s	loc_4350
		neg.w	d0

loc_4350:				; CODE XREF: ROM:0000434Cj
		add.w	d0,$C(a1)

loc_4354:				; CODE XREF: ROM:00004342j
		addi.w	#4,8(a1)
		move.w	#$400,$10(a1)
		move.w	#0,$12(a1)
		move.b	#$F,$1C(a1)
		bset	#1,$22(a1)
		btst	#0,($FFFFF604).w
		beq.s	loc_437E
		subq.w	#1,$C(a1)

loc_437E:				; CODE XREF: ROM:00004378j
		btst	#1,($FFFFF604).w
		beq.s	locret_438A
		addq.w	#1,$C(a1)

locret_438A:				; CODE XREF: ROM:00004384j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_438C:				; CODE XREF: ROM:000042F4j
					; ROM:000042FCj ...
		addq.w	#8,a2
		dbf	d1,loc_42EE
		tst.b	($FFFFF7C7).w
		beq.s	locret_43A2
		move.b	#0,$1C(a1)

loc_439E:				; CODE XREF: ROM:00004334j
		clr.b	($FFFFF7C7).w

locret_43A2:				; CODE XREF: ROM:000042CAj
					; ROM:0000432Aj ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		dc.w  $A80, $300, $C10,	$380; 0
S1LZWind_Data:	dc.w  $F80, $100,$1410,	$180, $460, $400, $710,	$480, $A20, $600,$1610,	$6E0, $C80, $600,$13D0,	$680; 0
					; DATA XREF: ROM:000042CEo
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1_LZWaterSlides:
		lea	($FFFFB000).w,a1
		btst	#1,$22(a1)
		bne.s	loc_4400
		move.w	$C(a1),d0
		andi.w	#$700,d0
		move.b	8(a1),d1

loc_43E4:
		andi.w	#$7F,d1	; ''
		add.w	d1,d0
		lea	($FFFF8000).w,a2
		move.b	(a2,d0.w),d0
		lea	byte_4465(pc),a2
		moveq	#6,d1

loc_43F8:				; CODE XREF: ROM:000043FAj
		cmp.b	-(a2),d0
		dbeq	d1,loc_43F8
		beq.s	loc_4412

loc_4400:				; CODE XREF: ROM:000043D6j
		tst.b	($FFFFF7CA).w
		beq.s	locret_4410
		move.w	#5,$2E(a1)
		clr.b	($FFFFF7CA).w

locret_4410:				; CODE XREF: ROM:00004404j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4412:				; CODE XREF: ROM:000043FEj
		cmpi.w	#3,d1
		bcc.s	loc_441A
		nop

loc_441A:				; CODE XREF: ROM:00004416j
		bclr	#0,$22(a1)
		move.b	byte_4456(pc,d1.w),d0
		move.b	d0,$14(a1)
		bpl.s	loc_4430
		bset	#0,$22(a1)

loc_4430:				; CODE XREF: ROM:00004428j
		clr.b	$15(a1)
		move.b	#$1B,$1C(a1)
		move.b	#1,($FFFFF7CA).w
		move.b	($FFFFFE0F).w,d0
		andi.b	#$1F,d0
		bne.s	locret_4454
		move.w	#$D0,d0	; 'Ğ'
		jsr	(PlaySound_Special).l

locret_4454:				; CODE XREF: ROM:00004448j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_4456:	dc.b  $A,$F5, $A,$F6,$F5,$F4, $B,  0,  2,  7,  3,$4C,$4B,  8,  4; 0
byte_4465:	dc.b 0			; DATA XREF: ROM:000043F2t

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


MoveSonicInDemo:			; CODE XREF: ROM:00003F2Cp
					; ROM:00003FE8p ...
		tst.w	($FFFFFFF0).w
		bne.s	MoveDemo_On
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

MoveSonic_DemoRecord:			; unused subroutine for	recording demos
		lea	($FE8000).l,a1

loc_4474:
		move.w	($FFFFF790).w,d0
		adda.w	d0,a1
		move.b	($FFFFF604).w,d0
		cmp.b	(a1),d0
		bne.s	loc_4490
		addq.b	#1,1(a1)
		cmpi.b	#$FF,1(a1)
		beq.s	loc_4490
		bra.s	loc_44A4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4490:				; CODE XREF: MoveSonicInDemo+1Aj
					; MoveSonicInDemo+26j
		move.b	d0,2(a1)
		move.b	#0,3(a1)
		addq.w	#2,($FFFFF790).w
		andi.w	#$3FF,($FFFFF790).w

loc_44A4:				; CODE XREF: MoveSonicInDemo+28j
		cmpi.b	#3,(Current_Zone).w
		bne.s	locret_44E2
		lea	($FEC000).l,a1
		move.w	($FFFFF740).w,d0
		adda.w	d0,a1
		move.b	($FFFFF606).w,d0
		cmp.b	(a1),d0
		bne.s	loc_44CE
		addq.b	#1,1(a1)
		cmpi.b	#$FF,1(a1)
		beq.s	loc_44CE
		bra.s	locret_44E2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_44CE:				; CODE XREF: MoveSonicInDemo+58j
					; MoveSonicInDemo+64j
		move.b	d0,2(a1)
		move.b	#0,3(a1)
		addq.w	#2,($FFFFF740).w
		andi.w	#$3FF,($FFFFF740).w

locret_44E2:				; CODE XREF: MoveSonicInDemo+44j
					; MoveSonicInDemo+66j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

MoveDemo_On:				; CODE XREF: MoveSonicInDemo+4j
		tst.b	($FFFFF604).w
		bpl.s	loc_44F6
		tst.w	($FFFFFFF0).w
		bmi.s	loc_44F6
		move.b	#GameModeID_TitleScreen,(Game_Mode).w

loc_44F6:
		lea	(Demo_Index).l,a1
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		cmpi.b	#GameModeID_SpecialStage,(Game_Mode).w
		bne.s	loc_450C
		moveq	#6,d0

loc_450C:				; CODE XREF: MoveSonicInDemo+A2j
		lsl.w	#2,d0
		movea.l	(a1,d0.w),a1
		move.w	($FFFFF790).w,d0
		adda.w	d0,a1
		move.b	(a1),d0
		lea	($FFFFF604).w,a0
		move.b	d0,d1
		moveq	#0,d2
		eor.b	d2,d0
		move.b	d1,(a0)+
		and.b	d1,d0
		move.b	d0,(a0)+
		subq.b	#1,($FFFFF792).w
		bcc.s	loc_453A
		move.b	3(a1),($FFFFF792).w
		addq.w	#2,($FFFFF790).w

loc_453A:				; CODE XREF: MoveSonicInDemo+C8j
		cmpi.b	#3,(Current_Zone).w
		bne.s	loc_4572
		lea	(Demo_2P).l,a1
		move.w	($FFFFF740).w,d0
		adda.w	d0,a1
		move.b	(a1),d0
		lea	($FFFFF606).w,a0
		move.b	d0,d1
		moveq	#0,d2
		eor.b	d2,d0
		move.b	d1,(a0)+
		and.b	d1,d0
		move.b	d0,(a0)+
		subq.b	#1,($FFFFF742).w
		bcc.s	locret_4570
		move.b	3(a1),($FFFFF742).w
		addq.w	#2,($FFFFF740).w

locret_4570:				; CODE XREF: MoveSonicInDemo+FEj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4572:				; CODE XREF: MoveSonicInDemo+DAj
		move.w	#0,($FFFFF606).w
		rts
; End of function MoveSonicInDemo

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Demo_Index:	dc.l Demo_S1GHZ		; leftover demo	from Sonic 1 GHZ
		dc.l Demo_S1GHZ		; leftover demo	from Sonic 1 GHZ
		dc.l Demo_CPZ
		dc.l Demo_EHZ
		dc.l Demo_HPZ
		dc.l Demo_HTZ
		dc.l Demo_S1SS		; leftover demo	from Sonic 1 Special Stage
		dc.l Demo_S1SS		; leftover demo	from Sonic 1 Special Stage
		dc.l $FE8000
		dc.l $FE8000
		dc.l $FE8000
		dc.l $FE8000
		dc.l $FE8000
		dc.l $FE8000
		dc.l $FE8000
		dc.l $FE8000
		dc.l $FE8000
Demo_S1EndIndex:dc.l $8B0837		; garbage, leftover from Sonic 1's ending sequence demos
		dc.l $42085C
		dc.l $6A085F
		dc.l $2F082C
		dc.l $210803
		dc.l $28300808
		dc.l $2E0815
		dc.l $F0846
		dc.l $1A08FF
		dc.l $8CA0000
		dc.l 0
		dc.l 0

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; ColIndexLoad:
LoadCollisionIndexes:
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		lsl.w	#2,d0
		move.l	#$FFFFD000,($FFFFF796).w
		movea.l	ColP_Index(pc,d0.w),a1
		lea	($FFFFD000).w,a2
		bsr.s	Col_Load
		movea.l	ColS_Index(pc,d0.w),a1
		lea	($FFFFD600).w,a2
; End of function LoadCollisionIndexes


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Col_Load:
		move.w	#$2FF,d1
		moveq	#0,d2

loc_4616:
		move.b	(a1)+,d2
		move.w	d2,(a2)+
		dbf	d1,loc_4616
		rts
; End of function Col_Load

; ===========================================================================
; ---------------------------------------------------------------------------
; Pointers to primary collision indexes

; Contains an array of pointers to the primary collision index data for each
; level. 1 pointer for each level, pointing the primary collision index.
; ---------------------------------------------------------------------------
ColP_Index:	dc.l ColP_GHZ		; 0
		dc.l ColP_CPZ		; 1
		dc.l ColP_CPZ		; 2
		dc.l ColP_EHZ		; 3
		dc.l ColP_HPZ		; 4
		dc.l ColP_EHZ		; 5

; ---------------------------------------------------------------------------
; Pointers to secondary collision indexes

; Contains an array of pointers to the secondary collision index data for
; each level. 1 pointer for each level, pointing the secondary collision
; index.
; ---------------------------------------------------------------------------
ColS_Index:	dc.l ColS_GHZ		; 0
		dc.l ColS_CPZ		; 1
		dc.l ColS_CPZ		; 2
		dc.l ColS_EHZ		; 3
		dc.l ColS_HPZ		; 4
		dc.l ColS_EHZ		; 5

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


OscillateNumInit:			; CODE XREF: ROM:00003E20p
		lea	($FFFFFE5E).w,a1
		lea	(Osc_Data).l,a2
		moveq	#$20,d1	; ' '

loc_465C:				; CODE XREF: OscillateNumInit+Ej
		move.w	(a2)+,(a1)+
		dbf	d1,loc_465C
		rts
; End of function OscillateNumInit

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Osc_Data:	dc.w   $7C,  $80	; 0 ; DATA XREF: OscillateNumInit+4o
		dc.w	 0,  $80	; 2
		dc.w	 0,  $80	; 4
		dc.w	 0,  $80	; 6
		dc.w	 0,  $80	; 8
		dc.w	 0,  $80	; 10
		dc.w	 0,  $80	; 12
		dc.w	 0,  $80	; 14
		dc.w	 0,  $80	; 16
		dc.w	 0,$50F0	; 18
		dc.w  $11E,$2080	; 20
		dc.w   $B4,$3080	; 22
		dc.w  $10E,$5080	; 24
		dc.w  $1C2,$7080	; 26
		dc.w  $276,  $80	; 28
		dc.w	 0,  $80	; 30
		dc.w 0

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


OscillateNumDo:				; CODE XREF: ROM:00003F6Ap
		cmpi.b	#6,($FFFFB000+routine).w
		bcc.s	locret_46FC
		lea	($FFFFFE5E).w,a1
		lea	(OscData2).l,a2
		move.w	(a1)+,d3
		moveq	#$F,d1

loc_46BC:				; CODE XREF: OscillateNumDo+4Ej
		move.w	(a2)+,d2
		move.w	(a2)+,d4
		btst	d1,d3
		bne.s	loc_46DC
		move.w	2(a1),d0
		add.w	d2,d0
		move.w	d0,2(a1)
		add.w	d0,0(a1)
		cmp.b	0(a1),d4
		bhi.s	loc_46F2
		bset	d1,d3
		bra.s	loc_46F2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_46DC:				; CODE XREF: OscillateNumDo+1Cj
		move.w	2(a1),d0
		sub.w	d2,d0
		move.w	d0,2(a1)
		add.w	d0,0(a1)
		cmp.b	0(a1),d4
		bls.s	loc_46F2
		bclr	d1,d3

loc_46F2:				; CODE XREF: OscillateNumDo+30j
					; OscillateNumDo+34j ...
		addq.w	#4,a1
		dbf	d1,loc_46BC
		move.w	d3,($FFFFFE5E).w

locret_46FC:				; CODE XREF: OscillateNumDo+6j
		rts
; End of function OscillateNumDo

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
OscData2:	dc.w	 2,  $10	; 0 ; DATA XREF: OscillateNumDo+Co
		dc.w	 2,  $18	; 2
		dc.w	 2,  $20	; 4
		dc.w	 2,  $30	; 6
		dc.w	 4,  $20	; 8
		dc.w	 8,    8	; 10
		dc.w	 8,  $40	; 12
		dc.w	 4,  $40	; 14
		dc.w	 2,  $50	; 16
		dc.w	 2,  $50	; 18
		dc.w	 2,  $20	; 20
		dc.w	 3,  $30	; 22
		dc.w	 5,  $50	; 24
		dc.w	 7,  $70	; 26
		dc.w	 2,  $10	; 28
		dc.w	 2,  $10	; 30

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ChangeRingFrame:			; CODE XREF: ROM:00003F6Ep
		subq.b	#1,($FFFFFEC0).w
		bpl.s	loc_4754
		move.b	#$B,($FFFFFEC0).w
		subq.b	#1,($FFFFFEC1).w
		andi.b	#7,($FFFFFEC1).w

loc_4754:				; CODE XREF: ChangeRingFrame+4j
		subq.b	#1,($FFFFFEC2).w
		bpl.s	loc_476A
		move.b	#7,($FFFFFEC2).w
		addq.b	#1,($FFFFFEC3).w
		andi.b	#3,($FFFFFEC3).w

loc_476A:				; CODE XREF: ChangeRingFrame+1Aj
		subq.b	#1,($FFFFFEC4).w
		bpl.s	loc_4788
		move.b	#7,($FFFFFEC4).w
		addq.b	#1,($FFFFFEC5).w
		cmpi.b	#6,($FFFFFEC5).w
		bcs.s	loc_4788
		move.b	#0,($FFFFFEC5).w

loc_4788:				; CODE XREF: ChangeRingFrame+30j
					; ChangeRingFrame+42j
		tst.b	($FFFFFEC6).w
		beq.s	locret_47AA
		moveq	#0,d0
		move.b	($FFFFFEC6).w,d0
		add.w	($FFFFFEC8).w,d0
		move.w	d0,($FFFFFEC8).w
		rol.w	#7,d0
		andi.w	#3,d0
		move.b	d0,($FFFFFEC7).w
		subq.b	#1,($FFFFFEC6).w

locret_47AA:				; CODE XREF: ChangeRingFrame+4Ej
		rts
; End of function ChangeRingFrame


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


SignpostArtLoad:
		tst.w	(Debug_placement_mode).w
		bne.w	locret_47E2
		cmpi.b	#1,(Current_Act).w
		beq.s	locret_47E2
		move.w	($FFFFEE00).w,d0
		move.w	($FFFFEECA).w,d1
		subi.w	#$100,d1
		cmp.w	d1,d0
		blt.s	locret_47E2
		tst.b	($FFFFFE1E).w
		beq.s	locret_47E2
		cmp.w	($FFFFEEC8).w,d1
		beq.s	locret_47E2
		move.w	d1,($FFFFEEC8).w
		moveq	#$12,d0
		bra.w	LoadPLC2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_47E2:
		rts
; End of function SignpostArtLoad

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Demo_EHZ:	dc.b   0,$44,  8,  0,$28,  5,  8,$59,$28,  4,  8,$35,$28,  6,  8,$42; 0
					; DATA XREF: ROM:00004586o
		dc.b $28,  4,  8,$19,  0, $F,  8, $A,$28,  9,  8,$4A,$28,  9,  8,$10; 16
		dc.b   0,  5,  4,$1B,  2,  0,  8,$4B,$28,$2D,  8,$55,$28,  9,  8,$26; 32
		dc.b $28,$1C,  8,$19,$28,  8,  8,$FF,  8,$96,$28,$13,  8,$1D,$28,$19; 48
		dc.b   8,$2A,$28,  7,  9,  0,  1,  0,  5,$20,  4,  2,  5,  1,  0,  0; 64
		dc.b   8,$3A,  0,$25,  4, $A,$24,  9,  4,$1C,  0,  3,  8,$3A,$28,  6; 80
		dc.b   8, $C,  0,$16,  8,  0,$28, $F,  8,$33,$28,  7,  8,  4,  0,$46; 96
		dc.b   8,$6A,  0,$29,$80,  0,$C0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 112
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 128
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 144
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 160
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 176
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 208
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 240
Demo_2P:	dc.b   0,$46,  8,$1E,$28, $A,  8,$5E,$28,$30,  8,$66,  0, $F,  8, $F; 0
					; DATA XREF: ROM:00003E82o
					; MoveSonicInDemo+DCo
		dc.b $28,$2E,  8,  0,  0,$1F,  8,$12,  0,$13,  8, $A,  0,$16,  4, $D; 16
		dc.b   0,  8,  4,$10,  0,$30,  8,$6B,$28,$14,  8,$80, $A,  2,  2,$23; 32
		dc.b   0,  7,  8,$13,$28,$17,  8,  0,  0,  3,  4,  3,  5,  0,  1,  0; 48
		dc.b   9,  1,  8,$3C,$28,  7,  0,$18,  8,$4D,$28,$12,  8,  1,  0,  4; 64
		dc.b   8, $B,  0,  7,  8,$1B,  0,  9,$20,  5,$28,$13,  8,  4,  0,$21; 80
		dc.b   8,$11,  0,$20,  8,$51,  0, $B,  4,$57,  0, $D,  2,$27, $A,  0; 96
		dc.b   0,  2,  9,  1,  8,$2A,$28,$15,  8,  3,$28,$19,  8, $A,  0, $A; 112
		dc.b   8,  2,$28,$1B,  8,$33,  0,$27,  8,$3A,  9,$12,  1,  7,  0,$13; 128
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 144
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 160
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 176
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 208
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 240
Demo_HTZ:	dc.b   0,  5,  1,$1D,  9,  3,$29,  5,  9,$10,  1,  0,  0,$13,  4,  0; 0
					; DATA XREF: ROM:0000458Eo
		dc.b   5, $A,$25,  7,  5,$10,  4,  1,  0, $C,  8,  4,  9, $C,$29, $A; 16
		dc.b   9,$10,  8,  3,  0,$1C,$20,  7,  0, $B,  4,  6,  0,$25,$20,  6; 32
		dc.b   0,$22,  8,  5,  0,$25,  4, $E,  0,$33,  8,  7,  0,$39,  8, $A; 48
		dc.b $28,  8,  8,$16,  0,$24,  8,$74,$28,  2,$29,  7,  9,  3,  0, $F; 64
		dc.b   8, $D,  0,  5,  4, $C,  0,  1,$20,  2,$28,  0,$2A,  8,$28,  2; 80
		dc.b   8,$1E,  0,  4,  4,$13,  0,$12,  8,$18,$28, $B,  8,$11,  0,$2C; 96
		dc.b   8, $C,  0, $D,$20,  4,$28,  3,  8,  5,  0,$22,  4,$12,  0,  4; 112
		dc.b   8,$1A,  0, $D,  4,  6,  0,$37,  8, $C,  0,$19,  8, $D,  0, $C; 128
		dc.b   4,  9,  0,  3,  8,$20,  0,$1A,  4,  6,  0,$22,  8,  9,  0,  9; 144
		dc.b   8,$16,  0,$2F,  8, $E,$28,  4,$20,  2,  0,  8,  4,$19,  0,  5; 160
		dc.b   8,  6,$28,  8,  8,  8,  0,$24,  8,$72, $A,  9,  2, $E, $A,$6B; 176
		dc.b $8A,  0,$40,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 208
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 240
Demo_HPZ:	dc.b   0,$40,  8,$33,$28,  6,  8,$39,$28,  5,  8, $D,  0,$25,  8,$10; 0
					; DATA XREF: ROM:0000458Ao
		dc.b $28,$2A,  8,$1C,  2,  0,$26,  3,$22,  0,$2A,  0,$28,  6,  8,$22; 16
		dc.b   2,  0,  6, $F,  4,  8,  6,  0,  2, $E,  6,$2F,  2,$79,  6,  1; 32
		dc.b   4,$43,$24, $F,  4,$17,  0,  9,  8,$1C,$28,  3,  8,$45,  0,  5; 48
		dc.b   8,$1A,$28,$33,  8,$72,  0, $F,  4,$15,$24,$10,  4, $B,  0,$24; 64
		dc.b   4,  1,$24,  8,  4,  7,  0,  6,  4,  4,  0,$1E,$24, $E,  4,$15; 80
		dc.b   0,$1E,$20,  3,$24, $F,  4,  0,  0,  7,  8,$12,  4,  9,$24, $F; 96
		dc.b   4,  6,  0, $A,  4,$62,$24,$12,$20,  4,  0,$21,$28, $E,  8,$16; 112
		dc.b   0,$19,  8,$29,  0,$63,  4,$15,$24,  9,  4,$39,  0,$31,  8,$25; 128
		dc.b $28,  2,  8,$12,  0,$93,$80,  0,$C0,  0,  0,  0,  0,  0,  0,  0; 144
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 160
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 176
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 208
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 240
Demo_CPZ:	dc.b   0,$1B,  1,$30,  0,$19,  8,$29,$28,$13,  8,  3,  0,$1D,$20,  3; 0
					; DATA XREF: ROM:00004582o
		dc.b $28,$1E,  8,  2,  0,  9,  4,  5,  0,$2E,  8,$1E,$28,  5,$20,  3; 16
		dc.b   0, $B,  4,  1,  5,  7,  4,  0,  0,$2F,$28,  3,$2A,  4, $A,  0; 32
		dc.b   8,  6,  0,$24,  8,  2,$28,  6,  8,  1,  0,$26,  8,$FF,  8,$14; 48
		dc.b $28, $A,  8,  3,  0,$60,  8, $E,$28,  7,  8, $C,  0,  8,  4, $B; 64
		dc.b   0,$23,  8,  5,  0,$93,  8,$19,$28,$11,  8,$78,$28, $F,  8,$FF; 80
		dc.b   8,$83,$28, $D,  8,$82,  0,$1F,$80,  0,$40,  0,  0,  0,  0,  0; 96
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 112
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 128
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 144
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 160
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 176
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 208
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 240
Demo_S1GHZ:	dc.b   0,$4A,  8,$61,$28, $B,  8,$47,$28,  7,  8,$3B,$28,  8,  8,$D1; 0
					; DATA XREF: ROM:Demo_Indexo
					; ROM:0000457Eo
		dc.b $28,$10,  8, $A,  0, $E,$20,$12,$28,  4,  8,$1F,  0, $B,  6,  5; 16 ; leftover demo from Sonic 1 GHZ
		dc.b   4,  5,  0,  4,$20, $B,$28, $E,  8,$20,  0,  5,$20,  2,$28,$12; 32
		dc.b   8, $F,  0, $F,  8, $B,  0,  0,$20, $E,$28,  4,  8, $B,  0,$1A; 48
		dc.b   8, $C,  0,  6,$20,$12,$28,  7,  8,$77,$28,  0,$20, $C,$24,  4; 64
		dc.b $20,  7,$28,  6,  8,  4,  0, $F,  8,$39,  0,$11,  8, $D,$28, $A; 80
		dc.b   8,$50,$28, $F,  8,  5,  0,$14,  8,$FF,  8,$56,  0,$FF,  0,$3F; 96
		dc.b   8,  0,$28, $E,  8,$17,  0,$17,  8,  5,  0,  0,  0,  0,  0,  0; 112
		dc.b   0,  9,  8,$78,  0,  6,  8,  6,  0,  3,$20,  5,$28,$11,  8, $D; 128
		dc.b   0,$2B,  8,  2,$29,  7,  9,  2,  0,  7,  5, $F,  0,  8,  8, $D; 144
		dc.b $28,  7,  8, $B,  0,$28,  8,  0,  9,  2,$29,  2,$28,  4,  8,$12; 160
		dc.b   0,  9,  8,  0,$29,  2,$28,  4,  8,  9,  0, $F,  8, $C,  0, $E; 176
		dc.b   9,  0,$29,  8,  9,  2,  8,$18,  0,  9,$28,  0,$29, $A,  9,$12; 192
		dc.b   8,  0,  0,$18,$29,$10,  9,$10,  8,  3,  0,$2F,  5,  6,  0,  9; 208
		dc.b   8,  0,  9,  1,$29,$12,  9,  0,  8,  5,  0,$24,  8,  0,  9,  0; 224
		dc.b $29,  9,$28,  6,  8, $A,  0,$2A,  8,$1B,  0,$17,  4,  5,  0, $C; 240
		dc.b   8,$20,  0,  4,$20,  3,  0, $E,  9,  4,  1,  0,  0,$1E,  8,  5; 256
		dc.b   0,  1,$20,  6,$29,  1,  5,  7,  0,$13,  8,  5,  0,$15,$20,  1; 272
		dc.b $28,  2,$29,  4,  9,  1,  8,  0,  0,  7,  8, $B,  0,$19,  8, $B; 288
		dc.b $28,  6,  8,  5,  0,$12,  8,$11,  0, $C,$20,  2,$28,  4,  8,  4; 304
		dc.b   0,$15,  8, $C,  0,$14,$20,  4,$28,  0,  8,  2,  0,$18,  8,  3; 320
		dc.b   0,$2C,$20,  2,$28,  7,  8,  4,  0,$24,  6,$48,  4,$47,  0, $A; 336
		dc.b   4,  7,  0,$14,  4,$44,  5,  0,  4,  0,  0,$15,  8,$15, $A,  1; 352
		dc.b   0,  8,  4,  2,  5,$14,  0,  1,  5,  1,$25, $D,  5,$1B,  0,  7; 368
		dc.b   8,$23,  9,  0,  0,  7,  5,$22,$25, $B,  5,$52,  0,  6,  8,$26; 384
		dc.b   9,  1,  1,  0,  0,  0,  1,  0,  5,$17,$25,  8,  5,$1A,  0, $C; 400
		dc.b   8,  6,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 416
		dc.b   0,$11,  8,$37,$28,  4,  8, $A,  0,$12,  8, $B,  0,$1F,  8,$1B; 432
		dc.b   0,  9,  8,$20,  0,$14,  4,$16,$24,  0,$20, $F,  0,$13,  4,$17; 448
		dc.b   6,  4,  2,  0,  0,$24,  8, $D,  0,$46,  8,$77,  0,$60,  8,$17; 464
		dc.b   0,$16,  4,  3,  0,$22,  8,$19,$28,  2,$20,  1,  0,$26,$20,  9; 480
		dc.b   0,$3A,$20,$23,  0,  3,  8,  1,  0,$29,  4,$13,  0,$19,  4,$1B; 496
		dc.b   0,$91,  8,$21,  0,$19,  4,  4,  0,$67,  4,$23,  0, $A,  8,  5; 512
		dc.b   0,$87,  8,$21,  0,$2C,  8,$27,  0, $F,  8,$35,$28,  8,  8,$45; 528
		dc.b $28,  9,  8,$31,  0,$99,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 544
Demo_S1SS:	dc.b   0,$26,  4,  5,  0,$2A,  8,$1B,  0,  6,  4,  9,  0,  6,$20,  1; 0
					; DATA XREF: ROM:00004592o
					; ROM:00004596o
		dc.b $28,  1,$29,  2,  9,  0,  8,  8,  0,  6,  8,  7,  0,$49,  8, $B; 16 ; leftover demo from Sonic 1 Special Stage
		dc.b   0,  2,$20,  3,  0, $D,  8,$1D,  0,$13,  8,  6,  0,$21,  8,$21; 32
		dc.b   0,  6,  8,$36,  0,$1E,  8,$1A,  0,  6,$20,  0,$28,  4,  8,$19; 48
		dc.b   0,  4,  4,$11,  0,$1F,  4, $D,  0, $C,  4,$1E,  5,  1,  4,  0; 64
		dc.b   0,  9,  8, $C,  0,  6,  4,  5,  5,  1,  4,$87,$24,  7,  4,  4; 80
		dc.b   0,  4,  8, $D,  9,$14,  8,  4,  0,  3,  4,$17,$24,$13,  4, $A; 96
		dc.b   0,  4,  9,  9,  8,  2,  0,  6,  4,$18,$24, $B,$20,  4,  0,  2; 112
		dc.b   4,$2E,  5,  1,  4,  0,  0,$13,$20,$14,  0,  4,  8,$19,  0,$10; 128
		dc.b $20,$1D,$24,  7,  4, $E,  0, $B,$20,$1B,$24,  5,  4,$17,$24,  0; 144
		dc.b $20,$18,$24,  5,  4, $B,  0,  8,$20,$1F,$24,  1,  4,  8,  0, $B; 160
		dc.b $20,$12,$28,  7,$29, $C,$20,  0,  4,$18,  0,$1A,  8,  0,  9,  7; 176
		dc.b   8,  9,  9,$31,  8,  0,  0,  7,$20,  8,$24,$15,  4,  8,  0,$27; 192
		dc.b $20,  9,$24,$12,  4, $E,$24, $E,  4, $A,  0,  9,  8,$16,$28,  0; 208
		dc.b $20, $F,$28,  4,$29,$1B,  9,  5,$29, $C,  9,  0,  8,  7,  0,$A0; 224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 240
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_AniArt_Load:
		jmp	(AniArt_Load).l

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ===========================================================================
; Sonic 1 Special Stage; crashes due to bad PLCs and missing pointers, but
; is otherwise identical
; GameMode10:
SpecialStage:
		move.w	#$CA,d0
		bsr.w	PlaySound_Special
		bsr.w	Pal_MakeFlash
		move	#$2700,sr
		lea	(VDP_control_port).l,a6
		move.w	#$8B03,(a6)
		move.w	#$8004,(a6)
		move.w	#$8AAF,(Hint_counter_reserve).w
		move.w	#$9011,(a6)
		move.w	(VDP_Reg1_val).w,d0
		andi.b	#$BF,d0
		move.w	d0,(VDP_control_port).l
		bsr.w	ClearScreen
		move	#$2300,sr
		lea	(VDP_control_port).l,a5
		move.w	#$8F01,(a5)
		move.l	#$946F93FF,(a5)
		move.w	#$9780,(a5)
		move.l	#$50000081,(a5)
		move.w	#0,(VDP_data_port).l

loc_507C:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	loc_507C
		move.w	#$8F02,(a5)
		bsr.w	S1_SSBGLoad
		moveq	#$14,d0
		bsr.w	RunPLC_ROM
		lea	($FFFFD000).w,a1
		moveq	#0,d0
		move.w	#$7FF,d1

loc_509C:
		move.l	d0,(a1)+
		dbf	d1,loc_509C
		lea	($FFFFF700).w,a1
		moveq	#0,d0
		move.w	#$3F,d1

loc_50AC:
		move.l	d0,(a1)+
		dbf	d1,loc_50AC
		lea	($FFFFFE60).w,a1
		moveq	#0,d0
		move.w	#$27,d1

loc_50BC:
		move.l	d0,(a1)+
		dbf	d1,loc_50BC
		lea	(Decomp_Buffer).w,a1
		moveq	#0,d0
		move.w	#$7F,d1

loc_50CC:
		move.l	d0,(a1)+
		dbf	d1,loc_50CC
		clr.b	(Water_fullscreen_flag).w
		clr.w	($FFFFFE02).w
		moveq	#$A,d0
		bsr.w	PalLoad1
		jsr	(S1SS_Load).l
		move.l	#0,($FFFFEE00).w
		move.l	#0,($FFFFEE04).w
		move.b	#9,($FFFFB000).w
		bsr.w	PalCycle_S1SS
		clr.w	($FFFFF780).w
		move.w	#$40,($FFFFF782).w
		move.w	#MusID_SpecialStage,d0
		bsr.w	PlaySound
		move.w	#0,($FFFFF790).w
		lea	(Demo_Index).l,a1
		moveq	#6,d0
		lsl.w	#2,d0
		movea.l	(a1,d0.w),a1
		move.b	1(a1),($FFFFF792).w
		subq.b	#1,($FFFFF792).w
		clr.w	($FFFFFE20).w
		clr.b	($FFFFFE1B).w
		move.w	#0,(Debug_placement_mode).w
		move.w	#$708,(Demo_Time_left).w
		tst.b	($FFFFFFE2).w
		beq.s	loc_5158
		btst	#6,($FFFFF604).w
		beq.s	loc_5158
		move.b	#1,(Debug_mode_flag).w

loc_5158:
		move.w	(VDP_Reg1_val).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		bsr.w	Pal_MakeWhite

loc_516A:
		bsr.w	PauseGame
		move.b	#VintID_S1SS,(Vint_routine).w
		bsr.w	WaitForVint
		bsr.w	MoveSonicInDemo
		move.w	($FFFFF604).w,($FFFFF602).w
		jsr	(RunObjects).l
		jsr	(BuildSprites).l
		jsr	(S1SS_ShowLayout).l
		bsr.w	S1SS_BgAnimate
		tst.w	($FFFFFFF0).w
		beq.s	loc_51A6
		tst.w	(Demo_Time_left).w
		beq.w	loc_52D4

loc_51A6:
		cmpi.b	#GameModeID_SpecialStage,(Game_Mode).w
		beq.w	loc_516A
		tst.w	($FFFFFFF0).w
		bne.w	loc_52DC
		move.b	#GameModeID_Level,(Game_Mode).w
		cmpi.w	#$503,(Current_ZoneAndAct).w
		bcs.s	loc_51CA
		clr.w	(Current_ZoneAndAct).w

loc_51CA:
		move.w	#$3C,(Demo_Time_left).w
		move.w	#$3F,($FFFFF626).w
		clr.w	($FFFFF794).w

loc_51DA:
		move.b	#VintID_SSResults,(Vint_routine).w
		bsr.w	WaitForVint
		bsr.w	MoveSonicInDemo
		move.w	($FFFFF604).w,($FFFFF602).w
		jsr	(RunObjects).l
		jsr	(BuildSprites).l
		jsr	(S1SS_ShowLayout).l
		bsr.w	S1SS_BgAnimate
		subq.w	#1,($FFFFF794).w
		bpl.s	loc_5214
		move.w	#2,($FFFFF794).w
		bsr.w	Pal_ToWhite

loc_5214:
		tst.w	(Demo_Time_left).w
		bne.s	loc_51DA
		move	#$2700,sr
		lea	(VDP_control_port).l,a6
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$9001,(a6)
		bsr.w	ClearScreen
		move.l	#$70000002,(VDP_control_port).l
		lea	(Nem_S1TitleCard).l,a0
		bsr.w	NemDec
		jsr	(HUD_Base).l
		move	#$2300,sr
		moveq	#$11,d0
		bsr.w	PalLoad2
		moveq	#0,d0
		bsr.w	LoadPLC2
		moveq	#$1B,d0
		bsr.w	LoadPLC
		move.b	#1,($FFFFFE1F).w
		move.b	#1,($FFFFF7D6).w
		move.w	($FFFFFE20).w,d0
		mulu.w	#$A,d0
		move.w	d0,($FFFFF7D4).w
		move.w	#$8E,d0
		jsr	(PlaySound_Special).l
		lea	($FFFFB000).w,a1
		moveq	#0,d0
		move.w	#$7FF,d1

loc_5290:
		move.l	d0,(a1)+
		dbf	d1,loc_5290
		move.b	#$7E,($FFFFB5C0).w

loc_529C:
		bsr.w	PauseGame
		move.b	#VintID_TitleCard,(Vint_routine).w
		bsr.w	WaitForVint
		jsr	(RunObjects).l
		jsr	(BuildSprites).l
		bsr.w	RunPLC_RAM
		tst.w	($FFFFFE02).w
		beq.s	loc_529C
		tst.l	(Plc_Buffer).w
		bne.s	loc_529C
		move.w	#$CA,d0
		bsr.w	PlaySound_Special
		bsr.w	Pal_MakeFlash
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_52D4:				; CODE XREF: ROM:000051A2j
					; ROM:000052E2j
		move.b	#GameModeID_SegaScreen,(Game_Mode).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_52DC:				; CODE XREF: ROM:000051B4j
		cmpi.b	#GameModeID_Level,(Game_Mode).w
		beq.s	loc_52D4
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


S1_SSBGLoad:				; CODE XREF: ROM:00005088p
		lea	($FFFF0000).l,a1
		move.w	#$4051,d0
		bsr.w	EniDec
		move.l	#$50000001,d3
		lea	($FFFF0080).l,a2
		moveq	#6,d7

loc_5302:				; CODE XREF: S1_SSBGLoad+7Ej
		move.l	d3,d0
		moveq	#3,d6
		moveq	#0,d4
		cmpi.w	#3,d7
		bcc.s	loc_5310
		moveq	#1,d4

loc_5310:				; CODE XREF: S1_SSBGLoad+26j
					; S1_SSBGLoad+64j
		moveq	#7,d5

loc_5312:				; CODE XREF: S1_SSBGLoad+56j
		movea.l	a2,a1
		eori.b	#1,d4
		bne.s	loc_5326
		cmpi.w	#6,d7
		bne.s	loc_5336
		lea	($FFFF0000).l,a1

loc_5326:				; CODE XREF: S1_SSBGLoad+32j
		movem.l	d0-d4,-(sp)
		moveq	#7,d1
		moveq	#7,d2
		bsr.w	PlaneMapToVRAM_H40
		movem.l	(sp)+,d0-d4

loc_5336:				; CODE XREF: S1_SSBGLoad+38j
		addi.l	#$100000,d0
		dbf	d5,loc_5312
		addi.l	#$3800000,d0
		eori.b	#1,d4
		dbf	d6,loc_5310
		addi.l	#$10000000,d3
		bpl.s	loc_5360
		swap	d3
		addi.l	#$C000,d3
		swap	d3

loc_5360:				; CODE XREF: S1_SSBGLoad+6Ej
		adda.w	#$80,a2	; ''
		dbf	d7,loc_5302
		lea	($FFFF0000).l,a1
		move.w	#$4000,d0
		bsr.w	EniDec
		lea	($FFFF0000).l,a1
		move.l	#$40000003,d0
		moveq	#$3F,d1	; '?'
		moveq	#$1F,d2
		bsr.w	PlaneMapToVRAM_H40
		lea	($FFFF0000).l,a1
		move.l	#$50000003,d0
		moveq	#$3F,d1	; '?'
		moveq	#$3F,d2	; '?'
		bsr.w	PlaneMapToVRAM_H40
		rts
; End of function S1_SSBGLoad


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


PalCycle_S1SS:				; CODE XREF: ROM:00000E90p
					; ROM:000050FCp
		tst.w	($FFFFF63A).w
		bne.s	locret_5424
		subq.w	#1,($FFFFF79C).w
		bpl.s	locret_5424
		lea	(VDP_control_port).l,a6
		move.w	($FFFFF79A).w,d0
		addq.w	#1,($FFFFF79A).w
		andi.w	#$1F,d0
		lsl.w	#2,d0
		lea	(word_547A).l,a0
		adda.w	d0,a0
		move.b	(a0)+,d0
		bpl.s	loc_53D0
		move.w	#$1FF,d0

loc_53D0:				; CODE XREF: PalCycle_S1SS+2Aj
		move.w	d0,($FFFFF79C).w
		moveq	#0,d0
		move.b	(a0)+,d0
		move.w	d0,($FFFFF7A0).w
		lea	(word_54FA).l,a1
		lea	(a1,d0.w),a1
		move.w	#$8200,d0
		move.b	(a1)+,d0
		move.w	d0,(a6)
		move.b	(a1),(Vscroll_Factor).w
		move.w	#$8400,d0
		move.b	(a0)+,d0
		move.w	d0,(a6)
		move.l	#$40000010,(VDP_control_port).l
		move.l	(Vscroll_Factor).w,(VDP_data_port).l
		moveq	#0,d0
		move.b	(a0)+,d0
		bmi.s	loc_5426
		lea	(Pal_S1SSCyc1).l,a1
		adda.w	d0,a1
		lea	($FFFFFB4E).w,a2
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+

locret_5424:				; CODE XREF: PalCycle_S1SS+4j
					; PalCycle_S1SS+Aj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_5426:				; CODE XREF: PalCycle_S1SS+70j
		move.w	($FFFFF79E).w,d1
		cmpi.w	#$8A,d0	; ''
		bcs.s	loc_5432
		addq.w	#1,d1

loc_5432:				; CODE XREF: PalCycle_S1SS+8Ej
		mulu.w	#$2A,d1	; '*'
		lea	(Pal_S1SSCyc2).l,a1
		adda.w	d1,a1
		andi.w	#$7F,d0	; ''
		bclr	#0,d0
		beq.s	loc_5456
		lea	($FFFFFB6E).w,a2
		move.l	(a1),(a2)+
		move.l	4(a1),(a2)+
		move.l	8(a1),(a2)+

loc_5456:				; CODE XREF: PalCycle_S1SS+A6j
		adda.w	#$C,a1
		lea	($FFFFFB5A).w,a2
		cmpi.w	#$A,d0
		bcs.s	loc_546C
		subi.w	#$A,d0
		lea	($FFFFFB7A).w,a2

loc_546C:				; CODE XREF: PalCycle_S1SS+C2j
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		adda.w	d0,a1
		move.l	(a1)+,(a2)+
		move.w	(a1)+,(a2)+
		rts
; End of function PalCycle_S1SS

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
word_547A:	dc.w  $300, $792, $300,	$790, $300, $78E, $300,	$78C, $300, $78B, $300,	$780, $300, $782, $300,	$784; 0
					; DATA XREF: PalCycle_S1SS+20o
		dc.w  $300, $786, $300,	$788, $708, $700, $70A,	$70C,$FF0C, $718,$FF0C,	$718, $70A, $70C, $708,	$700; 16
		dc.w  $300, $688, $300,	$686, $300, $684, $300,	$682, $300, $681, $300,	$68A, $300, $68C, $300,	$68E; 32
		dc.w  $300, $690, $300,	$692, $702, $624, $704,	$630,$FF06, $63C,$FF06,	$63C, $704, $630, $702,	$624; 48
word_54FA:	dc.w $1001,$1800,$1801,$2000,$2001,$2800,$2801;	0
					; DATA XREF: PalCycle_S1SS+3Co
Pal_S1SSCyc1:	dc.w  $400, $600, $620,	$624, $664, $666, $600,	$820, $A64, $A68, $AA6,	$AAA, $800, $C42, $E86,	$ECA; 0
					; DATA XREF: PalCycle_S1SS+72o
		dc.w  $EEC, $EEE, $400,	$420, $620, $620, $864,	$666, $420, $620, $842,	$842, $A86, $AAA, $620,	$842; 16
		dc.w  $A64, $C86, $EA8,	$EEE; 32
Pal_S1SSCyc2:	dc.w  $EEA, $EE0, $AA0,	$880, $660, $440, $EE0,	$AA0, $440, $AA0, $AA0,	$AA0, $860, $860, $860,	$640; 0
					; DATA XREF: PalCycle_S1SS+96o
		dc.w  $640, $640, $400,	$400, $400, $AEC, $6EA,	$4C6, $2A4,  $82,  $60,	$6EA, $4C6,  $60, $4C6,	$4C6; 16
		dc.w  $4C6, $484, $484,	$484, $442, $442, $442,	$400, $400, $400, $ECC,	$E8A, $C68, $A46, $824,	$602; 32
		dc.w  $E8A, $C68, $602,	$C68, $C68, $C68, $846,	$846, $846, $624, $624,	$624, $400, $400, $400,	$AEC; 48
		dc.w  $8CA, $6A8, $486,	$264,  $42, $8CA, $6A8,	 $42, $6A8, $6A8, $6A8,	$684, $684, $684, $442,	$442; 64
		dc.w  $442, $400, $400,	$400, $EEC, $CCA, $AA8,	$886, $664, $442, $CCA,	$AA8, $442, $AA8, $AA8,	$AA8; 80
		dc.w  $864, $864, $864,	$642, $642, $642, $400,	$400, $400; 96

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


S1SS_BgAnimate:				; CODE XREF: ROM:00005194p
					; ROM:00005200p
		move.w	($FFFFF7A0).w,d0
		bne.s	loc_5634
		move.w	#0,($FFFFEE0C).w
		move.w	($FFFFEE0C).w,($FFFFF618).w

loc_5634:				; CODE XREF: S1SS_BgAnimate+4j
		cmpi.w	#8,d0
		bcc.s	loc_568C
		cmpi.w	#6,d0
		bne.s	loc_564E
		addq.w	#1,($FFFFEE18).w
		addq.w	#1,($FFFFEE0C).w
		move.w	($FFFFEE0C).w,($FFFFF618).w

loc_564E:				; CODE XREF: S1SS_BgAnimate+1Cj
		moveq	#0,d0
		move.w	($FFFFEE08).w,d0
		neg.w	d0
		swap	d0
		lea	(byte_5709).l,a1
		lea	(Decomp_Buffer).w,a3
		moveq	#9,d3

loc_5664:				; CODE XREF: S1SS_BgAnimate+5Aj
		move.w	2(a3),d0
		bsr.w	CalcSine
		moveq	#0,d2
		move.b	(a1)+,d2
		muls.w	d2,d0
		asr.l	#8,d0
		move.w	d0,(a3)+
		move.b	(a1)+,d2
		ext.w	d2
		add.w	d2,(a3)+
		dbf	d3,loc_5664
		lea	(Decomp_Buffer).w,a3
		lea	(byte_56F6).l,a2
		bra.s	loc_56BC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_568C:				; CODE XREF: S1SS_BgAnimate+16j
		cmpi.w	#$C,d0
		bne.s	loc_56B2
		subq.w	#1,($FFFFEE18).w
		lea	($FFFFAB00).w,a3
		move.l	#$18000,d2
		moveq	#6,d1

loc_56A2:				; CODE XREF: S1SS_BgAnimate+8Cj
		move.l	(a3),d0
		sub.l	d2,d0
		move.l	d0,(a3)+
		subi.l	#$2000,d2
		dbf	d1,loc_56A2

loc_56B2:				; CODE XREF: S1SS_BgAnimate+6Ej
		lea	($FFFFAB00).w,a3
		lea	(byte_5701).l,a2

loc_56BC:				; CODE XREF: S1SS_BgAnimate+68j
		lea	($FFFFE000).w,a1
		move.w	($FFFFEE18).w,d0
		neg.w	d0
		swap	d0
		moveq	#0,d3
		move.b	(a2)+,d3
		move.w	($FFFFEE0C).w,d2
		neg.w	d2
		andi.w	#$FF,d2
		lsl.w	#2,d2

loc_56D8:				; CODE XREF: S1SS_BgAnimate+CEj
		move.w	(a3)+,d0
		addq.w	#2,a3
		moveq	#0,d1
		move.b	(a2)+,d1
		subq.w	#1,d1

loc_56E2:				; CODE XREF: S1SS_BgAnimate+CAj
		move.l	d0,(a1,d2.w)
		addq.w	#4,d2
		andi.w	#$3FC,d2
		dbf	d1,loc_56E2
		dbf	d3,loc_56D8
		rts
; End of function S1SS_BgAnimate

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_56F6:	dc.b   9,$28,$18,$10,$28,$18,$10,$30,$18,  8,$10; 0
					; DATA XREF: S1SS_BgAnimate+62o
byte_5701:	dc.b   6,$30,$30,$30,$28,$18,$18,$18; 0	; DATA XREF: S1SS_BgAnimate+94o
byte_5709:	dc.b   8,  2,  4,$FF,  2,  3,  8,$FF,  4,  2,  2,  3,  8,$FD,  4,  2; 0
					; DATA XREF: S1SS_BgAnimate+36o
		dc.b   2,  3,  2,$FF,  0; 16
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


LevelSizeLoad:				; CODE XREF: ROM:00003D30p
		clr.w	($FFFFEE50).w
		clr.w	($FFFFEE52).w
		clr.w	($FFFFEE54).w
		clr.w	($FFFFEE56).w
		clr.w	($FFFFEE58).w
		clr.w	($FFFFEE5A).w
		clr.w	($FFFFEE5C).w
		clr.w	($FFFFEE5E).w
		clr.w	($FFFFEEA0).w
		clr.w	($FFFFEEA2).w
		clr.w	($FFFFEEA4).w
		clr.w	($FFFFEEA6).w
		clr.w	($FFFFEEA8).w
		clr.w	($FFFFEEAA).w
		clr.w	($FFFFEEAC).w
		clr.w	($FFFFEEAE).w
		clr.b	($FFFFEEDC).w
		moveq	#0,d0
		move.b	d0,($FFFFEEDF).w
		move.w	(Current_ZoneAndAct).w,d0
		lsl.b	#6,d0
		lsr.w	#3,d0
		lea	LevelSizeArray(pc,d0.w),a0
		move.l	(a0)+,d0
		move.l	d0,($FFFFEEC8).w
		move.l	d0,($FFFFEEC0).w
		move.l	(a0)+,d0
		move.l	d0,($FFFFEECC).w
		move.l	d0,($FFFFEEC4).w
		move.w	#$1010,($FFFFEE40).w
		move.w	#$60,($FFFFEED8).w
		bra.w	LevelSize_CheckLamp
; ===========================================================================
LevelSizeArray:
		dc.w	 0,  $24BF,     0,	$300		; GHZ1
		dc.w	 0,  $1EBF,     0,	$300		; GHZ2
		dc.w	 0,  $2960,     0,	$300		; GHZ3
		dc.w	 0,  $2ABF,     0,	$300		; GHZ4
		dc.w	 0,  $3FFF,     0,	$720		; LZ1
		dc.w	 0,  $3FFF,     0,	$720		; LZ2
		dc.w	 0,  $3FFF,     0,	$720		; LZ3
		dc.w	 0,  $3FFF,     0,	$720		; LZ4
		dc.w	 0,  $3FFF,     0,	$720		; CPZ1
		dc.w	 0,  $3FFF,     0,	$720		; CPZ2
		dc.w	 0,  $3FFF,     0,	$720		; CPZ3
		dc.w	 0,  $3FFF,     0,	$720		; CPZ4
		dc.w	 0,  $29A0,     0,	$320		; EHZ1
		dc.w	 0,  $2940,     0,	$420		; EHZ2
		dc.w	 0,  $25C0,     0,	$720		; EHZ3
		dc.w	 0,  $3FFF,     0,	$720		; EHZ4
		dc.w	 0,  $3FFF,     0,	$720		; HPZ1
		dc.w	 0,  $3FFF,     0,	$720		; HPZ2
		dc.w	 0,  $3FFF,     0,	$720		; HPZ3
		dc.w	 0,  $3FFF,     0,	$720		; HPZ4
		dc.w	 0,  $3FFF,     0,	$720		; HTZ1
		dc.w	 0,  $3FFF, -$100,	$720		; HTZ2
		dc.w $2080,  $3FFF,  $510,	$720		; HTZ3
		dc.w	 0,  $3FFF,     0,	$720		; HTZ4
		dc.w	 0,  $500,   $110,	$110		; S1 Ending 1
		dc.w	 0,  $DC0,   $110,	$110		; S1 Ending 2
		dc.w	 0,  $2FFF,     0,	$320		; S1 Ending 3
		dc.w	 0,  $2FFF,     0,	$320		; S1 Ending 4
; ===========================================================================
S1EndingStartLoc:dc.w	$50, $3B0, $EA0, $46C,$1750,  $BD, $A00, $62C
		dc.w  $BB0,  $4C,$1570,	$16C, $1B0, $72C,$1400,	$2AC
; ===========================================================================

LevelSize_CheckLamp:			; CODE XREF: LevelSizeLoad+76j
		tst.b	($FFFFFE30).w
		beq.s	LevelSize_StartLoc
		jsr	(Lamppost_LoadInfo).l
		move.w	($FFFFB008).w,d1
		move.w	($FFFFB00C).w,d0
		bra.s	LevelSize_StartLocLoaded
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

LevelSize_StartLoc:			; CODE XREF: LevelSizeLoad+17Ej
		move.w	(Current_ZoneAndAct).w,d0
		lsl.b	#6,d0
		lsr.w	#4,d0
		lea	StartLocArray(pc,d0.w),a1
		tst.w	($FFFFFFF0).w
		bpl.s	loc_58CE

		move.w	($FFFFFFF4).w,d0
		subq.w	#1,d0
		lsl.w	#2,d0
		lea	S1EndingStartLoc(pc,d0.w),a1

loc_58CE:				; CODE XREF: LevelSizeLoad+1A0j
		moveq	#0,d1
		move.w	(a1)+,d1
		move.w	d1,($FFFFB008).w
		moveq	#0,d0
		move.w	(a1),d0
		move.w	d0,($FFFFB00C).w

LevelSize_StartLocLoaded:		; CODE XREF: LevelSizeLoad+18Ej
		subi.w	#$A0,d1	; ' '
		bcc.s	loc_58E6
		moveq	#0,d1

loc_58E6:				; CODE XREF: LevelSizeLoad+1C2j
		move.w	($FFFFEECA).w,d2
		cmp.w	d2,d1
		bcs.s	loc_58F0
		move.w	d2,d1

loc_58F0:				; CODE XREF: LevelSizeLoad+1CCj
		move.w	d1,($FFFFEE00).w
		move.w	d1,($FFFFEE20).w
		subi.w	#$60,d0	; '`'
		bcc.s	loc_5900
		moveq	#0,d0

loc_5900:				; CODE XREF: LevelSizeLoad+1DCj
		cmp.w	($FFFFEECE).w,d0
		blt.s	loc_590A
		move.w	($FFFFEECE).w,d0

loc_590A:				; CODE XREF: LevelSizeLoad+1E4j
		move.w	d0,($FFFFEE04).w
		move.w	d0,($FFFFEE24).w
		bsr.w	BgScrollSpeed
		rts
; End of function LevelSizeLoad

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
StartLocArray:	dc.w   $50, $3B0		; GHZ1
		dc.w   $50,  $FC		; GHZ2
		dc.w   $50, $3B0		; GHZ3
		dc.w   $80,  $A8		; GHZ4
		dc.w   $60,  $6C		; LZ1
		dc.w   $50,  $EC		; LZ2
		dc.w   $50, $2EC		; LZ3
		dc.w   $B80,   0		; LZ4
		incbin	"startpos/CPZ_1.bin"	; CPZ1
		dc.w   $30, $266		; CPZ2
		dc.w   $30, $166		; CPZ3
		dc.w   $80,  $A8		; CPZ4
		incbin	"startpos/EHZ_1.bin"	; EHZ1
		incbin	"startpos/EHZ_2.bin"	; EHZ2
		dc.w   $40, $370		; EHZ3
		dc.w   $80,  $A8		; EHZ4
		incbin	"startpos/HPZ_1.bin"	; HPZ1
		dc.w   $30, $1BD		; HPZ2
		dc.w   $30,  $EC		; HPZ3
		dc.w   $80,  $A8		; HPZ4
		incbin	"startpos/HTZ_1.bin"	; HTZ1
		incbin	"startpos/HTZ_2.bin"	; HTZ2
		dc.w $2140, $5AC		; HTZ3
		dc.w   $80,  $A8		; HTZ4
		dc.w  $620, $16B		; S1 Ending 1
		dc.w  $EE0, $16C		; S1 Ending 2
		dc.w   $80,  $A8		; S1 Ending 3
		dc.w   $80,  $A8		; S1 Ending 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


BgScrollSpeed:				; CODE XREF: LevelSizeLoad+1F2p
		tst.b	($FFFFFE30).w
		bne.s	loc_59B6
		move.w	d0,($FFFFEE0C).w
		move.w	d0,($FFFFEE14).w
		move.w	d1,($FFFFEE08).w
		move.w	d1,($FFFFEE10).w
		move.w	d1,($FFFFEE18).w
		move.w	d0,($FFFFEE2C).w
		move.w	d0,($FFFFEE34).w
		move.w	d1,($FFFFEE28).w
		move.w	d1,($FFFFEE30).w
		move.w	d1,($FFFFEE38).w

loc_59B6:				; CODE XREF: BgScrollSpeed+4j
		moveq	#0,d2
		move.b	(Current_Zone).w,d2
		add.w	d2,d2
		move.w	BgScroll_Index(pc,d2.w),d2
		jmp	BgScroll_Index(pc,d2.w)
; End of function BgScrollSpeed

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
BgScroll_Index:	dc.w BgScroll_GHZ-BgScroll_Index; 0 ; DATA XREF: ROM:BgScroll_Indexo
					; ROM:BgScroll_Index+2o ...
		dc.w BgScroll_LZ-BgScroll_Index; 1
		dc.w BgScroll_CPZ-BgScroll_Index; 2
		dc.w BgScroll_EHZ-BgScroll_Index; 3
		dc.w BgScroll_HPZ-BgScroll_Index; 4
		dc.w BgScroll_EHZ-BgScroll_Index; 5
		dc.w BgScroll_S1Ending-BgScroll_Index; 6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

BgScroll_GHZ:				; DATA XREF: ROM:BgScroll_Indexo
		clr.l	($FFFFEE08).w
		clr.l	($FFFFEE0C).w
		clr.l	($FFFFEE14).w
		clr.l	($FFFFEE1C).w
		lea	($FFFFA800).w,a2
		clr.l	(a2)+
		clr.l	(a2)+
		clr.l	(a2)+
		clr.l	($FFFFEE28).w
		clr.l	($FFFFEE2C).w
		clr.l	($FFFFEE34).w
		clr.l	($FFFFEE3C).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

BgScroll_LZ:				; DATA XREF: ROM:BgScroll_Indexo
		asr.l	#1,d0
		move.w	d0,($FFFFEE0C).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

BgScroll_CPZ:				; DATA XREF: ROM:BgScroll_Indexo
		lsr.w	#2,d0
		move.w	d0,($FFFFEE0C).w
		move.w	d0,($FFFFEE2C).w
		clr.l	($FFFFEE08).w
		clr.l	($FFFFEE10).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

BgScroll_EHZ:				; DATA XREF: ROM:BgScroll_Indexo
		clr.l	($FFFFEE08).w
		clr.l	($FFFFEE0C).w
		clr.l	($FFFFEE14).w
		clr.l	($FFFFEE1C).w
		lea	($FFFFA800).w,a2
		clr.l	(a2)+
		clr.l	(a2)+
		clr.l	(a2)+
		clr.l	($FFFFEE28).w
		clr.l	($FFFFEE2C).w
		clr.l	($FFFFEE34).w
		clr.l	($FFFFEE3C).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

BgScroll_HPZ:				; DATA XREF: ROM:BgScroll_Indexo
		asr.w	#1,d0
		move.w	d0,($FFFFEE0C).w
		clr.l	($FFFFEE08).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

BgScroll_S1SYZ:				; leftover from	Sonic 1
		asl.l	#4,d0
		move.l	d0,d2
		asl.l	#1,d0
		add.l	d2,d0
		asr.l	#8,d0
		addq.w	#1,d0
		move.w	d0,($FFFFEE0C).w
		clr.l	($FFFFEE08).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

BgScroll_S1Ending:			; DATA XREF: ROM:BgScroll_Indexo
		move.w	($FFFFEE00).w,d0
		asr.w	#1,d0
		move.w	d0,($FFFFEE08).w
		move.w	d0,($FFFFEE10).w
		asr.w	#2,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		move.w	d0,($FFFFEE18).w
		clr.l	($FFFFEE0C).w
		clr.l	($FFFFEE14).w
		clr.l	($FFFFEE1C).w
		lea	($FFFFA800).w,a2
		clr.l	(a2)+
		clr.l	(a2)+
		clr.l	(a2)+
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


DeformBGLayer:				; CODE XREF: ROM:00003D34p
					; ROM:loc_3F50p
		tst.b	($FFFFEEDC).w
		beq.s	loc_5AA4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_5AA4:				; CODE XREF: DeformBGLayer+4j
		clr.w	($FFFFEE50).w
		clr.w	($FFFFEE52).w
		clr.w	($FFFFEE54).w
		clr.w	($FFFFEE56).w
		clr.w	($FFFFEE58).w
		clr.w	($FFFFEE5A).w
		clr.w	($FFFFEE5C).w
		clr.w	($FFFFEE5E).w
		lea	($FFFFB000).w,a0
		lea	($FFFFEE00).w,a1
		lea	($FFFFEE40).w,a2
		lea	($FFFFEE50).w,a3
		lea	($FFFFEEB0).w,a4
		lea	($FFFFEED0).w,a5
		lea	(Sonic_Pos_Record_Buf).w,a6
		bsr.w	ScrollHorizontal
		lea	($FFFFEE04).w,a1
		lea	($FFFFEE41).w,a2
		lea	($FFFFEEB2).w,a4
		bsr.w	ScrollVertical
		tst.w	(Two_player_mode).w
		beq.s	loc_5B2A
		lea	($FFFFB040).w,a0
		lea	($FFFFEE20).w,a1
		lea	($FFFFEE48).w,a2
		lea	($FFFFEE58).w,a3
		lea	($FFFFEEB6).w,a4
		lea	($FFFFEED4).w,a5
		lea	($FFFFE700).w,a6
		bsr.w	ScrollHorizontal
		lea	($FFFFEE24).w,a1
		lea	($FFFFEE49).w,a2
		lea	($FFFFEEB8).w,a4
		bsr.w	ScrollVertical

loc_5B2A:				; CODE XREF: DeformBGLayer+5Cj
		bsr.w	DynScreenResizeLoad
		move.w	($FFFFEE04).w,(Vscroll_Factor).w
		move.w	($FFFFEE0C).w,($FFFFF618).w
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		add.w	d0,d0
		move.w	Deform_Index(pc,d0.w),d0
		jmp	Deform_Index(pc,d0.w)
; End of function DeformBGLayer

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Deform_Index:	dc.w Deform_GHZ-Deform_Index; 0	; DATA XREF: ROM:Deform_Indexo
					; ROM:Deform_Index+2o ...
		dc.w Deform_LZ-Deform_Index; 1
		dc.w Deform_CPZ-Deform_Index; 2
		dc.w Deform_EHZ-Deform_Index; 3
		dc.w Deform_HPZ-Deform_Index; 4
		dc.w Deform_HTZ-Deform_Index; 5
		dc.w Deform_GHZ-Deform_Index; 6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Deform_GHZ:				; DATA XREF: ROM:Deform_Indexo
		tst.w	(Two_player_mode).w
		bne.w	loc_5C5A
		move.w	($FFFFEEB0).w,d4
		ext.l	d4
		asl.l	#5,d4
		move.l	d4,d1
		asl.l	#1,d4
		add.l	d1,d4
		moveq	#0,d6
		bsr.w	ScrollBlock6
		move.w	($FFFFEEB0).w,d4
		ext.l	d4
		asl.l	#7,d4
		moveq	#0,d6
		bsr.w	ScrollBlock5
		lea	($FFFFE000).w,a1
		move.w	($FFFFEE04).w,d0
		andi.w	#$7FF,d0
		lsr.w	#5,d0
		neg.w	d0
		addi.w	#$20,d0	; ' '
		bpl.s	loc_5B9A
		moveq	#0,d0

loc_5B9A:				; CODE XREF: ROM:00005B96j
		move.w	d0,d4
		move.w	d0,($FFFFF618).w
		move.w	($FFFFEE00).w,d0
		cmpi.b	#GameModeID_TitleScreen,(Game_Mode).w
		bne.s	loc_5BAE
		moveq	#0,d0

loc_5BAE:				; CODE XREF: ROM:00005BAAj
		neg.w	d0
		swap	d0
		lea	($FFFFA800).w,a2
		addi.l	#$10000,(a2)+
		addi.l	#$C000,(a2)+
		addi.l	#$8000,(a2)+
		move.w	($FFFFA800).w,d0
		add.w	($FFFFEE18).w,d0
		neg.w	d0
		move.w	#$1F,d1
		sub.w	d4,d1
		bcs.s	loc_5BE0

loc_5BDA:				; CODE XREF: ROM:00005BDCj
		move.l	d0,(a1)+
		dbf	d1,loc_5BDA

loc_5BE0:				; CODE XREF: ROM:00005BD8j
		move.w	($FFFFA804).w,d0
		add.w	($FFFFEE18).w,d0
		neg.w	d0
		move.w	#$F,d1

loc_5BEE:				; CODE XREF: ROM:00005BF0j
		move.l	d0,(a1)+
		dbf	d1,loc_5BEE
		move.w	($FFFFA808).w,d0
		add.w	($FFFFEE18).w,d0
		neg.w	d0
		move.w	#$F,d1

loc_5C02:				; CODE XREF: ROM:00005C04j
		move.l	d0,(a1)+
		dbf	d1,loc_5C02
		move.w	#$2F,d1	; '/'
		move.w	($FFFFEE18).w,d0
		neg.w	d0

loc_5C12:				; CODE XREF: ROM:00005C14j
		move.l	d0,(a1)+
		dbf	d1,loc_5C12
		move.w	#$27,d1	; '''
		move.w	($FFFFEE10).w,d0
		neg.w	d0

loc_5C22:				; CODE XREF: ROM:00005C24j
		move.l	d0,(a1)+
		dbf	d1,loc_5C22
		move.w	($FFFFEE10).w,d0
		move.w	($FFFFEE00).w,d2
		sub.w	d0,d2
		ext.l	d2
		asl.l	#8,d2
		divs.w	#$68,d2	; 'h'
		ext.l	d2
		asl.l	#8,d2
		moveq	#0,d3
		move.w	d0,d3
		move.w	#$47,d1	; 'G'
		add.w	d4,d1

loc_5C48:				; CODE XREF: ROM:00005C54j
		move.w	d3,d0
		neg.w	d0
		move.l	d0,(a1)+
		swap	d3
		add.l	d2,d3
		swap	d3
		dbf	d1,loc_5C48
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_5C5A:				; CODE XREF: ROM:00005B5Cj
		move.w	($FFFFEEB0).w,d4
		ext.l	d4
		asl.l	#5,d4
		move.l	d4,d1
		asl.l	#1,d4
		add.l	d1,d4
		moveq	#0,d6
		bsr.w	ScrollBlock6
		move.w	($FFFFEEB0).w,d4
		ext.l	d4
		asl.l	#7,d4
		moveq	#0,d6
		bsr.w	ScrollBlock5
		lea	($FFFFE000).w,a1
		move.w	($FFFFEE04).w,d0
		andi.w	#$7FF,d0
		lsr.w	#5,d0
		neg.w	d0
		addi.w	#$20,d0	; ' '
		bpl.s	loc_5C94
		moveq	#0,d0

loc_5C94:				; CODE XREF: ROM:00005C90j
		andi.w	#$FFFE,d0
		move.w	d0,d4
		lsr.w	#1,d4
		move.w	d0,($FFFFF618).w
		andi.l	#$FFFEFFFE,(Vscroll_Factor).w
		move.w	($FFFFEE00).w,d0
		cmpi.b	#GameModeID_TitleScreen,(Game_Mode).w
		bne.s	loc_5CB6
		moveq	#0,d0

loc_5CB6:				; CODE XREF: ROM:00005CB2j
		neg.w	d0
		swap	d0
		lea	($FFFFA800).w,a2
		addi.l	#$10000,(a2)+
		addi.l	#$C000,(a2)+
		addi.l	#$8000,(a2)+
		move.w	($FFFFA800).w,d0
		add.w	($FFFFEE18).w,d0
		neg.w	d0
		move.w	#$F,d1
		sub.w	d4,d1
		bcs.s	loc_5CE8

loc_5CE2:				; CODE XREF: ROM:00005CE4j
		move.l	d0,(a1)+
		dbf	d1,loc_5CE2

loc_5CE8:				; CODE XREF: ROM:00005CE0j
		move.w	($FFFFA804).w,d0
		add.w	($FFFFEE18).w,d0
		neg.w	d0
		move.w	#7,d1

loc_5CF6:				; CODE XREF: ROM:00005CF8j
		move.l	d0,(a1)+
		dbf	d1,loc_5CF6
		move.w	($FFFFA808).w,d0
		add.w	($FFFFEE18).w,d0
		neg.w	d0
		move.w	#7,d1

loc_5D0A:				; CODE XREF: ROM:00005D0Cj
		move.l	d0,(a1)+
		dbf	d1,loc_5D0A
		move.w	#$17,d1
		move.w	($FFFFEE18).w,d0
		neg.w	d0

loc_5D1A:				; CODE XREF: ROM:00005D1Cj
		move.l	d0,(a1)+
		dbf	d1,loc_5D1A
		move.w	#$17,d1
		move.w	($FFFFEE10).w,d0
		neg.w	d0

loc_5D2A:				; CODE XREF: ROM:00005D2Cj
		move.l	d0,(a1)+
		dbf	d1,loc_5D2A
		move.w	($FFFFEE10).w,d0
		move.w	($FFFFEE00).w,d2
		sub.w	d0,d2
		ext.l	d2
		asl.l	#8,d2
		divs.w	#$68,d2	; 'h'
		ext.l	d2
		asl.l	#8,d2
		add.l	d2,d2
		moveq	#0,d3
		move.w	d0,d3
		move.w	#$23,d1	; '#'
		add.w	d4,d1

loc_5D52:				; CODE XREF: ROM:00005D5Ej
		move.w	d3,d0
		neg.w	d0
		move.l	d0,(a1)+
		swap	d3
		add.l	d2,d3
		swap	d3
		dbf	d1,loc_5D52
		move.w	($FFFFEEB6).w,d4
		ext.l	d4
		asl.l	#5,d4
		move.l	d4,d1
		asl.l	#1,d4
		add.l	d1,d4
		add.l	d4,($FFFFEE38).w
		move.w	($FFFFEEB6).w,d4
		ext.l	d4
		asl.l	#7,d4
		add.l	d4,($FFFFEE30).w
		lea	($FFFFE1C0).w,a1
		move.w	($FFFFEE24).w,d0
		andi.w	#$7FF,d0
		lsr.w	#5,d0
		neg.w	d0
		addi.w	#$20,d0	; ' '
		bpl.s	loc_5D98
		moveq	#0,d0

loc_5D98:				; CODE XREF: ROM:00005D94j
		andi.w	#$FFFE,d0
		move.w	d0,d4
		lsr.w	#1,d4
		move.w	d0,($FFFFF620).w
		subi.w	#$E0,($FFFFF620).w ; 'à'
		move.w	($FFFFEE24).w,($FFFFF61E).w
		subi.w	#$E0,($FFFFF61E).w ; 'à'
		andi.l	#$FFFEFFFE,($FFFFF61E).w
		move.w	($FFFFEE20).w,d0
		cmpi.b	#GameModeID_TitleScreen,(Game_Mode).w
		bne.s	loc_5DCC
		moveq	#0,d0

loc_5DCC:				; CODE XREF: ROM:00005DC8j
		neg.w	d0
		swap	d0
		move.w	($FFFFA800).w,d0
		add.w	($FFFFEE38).w,d0
		neg.w	d0
		move.w	#$F,d1
		sub.w	d4,d1
		bcs.s	loc_5DE8

loc_5DE2:				; CODE XREF: ROM:00005DE4j
		move.l	d0,(a1)+
		dbf	d1,loc_5DE2

loc_5DE8:				; CODE XREF: ROM:00005DE0j
		move.w	($FFFFA804).w,d0
		add.w	($FFFFEE38).w,d0
		neg.w	d0
		move.w	#7,d1

loc_5DF6:				; CODE XREF: ROM:00005DF8j
		move.l	d0,(a1)+
		dbf	d1,loc_5DF6
		move.w	($FFFFA808).w,d0
		add.w	($FFFFEE38).w,d0
		neg.w	d0
		move.w	#7,d1

loc_5E0A:				; CODE XREF: ROM:00005E0Cj
		move.l	d0,(a1)+
		dbf	d1,loc_5E0A
		move.w	#$17,d1
		move.w	($FFFFEE38).w,d0
		neg.w	d0

loc_5E1A:				; CODE XREF: ROM:00005E1Cj
		move.l	d0,(a1)+
		dbf	d1,loc_5E1A
		move.w	#$17,d1
		move.w	($FFFFEE30).w,d0
		neg.w	d0

loc_5E2A:				; CODE XREF: ROM:00005E2Cj
		move.l	d0,(a1)+
		dbf	d1,loc_5E2A
		move.w	($FFFFEE30).w,d0
		move.w	($FFFFEE20).w,d2
		sub.w	d0,d2
		ext.l	d2
		asl.l	#8,d2
		divs.w	#$68,d2	; 'h'
		ext.l	d2
		asl.l	#8,d2
		add.l	d2,d2
		moveq	#0,d3
		move.w	d0,d3
		move.w	#$23,d1	; '#'
		add.w	d4,d1

loc_5E52:				; CODE XREF: ROM:00005E5Ej
		move.w	d3,d0
		neg.w	d0
		move.l	d0,(a1)+
		swap	d3
		add.l	d2,d3
		swap	d3
		dbf	d1,loc_5E52
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Deform_LZ:				; DATA XREF: ROM:Deform_Indexo
		move.w	($FFFFEEB0).w,d4
		ext.l	d4
		asl.l	#7,d4
		move.w	($FFFFEEB2).w,d5
		ext.l	d5
		asl.l	#7,d5
		bsr.w	ScrollBlock1
		move.w	($FFFFEE0C).w,($FFFFF618).w
		lea	(Deform_LZ_Data1).l,a3
		lea	(Obj0A_WobbleData).l,a2
		move.b	($FFFFF7D8).w,d2
		move.b	d2,d3
		addi.w	#$80,($FFFFF7D8).w ; ''
		add.w	($FFFFEE0C).w,d2
		andi.w	#$FF,d2
		add.w	($FFFFEE04).w,d3
		andi.w	#$FF,d3
		lea	($FFFFE000).w,a1
		move.w	#$DF,d1	; 'ß'
		move.w	($FFFFEE00).w,d0
		neg.w	d0
		move.w	d0,d6
		swap	d0
		move.w	($FFFFEE08).w,d0
		neg.w	d0
		move.w	($FFFFF646).w,d4
		move.w	($FFFFEE04).w,d5

loc_5EC6:				; CODE XREF: ROM:00005ED2j
		cmp.w	d4,d5
		bge.s	loc_5ED8
		move.l	d0,(a1)+
		addq.w	#1,d5
		addq.b	#1,d2
		addq.b	#1,d3
		dbf	d1,loc_5EC6
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_5ED8:				; CODE XREF: ROM:00005EC8j
					; ROM:00005EF0j
		move.b	(a3,d3.w),d4
		ext.w	d4
		add.w	d6,d4
		move.w	d4,(a1)+
		move.b	(a2,d2.w),d4
		ext.w	d4
		add.w	d0,d4
		move.w	d4,(a1)+
		addq.b	#1,d2
		addq.b	#1,d3
		dbf	d1,loc_5ED8
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Deform_LZ_Data1:dc.b   1,  1,  2,  2,  3,  3,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0; 0
					; DATA XREF: ROM:00005E7Eo
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 16
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 32
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 48
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 64
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 80
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 96
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 112
		dc.b $FF,$FF,$FE,$FE,$FD,$FD,$FD,$FD,$FE,$FE,$FF,$FF,  0,  0,  0,  0; 128
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 144
		dc.b   1,  1,  2,  2,  3,  3,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0; 160
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 176
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 208
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 240
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Deform_CPZ:				; DATA XREF: ROM:Deform_Indexo
		move.w	($FFFFEEB0).w,d4
		ext.l	d4
		asl.l	#5,d4
		move.w	($FFFFEEB2).w,d5
		ext.l	d5
		asl.l	#6,d5
		bsr.w	ScrollBlock1
		move.w	($FFFFEE0C).w,($FFFFF618).w
		lea	($FFFFE000).w,a1
		move.w	#$DF,d1	; 'ß'
		move.w	($FFFFEE00).w,d0
		neg.w	d0
		swap	d0
		move.w	($FFFFEE08).w,d0
		neg.w	d0

loc_6026:				; CODE XREF: ROM:00006028j
		move.l	d0,(a1)+
		dbf	d1,loc_6026
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Deform_Unk:				; unknown BG deform
		move.w	($FFFFEEB0).w,d4
		ext.l	d4
		asl.l	#5,d4
		move.w	($FFFFEEB2).w,d5
		ext.l	d5
		asl.l	#6,d5
		bsr.w	ScrollBlock1
		move.w	($FFFFEEB0).w,d4
		ext.l	d4
		asl.l	#7,d4
		moveq	#4,d6
		bsr.w	ScrollBlock5
		move.w	($FFFFEE0C).w,($FFFFF618).w
		move.b	($FFFFEE52).w,d0
		or.b	($FFFFEE54).w,d0
		move.b	d0,($FFFFEE56).w
		clr.b	($FFFFEE52).w
		clr.b	($FFFFEE54).w
		lea	($FFFFA800).w,a1
		move.w	($FFFFEE08).w,d0
		neg.w	d0
		move.w	#$12,d1

loc_6078:				; CODE XREF: ROM:0000607Aj
		move.w	d0,(a1)+
		dbf	d1,loc_6078
		move.w	($FFFFEE10).w,d0
		neg.w	d0
		move.w	#$1C,d1

loc_6088:				; CODE XREF: ROM:0000608Aj
		move.w	d0,(a1)+
		dbf	d1,loc_6088
		lea	($FFFFA800).w,a2
		move.w	($FFFFEE0C).w,d0
		andi.w	#$3F0,d0
		lsr.w	#3,d0
		lea	(a2,d0.w),a2
		bra.w	loc_6306

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Deform_TitleScreen:			; CODE XREF: ROM:00003404p

; FUNCTION CHUNK AT 0000620E SIZE 00000056 BYTES

		move.w	($FFFFEE0C).w,($FFFFF618).w
		move.w	($FFFFEE00).w,d0
		cmpi.w	#$1C00,d0
		bcc.s	loc_60B6
		addq.w	#8,d0

loc_60B6:				; CODE XREF: Deform_TitleScreen+Ej
		move.w	d0,($FFFFEE00).w
		lea	($FFFFE000).w,a1
		move.w	($FFFFEE00).w,d2
		neg.w	d2
		moveq	#0,d0
		bra.s	loc_60E4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Deform_EHZ:				; DATA XREF: ROM:Deform_Indexo
		tst.w	(Two_player_mode).w
		bne.w	loc_620E
		move.w	($FFFFEE0C).w,($FFFFF618).w
		lea	($FFFFE000).w,a1
		move.w	($FFFFEE00).w,d0
		neg.w	d0
		move.w	d0,d2
		swap	d0

loc_60E4:				; CODE XREF: Deform_TitleScreen+22j
		move.w	#0,d0
		move.w	#$15,d1

loc_60EC:				; CODE XREF: Deform_TitleScreen+4Aj
		move.l	d0,(a1)+
		dbf	d1,loc_60EC
		move.w	d2,d0
		asr.w	#6,d0
		move.w	#$39,d1	; '9'

loc_60FA:				; CODE XREF: Deform_TitleScreen+58j
		move.l	d0,(a1)+
		dbf	d1,loc_60FA
		move.w	d0,d3
		move.b	($FFFFFE0F).w,d1
		andi.w	#7,d1
		bne.s	loc_6110
		subq.w	#1,($FFFFA800).w

loc_6110:				; CODE XREF: Deform_TitleScreen+66j
		move.w	($FFFFA800).w,d1
		andi.w	#$1F,d1
		lea	(Deform_EHZ_Data).l,a2
		lea	(a2,d1.w),a2
		move.w	#$14,d1

loc_6126:				; CODE XREF: Deform_TitleScreen+8Aj
		move.b	(a2)+,d0
		ext.w	d0
		add.w	d3,d0
		move.l	d0,(a1)+
		dbf	d1,loc_6126
		move.w	#0,d0
		move.w	#$A,d1

loc_613A:				; CODE XREF: Deform_TitleScreen+98j
		move.l	d0,(a1)+
		dbf	d1,loc_613A
		move.w	d2,d0
		asr.w	#4,d0
		move.w	#$F,d1

loc_6148:				; CODE XREF: Deform_TitleScreen+A6j
		move.l	d0,(a1)+
		dbf	d1,loc_6148
		move.w	d2,d0
		asr.w	#4,d0
		move.w	d0,d1
		asr.w	#1,d1
		add.w	d1,d0
		move.w	#$F,d1

loc_615C:				; CODE XREF: Deform_TitleScreen+BAj
		move.l	d0,(a1)+
		dbf	d1,loc_615C
		move.l	d0,d4
		swap	d4
		move.w	d2,d0
		asr.w	#1,d0
		move.w	d2,d1
		asr.w	#3,d1
		sub.w	d1,d0
		ext.l	d0
		asl.l	#4,d0
		divs.w	#$30,d0	; '0'
		ext.l	d0
		asl.l	#4,d0
		asl.l	#8,d0
		moveq	#0,d3
		move.w	d2,d3
		asr.w	#3,d3
		move.w	#$E,d1

loc_6188:				; CODE XREF: Deform_TitleScreen+EEj
		move.w	d4,(a1)+
		move.w	d3,(a1)+
		swap	d3
		add.l	d0,d3
		swap	d3
		dbf	d1,loc_6188
		move.w	#8,d1

loc_619A:				; CODE XREF: Deform_TitleScreen+106j
		move.w	d4,(a1)+
		move.w	d3,(a1)+
		move.w	d4,(a1)+
		move.w	d3,(a1)+
		swap	d3
		add.l	d0,d3
		add.l	d0,d3
		swap	d3
		dbf	d1,loc_619A
		move.w	#$E,d1

loc_61B2:				; CODE XREF: Deform_TitleScreen+124j
		move.w	d4,(a1)+
		move.w	d3,(a1)+
		move.w	d4,(a1)+
		move.w	d3,(a1)+
		move.w	d4,(a1)+
		move.w	d3,(a1)+
		swap	d3
		add.l	d0,d3
		add.l	d0,d3
		add.l	d0,d3
		swap	d3
		dbf	d1,loc_61B2
		rts
; End of function Deform_TitleScreen

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Deform_EHZ_Data:dc.b   1,  2,  1,  3,  1,  2,  2,  1,  2,  3,  1,  2,  1,  2,  0,  0; 0
					; DATA XREF: Deform_TitleScreen+74o
					; sub_6264+28t
		dc.b   2,  0,  3,  2,  2,  3,  2,  2,  1,  3,  0,  0,  1,  0,  1,  3; 16
		dc.b   1,  2,  1,  3,  1,  2,  2,  1,  2,  3,  1,  2,  1,  2,  0,  0; 32
		dc.b   2,  0,  3,  2,  2,  3,  2,  2,  1,  3,  0,  0,  1,  0,  1,  3; 48
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR Deform_TitleScreen

loc_620E:				; CODE XREF: Deform_TitleScreen+28j
		move.b	($FFFFFE0F).w,d1
		andi.w	#7,d1
		bne.s	loc_621C
		subq.w	#1,($FFFFA800).w

loc_621C:				; CODE XREF: Deform_TitleScreen+172j
		move.w	($FFFFEE0C).w,($FFFFF618).w
		andi.l	#$FFFEFFFE,(Vscroll_Factor).w
		lea	($FFFFE000).w,a1
		move.w	($FFFFEE00).w,d0
		move.w	#$A,d1
		bsr.s	sub_6264
		moveq	#0,d0
		move.w	d0,($FFFFF620).w
		subi.w	#$E0,($FFFFF620).w ; 'à'
		move.w	($FFFFEE24).w,($FFFFF61E).w

loc_624A:
		subi.w	#$E0,($FFFFF61E).w ; 'à'
		andi.l	#$FFFEFFFE,($FFFFF61E).w
		lea	($FFFFE1B0).w,a1
		move.w	($FFFFEE20).w,d0
		move.w	#$E,d1
; END OF FUNCTION CHUNK	FOR Deform_TitleScreen

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6264:				; CODE XREF: Deform_TitleScreen+192p
		neg.w	d0
		move.w	d0,d2
		swap	d0
		move.w	#0,d0

loc_626E:				; CODE XREF: sub_6264+Cj
		move.l	d0,(a1)+
		dbf	d1,loc_626E
		move.w	d2,d0
		asr.w	#6,d0
		move.w	#$1C,d1

loc_627C:				; CODE XREF: sub_6264+1Aj
		move.l	d0,(a1)+
		dbf	d1,loc_627C
		move.w	d0,d3
		move.w	($FFFFA800).w,d1
		andi.w	#$1F,d1
		lea	Deform_EHZ_Data(pc),a2
		lea	(a2,d1.w),a2
		move.w	#$A,d1

loc_6298:				; CODE XREF: sub_6264+3Cj
		move.b	(a2)+,d0
		ext.w	d0
		add.w	d3,d0
		move.l	d0,(a1)+
		dbf	d1,loc_6298
		move.w	#0,d0
		move.w	#4,d1

loc_62AC:				; CODE XREF: sub_6264+4Aj
		move.l	d0,(a1)+
		dbf	d1,loc_62AC
		move.w	d2,d0
		asr.w	#4,d0
		move.w	#7,d1

loc_62BA:				; CODE XREF: sub_6264+58j
		move.l	d0,(a1)+
		dbf	d1,loc_62BA
		move.w	d2,d0
		asr.w	#4,d0
		move.w	d0,d1
		asr.w	#1,d1
		add.w	d1,d0
		move.w	#7,d1

loc_62CE:				; CODE XREF: sub_6264+6Cj
		move.l	d0,(a1)+
		dbf	d1,loc_62CE
		move.w	d2,d0
		asr.w	#1,d0
		move.w	d2,d1
		asr.w	#3,d1
		sub.w	d1,d0
		ext.l	d0
		asl.l	#4,d0
		divs.w	#$30,d0	; '0'
		ext.l	d0
		asl.l	#4,d0
		asl.l	#8,d0
		moveq	#0,d3
		move.w	d2,d3
		asr.w	#3,d3
		move.w	#$27,d1	; '''

loc_62F6:				; CODE XREF: sub_6264+9Cj
		move.w	d2,(a1)+
		move.w	d3,(a1)+
		swap	d3
		add.l	d0,d3
		swap	d3
		dbf	d1,loc_62F6
		rts
; End of function sub_6264

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6306:				; CODE XREF: ROM:000060A0j
					; ROM:0000640Cj
		lea	($FFFFE000).w,a1
		move.w	#$E,d1
		move.w	($FFFFEE00).w,d0
		neg.w	d0
		swap	d0
		andi.w	#$F,d2
		add.w	d2,d2
		move.w	(a2)+,d0
		jmp	loc_6324(pc,d2.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6322:				; CODE XREF: ROM:00006344j
		move.w	(a2)+,d0

loc_6324:
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		dbf	d1,loc_6322
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Deform_HPZ:				; DATA XREF: ROM:Deform_Indexo
		move.w	($FFFFEEB0).w,d4
		ext.l	d4
		asl.l	#6,d4
		moveq	#2,d6
		bsr.w	ScrollBlock4
		move.w	($FFFFEEB2).w,d5
		ext.l	d5
		asl.l	#7,d5
		moveq	#6,d6
		bsr.w	ScrollBlock2
		move.w	($FFFFEE0C).w,($FFFFF618).w
		lea	($FFFFA800).w,a1
		move.w	($FFFFEE00).w,d2
		neg.w	d2
		move.w	d2,d0
		asr.w	#1,d0
		move.w	#7,d1

loc_637E:				; CODE XREF: ROM:00006380j
		move.w	d0,(a1)+
		dbf	d1,loc_637E
		move.w	d2,d0
		asr.w	#3,d0
		sub.w	d2,d0
		ext.l	d0
		asl.l	#3,d0
		divs.w	#8,d0
		ext.l	d0
		asl.l	#4,d0
		asl.l	#8,d0
		moveq	#0,d3
		move.w	d2,d3
		asr.w	#1,d3
		lea	($FFFFA860).w,a2
		swap	d3
		add.l	d0,d3
		swap	d3
		move.w	d3,(a1)+
		move.w	d3,(a1)+
		move.w	d3,(a1)+
		move.w	d3,-(a2)
		move.w	d3,-(a2)
		move.w	d3,-(a2)
		swap	d3
		add.l	d0,d3
		swap	d3
		move.w	d3,(a1)+
		move.w	d3,(a1)+
		move.w	d3,-(a2)
		move.w	d3,-(a2)
		swap	d3
		add.l	d0,d3
		swap	d3
		move.w	d3,(a1)+
		move.w	d3,-(a2)
		swap	d3
		add.l	d0,d3
		swap	d3
		move.w	d3,(a1)+
		move.w	d3,-(a2)
		move.w	($FFFFEE08).w,d0
		neg.w	d0
		move.w	#$19,d1

loc_63E0:				; CODE XREF: ROM:000063E2j
		move.w	d0,(a1)+
		dbf	d1,loc_63E0
		adda.w	#$E,a1
		move.w	d2,d0
		asr.w	#1,d0
		move.w	#$17,d1

loc_63F2:				; CODE XREF: ROM:000063F4j
		move.w	d0,(a1)+
		dbf	d1,loc_63F2
		lea	($FFFFA800).w,a2
		move.w	($FFFFEE0C).w,d0
		move.w	d0,d2
		andi.w	#$3F0,d0
		lsr.w	#3,d0
		lea	(a2,d0.w),a2
		bra.w	loc_6306
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Deform_HTZ:				; DATA XREF: ROM:Deform_Indexo
		move.w	($FFFFEE0C).w,($FFFFF618).w
		lea	($FFFFE000).w,a1
		move.w	($FFFFEE00).w,d0
		neg.w	d0
		move.w	d0,d2
		swap	d0
		move.w	d2,d0
		asr.w	#3,d0
		move.w	#$7F,d1	; ''

loc_642C:				; CODE XREF: ROM:0000642Ej
		move.l	d0,(a1)+
		dbf	d1,loc_642C
		move.l	d0,d4
		move.w	d2,d0
		asr.w	#1,d0
		move.w	d2,d1
		asr.w	#3,d1
		sub.w	d1,d0
		ext.l	d0
		asl.l	#4,d0
		divs.w	#$18,d0
		ext.l	d0
		asl.l	#4,d0
		asl.l	#8,d0
		moveq	#0,d3
		move.w	d2,d3
		asr.w	#3,d3
		swap	d3
		add.l	d0,d3
		swap	d3
		move.w	d3,d4
		move.l	d4,(a1)+
		move.l	d4,(a1)+
		move.l	d4,(a1)+
		swap	d3
		add.l	d0,d3
		swap	d3
		move.w	d3,d4
		move.l	d4,(a1)+
		move.l	d4,(a1)+
		move.l	d4,(a1)+
		move.l	d4,(a1)+
		move.l	d4,(a1)+
		swap	d3
		add.l	d0,d3
		swap	d3
		move.w	d3,d4
		move.w	#6,d1

loc_647E:				; CODE XREF: ROM:00006480j
		move.l	d4,(a1)+
		dbf	d1,loc_647E
		swap	d3
		add.l	d0,d3
		add.l	d0,d3
		swap	d3
		move.w	d3,d4
		move.w	#7,d1

loc_6492:				; CODE XREF: ROM:00006494j
		move.l	d4,(a1)+
		dbf	d1,loc_6492
		swap	d3
		add.l	d0,d3
		add.l	d0,d3
		swap	d3
		move.w	d3,d4
		move.w	#9,d1

loc_64A6:				; CODE XREF: ROM:000064A8j
		move.l	d4,(a1)+
		dbf	d1,loc_64A6
		swap	d3
		add.l	d0,d3
		add.l	d0,d3
		add.l	d0,d3
		swap	d3
		move.w	d3,d4
		move.w	#$E,d1

loc_64BC:				; CODE XREF: ROM:000064BEj
		move.l	d4,(a1)+
		dbf	d1,loc_64BC
		swap	d3
		add.l	d0,d3
		add.l	d0,d3
		add.l	d0,d3
		swap	d3
		move.w	#2,d2

loc_64D0:				; CODE XREF: ROM:000064E8j
		move.w	d3,d4
		move.w	#$F,d1

loc_64D6:				; CODE XREF: ROM:000064D8j
		move.l	d4,(a1)+
		dbf	d1,loc_64D6
		swap	d3
		add.l	d0,d3
		add.l	d0,d3
		add.l	d0,d3
		add.l	d0,d3
		swap	d3
		dbf	d2,loc_64D0
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ScrollHorizontal:			; CODE XREF: DeformBGLayer+44p
					; DeformBGLayer+7Ap
		move.w	(a1),d4
		bsr.s	sub_6514
		move.w	(a1),d0
		andi.w	#$10,d0
		move.b	(a2),d1
		eor.b	d1,d0
		bne.s	locret_6512
		eori.b	#$10,(a2)
		move.w	(a1),d0
		sub.w	d4,d0
		bpl.s	loc_650E
		bset	#2,(a3)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_650E:				; CODE XREF: ScrollHorizontal+18j
		bset	#3,(a3)

locret_6512:				; CODE XREF: ScrollHorizontal+Ej
		rts
; End of function ScrollHorizontal


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6514:				; CODE XREF: ScrollHorizontal+2p
		move.w	(a5),d1
		beq.s	loc_6536
		subi.w	#$100,d1
		move.w	d1,(a5)
		moveq	#0,d1
		move.b	(a5),d1
		lsl.b	#2,d1
		addq.b	#4,d1
		move.w	2(a5),d0
		sub.b	d1,d0
		move.w	(a6,d0.w),d0
		andi.w	#$3FFF,d0
		bra.s	loc_653A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6536:				; CODE XREF: sub_6514+2j
		move.w	8(a0),d0

loc_653A:				; CODE XREF: sub_6514+20j
		sub.w	(a1),d0
		subi.w	#$90,d0	; ''
		blt.s	loc_654C
		subi.w	#$10,d0
		bge.s	loc_6564
		clr.w	(a4)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_654C:				; CODE XREF: sub_6514+2Cj
		cmpi.w	#$FFF0,d0
		bgt.s	loc_6556
		move.w	#$FFF0,d0

loc_6556:				; CODE XREF: sub_6514+3Cj
		add.w	(a1),d0
		cmp.w	($FFFFEEC8).w,d0
		bgt.s	loc_657A
		move.w	($FFFFEEC8).w,d0
		bra.s	loc_657A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6564:				; CODE XREF: sub_6514+32j
		cmpi.w	#$10,d0
		bcs.s	loc_656E
		move.w	#$10,d0

loc_656E:				; CODE XREF: sub_6514+54j
		add.w	(a1),d0
		cmp.w	($FFFFEECA).w,d0
		blt.s	loc_657A
		move.w	($FFFFEECA).w,d0

loc_657A:				; CODE XREF: sub_6514+48j sub_6514+4Ej ...
		move.w	d0,d1
		sub.w	(a1),d1
		asl.w	#8,d1
		move.w	d0,(a1)
		move.w	d1,(a4)
		rts
; End of function sub_6514


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ScrollVertical:				; CODE XREF: DeformBGLayer+54p
					; DeformBGLayer+8Ap
		moveq	#0,d1
		move.w	$C(a0),d0
		sub.w	(a1),d0
		btst	#2,$22(a0)
		beq.s	loc_6598
		subq.w	#5,d0

loc_6598:				; CODE XREF: ScrollVertical+Ej
		btst	#1,$22(a0)
		beq.s	loc_65B8
		addi.w	#$20,d0	; ' '
		sub.w	($FFFFEED8).w,d0
		bcs.s	loc_6602
		subi.w	#$40,d0	; '@'
		bcc.s	loc_6602
		tst.b	($FFFFEEDE).w
		bne.s	loc_6614
		bra.s	loc_65C4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_65B8:				; CODE XREF: ScrollVertical+18j
		sub.w	($FFFFEED8).w,d0
		bne.s	loc_65C8
		tst.b	($FFFFEEDE).w
		bne.s	loc_6614

loc_65C4:				; CODE XREF: ScrollVertical+30j
		clr.w	(a4)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_65C8:				; CODE XREF: ScrollVertical+36j
		cmpi.w	#$60,($FFFFEED8).w ; '`'
		bne.s	loc_65F0
		move.w	$14(a0),d1
		bpl.s	loc_65D8
		neg.w	d1

loc_65D8:				; CODE XREF: ScrollVertical+4Ej
		cmpi.w	#$800,d1
		bcc.s	loc_6602
		move.w	#$600,d1
		cmpi.w	#6,d0
		bgt.s	loc_665C
		cmpi.w	#$FFFA,d0
		blt.s	loc_662A
		bra.s	loc_661A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_65F0:				; CODE XREF: ScrollVertical+48j
		move.w	#$200,d1
		cmpi.w	#2,d0
		bgt.s	loc_665C
		cmpi.w	#$FFFE,d0
		blt.s	loc_662A
		bra.s	loc_661A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6602:				; CODE XREF: ScrollVertical+22j
					; ScrollVertical+28j ...
		move.w	#$1000,d1
		cmpi.w	#$10,d0
		bgt.s	loc_665C
		cmpi.w	#$FFF0,d0
		blt.s	loc_662A
		bra.s	loc_661A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6614:				; CODE XREF: ScrollVertical+2Ej
					; ScrollVertical+3Cj
		moveq	#0,d0
		move.b	d0,($FFFFEEDE).w

loc_661A:				; CODE XREF: ScrollVertical+68j
					; ScrollVertical+7Aj ...
		moveq	#0,d1
		move.w	d0,d1
		add.w	(a1),d1
		tst.w	d0
		bpl.w	loc_6664
		bra.w	loc_6634
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_662A:				; CODE XREF: ScrollVertical+66j
					; ScrollVertical+78j ...
		neg.w	d1
		ext.l	d1
		asl.l	#8,d1
		add.l	(a1),d1
		swap	d1

loc_6634:				; CODE XREF: ScrollVertical+A0j
		cmp.w	($FFFFEECC).w,d1
		bgt.s	loc_6686
		cmpi.w	#$FF00,d1
		bgt.s	loc_6656
		andi.w	#$7FF,d1
		andi.w	#$7FF,$C(a0)
		andi.w	#$7FF,(a1)
		andi.w	#$3FF,8(a1)
		bra.s	loc_6686
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6656:				; CODE XREF: ScrollVertical+B8j
		move.w	($FFFFEECC).w,d1
		bra.s	loc_6686
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_665C:				; CODE XREF: ScrollVertical+60j
					; ScrollVertical+72j ...
		ext.l	d1
		asl.l	#8,d1
		add.l	(a1),d1
		swap	d1

loc_6664:				; CODE XREF: ScrollVertical+9Cj
		cmp.w	($FFFFEECE).w,d1
		blt.s	loc_6686
		subi.w	#$800,d1
		bcs.s	loc_6682
		andi.w	#$7FF,$C(a0)
		subi.w	#$800,(a1)
		andi.w	#$3FF,8(a1)
		bra.s	loc_6686
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6682:				; CODE XREF: ScrollVertical+E8j
		move.w	($FFFFEECE).w,d1

loc_6686:				; CODE XREF: ScrollVertical+B2j
					; ScrollVertical+CEj ...
		move.w	(a1),d4
		swap	d1
		move.l	d1,d3
		sub.l	(a1),d3
		ror.l	#8,d3
		move.w	d3,(a4)
		move.l	d1,(a1)
		move.w	(a1),d0
		andi.w	#$10,d0
		move.b	(a2),d1
		eor.b	d1,d0
		bne.s	locret_66B4
		eori.b	#$10,(a2)
		move.w	(a1),d0
		sub.w	d4,d0
		bpl.s	loc_66B0
		bset	#0,(a3)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_66B0:				; CODE XREF: ScrollVertical+122j
		bset	#1,(a3)

locret_66B4:				; CODE XREF: ScrollVertical+118j
		rts
; End of function ScrollVertical


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ScrollBlock1:				; CODE XREF: ROM:00005E74p
					; ROM:00006006p ...
		move.l	($FFFFEE08).w,d2
		move.l	d2,d0
		add.l	d4,d0
		move.l	d0,($FFFFEE08).w
		move.l	d0,d1
		swap	d1
		andi.w	#$10,d1
		move.b	($FFFFEE42).w,d3
		eor.b	d3,d1
		bne.s	loc_66EA
		eori.b	#$10,($FFFFEE42).w
		sub.l	d2,d0
		bpl.s	loc_66E4
		bset	#2,($FFFFEE52).w
		bra.s	loc_66EA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_66E4:				; CODE XREF: ScrollBlock1+24j
		bset	#3,($FFFFEE52).w

loc_66EA:				; CODE XREF: ScrollBlock1+1Aj
					; ScrollBlock1+2Cj
		move.l	($FFFFEE0C).w,d3
		move.l	d3,d0
		add.l	d5,d0
		move.l	d0,($FFFFEE0C).w
		move.l	d0,d1
		swap	d1
		andi.w	#$10,d1
		move.b	($FFFFEE43).w,d2
		eor.b	d2,d1
		bne.s	locret_671E
		eori.b	#$10,($FFFFEE43).w
		sub.l	d3,d0
		bpl.s	loc_6718
		bset	#0,($FFFFEE52).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6718:				; CODE XREF: ScrollBlock1+58j
		bset	#1,($FFFFEE52).w

locret_671E:				; CODE XREF: ScrollBlock1+4Ej
		rts
; End of function ScrollBlock1


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ScrollBlock2:				; CODE XREF: ROM:00006362p
		move.l	($FFFFEE0C).w,d3
		move.l	d3,d0
		add.l	d5,d0
		move.l	d0,($FFFFEE0C).w
		move.l	d0,d1
		swap	d1
		andi.w	#$10,d1
		move.b	($FFFFEE43).w,d2
		eor.b	d2,d1
		bne.s	locret_6752
		eori.b	#$10,($FFFFEE43).w
		sub.l	d3,d0
		bpl.s	loc_674C
		bset	d6,($FFFFEE52).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_674C:				; CODE XREF: ScrollBlock2+24j
		addq.b	#1,d6
		bset	d6,($FFFFEE52).w

locret_6752:				; CODE XREF: ScrollBlock2+1Aj
		rts
; End of function ScrollBlock2

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ScrollBlock3:
		move.w	($FFFFEE0C).w,d3
		move.w	d0,($FFFFEE0C).w
		move.w	d0,d1
		andi.w	#$10,d1
		move.b	($FFFFEE43).w,d2
		eor.b	d2,d1
		bne.s	locret_6782
		eori.b	#$10,($FFFFEE43).w
		sub.w	d3,d0
		bpl.s	loc_677C
		bset	#0,($FFFFEE52).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_677C:				; CODE XREF: ROM:00006772j
		bset	#1,($FFFFEE52).w

locret_6782:				; CODE XREF: ROM:00006768j
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ScrollBlock4:				; CODE XREF: ROM:00006354p
		move.l	($FFFFEE08).w,d2
		move.l	d2,d0
		add.l	d4,d0
		move.l	d0,($FFFFEE08).w
		move.l	d0,d1
		swap	d1
		andi.w	#$10,d1
		move.b	($FFFFEE42).w,d3
		eor.b	d3,d1
		bne.s	locret_67B6
		eori.b	#$10,($FFFFEE42).w
		sub.l	d2,d0
		bpl.s	loc_67B0
		bset	d6,($FFFFEE52).w
		bra.s	locret_67B6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_67B0:				; CODE XREF: ScrollBlock4+24j
		addq.b	#1,d6
		bset	d6,($FFFFEE52).w

locret_67B6:				; CODE XREF: ScrollBlock4+1Aj
					; ScrollBlock4+2Aj
		rts
; End of function ScrollBlock4


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ScrollBlock5:				; CODE XREF: ROM:00005B7Ep
					; ROM:00005C78p ...
		move.l	($FFFFEE10).w,d2
		move.l	d2,d0
		add.l	d4,d0
		move.l	d0,($FFFFEE10).w
		move.l	d0,d1
		swap	d1
		andi.w	#$10,d1
		move.b	($FFFFEE44).w,d3
		eor.b	d3,d1
		bne.s	locret_67EA
		eori.b	#$10,($FFFFEE44).w
		sub.l	d2,d0
		bpl.s	loc_67E4
		bset	d6,($FFFFEE54).w
		bra.s	locret_67EA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_67E4:				; CODE XREF: ScrollBlock5+24j
		addq.b	#1,d6
		bset	d6,($FFFFEE54).w

locret_67EA:				; CODE XREF: ScrollBlock5+1Aj
					; ScrollBlock5+2Aj
		rts
; End of function ScrollBlock5


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ScrollBlock6:				; CODE XREF: ROM:00005B70p
					; ROM:00005C6Ap
		move.l	($FFFFEE18).w,d2
		move.l	d2,d0
		add.l	d4,d0
		move.l	d0,($FFFFEE18).w
		move.l	d0,d1
		swap	d1
		andi.w	#$10,d1
		move.b	($FFFFEE46).w,d3
		eor.b	d3,d1
		bne.s	locret_681E
		eori.b	#$10,($FFFFEE46).w
		sub.l	d2,d0
		bpl.s	loc_6818
		bset	d6,($FFFFEE56).w
		bra.s	locret_681E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6818:				; CODE XREF: ScrollBlock6+24j
		addq.b	#1,d6
		bset	d6,($FFFFEE56).w

locret_681E:				; CODE XREF: ScrollBlock6+1Aj
					; ScrollBlock6+2Aj
		rts
; End of function ScrollBlock6

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		lea	(VDP_control_port).l,a5
		lea	(VDP_data_port).l,a6
		lea	($FFFFEE52).w,a2
		lea	($FFFFEE08).w,a3
		lea	($FFFF8080).w,a4
		move.w	#$6000,d2
		bsr.w	sub_69B2
		lea	($FFFFEE54).w,a2
		lea	($FFFFEE10).w,a3
		bra.w	sub_6A82

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


LoadTilesAsYouMove:			; CODE XREF: Do_Updatesp	ROM:00000F78p
		lea	(VDP_control_port).l,a5
		lea	(VDP_data_port).l,a6
		lea	($FFFFEEA2).w,a2
		lea	($FFFFEE68).w,a3
		lea	($FFFF8080).w,a4
		move.w	#$6000,d2
		bsr.w	sub_69B2
		lea	($FFFFEEA4).w,a2
		lea	($FFFFEE70).w,a3
		bsr.w	sub_6A82
		lea	($FFFFEEA6).w,a2
		lea	($FFFFEE78).w,a3
		bsr.w	sub_6B7C
		tst.w	(Two_player_mode).w
		beq.s	loc_689E
		lea	($FFFFEEA8).w,a2
		lea	($FFFFEE80).w,a3
		lea	($FFFF8000).w,a4
		move.w	#$6000,d2
		bsr.w	sub_694C

loc_689E:				; CODE XREF: LoadTilesAsYouMove+3Cj
		lea	($FFFFEEA0).w,a2
		lea	($FFFFEE60).w,a3
		lea	($FFFF8000).w,a4
		move.w	#$4000,d2
		tst.b	($FFFFF720).w
		beq.s	loc_68E6
		move.b	#0,($FFFFF720).w
		moveq	#$FFFFFFF0,d4
		moveq	#$F,d6

loc_68BE:				; CODE XREF: LoadTilesAsYouMove+8Ej
		movem.l	d4-d6,-(sp)
		moveq	#$FFFFFFF0,d5
		move.w	d4,d1
		bsr.w	sub_7084
		move.w	d1,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_6D8C
		movem.l	(sp)+,d4-d6
		addi.w	#$10,d4
		dbf	d6,loc_68BE
		move.b	#0,($FFFFEEA0).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_68E6:				; CODE XREF: LoadTilesAsYouMove+66j
		tst.b	(a2)
		beq.s	locret_694A
		bclr	#0,(a2)
		beq.s	loc_6900
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_7084
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_6D8C

loc_6900:				; CODE XREF: LoadTilesAsYouMove+A2j
		bclr	#1,(a2)
		beq.s	loc_691A
		move.w	#$E0,d4	; 'à'
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_7084
		move.w	#$E0,d4	; 'à'
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_6D8C

loc_691A:				; CODE XREF: LoadTilesAsYouMove+B8j
		bclr	#2,(a2)
		beq.s	loc_6930
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_7084
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_6CFE

loc_6930:				; CODE XREF: LoadTilesAsYouMove+D2j
		bclr	#3,(a2)
		beq.s	locret_694A
		moveq	#$FFFFFFF0,d4
		move.w	#$140,d5
		bsr.w	sub_7084
		moveq	#$FFFFFFF0,d4
		move.w	#$140,d5
		bsr.w	sub_6CFE

locret_694A:				; CODE XREF: LoadTilesAsYouMove+9Cj
					; LoadTilesAsYouMove+E8j
		rts
; End of function LoadTilesAsYouMove


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_694C:				; CODE XREF: LoadTilesAsYouMove+4Ep
		tst.b	(a2)
		beq.s	locret_69B0
		bclr	#0,(a2)
		beq.s	loc_6966
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_70C0
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_6D8C

loc_6966:				; CODE XREF: sub_694C+8j
		bclr	#1,(a2)
		beq.s	loc_6980
		move.w	#$E0,d4	; 'à'
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_70C0
		move.w	#$E0,d4	; 'à'
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_6D8C

loc_6980:				; CODE XREF: sub_694C+1Ej
		bclr	#2,(a2)
		beq.s	loc_6996
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_70C0
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_6CFE

loc_6996:				; CODE XREF: sub_694C+38j
		bclr	#3,(a2)
		beq.s	locret_69B0
		moveq	#$FFFFFFF0,d4
		move.w	#$140,d5
		bsr.w	sub_70C0
		moveq	#$FFFFFFF0,d4
		move.w	#$140,d5
		bsr.w	sub_6CFE

locret_69B0:				; CODE XREF: sub_694C+2j sub_694C+4Ej
		rts
; End of function sub_694C


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_69B2:				; CODE XREF: ROM:0000683Cp
					; LoadTilesAsYouMove+1Cp
		tst.b	(a2)
		beq.w	locret_6A80
		bclr	#0,(a2)
		beq.s	loc_69CE
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_7084
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_6D8C

loc_69CE:				; CODE XREF: sub_69B2+Aj
		bclr	#1,(a2)
		beq.s	loc_69E8
		move.w	#$E0,d4	; 'à'
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_7084
		move.w	#$E0,d4	; 'à'
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_6D8C

loc_69E8:				; CODE XREF: sub_69B2+20j
		bclr	#2,(a2)
		beq.s	loc_69FE
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_7084
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_6CFE

loc_69FE:				; CODE XREF: sub_69B2+3Aj
		bclr	#3,(a2)
		beq.s	loc_6A18
		moveq	#$FFFFFFF0,d4
		move.w	#$140,d5
		bsr.w	sub_7084
		moveq	#$FFFFFFF0,d4
		move.w	#$140,d5
		bsr.w	sub_6CFE

loc_6A18:				; CODE XREF: sub_69B2+50j
		bclr	#4,(a2)
		beq.s	loc_6A30
		moveq	#$FFFFFFF0,d4
		moveq	#0,d5
		bsr.w	sub_7086
		moveq	#$FFFFFFF0,d4
		moveq	#0,d5
		moveq	#$1F,d6
		bsr.w	sub_6D90

loc_6A30:				; CODE XREF: sub_69B2+6Aj
		bclr	#5,(a2)
		beq.s	loc_6A4C
		move.w	#$E0,d4	; 'à'
		moveq	#0,d5
		bsr.w	sub_7086
		move.w	#$E0,d4	; 'à'
		moveq	#0,d5
		moveq	#$1F,d6
		bsr.w	sub_6D90

loc_6A4C:				; CODE XREF: sub_69B2+82j
		bclr	#6,(a2)
		beq.s	loc_6A64
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_7084
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		moveq	#$1F,d6
		bsr.w	sub_6D84

loc_6A64:				; CODE XREF: sub_69B2+9Ej
		bclr	#7,(a2)
		beq.s	locret_6A80
		move.w	#$E0,d4	; 'à'
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_7084
		move.w	#$E0,d4	; 'à'
		moveq	#$FFFFFFF0,d5
		moveq	#$1F,d6
		bsr.w	sub_6D84

locret_6A80:				; CODE XREF: sub_69B2+2j sub_69B2+B6j
		rts
; End of function sub_69B2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6A82:				; CODE XREF: ROM:00006848j
					; LoadTilesAsYouMove+28p
		tst.b	(a2)
		beq.w	locret_6ACE
		cmpi.b	#5,(Current_Zone).w
		beq.w	loc_6AF2
		bclr	#0,(a2)
		beq.s	loc_6AAE
		move.w	#$70,d4	; 'p'
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_7084
		move.w	#$70,d4	; 'p'
		moveq	#$FFFFFFF0,d5
		moveq	#2,d6
		bsr.w	sub_6D00

loc_6AAE:				; CODE XREF: sub_6A82+14j
		bclr	#1,(a2)
		beq.s	locret_6ACE
		move.w	#$70,d4	; 'p'
		move.w	#$140,d5
		bsr.w	sub_7084
		move.w	#$70,d4	; 'p'
		move.w	#$140,d5
		moveq	#2,d6
		bsr.w	sub_6D00

locret_6ACE:				; CODE XREF: sub_6A82+2j sub_6A82+30j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_6AD0:	dc.b 0			; DATA XREF: sub_6A82:loc_6B66t
byte_6AD1:	dc.b   0,  0,  0,  0,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  4,  4; 0
					; DATA XREF: sub_6A82:loc_6B04t
					; ROM:0000720At
		dc.b   4,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2; 16
		dc.b 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6AF2:				; CODE XREF: sub_6A82+Cj
		moveq	#$FFFFFFF0,d4
		bclr	#0,(a2)
		bne.s	loc_6B04
		bclr	#1,(a2)
		beq.s	loc_6B4C
		move.w	#$E0,d4	; 'à'

loc_6B04:				; CODE XREF: sub_6A82+76j
		lea	byte_6AD1(pc),a0
		move.w	($FFFFEE0C).w,d0
		add.w	d4,d0
		andi.w	#$1F0,d0
		lsr.w	#4,d0
		move.b	(a0,d0.w),d0
		lea	(word_6C78).l,a3
		movea.w	(a3,d0.w),a3
		beq.s	loc_6B38
		moveq	#$FFFFFFF0,d5
		movem.l	d4-d5,-(sp)
		bsr.w	sub_7084
		movem.l	(sp)+,d4-d5
		bsr.w	sub_6D8C
		bra.s	loc_6B4C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6B38:				; CODE XREF: sub_6A82+A0j
		moveq	#0,d5
		movem.l	d4-d5,-(sp)
		bsr.w	sub_7086
		movem.l	(sp)+,d4-d5
		moveq	#$1F,d6
		bsr.w	sub_6D90

loc_6B4C:				; CODE XREF: sub_6A82+7Cj sub_6A82+B4j
		tst.b	(a2)
		bne.s	loc_6B52
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6B52:				; CODE XREF: sub_6A82+CCj
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		move.b	(a2),d0
		andi.b	#$A8,d0
		beq.s	loc_6B66
		lsr.b	#1,d0
		move.b	d0,(a2)
		move.w	#$140,d5

loc_6B66:				; CODE XREF: sub_6A82+DAj
		lea	byte_6AD0(pc),a0
		move.w	($FFFFEE0C).w,d0
		andi.w	#$1F0,d0
		lsr.w	#4,d0
		lea	(a0,d0.w),a0
		bra.w	loc_6C80
; End of function sub_6A82


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6B7C:				; CODE XREF: LoadTilesAsYouMove+34p
		tst.b	(a2)
		beq.w	locret_6BC8
		cmpi.b	#2,(Current_Zone).w
		beq.w	loc_6C0C
		bclr	#0,(a2)
		beq.s	loc_6BA8
		move.w	#$40,d4	; '@'
		moveq	#$FFFFFFF0,d5
		bsr.w	sub_7084
		move.w	#$40,d4	; '@'
		moveq	#$FFFFFFF0,d5
		moveq	#2,d6
		bsr.w	sub_6D00

loc_6BA8:				; CODE XREF: sub_6B7C+14j
		bclr	#1,(a2)
		beq.s	locret_6BC8
		move.w	#$40,d4	; '@'
		move.w	#$140,d5
		bsr.w	sub_7084
		move.w	#$40,d4	; '@'
		move.w	#$140,d5
		moveq	#2,d6
		bsr.w	sub_6D00

locret_6BC8:				; CODE XREF: sub_6B7C+2j sub_6B7C+30j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_6BCA:	dc.b 0			; DATA XREF: sub_6B7C:loc_6C62t
byte_6BCB:	dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2; 0
					; DATA XREF: sub_6B7C:loc_6C1Et
					; ROM:000071E2t
		dc.b   2,  2,  2,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4; 16
		dc.b   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4; 32
		dc.b   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4; 48
		dc.b 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6C0C:				; CODE XREF: sub_6B7C+Cj
		moveq	#$FFFFFFF0,d4
		bclr	#0,(a2)
		bne.s	loc_6C1E
		bclr	#1,(a2)
		beq.s	loc_6C48
		move.w	#$E0,d4	; 'à'

loc_6C1E:				; CODE XREF: sub_6B7C+96j
		lea	byte_6BCB(pc),a0
		move.w	($FFFFEE0C).w,d0
		add.w	d4,d0
		andi.w	#$3F0,d0
		lsr.w	#4,d0
		move.b	(a0,d0.w),d0
		movea.w	word_6C78(pc,d0.w),a3
		moveq	#$FFFFFFF0,d5
		movem.l	d4-d5,-(sp)
		bsr.w	sub_7084
		movem.l	(sp)+,d4-d5
		bsr.w	sub_6D8C

loc_6C48:				; CODE XREF: sub_6B7C+9Cj
		tst.b	(a2)
		bne.s	loc_6C4E
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6C4E:				; CODE XREF: sub_6B7C+CEj
		moveq	#$FFFFFFF0,d4
		moveq	#$FFFFFFF0,d5
		move.b	(a2),d0
		andi.b	#$A8,d0
		beq.s	loc_6C62
		lsr.b	#1,d0
		move.b	d0,(a2)
		move.w	#$140,d5

loc_6C62:				; CODE XREF: sub_6B7C+DCj
		lea	byte_6BCA(pc),a0
		move.w	($FFFFEE0C).w,d0
		andi.w	#$7F0,d0
		lsr.w	#4,d0
		lea	(a0,d0.w),a0
		bra.w	loc_6C80
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
word_6C78:	dc.w $EE68,$EE68,$EE70,$EE78; 0	; DATA XREF: sub_6A82+96o
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6C80:				; CODE XREF: sub_6A82+F6j sub_6B7C+F8j
		tst.w	(Two_player_mode).w
		bne.s	loc_6CC2
		moveq	#$F,d6
		move.l	#$800000,d7

loc_6C8E:				; CODE XREF: sub_6B7C+13Ej
		moveq	#0,d0
		move.b	(a0)+,d0
		btst	d0,(a2)
		beq.s	loc_6CB6
		movea.w	word_6C78(pc,d0.w),a3
		movem.l	d4-d5/a0,-(sp)
		movem.l	d4-d5,-(sp)
		bsr.w	sub_7040
		movem.l	(sp)+,d4-d5
		bsr.w	sub_7084
		bsr.w	sub_6F70
		movem.l	(sp)+,d4-d5/a0

loc_6CB6:				; CODE XREF: sub_6B7C+118j
		addi.w	#$10,d4
		dbf	d6,loc_6C8E
		clr.b	(a2)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6CC2:				; CODE XREF: sub_6B7C+108j
		moveq	#$F,d6
		move.l	#$800000,d7

loc_6CCA:				; CODE XREF: sub_6B7C+17Aj
		moveq	#0,d0
		move.b	(a0)+,d0
		btst	d0,(a2)
		beq.s	loc_6CF2
		movea.w	word_6C78(pc,d0.w),a3
		movem.l	d4-d5/a0,-(sp)
		movem.l	d4-d5,-(sp)
		bsr.w	sub_7040
		movem.l	(sp)+,d4-d5
		bsr.w	sub_7084
		bsr.w	sub_6FF6
		movem.l	(sp)+,d4-d5/a0

loc_6CF2:				; CODE XREF: sub_6B7C+154j
		addi.w	#$10,d4
		dbf	d6,loc_6CCA
		clr.b	(a2)
		rts
; End of function sub_6B7C


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6CFE:				; CODE XREF: LoadTilesAsYouMove+E0p
					; LoadTilesAsYouMove+FAp ...
		moveq	#$F,d6
; End of function sub_6CFE


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6D00:				; CODE XREF: sub_6A82+28p sub_6A82+48p ...
		add.w	(a3),d5
		add.w	4(a3),d4
		move.l	#$800000,d7
		move.l	d0,d1
		bsr.w	sub_6E98
		tst.w	(Two_player_mode).w
		bne.s	loc_6D4E

loc_6D18:				; CODE XREF: sub_6D00:loc_6D48j
		move.w	(a0),d3
		andi.w	#$3FF,d3
		lsl.w	#3,d3
		lea	($FFFF9000).w,a1
		adda.w	d3,a1
		move.l	d1,d0
		bsr.w	sub_6F70
		adda.w	#$10,a0
		addi.w	#$100,d1
		andi.w	#$FFF,d1
		addi.w	#$10,d4
		move.w	d4,d0
		andi.w	#$70,d0	; 'p'
		bne.s	loc_6D48
		bsr.w	sub_6E98

loc_6D48:				; CODE XREF: sub_6D00+42j
		dbf	d6,loc_6D18
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6D4E:				; CODE XREF: sub_6D00+16j
					; sub_6D00:loc_6D7Ej
		move.w	(a0),d3
		andi.w	#$3FF,d3
		lsl.w	#3,d3
		lea	($FFFF9000).w,a1
		adda.w	d3,a1
		move.l	d1,d0
		bsr.w	sub_6FF6
		adda.w	#$10,a0
		addi.w	#$80,d1	; ''
		andi.w	#$FFF,d1
		addi.w	#$10,d4
		move.w	d4,d0
		andi.w	#$70,d0	; 'p'
		bne.s	loc_6D7E
		bsr.w	sub_6E98

loc_6D7E:				; CODE XREF: sub_6D00+78j
		dbf	d6,loc_6D4E
		rts
; End of function sub_6D00


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6D84:				; CODE XREF: sub_69B2+AEp sub_69B2+CAp ...
		add.w	(a3),d5
		add.w	4(a3),d4
		bra.s	loc_6D94
; End of function sub_6D84


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6D8C:				; CODE XREF: LoadTilesAsYouMove+82p
					; LoadTilesAsYouMove+B0p ...
		moveq	#$15,d6
		add.w	(a3),d5
; End of function sub_6D8C


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6D90:				; CODE XREF: sub_69B2+7Ap sub_69B2+96p ...
		add.w	4(a3),d4

loc_6D94:				; CODE XREF: sub_6D84+6j
		tst.w	(Two_player_mode).w
		bne.s	loc_6E12
		move.l	a2,-(sp)
		move.w	d6,-(sp)
		lea	($FFFFEF00).w,a2
		move.l	d0,d1
		or.w	d2,d1
		swap	d1
		move.l	d1,-(sp)
		move.l	d1,(a5)
		swap	d1
		bsr.w	sub_6E98

loc_6DB2:				; CODE XREF: sub_6D90:loc_6DE4j
		move.w	(a0),d3
		andi.w	#$3FF,d3
		lsl.w	#3,d3
		lea	($FFFF9000).w,a1
		adda.w	d3,a1
		bsr.w	sub_6ED0
		addq.w	#2,a0
		addq.b	#4,d1
		bpl.s	loc_6DD4
		andi.b	#$7F,d1	; ''
		swap	d1
		move.l	d1,(a5)
		swap	d1

loc_6DD4:				; CODE XREF: sub_6D90+38j
		addi.w	#$10,d5
		move.w	d5,d0
		andi.w	#$70,d0	; 'p'
		bne.s	loc_6DE4
		bsr.w	sub_6E98

loc_6DE4:				; CODE XREF: sub_6D90+4Ej
		dbf	d6,loc_6DB2
		move.l	(sp)+,d1
		addi.l	#$800000,d1
		lea	($FFFFEF00).w,a2
		move.l	d1,(a5)
		swap	d1
		move.w	(sp)+,d6

loc_6DFA:				; CODE XREF: sub_6D90:loc_6E0Aj
		move.l	(a2)+,(a6)
		addq.b	#4,d1
		bmi.s	loc_6E0A
		ori.b	#$80,d1
		swap	d1
		move.l	d1,(a5)
		swap	d1

loc_6E0A:				; CODE XREF: sub_6D90+6Ej
		dbf	d6,loc_6DFA
		movea.l	(sp)+,a2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6E12:				; CODE XREF: sub_6D90+8j
		move.l	d0,d1
		or.w	d2,d1
		swap	d1
		move.l	d1,(a5)
		swap	d1
		tst.b	d1
		bmi.s	loc_6E5C
		bsr.w	sub_6E98

loc_6E24:				; CODE XREF: sub_6D90:loc_6E56j
		move.w	(a0),d3
		andi.w	#$3FF,d3
		lsl.w	#3,d3
		lea	($FFFF9000).w,a1
		adda.w	d3,a1
		bsr.w	sub_6F32
		addq.w	#2,a0
		addq.b	#4,d1
		bpl.s	loc_6E46
		andi.b	#$7F,d1	; ''
		swap	d1
		move.l	d1,(a5)
		swap	d1

loc_6E46:				; CODE XREF: sub_6D90+AAj
		addi.w	#$10,d5
		move.w	d5,d0
		andi.w	#$70,d0	; 'p'
		bne.s	loc_6E56
		bsr.w	sub_6E98

loc_6E56:				; CODE XREF: sub_6D90+C0j
		dbf	d6,loc_6E24
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6E5C:				; CODE XREF: sub_6D90+8Ej
		bsr.w	sub_6E98

loc_6E60:				; CODE XREF: sub_6D90:loc_6E92j
		move.w	(a0),d3
		andi.w	#$3FF,d3
		lsl.w	#3,d3
		lea	($FFFF9000).w,a1
		adda.w	d3,a1
		bsr.w	sub_6F32
		addq.w	#2,a0
		addq.b	#4,d1
		bmi.s	loc_6E82
		ori.b	#$80,d1
		swap	d1
		move.l	d1,(a5)
		swap	d1

loc_6E82:				; CODE XREF: sub_6D90+E6j
		addi.w	#$10,d5
		move.w	d5,d0
		andi.w	#$70,d0	; 'p'
		bne.s	loc_6E92
		bsr.w	sub_6E98

loc_6E92:				; CODE XREF: sub_6D90+FCj
		dbf	d6,loc_6E60
		rts
; End of function sub_6D90


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6E98:				; CODE XREF: sub_6D00+Ep sub_6D00+44p	...
		movem.l	d4-d5,-(sp)
		move.w	d4,d3
		add.w	d3,d3
		andi.w	#$F00,d3
		lsr.w	#3,d5
		move.w	d5,d0
		lsr.w	#4,d0
		andi.w	#$7F,d0	; ''
		add.w	d3,d0
		moveq	#$FFFFFFFF,d3
		move.b	(a4,d0.w),d3
		andi.w	#$FF,d3
		lsl.w	#7,d3
		andi.w	#$70,d4	; 'p'
		andi.w	#$E,d5
		add.w	d4,d3
		add.w	d5,d3
		movea.l	d3,a0
		movem.l	(sp)+,d4-d5
		rts
; End of function sub_6E98


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6ED0:				; CODE XREF: sub_6D90+30p
		btst	#3,(a0)
		bne.s	loc_6EFC
		btst	#2,(a0)
		bne.s	loc_6EE2
		move.l	(a1)+,(a6)
		move.l	(a1)+,(a2)+
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6EE2:				; CODE XREF: sub_6ED0+Aj
		move.l	(a1)+,d3
		eori.l	#$8000800,d3
		swap	d3
		move.l	d3,(a6)
		move.l	(a1)+,d3
		eori.l	#$8000800,d3
		swap	d3
		move.l	d3,(a2)+
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6EFC:				; CODE XREF: sub_6ED0+4j
		btst	#2,(a0)
		bne.s	loc_6F18
		move.l	(a1)+,d0
		move.l	(a1)+,d3
		eori.l	#$10001000,d3
		move.l	d3,(a6)
		eori.l	#$10001000,d0
		move.l	d0,(a2)+
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6F18:				; CODE XREF: sub_6ED0+30j
		move.l	(a1)+,d0
		move.l	(a1)+,d3
		eori.l	#$18001800,d3
		swap	d3
		move.l	d3,(a6)
		eori.l	#$18001800,d0
		swap	d0
		move.l	d0,(a2)+
		rts
; End of function sub_6ED0


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6F32:				; CODE XREF: sub_6D90+A2p sub_6D90+DEp
		btst	#3,(a0)
		bne.s	loc_6F50
		btst	#2,(a0)
		bne.s	loc_6F42
		move.l	(a1)+,(a6)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6F42:				; CODE XREF: sub_6F32+Aj
		move.l	(a1)+,d3
		eori.l	#$8000800,d3
		swap	d3
		move.l	d3,(a6)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6F50:				; CODE XREF: sub_6F32+4j
		btst	#2,(a0)
		bne.s	loc_6F62
		move.l	(a1)+,d3
		eori.l	#$10001000,d3
		move.l	d3,(a6)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6F62:				; CODE XREF: sub_6F32+22j
		move.l	(a1)+,d3
		eori.l	#$18001800,d3
		swap	d3
		move.l	d3,(a6)
		rts
; End of function sub_6F32


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6F70:				; CODE XREF: sub_6B7C+132p
					; sub_6D00+28p
		or.w	d2,d0
		swap	d0
		btst	#3,(a0)
		bne.s	loc_6FAC
		btst	#2,(a0)
		bne.s	loc_6F8C
		move.l	d0,(a5)
		move.l	(a1)+,(a6)
		add.l	d7,d0
		move.l	d0,(a5)
		move.l	(a1)+,(a6)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6F8C:				; CODE XREF: sub_6F70+Ej
		move.l	d0,(a5)
		move.l	(a1)+,d3
		eori.l	#$8000800,d3
		swap	d3
		move.l	d3,(a6)
		add.l	d7,d0
		move.l	d0,(a5)
		move.l	(a1)+,d3
		eori.l	#$8000800,d3
		swap	d3
		move.l	d3,(a6)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6FAC:				; CODE XREF: sub_6F70+8j
		btst	#2,(a0)
		bne.s	loc_6FD2
		move.l	d5,-(sp)
		move.l	d0,(a5)
		move.l	(a1)+,d5
		move.l	(a1)+,d3
		eori.l	#$10001000,d3
		move.l	d3,(a6)
		add.l	d7,d0
		move.l	d0,(a5)
		eori.l	#$10001000,d5
		move.l	d5,(a6)
		move.l	(sp)+,d5
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_6FD2:				; CODE XREF: sub_6F70+40j
		move.l	d5,-(sp)
		move.l	d0,(a5)
		move.l	(a1)+,d5
		move.l	(a1)+,d3
		eori.l	#$18001800,d3
		swap	d3
		move.l	d3,(a6)
		add.l	d7,d0
		move.l	d0,(a5)
		eori.l	#$18001800,d5
		swap	d5
		move.l	d5,(a6)
		move.l	(sp)+,d5
		rts
; End of function sub_6F70


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_6FF6:				; CODE XREF: sub_6B7C+16Ep
					; sub_6D00+5Ep
		or.w	d2,d0
		swap	d0
		btst	#3,(a0)
		bne.s	loc_701C
		btst	#2,(a0)
		bne.s	loc_700C
		move.l	d0,(a5)
		move.l	(a1)+,(a6)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_700C:				; CODE XREF: sub_6FF6+Ej
		move.l	d0,(a5)
		move.l	(a1)+,d3
		eori.l	#$8000800,d3
		swap	d3
		move.l	d3,(a6)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_701C:				; CODE XREF: sub_6FF6+8j
		btst	#2,(a0)
		bne.s	loc_7030
		move.l	d0,(a5)
		move.l	(a1)+,d3
		eori.l	#$10001000,d3
		move.l	d3,(a6)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7030:				; CODE XREF: sub_6FF6+2Aj
		move.l	d0,(a5)
		move.l	(a1)+,d3
		eori.l	#$18001800,d3
		swap	d3
		move.l	d3,(a6)
		rts
; End of function sub_6FF6


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_7040:				; CODE XREF: sub_6B7C+126p
					; sub_6B7C+162p
		add.w	(a3),d5
		add.w	4(a3),d4
		lea	($FFFF9000).w,a1
		move.w	d4,d3
		add.w	d3,d3
		andi.w	#$F00,d3
		lsr.w	#3,d5
		move.w	d5,d0
		lsr.w	#4,d0
		andi.w	#$7F,d0	; ''
		add.w	d3,d0
		moveq	#$FFFFFFFF,d3
		move.b	(a4,d0.w),d3
		andi.w	#$FF,d3
		lsl.w	#7,d3
		andi.w	#$70,d4	; 'p'
		andi.w	#$E,d5
		add.w	d4,d3
		add.w	d5,d3
		movea.l	d3,a0
		move.w	(a0),d3
		andi.w	#$3FF,d3
		lsl.w	#3,d3
		adda.w	d3,a1
		rts
; End of function sub_7040


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_7084:				; CODE XREF: LoadTilesAsYouMove+7Ap
					; LoadTilesAsYouMove+A8p ...
		add.w	(a3),d5
; End of function sub_7084


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_7086:				; CODE XREF: sub_69B2+70p sub_69B2+8Ap ...
		tst.w	(Two_player_mode).w
		bne.s	loc_70A6
		add.w	4(a3),d4
		andi.w	#$F0,d4	; 'ğ'
		andi.w	#$1F0,d5
		lsl.w	#4,d4
		lsr.w	#2,d5
		add.w	d5,d4
		moveq	#3,d0
		swap	d0
		move.w	d4,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_70A6:				; CODE XREF: sub_7086+4j
		add.w	4(a3),d4
		andi.w	#$1F0,d4
		andi.w	#$1F0,d5
		lsl.w	#3,d4
		lsr.w	#2,d5
		add.w	d5,d4
		moveq	#3,d0
		swap	d0
		move.w	d4,d0
		rts
; End of function sub_7086


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_70C0:				; CODE XREF: sub_694C+Ep sub_694C+26p	...
		tst.w	(Two_player_mode).w
		bne.s	loc_70E2
		add.w	4(a3),d4
		add.w	(a3),d5
		andi.w	#$F0,d4	; 'ğ'
		andi.w	#$1F0,d5
		lsl.w	#4,d4
		lsr.w	#2,d5
		add.w	d5,d4
		moveq	#2,d0
		swap	d0
		move.w	d4,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_70E2:				; CODE XREF: sub_70C0+4j
		add.w	4(a3),d4
		add.w	(a3),d5
		andi.w	#$1F0,d4
		andi.w	#$1F0,d5
		lsl.w	#3,d4
		lsr.w	#2,d5
		add.w	d5,d4
		moveq	#2,d0
		swap	d0
		move.w	d4,d0
		rts
; End of function sub_70C0


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


LoadTilesFromStart:			; CODE XREF: ROM:00003D48p

; FUNCTION CHUNK AT 000071A0 SIZE 0000002A BYTES

		lea	(VDP_control_port).l,a5
		lea	(VDP_data_port).l,a6
		tst.w	(Two_player_mode).w
		beq.s	loc_711E
		lea	($FFFFEE20).w,a3
		lea	($FFFF8000).w,a4
		move.w	#$6000,d2
		bsr.s	LoadTilesFromStart_2p

loc_711E:				; CODE XREF: LoadTilesFromStart+10j
		lea	($FFFFEE00).w,a3
		lea	($FFFF8000).w,a4
		move.w	#$4000,d2
		bsr.s	LoadTilesFromStart2
		lea	($FFFFEE08).w,a3
		lea	($FFFF8080).w,a4
		move.w	#$6000,d2
		tst.b	(Current_Zone).w
		beq.w	loc_71A0
; End of function LoadTilesFromStart


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


LoadTilesFromStart2:			; CODE XREF: LoadTilesFromStart+2Cp
		moveq	#$FFFFFFF0,d4
		moveq	#$F,d6

loc_7144:				; CODE XREF: LoadTilesFromStart2+2Aj
		movem.l	d4-d6,-(sp)
		moveq	#0,d5
		move.w	d4,d1
		bsr.w	sub_7084
		move.w	d1,d4
		moveq	#0,d5
		moveq	#$1F,d6
		move	#$2700,sr
		bsr.w	sub_6D84
		move	#$2300,sr
		movem.l	(sp)+,d4-d6
		addi.w	#$10,d4
		dbf	d6,loc_7144
		rts
; End of function LoadTilesFromStart2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


LoadTilesFromStart_2p:			; CODE XREF: LoadTilesFromStart+1Ep
		moveq	#$FFFFFFF0,d4
		moveq	#$F,d6

loc_7174:				; CODE XREF: LoadTilesFromStart_2p+2Aj
		movem.l	d4-d6,-(sp)
		moveq	#0,d5
		move.w	d4,d1
		bsr.w	sub_70C0
		move.w	d1,d4
		moveq	#0,d5
		moveq	#$1F,d6
		move	#$2700,sr
		bsr.w	sub_6D84
		move	#$2300,sr
		movem.l	(sp)+,d4-d6
		addi.w	#$10,d4
		dbf	d6,loc_7174
		rts
; End of function LoadTilesFromStart_2p

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR LoadTilesFromStart

loc_71A0:				; CODE XREF: LoadTilesFromStart+3Ej
		moveq	#0,d4
		moveq	#$F,d6

loc_71A4:				; CODE XREF: LoadTilesFromStart+C6j
		movem.l	d4-d6,-(sp)
		lea	(byte_71CA).l,a0
		move.w	($FFFFEE0C).w,d0
		add.w	d4,d0
		andi.w	#$F0,d0	; 'ğ'
		bsr.w	sub_7232
		movem.l	(sp)+,d4-d6
		addi.w	#$10,d4
		dbf	d6,loc_71A4
		rts
; END OF FUNCTION CHUNK	FOR LoadTilesFromStart
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_71CA:	dc.b   0,  0,  0,  0,  6,  6,  6,  4,  4,  4,  0,  0,  0,  0,  0,  0; 0
					; DATA XREF: LoadTilesFromStart+AAo
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		moveq	#$FFFFFFF0,d4
		moveq	#$F,d6

loc_71DE:				; CODE XREF: ROM:000071FCj
		movem.l	d4-d6,-(sp)
		lea	byte_6BCB(pc),a0
		move.w	($FFFFEE0C).w,d0
		add.w	d4,d0
		andi.w	#$3F0,d0
		bsr.w	sub_7232
		movem.l	(sp)+,d4-d6
		addi.w	#$10,d4
		dbf	d6,loc_71DE
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		moveq	#$FFFFFFF0,d4
		moveq	#$F,d6

loc_7206:				; CODE XREF: ROM:00007224j
		movem.l	d4-d6,-(sp)
		lea	byte_6AD1(pc),a0
		move.w	($FFFFEE0C).w,d0
		add.w	d4,d0
		andi.w	#$1F0,d0
		bsr.w	sub_7232
		movem.l	(sp)+,d4-d6
		addi.w	#$10,d4
		dbf	d6,loc_7206
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
word_722A:	dc.w $EE08
		dc.w $EE08
		dc.w $EE10
		dc.w $EE18

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_7232:				; CODE XREF: LoadTilesFromStart+BAp
					; ROM:000071F0p ...
		lsr.w	#4,d0
		move.b	(a0,d0.w),d0
		movea.w	word_722A(pc,d0.w),a3
		beq.s	loc_725A
		moveq	#$FFFFFFF0,d5
		movem.l	d4-d5,-(sp)
		bsr.w	sub_7084
		movem.l	(sp)+,d4-d5
		move	#$2700,sr
		bsr.w	sub_6D8C
		move	#$2300,sr
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_725A:				; CODE XREF: sub_7232+Aj
		moveq	#0,d5
		movem.l	d4-d5,-(sp)
		bsr.w	sub_7086
		movem.l	(sp)+,d4-d5
		moveq	#$1F,d6
		bsr.w	sub_6D90
		rts
; End of function sub_7232


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


MainLevelLoadBlock:			; CODE XREF: ROM:00003D3Ep
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		lsl.w	#4,d0
		lea	(LevelArtPointers).l,a2
		lea	(a2,d0.w),a2
		move.l	a2,-(sp)
		addq.l	#4,a2
		movea.l	(a2)+,a0
		tst.b	(Current_Zone).w
		beq.s	MainLevelLoadBlock_Convert16
		bra.s	MainLevelLoadBlock_Convert16
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

MainLevelLoadBlock_Skip16Convert:	; leftover from	a previous build
		lea	($FFFF9000).w,a1
		move.w	#0,d0
		bsr.w	EniDec
		bra.s	loc_72C2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

MainLevelLoadBlock_Convert16:		; CODE XREF: MainLevelLoadBlock+1Cj
					; MainLevelLoadBlock+1Ej
		lea	($FFFF9000).w,a1
		move.w	#$BFF,d2

MainLevelLoadBlock_ConvertLoop:		; CODE XREF: MainLevelLoadBlock+4Ej
		move.w	(a0)+,d0
		tst.w	(Two_player_mode).w
		beq.s	MainLevelLoadBlock_Not2p
		move.w	d0,d1
		andi.w	#$F800,d0
		andi.w	#$7FF,d1
		lsr.w	#1,d1
		or.w	d1,d0

MainLevelLoadBlock_Not2p:		; CODE XREF: MainLevelLoadBlock+3Cj
		move.w	d0,(a1)+
		dbf	d2,MainLevelLoadBlock_ConvertLoop

loc_72C2:				; CODE XREF: MainLevelLoadBlock+2Cj
		cmpi.b	#5,(Current_Zone).w
		bne.s	loc_72F4
		lea	($FFFF9980).w,a1
		lea	(Map16_HTZ).l,a0
		move.w	#$3FF,d2

loc_72D8:				; CODE XREF: MainLevelLoadBlock+80j
		move.w	(a0)+,d0
		tst.w	(Two_player_mode).w
		beq.s	loc_72EE
		move.w	d0,d1
		andi.w	#$F800,d0
		andi.w	#$7FF,d1
		lsr.w	#1,d1
		or.w	d1,d0

loc_72EE:				; CODE XREF: MainLevelLoadBlock+6Ej
		move.w	d0,(a1)+
		dbf	d2,loc_72D8

loc_72F4:				; CODE XREF: MainLevelLoadBlock+58j
		movea.l	(a2)+,a0
		cmpi.b	#2,(Current_Zone).w
		beq.s	loc_7338
		cmpi.b	#3,(Current_Zone).w
		beq.s	loc_7338
		cmpi.b	#4,(Current_Zone).w
		beq.s	loc_7338
		cmpi.b	#5,(Current_Zone).w
		beq.s	loc_7338
		move.l	a2,-(sp)
		moveq	#0,d1
		moveq	#0,d2
		move.w	(a0)+,d0
		lea	(a0,d0.w),a1
		lea	($FFFF0000).l,a2
		lea	($FFFF8000).w,a3

loc_732C:				; CODE XREF: MainLevelLoadBlock+C2j
		bsr.w	ChaDec
		tst.w	d0
		bmi.s	loc_732C
		movea.l	(sp)+,a2
		bra.s	loc_7348
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7338:				; CODE XREF: MainLevelLoadBlock+8Cj
					; MainLevelLoadBlock+94j ...
		lea	($FFFF0000).l,a1
		move.w	#$3FFF,d0

loc_7342:				; CODE XREF: MainLevelLoadBlock+D4j
		move.w	(a0)+,(a1)+
		dbf	d0,loc_7342

loc_7348:				; CODE XREF: MainLevelLoadBlock+C6j
		bsr.w	LevelLayoutLoad
		move.w	(a2)+,d0
		move.w	(a2),d0
		andi.w	#$FF,d0
		cmpi.w	#$103,(Current_ZoneAndAct).w
		bne.s	loc_735E
		moveq	#$C,d0

loc_735E:				; CODE XREF: MainLevelLoadBlock+EAj
		cmpi.w	#$501,(Current_ZoneAndAct).w
		beq.s	loc_736E
		cmpi.w	#$502,(Current_ZoneAndAct).w
		bne.s	loc_7370

loc_736E:				; CODE XREF: MainLevelLoadBlock+F4j
		moveq	#$E,d0

loc_7370:				; CODE XREF: MainLevelLoadBlock+FCj
		bsr.w	PalLoad1
		movea.l	(sp)+,a2
		addq.w	#4,a2
		moveq	#0,d0
		move.b	(a2),d0
		beq.s	locret_7382
		bsr.w	LoadPLC

locret_7382:				; CODE XREF: MainLevelLoadBlock+10Cj
		rts
; End of function MainLevelLoadBlock

; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to load a level layout from RAM
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


LevelLayoutLoad:
		lea	($FFFF8000).w,a3
		move.w	#$3FF,d1
		moveq	#0,d0

loc_738E:
		move.l	d0,(a3)+
		dbf	d1,loc_738E		; fill $8000-$8FFF with 0

		lea	($FFFF8000).w,a3	; load foreground into RAM
		moveq	#0,d1
		bsr.w	LevelLayoutLoad2
		lea	($FFFF8080).w,a3	; load background into RAM
		moveq	#2,d1

LevelLayoutLoad2:
		tst.b	(Current_Zone).w
		beq.s	LevelLayoutLoad_GHZ
		move.w	(Current_ZoneAndAct).w,d0
		lsl.b	#6,d0
		lsr.w	#5,d0
		move.w	d0,d2
		add.w	d0,d0
		add.w	d2,d0
		add.w	d1,d0
		lea	(Level_Index).l,a1
		move.w	(a1,d0.w),d0
		lea	(a1,d0.w),a1
		moveq	#0,d1
		move.w	d1,d2
		move.b	(a1)+,d1
		move.b	(a1)+,d2
		move.l	d1,d5
		addq.l	#1,d5
		moveq	#0,d3
		move.w	#$80,d3
		divu.w	d5,d3
		subq.w	#1,d3

loc_73DE:
		movea.l	a3,a0
		move.w	d3,d4

loc_73E2:
		move.l	a1,-(sp)
		move.w	d1,d0

loc_73E6:
		move.b	(a1)+,(a0)+
		dbf	d0,loc_73E6
		movea.l	(sp)+,a1
		dbf	d4,loc_73E2
		lea	(a1,d5.w),a1
		lea	$100(a3),a3
		dbf	d2,loc_73DE
		rts
; End of function LevelLayoutLoad

; ===========================================================================
; dynamically converts the Sonic 1 level layout into Sonic 2 Nick Arcade's,
; read more about it here: https://forums.sonicretro.org/index.php?posts/993641/
LevelLayoutLoad_GHZ:
		move.w	(Current_ZoneAndAct).w,d0
		lsl.b	#6,d0
		lsr.w	#5,d0
		move.w	d0,d2
		add.w	d0,d0
		add.w	d2,d0
		add.w	d1,d0
		lea	(Level_Index).l,a1
		move.w	(a1,d0.w),d0
		lea	(a1,d0.w),a1
		moveq	#0,d1
		move.w	d1,d2
		move.b	(a1)+,d1	; load level width (in tiles)
		move.b	(a1)+,d2	; load level height (in tiles)

loc_7426:
		move.w	d1,d0
		movea.l	a3,a0

loc_742A:
		move.b	(a1)+,d3
		subq.b	#1,d3		; subtract 1 from chunk ID
		bcc.s	loc_7440	; if chunk is not $00, branch
		moveq	#0,d3		; set 'air' chunk to $00
		move.b	d3,(a0)+	; load first chunk
		move.b	d3,(a0)+	; load second chunk
		move.b	d3,$FE(a0)	; load third chunk
		move.b	d3,$FF(a0)	; load fourth chunk
		bra.s	loc_7456
; ===========================================================================

loc_7440:
		lsl.b	#2,d3
		addq.b	#1,d3		; add 1 to chunk ID
		move.b	d3,(a0)+	; load first chunk
		addq.b	#1,d3		; add 1 to chunk ID
		move.b	d3,(a0)+	; load second chunk
		addq.b	#1,d3		; add 1 to chunk ID
		move.b	d3,$FE(a0)	; load third chunk
		addq.b	#1,d3		; add 1 to chunk ID
		move.b	d3,$FF(a0)	; load fourth chunk

loc_7456:
		dbf	d0,loc_742A	; load 1 row
		lea	$200(a3),a3	; do next row
		dbf	d2,loc_7426	; repeat for number of rows
		rts
; End of function LevelLayoutLoad_GHZ

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

LevelLayout_Convert:			; leftover level layout	converting function (from raw to the way it's stored in the game)
		lea	($FE0000).l,a1
		lea	($FE0080).l,a2
		lea	($FFFF0000).l,a3
		move.w	#$3F,d1	; '?'

loc_747A:				; CODE XREF: ROM:00007482j
		bsr.w	sub_750C
		bsr.w	sub_750C
		dbf	d1,loc_747A
		lea	($FE0000).l,a1
		lea	($FF0000).l,a2
		move.w	#$3F,d1	; '?'

loc_7496:				; CODE XREF: ROM:0000749Aj
		move.w	#0,(a2)+
		dbf	d1,loc_7496
		move.w	#$3FBF,d1

loc_74A2:				; CODE XREF: ROM:000074A4j
		move.w	(a1)+,(a2)+
		dbf	d1,loc_74A2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		lea	($FE0000).l,a1
		lea	($FFFF0000).l,a3
		moveq	#$1F,d0

loc_74B8:				; CODE XREF: ROM:000074BAj
		move.l	(a1)+,(a3)+
		dbf	d0,loc_74B8
		moveq	#0,d7
		lea	($FE0000).l,a1
		move.w	#$FF,d5

loc_74CA:				; CODE XREF: ROM:000074EAj
					; ROM:00007506j
		lea	($FFFF0000).l,a3
		move.w	d7,d6

loc_74D2:				; CODE XREF: ROM:000074F8j
		movem.l	a1-a3,-(sp)
		move.w	#$3F,d0	; '?'

loc_74DA:				; CODE XREF: ROM:000074DEj
		cmpm.w	(a1)+,(a3)+
		bne.s	loc_74F0
		dbf	d0,loc_74DA
		movem.l	(sp)+,a1-a3
		adda.w	#$80,a1	; ''
		dbf	d5,loc_74CA
		bra.s	loc_750A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_74F0:				; CODE XREF: ROM:000074DCj
		movem.l	(sp)+,a1-a3
		adda.w	#$80,a3	; ''
		dbf	d6,loc_74D2
		moveq	#$1F,d0

loc_74FE:				; CODE XREF: ROM:00007500j
		move.l	(a1)+,(a3)+
		dbf	d0,loc_74FE
		addq.l	#1,d7
		dbf	d5,loc_74CA

loc_750A:				; CODE XREF: ROM:000074EEj
					; ROM:loc_750Aj
		bra.s	loc_750A

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_750C:				; CODE XREF: ROM:loc_747Ap
					; ROM:0000747Ep
		moveq	#7,d0

loc_750E:				; CODE XREF: sub_750C+12j
		move.l	(a3)+,(a1)+
		move.l	(a3)+,(a1)+
		move.l	(a3)+,(a1)+
		move.l	(a3)+,(a1)+
		move.l	(a3)+,(a2)+
		move.l	(a3)+,(a2)+
		move.l	(a3)+,(a2)+
		move.l	(a3)+,(a2)+
		dbf	d0,loc_750E
		adda.w	#$80,a1	; ''
		adda.w	#$80,a2	; ''
		rts
; End of function sub_750C


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


DynScreenResizeLoad:			; CODE XREF: DeformBGLayer:loc_5B2Ap
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		add.w	d0,d0
		move.w	DynResize_Index(pc,d0.w),d0
		jsr	DynResize_Index(pc,d0.w)
		moveq	#2,d1
		move.w	($FFFFEEC6).w,d0
		sub.w	($FFFFEECE).w,d0
		beq.s	locret_756A
		bcc.s	loc_756C
		neg.w	d1
		move.w	($FFFFEE04).w,d0
		cmp.w	($FFFFEEC6).w,d0
		bls.s	loc_7560
		move.w	d0,($FFFFEECE).w
		andi.w	#$FFFE,($FFFFEECE).w

loc_7560:				; CODE XREF: DynScreenResizeLoad+28j
		add.w	d1,($FFFFEECE).w
		move.b	#1,($FFFFEEDE).w

locret_756A:				; CODE XREF: DynScreenResizeLoad+1Aj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_756C:				; CODE XREF: DynScreenResizeLoad+1Cj
		move.w	($FFFFEE04).w,d0
		addi.w	#8,d0
		cmp.w	($FFFFEECE).w,d0
		bcs.s	loc_7586
		btst	#1,($FFFFB022).w
		beq.s	loc_7586
		add.w	d1,d1
		add.w	d1,d1

loc_7586:				; CODE XREF: DynScreenResizeLoad+4Cj
					; DynScreenResizeLoad+54j
		add.w	d1,($FFFFEECE).w
		move.b	#1,($FFFFEEDE).w
		rts
; End of function DynScreenResizeLoad

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_Index:dc.w DynResize_GHZ-DynResize_Index; 0 ;	DATA XREF: ROM:DynResize_Indexo
					; ROM:DynResize_Index+2o ...
		dc.w DynResize_LZ-DynResize_Index; 1
		dc.w DynResize_CPZ-DynResize_Index; 2
		dc.w DynResize_EHZ-DynResize_Index; 3
		dc.w DynResize_HPZ-DynResize_Index; 4
		dc.w DynResize_HTZ-DynResize_Index; 5
		dc.w DynResize_S1Ending-DynResize_Index; 6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_GHZ:				; DATA XREF: ROM:DynResize_Indexo
		moveq	#0,d0
		move.b	(Current_Act).w,d0
		add.w	d0,d0
		move.w	DynResize_GHZ_Index(pc,d0.w),d0
		jmp	DynResize_GHZ_Index(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_GHZ_Index:dc.w DynResize_GHZ1-DynResize_GHZ_Index; 0
					; DATA XREF: ROM:DynResize_GHZ_Indexo
					; ROM:DynResize_GHZ_Index+2o ...
		dc.w DynResize_GHZ2-DynResize_GHZ_Index; 1
		dc.w DynResize_GHZ3-DynResize_GHZ_Index; 2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_GHZ1:				; DATA XREF: ROM:DynResize_GHZ_Indexo
		move.w	#$300,($FFFFEEC6).w
		cmpi.w	#$1780,($FFFFEE00).w
		bcs.s	locret_75CA
		move.w	#$400,($FFFFEEC6).w

locret_75CA:				; CODE XREF: ROM:000075C2j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_GHZ2:				; DATA XREF: ROM:DynResize_GHZ_Indexo
		move.w	#$300,($FFFFEEC6).w
		cmpi.w	#$ED0,($FFFFEE00).w
		bcs.s	locret_75FC
		move.w	#$200,($FFFFEEC6).w
		cmpi.w	#$1600,($FFFFEE00).w
		bcs.s	locret_75FC
		move.w	#$400,($FFFFEEC6).w
		cmpi.w	#$1D60,($FFFFEE00).w
		bcs.s	locret_75FC
		move.w	#$300,($FFFFEEC6).w

locret_75FC:				; CODE XREF: ROM:000075D8j
					; ROM:000075E6j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_GHZ3:				; DATA XREF: ROM:DynResize_GHZ_Indexo
		moveq	#0,d0
		move.b	($FFFFEEDF).w,d0
		move.w	DynResize_GHZ3_Index(pc,d0.w),d0
		jmp	DynResize_GHZ3_Index(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_GHZ3_Index:dc.w DynResize_GHZ3_Main-DynResize_GHZ3_Index; 0
					; DATA XREF: ROM:DynResize_GHZ3_Indexo
					; ROM:DynResize_GHZ3_Index+2o ...
		dc.w DynResize_GHZ3_Boss-DynResize_GHZ3_Index; 1
		dc.w DynResize_GHZ3_End-DynResize_GHZ3_Index; 2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_GHZ3_Main:			; DATA XREF: ROM:DynResize_GHZ3_Indexo
		move.w	#$300,($FFFFEEC6).w
		cmpi.w	#$380,($FFFFEE00).w
		bcs.s	locret_7658
		move.w	#$310,($FFFFEEC6).w
		cmpi.w	#$960,($FFFFEE00).w
		bcs.s	locret_7658
		cmpi.w	#$280,($FFFFEE04).w
		bcs.s	loc_765A
		move.w	#$400,($FFFFEEC6).w
		cmpi.w	#$1380,($FFFFEE00).w
		bcc.s	loc_7650
		move.w	#$4C0,($FFFFEEC6).w
		move.w	#$4C0,($FFFFEECE).w

loc_7650:				; CODE XREF: ROM:00007642j
		cmpi.w	#$1700,($FFFFEE00).w
		bcc.s	loc_765A

locret_7658:				; CODE XREF: ROM:0000761Ej
					; ROM:0000762Cj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_765A:				; CODE XREF: ROM:00007634j
					; ROM:00007656j
		move.w	#$300,($FFFFEEC6).w
		addq.b	#2,($FFFFEEDF).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_GHZ3_Boss:			; DATA XREF: ROM:DynResize_GHZ3_Indexo
		cmpi.w	#$960,($FFFFEE00).w
		bcc.s	loc_7672
		subq.b	#2,($FFFFEEDF).w

loc_7672:				; CODE XREF: ROM:0000766Cj
		cmpi.w	#$2960,($FFFFEE00).w
		bcs.s	locret_76AA
		bsr.w	SingleObjLoad
		bne.s	loc_7692
		move.b	#$3D,0(a1) ; '='
		move.w	#$2A60,8(a1)
		move.w	#$280,$C(a1)

loc_7692:				; CODE XREF: ROM:0000767Ej
		move.w	#MusID_Boss,d0
		bsr.w	PlaySound
		move.b	#1,($FFFFF7AA).w
		addq.b	#2,($FFFFEEDF).w
		moveq	#$11,d0
		bra.w	LoadPLC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_76AA:				; CODE XREF: ROM:00007678j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_GHZ3_End:			; DATA XREF: ROM:DynResize_GHZ3_Indexo
		move.w	($FFFFEE00).w,($FFFFEEC8).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_LZ:				; DATA XREF: ROM:DynResize_Indexo
		moveq	#0,d0
		move.b	(Current_Act).w,d0
		add.w	d0,d0
		move.w	DynResize_LZ_Index(pc,d0.w),d0
		jmp	DynResize_LZ_Index(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_LZ_Index:dc.w	DynResize_LZ_Null-DynResize_LZ_Index; 0
					; DATA XREF: ROM:DynResize_LZ_Indexo
					; ROM:DynResize_LZ_Index+2o ...
		dc.w DynResize_LZ_Null-DynResize_LZ_Index; 1
		dc.w DynResize_LZ3-DynResize_LZ_Index; 2
		dc.w DynResize_LZ4-DynResize_LZ_Index; 3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_LZ_Null:			; DATA XREF: ROM:DynResize_LZ_Indexo
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_LZ3:				; DATA XREF: ROM:DynResize_LZ_Indexo
		tst.b	($FFFFF7EF).w
		beq.s	loc_76EA
		lea	($FFFF8206).w,a1
		cmpi.b	#7,(a1)
		beq.s	loc_76EA
		move.b	#7,(a1)
		move.w	#$B7,d0	; '·'
		bsr.w	PlaySound_Special

loc_76EA:				; CODE XREF: ROM:000076D2j
					; ROM:000076DCj
		tst.b	($FFFFEEDF).w
		bne.s	locret_7726
		cmpi.w	#$1CA0,($FFFFEE00).w
		bcs.s	locret_7724
		cmpi.w	#$600,($FFFFEE04).w
		bcc.s	locret_7724
		bsr.w	SingleObjLoad
		bne.s	loc_770C
		move.b	#$77,0(a1) ; 'w'

loc_770C:				; CODE XREF: ROM:00007704j
		move.w	#MusID_Boss,d0
		bsr.w	PlaySound
		move.b	#1,($FFFFF7AA).w
		addq.b	#2,($FFFFEEDF).w
		moveq	#$11,d0
		bra.w	LoadPLC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_7724:				; CODE XREF: ROM:000076F6j
					; ROM:000076FEj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_7726:				; CODE XREF: ROM:000076EEj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_LZ4:				; DATA XREF: ROM:DynResize_LZ_Indexo
		cmpi.w	#$D00,($FFFFEE00).w
		bcs.s	locret_774E
		cmpi.w	#$18,($FFFFB00C).w
		bcc.s	locret_774E
		clr.b	($FFFFFE30).w
		move.w	#1,($FFFFFE02).w
		move.w	#$502,(Current_ZoneAndAct).w
		move.b	#1,($FFFFF7C8).w

locret_774E:				; CODE XREF: ROM:0000772Ej
					; ROM:00007736j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_CPZ:				; DATA XREF: ROM:DynResize_Indexo
		moveq	#0,d0
		move.b	(Current_Act).w,d0
		add.w	d0,d0
		move.w	DynResize_CPZ_Index(pc,d0.w),d0
		jmp	DynResize_CPZ_Index(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_CPZ_Index:dc.w DynResize_CPZ1-DynResize_CPZ_Index
		dc.w DynResize_CPZ2-DynResize_CPZ_Index
		dc.w DynResize_CPZ3-DynResize_CPZ_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_CPZ1:				; DATA XREF: ROM:DynResize_CPZ_Indexo
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1DynResize_MZ1:			; leftover from	Sonic 1
		moveq	#0,d0
		move.b	($FFFFEEDF).w,d0
		move.w	off_7776(pc,d0.w),d0
		jmp	off_7776(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_7776:	dc.w loc_777E-off_7776	; 0 ; DATA XREF: ROM:off_7776o
					; ROM:off_7776+2o ...
		dc.w loc_77AE-off_7776	; 1
		dc.w loc_77F2-off_7776	; 2
		dc.w loc_781C-off_7776	; 3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_777E:				; DATA XREF: ROM:off_7776o
		move.w	#$1D0,($FFFFEEC6).w
		cmpi.w	#$700,($FFFFEE00).w
		bcs.s	locret_77AC
		move.w	#$220,($FFFFEEC6).w
		cmpi.w	#$D00,($FFFFEE00).w
		bcs.s	locret_77AC
		move.w	#$340,($FFFFEEC6).w
		cmpi.w	#$340,($FFFFEE04).w
		bcs.s	locret_77AC
		addq.b	#2,($FFFFEEDF).w

locret_77AC:				; CODE XREF: ROM:0000778Aj
					; ROM:00007798j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_77AE:				; DATA XREF: ROM:off_7776o
		cmpi.w	#$340,($FFFFEE04).w
		bcc.s	loc_77BC
		subq.b	#2,($FFFFEEDF).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_77BC:				; CODE XREF: ROM:000077B4j
		move.w	#0,($FFFFEECC).w
		cmpi.w	#$E00,($FFFFEE00).w
		bcc.s	locret_77F0
		move.w	#$340,($FFFFEECC).w
		move.w	#$340,($FFFFEEC6).w
		cmpi.w	#$A90,($FFFFEE00).w
		bcc.s	locret_77F0
		move.w	#$500,($FFFFEEC6).w
		cmpi.w	#$370,($FFFFEE04).w
		bcs.s	locret_77F0
		addq.b	#2,($FFFFEEDF).w

locret_77F0:				; CODE XREF: ROM:000077C8j
					; ROM:000077DCj ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_77F2:				; DATA XREF: ROM:off_7776o
		cmpi.w	#$370,($FFFFEE04).w
		bcc.s	loc_7800
		subq.b	#2,($FFFFEEDF).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7800:				; CODE XREF: ROM:000077F8j
		cmpi.w	#$500,($FFFFEE04).w
		bcs.s	locret_781A
		cmpi.w	#$B80,($FFFFEE00).w
		bcs.s	locret_781A
		move.w	#$500,($FFFFEECC).w
		addq.b	#2,($FFFFEEDF).w

locret_781A:				; CODE XREF: ROM:00007806j
					; ROM:0000780Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_781C:				; DATA XREF: ROM:off_7776o
		cmpi.w	#$B80,($FFFFEE00).w
		bcc.s	loc_7832
		cmpi.w	#$340,($FFFFEECC).w
		beq.s	locret_786A
		subq.w	#2,($FFFFEECC).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7832:				; CODE XREF: ROM:00007822j
		cmpi.w	#$500,($FFFFEECC).w
		beq.s	loc_7848
		cmpi.w	#$500,($FFFFEE04).w
		bcs.s	locret_786A
		move.w	#$500,($FFFFEECC).w

loc_7848:				; CODE XREF: ROM:00007838j
		cmpi.w	#$E70,($FFFFEE00).w
		bcs.s	locret_786A
		move.w	#0,($FFFFEECC).w
		move.w	#$500,($FFFFEEC6).w
		cmpi.w	#$1430,($FFFFEE00).w
		bcs.s	locret_786A
		move.w	#$210,($FFFFEEC6).w

locret_786A:				; CODE XREF: ROM:0000782Aj
					; ROM:00007840j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_CPZ2:				; DATA XREF: ROM:DynResize_CPZ_Indexo
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1DynResize_MZ2:			; leftover from	Sonic 1
		move.w	#$520,($FFFFEEC6).w
		cmpi.w	#$1700,($FFFFEE00).w
		bcs.s	locret_7882
		move.w	#$200,($FFFFEEC6).w

locret_7882:				; CODE XREF: ROM:0000787Aj
		rts
; ===========================================================================

DynResize_CPZ3:
		moveq	#0,d0
		move.b	($FFFFEEDF).w,d0
		move.w	off_7892(pc,d0.w),d0
		jmp	off_7892(pc,d0.w)
; ===========================================================================
off_7892:	dc.w DynResize_CPZ3_BossCheck-off_7892
		dc.w DynResize_CPZ3_Null-off_7892
; ===========================================================================

DynResize_CPZ3_BossCheck:
		cmpi.w	#$480,($FFFFEE00).w
		blt.s	DynResize_CPZ3_Null
		cmpi.w	#$740,($FFFFEE00).w
		bgt.s	DynResize_CPZ3_Null
		move.w	($FFFFEECE).w,d0
		cmp.w	($FFFFEE04).w,d0
		bne.s	DynResize_CPZ3_Null
		move.w	#$740,($FFFFEECA).w
		move.w	#$480,($FFFFEEC8).w
		addq.b	#2,($FFFFEEDF).w
		bsr.w	SingleObjLoad
		bne.s	DynResize_CPZ3_Null
		move.b	#$55,0(a1)	; load Obj55 (EHZ boss, likely CPZ boss at one point)
		move.w	#$680,8(a1)
		move.w	#$540,$C(a1)
		moveq	#$11,d0
		bra.w	LoadPLC
; ===========================================================================

DynResize_CPZ3_Null:
		rts

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_EHZ:				; DATA XREF: ROM:DynResize_Indexo
		moveq	#0,d0
		move.b	(Current_Act).w,d0
		add.w	d0,d0
		move.w	off_78F0(pc,d0.w),d0
		jmp	off_78F0(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_78F0:	dc.w DynResize_EHZ1-off_78F0 ; DATA XREF: ROM:off_78F0o
					; ROM:000078F2o ...
		dc.w DynResize_EHZ2-off_78F0
		dc.w locret_7980-off_78F0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_EHZ1:				; DATA XREF: ROM:off_78F0o
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_EHZ2:				; DATA XREF: ROM:000078F2o
		moveq	#0,d0
		move.b	($FFFFEEDF).w,d0
		move.w	DynResize_EHZ2_Index(pc,d0.w),d0
		jmp	DynResize_EHZ2_Index(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_EHZ2_Index:dc.w DynResize_EHZ2_01-DynResize_EHZ2_Index
					; DATA XREF: ROM:DynResize_EHZ2_Indexo
					; ROM:00007908o ...
		dc.w DynResize_EHZ2_02-DynResize_EHZ2_Index
		dc.w DynResize_EHZ2_03-DynResize_EHZ2_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_EHZ2_01:			; DATA XREF: ROM:DynResize_EHZ2_Indexo
		cmpi.w	#$26E0,($FFFFEE00).w
		bcs.s	locret_795A
		move.w	($FFFFEE00).w,($FFFFEEC8).w
		move.w	#$390,($FFFFEEC6).w
		move.w	#$390,($FFFFEECE).w
		addq.b	#2,($FFFFEEDF).w
		bsr.w	SingleObjLoad
		bne.s	loc_7946
		move.b	#$55,(a1) ; 'U'
		move.b	#$81,$28(a1)
		move.w	#$29D0,8(a1)
		move.w	#$426,$C(a1)

loc_7946:				; CODE XREF: ROM:0000792Ej
		move.w	#MusID_Boss,d0
		bsr.w	PlaySound
		move.b	#1,($FFFFF7AA).w
		moveq	#$11,d0
		bra.w	LoadPLC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_795A:				; CODE XREF: ROM:00007912j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_EHZ2_02:			; DATA XREF: ROM:00007908o
		cmpi.w	#$2880,($FFFFEE00).w
		bcs.s	locret_796E
		move.w	#$2880,($FFFFEEC8).w
		addq.b	#2,($FFFFEEDF).w

locret_796E:				; CODE XREF: ROM:00007962j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_EHZ2_03:			; DATA XREF: ROM:0000790Ao
		tst.b	($FFFFF7A7).w
		beq.s	DynResize_EHZ3
		move.b	#GameModeID_SegaScreen,(Game_Mode).w

DynResize_EHZ3:				; CODE XREF: ROM:00007974j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_7980:				; DATA XREF: ROM:000078F4o
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1DynResize_SLZ3:			; leftover from	Sonic 1
		moveq	#0,d0
		move.b	($FFFFEEDF).w,d0
		move.w	off_7990(pc,d0.w),d0
		jmp	off_7990(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_7990:	dc.w loc_7996-off_7990	; DATA XREF: ROM:off_7990o
					; ROM:00007992o ...
		dc.w loc_79AA-off_7990
		dc.w loc_79D6-off_7990
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7996:				; DATA XREF: ROM:off_7990o
		cmpi.w	#$1E70,($FFFFEE00).w
		bcs.s	locret_79A8
		move.w	#$210,($FFFFEEC6).w
		addq.b	#2,($FFFFEEDF).w

locret_79A8:				; CODE XREF: ROM:0000799Cj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_79AA:				; DATA XREF: ROM:00007992o
		cmpi.w	#$2000,($FFFFEE00).w
		bcs.s	locret_79D4
		bsr.w	SingleObjLoad
		bne.s	loc_79BC
		move.b	#$7A,(a1) ; 'z'

loc_79BC:				; CODE XREF: ROM:000079B6j
		move.w	#MusID_Boss,d0
		bsr.w	PlaySound
		move.b	#1,($FFFFF7AA).w
		addq.b	#2,($FFFFEEDF).w
		moveq	#$11,d0
		bra.w	LoadPLC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_79D4:				; CODE XREF: ROM:000079B0j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_79D6:				; DATA XREF: ROM:00007994o
		move.w	($FFFFEE00).w,($FFFFEEC8).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_HPZ:				; DATA XREF: ROM:DynResize_Indexo
		moveq	#0,d0
		move.b	(Current_Act).w,d0
		add.w	d0,d0
		move.w	DynResize_HPZ_Index(pc,d0.w),d0
		jmp	DynResize_HPZ_Index(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_HPZ_Index:dc.w DynResize_HPZ1-DynResize_HPZ_Index
					; DATA XREF: ROM:DynResize_HPZ_Indexo
					; ROM:000079F2o ...
		dc.w DynResize_HPZ2-DynResize_HPZ_Index
		dc.w DynResize_HPZ3-DynResize_HPZ_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_HPZ1:				; DATA XREF: ROM:DynResize_HPZ_Indexo
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_HPZ2:				; DATA XREF: ROM:000079F2o
		move.w	#$520,($FFFFEEC6).w
		cmpi.w	#$25A0,($FFFFEE00).w
		bcs.s	locret_7A1A
		move.w	#$420,($FFFFEEC6).w
		cmpi.w	#$4D0,($FFFFB00C).w
		bcs.s	locret_7A1A
		move.w	#$520,($FFFFEEC6).w

locret_7A1A:				; CODE XREF: ROM:00007A04j
					; ROM:00007A12j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_HPZ3:				; DATA XREF: ROM:000079F4o
		moveq	#0,d0
		move.b	($FFFFEEDF).w,d0
		move.w	DynResize_HPZ3_Index(pc,d0.w),d0
		jmp	DynResize_HPZ3_Index(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_HPZ3_Index:dc.w loc_7A30-DynResize_HPZ3_Index
					; DATA XREF: ROM:DynResize_HPZ3_Indexo
					; ROM:00007A2Co ...
		dc.w loc_7A48-DynResize_HPZ3_Index
		dc.w loc_7A7A-DynResize_HPZ3_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7A30:				; DATA XREF: ROM:DynResize_HPZ3_Indexo
		cmpi.w	#$2AC0,($FFFFEE00).w
		bcs.s	locret_7A46
		bsr.w	SingleObjLoad
		bne.s	locret_7A46
		move.b	#$76,(a1) ; 'v'
		addq.b	#2,($FFFFEEDF).w

locret_7A46:				; CODE XREF: ROM:00007A36j
					; ROM:00007A3Cj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7A48:				; DATA XREF: ROM:00007A2Co
		cmpi.w	#$2C00,($FFFFEE00).w
		bcs.s	locret_7A78
		move.w	#$4CC,($FFFFEEC6).w
		bsr.w	SingleObjLoad
		bne.s	loc_7A64
		move.b	#$75,(a1) ; 'u'
		addq.b	#2,($FFFFEEDF).w

loc_7A64:				; CODE XREF: ROM:00007A5Aj
		move.w	#MusID_Boss,d0
		bsr.w	PlaySound
		move.b	#1,($FFFFF7AA).w
		moveq	#$11,d0
		bra.w	LoadPLC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_7A78:				; CODE XREF: ROM:00007A4Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7A7A:				; DATA XREF: ROM:00007A2Eo
		move.w	($FFFFEE00).w,($FFFFEEC8).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_HTZ:				; DATA XREF: ROM:DynResize_Indexo
		moveq	#0,d0
		move.b	(Current_Act).w,d0
		add.w	d0,d0
		move.w	DynResize_HTZ_Index(pc,d0.w),d0
		jmp	DynResize_HTZ_Index(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_HTZ_Index:dc.w DynResize_HTZ1-DynResize_HTZ_Index
					; DATA XREF: ROM:DynResize_HTZ_Indexo
					; ROM:00007A94o ...
		dc.w DynResize_HTZ2-DynResize_HTZ_Index
		dc.w DynResize_HTZ3-DynResize_HTZ_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_HTZ1:				; DATA XREF: ROM:DynResize_HTZ_Indexo
		move.w	#$720,($FFFFEEC6).w
		cmpi.w	#$1880,($FFFFEE00).w
		bcs.s	locret_7ABA
		move.w	#$620,($FFFFEEC6).w
		cmpi.w	#$2000,($FFFFEE00).w
		bcs.s	locret_7ABA
		move.w	#$2A0,($FFFFEEC6).w

locret_7ABA:				; CODE XREF: ROM:00007AA4j
					; ROM:00007AB2j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_HTZ2:				; DATA XREF: ROM:00007A94o
		moveq	#0,d0
		move.b	($FFFFEEDF).w,d0
		move.w	DynResize_HTZ2_Index(pc,d0.w),d0
		jmp	DynResize_HTZ2_Index(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_HTZ2_Index:dc.w loc_7AD2-DynResize_HTZ2_Index
					; DATA XREF: ROM:DynResize_HTZ2_Indexo
					; ROM:00007ACCo ...
		dc.w loc_7AF4-DynResize_HTZ2_Index
		dc.w loc_7B12-DynResize_HTZ2_Index
		dc.w loc_7B30-DynResize_HTZ2_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7AD2:				; DATA XREF: ROM:DynResize_HTZ2_Indexo
		move.w	#$800,($FFFFEEC6).w
		cmpi.w	#$1800,($FFFFEE00).w
		bcs.s	locret_7AF2
		move.w	#$510,($FFFFEEC6).w
		cmpi.w	#$1E00,($FFFFEE00).w
		bcs.s	locret_7AF2
		addq.b	#2,($FFFFEEDF).w

locret_7AF2:				; CODE XREF: ROM:00007ADEj
					; ROM:00007AECj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7AF4:				; DATA XREF: ROM:00007ACCo
		cmpi.w	#$1EB0,($FFFFEE00).w
		bcs.s	locret_7B10
		bsr.w	SingleObjLoad
		bne.s	locret_7B10
		move.b	#$83,(a1)
		addq.b	#2,($FFFFEEDF).w
		moveq	#$1E,d0
		bra.w	LoadPLC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_7B10:				; CODE XREF: ROM:00007AFAj
					; ROM:00007B00j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7B12:				; DATA XREF: ROM:00007ACEo
		cmpi.w	#$1F60,($FFFFEE00).w
		bcs.s	loc_7B2E
		bsr.w	SingleObjLoad
		bne.s	loc_7B28
		move.b	#$82,(a1)
		addq.b	#2,($FFFFEEDF).w

loc_7B28:				; CODE XREF: ROM:00007B1Ej
		move.b	#1,($FFFFF7AA).w

loc_7B2E:				; CODE XREF: ROM:00007B18j
		bra.s	loc_7B3A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7B30:				; DATA XREF: ROM:00007AD0o
		cmpi.w	#$2050,($FFFFEE00).w
		bcs.s	loc_7B3A
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7B3A:				; CODE XREF: ROM:loc_7B2Ej
					; ROM:00007B36j ...
		move.w	($FFFFEE00).w,($FFFFEEC8).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_HTZ3:				; DATA XREF: ROM:00007A96o
		moveq	#0,d0
		move.b	($FFFFEEDF).w,d0
		move.w	DynResize_HTZ3_Index(pc,d0.w),d0
		jmp	DynResize_HTZ3_Index(pc,d0.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DynResize_HTZ3_Index:dc.w loc_7B5A-DynResize_HTZ3_Index
					; DATA XREF: ROM:DynResize_HTZ3_Indexo
					; ROM:00007B52o ...
		dc.w loc_7B6E-DynResize_HTZ3_Index
		dc.w loc_7B8C-DynResize_HTZ3_Index
		dc.w locret_7B9A-DynResize_HTZ3_Index
		dc.w loc_7B9C-DynResize_HTZ3_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7B5A:				; DATA XREF: ROM:DynResize_HTZ3_Indexo
		cmpi.w	#$2148,($FFFFEE00).w
		bcs.s	loc_7B6C
		addq.b	#2,($FFFFEEDF).w
		moveq	#$1F,d0
		bsr.w	LoadPLC

loc_7B6C:				; CODE XREF: ROM:00007B60j
		bra.s	loc_7B3A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7B6E:				; DATA XREF: ROM:00007B52o
		cmpi.w	#$2300,($FFFFEE00).w
		bcs.s	loc_7B8A
		bsr.w	SingleObjLoad
		bne.s	loc_7B8A
		move.b	#$85,(a1)
		addq.b	#2,($FFFFEEDF).w
		move.b	#1,($FFFFF7AA).w

loc_7B8A:				; CODE XREF: ROM:00007B74j
					; ROM:00007B7Aj
		bra.s	loc_7B3A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7B8C:				; DATA XREF: ROM:00007B54o
		cmpi.w	#$2450,($FFFFEE00).w
		bcs.s	loc_7B98
		addq.b	#2,($FFFFEEDF).w

loc_7B98:				; CODE XREF: ROM:00007B92j
		bra.s	loc_7B3A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_7B9A:				; DATA XREF: ROM:00007B56o
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7B9C:				; DATA XREF: ROM:00007B58o
		bra.s	loc_7B3A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DynResize_S1Ending:			; DATA XREF: ROM:DynResize_Indexo
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 11 - Bridge
;----------------------------------------------------

Obj11:					; DATA XREF: ROM:Obj_Indexo
		btst	#6,1(a0)
		bne.w	loc_7BB8
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj11_Index(pc,d0.w),d1
		jmp	Obj11_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7BB8:				; CODE XREF: ROM:00007BA6j
		moveq	#3,d0
		bra.w	DisplaySprite3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj11_Index:	dc.w loc_7BC6-Obj11_Index ; DATA XREF: ROM:Obj11_Indexo
					; ROM:00007BC0o ...
		dc.w loc_7CC8-Obj11_Index
		dc.w loc_7D5A-Obj11_Index
		dc.w loc_7D5E-Obj11_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7BC6:				; DATA XREF: ROM:Obj11_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_obj11_GHZ,4(a0)
		move.w	#$44C6,2(a0)
		move.b	#3,$18(a0)
		cmpi.b	#3,(Current_Zone).w
		bne.s	loc_7BFA
		move.l	#Map_obj11,4(a0)
		move.w	#$43C6,2(a0)
		move.b	#3,$18(a0)

loc_7BFA:				; CODE XREF: ROM:00007BE4j
		cmpi.b	#4,(Current_Zone).w
		bne.s	loc_7C14
		addq.b	#4,routine(a0)
		move.l	#Map_obj11_HPZ,4(a0)
		move.w	#$6300,2(a0)

loc_7C14:				; CODE XREF: ROM:00007C00j
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$80,$19(a0)
		move.w	$C(a0),d2
		move.w	d2,$3C(a0)
		move.w	8(a0),d3
		lea	$28(a0),a2
		moveq	#0,d1
		move.b	(a2),d1
		move.w	d1,d0
		lsr.w	#1,d0
		lsl.w	#4,d0
		sub.w	d0,d3
		swap	d1
		move.w	#8,d1
		bsr.s	sub_7C76
		move.w	$28(a1),d0
		subq.w	#8,d0
		move.w	d0,8(a1)
		move.l	a1,$30(a0)
		swap	d1
		subq.w	#8,d1
		bls.s	loc_7C74
		move.w	d1,d4
		bsr.s	sub_7C76
		move.l	a1,$34(a0)
		move.w	d4,d0
		add.w	d0,d0
		add.w	d4,d0
		move.w	$10(a1,d0.w),d0
		subq.w	#8,d0
		move.w	d0,8(a1)

loc_7C74:				; CODE XREF: ROM:00007C5Aj
		bra.s	loc_7CC8

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_7C76:				; CODE XREF: ROM:00007C46p
					; ROM:00007C5Ep
		bsr.w	SingleObjLoad2
		bne.s	locret_7CC6
		move.b	0(a0),0(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.l	4(a0),4(a1)
		move.w	2(a0),2(a1)
		move.b	1(a0),1(a1)
		bset	#6,1(a1)
		move.b	#$40,$E(a1) ; '@'
		move.b	d1,$F(a1)
		subq.b	#1,d1
		lea	$10(a1),a2

loc_7CB6:				; CODE XREF: sub_7C76+4Cj
		move.w	d3,(a2)+
		move.w	d2,(a2)+
		move.w	#0,(a2)+
		addi.w	#$10,d3
		dbf	d1,loc_7CB6

locret_7CC6:				; CODE XREF: sub_7C76+4j
		rts
; End of function sub_7C76

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7CC8:				; CODE XREF: ROM:loc_7C74j
					; DATA XREF: ROM:00007BC0o
		move.b	$22(a0),d0
		andi.b	#$18,d0
		bne.s	loc_7CDE
		tst.b	$3E(a0)
		beq.s	loc_7D0A
		subq.b	#4,$3E(a0)
		bra.s	loc_7D06
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7CDE:				; CODE XREF: ROM:00007CD0j
		andi.b	#$10,d0
		beq.s	loc_7CFA
		move.b	$3F(a0),d0
		sub.b	$3B(a0),d0
		beq.s	loc_7CFA
		bcc.s	loc_7CF6
		addq.b	#1,$3F(a0)
		bra.s	loc_7CFA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7CF6:				; CODE XREF: ROM:00007CEEj
		subq.b	#1,$3F(a0)

loc_7CFA:				; CODE XREF: ROM:00007CE2j
					; ROM:00007CECj ...
		cmpi.b	#$40,$3E(a0) ; '@'
		beq.s	loc_7D06
		addq.b	#4,$3E(a0)

loc_7D06:				; CODE XREF: ROM:00007CDCj
					; ROM:00007D00j
		bsr.w	sub_7F36

loc_7D0A:				; CODE XREF: ROM:00007CD6j
		moveq	#0,d1
		move.b	$28(a0),d1
		lsl.w	#3,d1
		move.w	d1,d2
		addq.w	#8,d1
		add.w	d2,d2
		moveq	#8,d3
		move.w	8(a0),d4
		bsr.w	sub_7DC0

loc_7D22:				; CODE XREF: ROM:00007DBCj
		tst.w	(Two_player_mode).w
		beq.s	loc_7D2A
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7D2A:				; CODE XREF: ROM:00007D26j
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_7D3E
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7D3E:				; CODE XREF: ROM:00007D3Aj
		movea.l	$30(a0),a1
		bsr.w	DeleteObject2
		cmpi.b	#8,$28(a0)
		bls.s	loc_7D56
		movea.l	$34(a0),a1
		bsr.w	DeleteObject2

loc_7D56:				; CODE XREF: ROM:00007D4Cj
		bra.w	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7D5A:				; DATA XREF: ROM:00007BC2o
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7D5E:				; DATA XREF: ROM:00007BC4o
		move.b	$22(a0),d0
		andi.b	#$18,d0
		bne.s	loc_7D74
		tst.b	$3E(a0)
		beq.s	loc_7DA0
		subq.b	#4,$3E(a0)
		bra.s	loc_7D9C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7D74:				; CODE XREF: ROM:00007D66j
		andi.b	#$10,d0
		beq.s	loc_7D90
		move.b	$3F(a0),d0
		sub.b	$3B(a0),d0
		beq.s	loc_7D90
		bcc.s	loc_7D8C
		addq.b	#1,$3F(a0)
		bra.s	loc_7D90
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7D8C:				; CODE XREF: ROM:00007D84j
		subq.b	#1,$3F(a0)

loc_7D90:				; CODE XREF: ROM:00007D78j
					; ROM:00007D82j ...
		cmpi.b	#$40,$3E(a0) ; '@'
		beq.s	loc_7D9C
		addq.b	#4,$3E(a0)

loc_7D9C:				; CODE XREF: ROM:00007D72j
					; ROM:00007D96j
		bsr.w	sub_7F36

loc_7DA0:				; CODE XREF: ROM:00007D6Cj
		moveq	#0,d1
		move.b	$28(a0),d1
		lsl.w	#3,d1
		move.w	d1,d2
		addq.w	#8,d1
		add.w	d2,d2
		moveq	#8,d3
		move.w	8(a0),d4
		bsr.w	sub_7DC0
		bsr.w	sub_7E60
		bra.w	loc_7D22

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_7DC0:				; CODE XREF: ROM:00007D1Ep
					; ROM:00007DB4p
		lea	($FFFFB040).w,a1
		moveq	#4,d6
		moveq	#$3B,d5	; ';'
		movem.l	d1-d4,-(sp)
		bsr.s	sub_7DDA
		movem.l	(sp)+,d1-d4
		lea	($FFFFB000).w,a1
		subq.b	#1,d6
		moveq	#$3F,d5	; '?'
; End of function sub_7DC0


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_7DDA:				; CODE XREF: sub_7DC0+Cp
		btst	d6,$22(a0)
		beq.s	loc_7E3E
		btst	#1,$22(a1)
		bne.s	loc_7DFA
		moveq	#0,d0
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.s	loc_7DFA
		cmp.w	d2,d0
		bcs.s	loc_7E08

loc_7DFA:				; CODE XREF: sub_7DDA+Cj sub_7DDA+1Aj
		bclr	#3,$22(a1)
		bclr	d6,$22(a0)
		moveq	#0,d4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7E08:				; CODE XREF: sub_7DDA+1Ej
		lsr.w	#4,d0
		move.b	d0,(a0,d5.w)
		movea.l	$30(a0),a2
		cmpi.w	#8,d0
		bcs.s	loc_7E20
		movea.l	$34(a0),a2
		subi.w	#8,d0

loc_7E20:				; CODE XREF: sub_7DDA+3Cj
		add.w	d0,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		move.w	$12(a2,d0.w),d0
		subq.w	#8,d0
		moveq	#0,d1
		move.b	$16(a1),d1
		sub.w	d1,d0
		move.w	d0,$C(a1)
		moveq	#0,d4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7E3E:				; CODE XREF: sub_7DDA+4j
		move.w	d1,-(sp)
		bsr.w	sub_F880
		move.w	(sp)+,d1
		btst	d6,$22(a0)
		beq.s	locret_7E5E
		moveq	#0,d0
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		lsr.w	#4,d0
		move.b	d0,(a0,d5.w)

locret_7E5E:				; CODE XREF: sub_7DDA+70j
		rts
; End of function sub_7DDA


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_7E60:				; CODE XREF: ROM:00007DB8p
		moveq	#0,d0
		tst.w	($FFFFB010).w
		bne.s	loc_7E72
		move.b	($FFFFFE0F).w,d0
		andi.w	#$1C,d0
		lsr.w	#1,d0

loc_7E72:				; CODE XREF: sub_7E60+6j
		moveq	#0,d2
		move.b	byte_7E9F(pc,d0.w),d2
		swap	d2
		move.b	byte_7E9E(pc,d0.w),d2
		moveq	#0,d0
		tst.w	($FFFFB050).w
		bne.s	loc_7E90
		move.b	($FFFFFE0F).w,d0
		andi.w	#$1C,d0
		lsr.w	#1,d0

loc_7E90:				; CODE XREF: sub_7E60+24j
		moveq	#0,d6
		move.b	byte_7E9F(pc,d0.w),d6
		swap	d6
		move.b	byte_7E9E(pc,d0.w),d6
		bra.s	loc_7EAE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_7E9E:	dc.b 1
byte_7E9F:	dc.b   2,  1,  2,  1,  2,  1,  2,  0,  1,  0,  0,  0,  0,  0,  1; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_7EAE:				; CODE XREF: sub_7E60+3Cj
		moveq	#$FFFFFFFE,d3
		moveq	#$FFFFFFFE,d4
		move.b	$22(a0),d0
		andi.b	#8,d0
		beq.s	loc_7EC0
		move.b	$3F(a0),d3

loc_7EC0:				; CODE XREF: sub_7E60+5Aj
		move.b	$22(a0),d0
		andi.b	#$10,d0
		beq.s	loc_7ECE
		move.b	$3B(a0),d4

loc_7ECE:				; CODE XREF: sub_7E60+68j
		movea.l	$30(a0),a1
		lea	$45(a1),a2
		lea	$15(a1),a1
		moveq	#0,d1
		move.b	$28(a0),d1
		subq.b	#1,d1
		moveq	#0,d5

loc_7EE4:				; CODE XREF: sub_7E60:loc_7F30j
		moveq	#0,d0
		subq.w	#1,d3
		cmp.b	d3,d5
		bne.s	loc_7EEE
		move.w	d2,d0

loc_7EEE:				; CODE XREF: sub_7E60+8Aj
		addq.w	#2,d3
		cmp.b	d3,d5
		bne.s	loc_7EF6
		move.w	d2,d0

loc_7EF6:				; CODE XREF: sub_7E60+92j
		subq.w	#1,d3
		subq.w	#1,d4
		cmp.b	d4,d5
		bne.s	loc_7F00
		move.w	d6,d0

loc_7F00:				; CODE XREF: sub_7E60+9Cj
		addq.w	#2,d4
		cmp.b	d4,d5
		bne.s	loc_7F08
		move.w	d6,d0

loc_7F08:				; CODE XREF: sub_7E60+A4j
		subq.w	#1,d4
		cmp.b	d3,d5
		bne.s	loc_7F14
		swap	d2
		move.w	d2,d0
		swap	d2

loc_7F14:				; CODE XREF: sub_7E60+ACj
		cmp.b	d4,d5
		bne.s	loc_7F1E
		swap	d6
		move.w	d6,d0
		swap	d6

loc_7F1E:				; CODE XREF: sub_7E60+B6j
		move.b	d0,(a1)
		addq.w	#1,d5
		addq.w	#6,a1
		cmpa.w	a2,a1
		bne.s	loc_7F30
		movea.l	$34(a0),a1
		lea	$15(a1),a1

loc_7F30:				; CODE XREF: sub_7E60+C6j
		dbf	d1,loc_7EE4
		rts
; End of function sub_7E60


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_7F36:				; CODE XREF: ROM:loc_7D06p
					; ROM:loc_7D9Cp
		move.b	$3E(a0),d0
		bsr.w	CalcSine
		move.w	d0,d4
		lea	(Obj11_BendData2).l,a4
		moveq	#0,d0
		move.b	$28(a0),d0
		lsl.w	#4,d0
		moveq	#0,d3
		move.b	$3F(a0),d3
		move.w	d3,d2
		add.w	d0,d3
		moveq	#0,d5
		lea	(Obj11_BendData-$80).l,a5
		move.b	(a5,d3.w),d5

loc_7F64:
		andi.w	#$F,d3
		lsl.w	#4,d3
		lea	(a4,d3.w),a3
		movea.l	$30(a0),a1
		lea	$42(a1),a2
		lea	$12(a1),a1

loc_7F7A:				; CODE XREF: sub_7F36:loc_7F9Aj
		moveq	#0,d0
		move.b	(a3)+,d0
		addq.w	#1,d0
		mulu.w	d5,d0
		mulu.w	d4,d0
		swap	d0
		add.w	$3C(a0),d0
		move.w	d0,(a1)
		addq.w	#6,a1
		cmpa.w	a2,a1
		bne.s	loc_7F9A
		movea.l	$34(a0),a1
		lea	$12(a1),a1

loc_7F9A:				; CODE XREF: sub_7F36+5Aj
		dbf	d2,loc_7F7A
		moveq	#0,d0
		move.b	$28(a0),d0
		moveq	#0,d3
		move.b	$3F(a0),d3
		addq.b	#1,d3
		sub.b	d0,d3
		neg.b	d3
		bmi.s	locret_7FE4
		move.w	d3,d2
		lsl.w	#4,d3
		lea	(a4,d3.w),a3
		adda.w	d2,a3
		subq.w	#1,d2
		bcs.s	locret_7FE4

loc_7FC0:				; CODE XREF: sub_7F36:loc_7FE0j
		moveq	#0,d0
		move.b	-(a3),d0
		addq.w	#1,d0
		mulu.w	d5,d0
		mulu.w	d4,d0
		swap	d0
		add.w	$3C(a0),d0
		move.w	d0,(a1)
		addq.w	#6,a1
		cmpa.w	a2,a1
		bne.s	loc_7FE0
		movea.l	$34(a0),a1
		lea	$12(a1),a1

loc_7FE0:				; CODE XREF: sub_7F36+A0j
		dbf	d2,loc_7FC0

locret_7FE4:				; CODE XREF: sub_7F36+7Aj sub_7F36+88j
		rts
; End of function sub_7F36

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj11_BendData:	dc.b   2,  4,  6,  8,  8,  6,  4,  2,  0,  0,  0,  0,  0,  0,  0,  0; 0
					; DATA XREF: sub_7F36+24t
		dc.b   2,  4,  6,  8, $A,  8,  6,  4,  2,  0,  0,  0,  0,  0,  0,  0; 16
		dc.b   2,  4,  6,  8, $A, $A,  8,  6,  4,  2,  0,  0,  0,  0,  0,  0; 32
		dc.b   2,  4,  6,  8, $A, $C, $A,  8,  6,  4,  2,  0,  0,  0,  0,  0; 48
		dc.b   2,  4,  6,  8, $A, $C, $C, $A,  8,  6,  4,  2,  0,  0,  0,  0; 64
		dc.b   2,  4,  6,  8, $A, $C, $E, $C, $A,  8,  6,  4,  2,  0,  0,  0; 80
		dc.b   2,  4,  6,  8, $A, $C, $E, $E, $C, $A,  8,  6,  4,  2,  0,  0; 96
		dc.b   2,  4,  6,  8, $A, $C, $E,$10, $E, $C, $A,  8,  6,  4,  2,  0; 112
		dc.b   2,  4,  6,  8, $A, $C, $E,$10,$10, $E, $C, $A,  8,  6,  4,  2; 128
Obj11_BendData2:dc.b $FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 0
					; DATA XREF: sub_7F36+Ao
		dc.b $B5,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 16
		dc.b $7E,$DB,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 32
		dc.b $61,$B5,$EC,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 48
		dc.b $4A,$93,$CD,$F3,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 64
		dc.b $3E,$7E,$B0,$DB,$F6,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 80
		dc.b $38,$6D,$9D,$C5,$E4,$F8,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0; 96
		dc.b $31,$61,$8E,$B5,$D4,$EC,$FB,$FF,  0,  0,  0,  0,  0,  0,  0,  0; 112
		dc.b $2B,$56,$7E,$A2,$C1,$DB,$EE,$FB,$FF,  0,  0,  0,  0,  0,  0,  0; 128
		dc.b $25,$4A,$73,$93,$B0,$CD,$E1,$F3,$FC,$FF,  0,  0,  0,  0,  0,  0; 144
		dc.b $1F,$44,$67,$88,$A7,$BD,$D4,$E7,$F4,$FD,$FF,  0,  0,  0,  0,  0; 160
		dc.b $1F,$3E,$5C,$7E,$98,$B0,$C9,$DB,$EA,$F6,$FD,$FF,  0,  0,  0,  0; 176
		dc.b $19,$38,$56,$73,$8E,$A7,$BD,$D1,$E1,$EE,$F8,$FE,$FF,  0,  0,  0; 192
		dc.b $19,$38,$50,$6D,$83,$9D,$B0,$C5,$D8,$E4,$F1,$F8,$FE,$FF,  0,  0; 208
		dc.b $19,$31,$4A,$67,$7E,$93,$A7,$BD,$CD,$DB,$E7,$F3,$F9,$FE,$FF,  0; 224
		dc.b $19,$31,$4A,$61,$78,$8E,$A2,$B5,$C5,$D4,$E1,$EC,$F4,$FB,$FE,$FF; 240
; ---------------------------------------------------------------------------
; Sprite mappings - GHZ bridge
; ---------------------------------------------------------------------------
Map_obj11_GHZ:	incbin	"mappings/sprite/obj11_GHZ.bin"
; ---------------------------------------------------------------------------
; Sprite mappings - HPZ bridge
; ---------------------------------------------------------------------------
Map_obj11_HPZ:	incbin	"mappings/sprite/obj11_HPZ.bin"
; ---------------------------------------------------------------------------
; Sprite mappings - EHZ bridge
; ---------------------------------------------------------------------------
Map_obj11:	incbin	"mappings/sprite/obj11.bin"

; ===========================================================================
		nop
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 15 - swinging platforms
;----------------------------------------------------------------------------

Obj15:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj15_Index(pc,d0.w),d1
		jmp	Obj15_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj15_Index:	dc.w loc_821E-Obj15_Index ; DATA XREF: ROM:Obj15_Indexo
					; ROM:00008214o ...
		dc.w loc_83AA-Obj15_Index
		dc.w loc_8526-Obj15_Index
		dc.w loc_8526-Obj15_Index
		dc.w loc_852A-Obj15_Index
		dc.w loc_83CA-Obj15_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_821E:				; DATA XREF: ROM:Obj15_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj15,4(a0)
		move.w	#$44D0,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#3,$18(a0)
		move.b	#$18,$19(a0)
		move.b	#8,$16(a0)
		move.w	$C(a0),$38(a0)
		move.w	8(a0),$3A(a0)
		cmpi.b	#3,(Current_Zone).w
		bne.s	loc_8284
		move.l	#Map_Obj15_EHZ,4(a0)
		move.w	#$43DC,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#$20,$19(a0) ; ' '
		move.b	#$10,$16(a0)
		move.b	#$99,$20(a0)

loc_8284:				; CODE XREF: ROM:0000825Ej
		cmpi.b	#2,(Current_Zone).w
		bne.s	loc_82BE
		move.l	#Map_Obj15_CPZ,4(a0)
		move.w	#$2418,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#$20,$19(a0) ; ' '
		move.b	#$10,$16(a0)
		lea	$28(a0),a2
		move.b	(a2),d0
		lsl.w	#4,d0
		move.b	d0,$3C(a0)
		move.b	#0,(a2)+
		bra.w	loc_8388
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_82BE:				; CODE XREF: ROM:0000828Aj
		move.b	0(a0),d4
		moveq	#0,d1
		lea	$28(a0),a2
		move.b	(a2),d1
		move.w	d1,-(sp)
		andi.w	#$F,d1
		move.b	#0,(a2)+
		move.w	d1,d3
		lsl.w	#4,d3
		addi.b	#8,d3
		move.b	d3,$3C(a0)
		subi.b	#8,d3
		tst.b	$1A(a0)
		beq.s	loc_82F0
		addi.b	#8,d3
		subq.w	#1,d1

loc_82F0:				; CODE XREF: ROM:000082E8j
					; ROM:loc_8358j
		bsr.w	SingleObjLoad2
		bne.s	loc_835C
		addq.b	#1,$28(a0)
		move.w	a1,d5
		subi.w	#$B000,d5
		lsr.w	#6,d5
		andi.w	#$7F,d5	; ''
		move.b	d5,(a2)+
		move.b	#8,routine(a1)
		move.b	d4,0(a1)
		move.l	4(a0),4(a1)
		move.w	2(a0),2(a1)
		bclr	#6,2(a1)
		move.b	#4,1(a1)
		move.b	#4,$18(a1)
		move.b	#8,$19(a1)
		move.b	#1,$1A(a1)
		move.b	d3,$3C(a1)
		subi.b	#$10,d3
		bcc.s	loc_8358
		move.b	#2,$1A(a1)
		move.b	#3,$18(a1)
		bset	#6,2(a1)

loc_8358:				; CODE XREF: ROM:00008344j
		dbf	d1,loc_82F0

loc_835C:				; CODE XREF: ROM:000082F4j
		move.w	(sp)+,d1
		btst	#4,d1
		beq.s	loc_8388
		move.l	#Map_Obj48,4(a0)
		move.w	#$43AA,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#1,$1A(a0)
		move.b	#2,$18(a0)
		move.b	#$81,$20(a0)

loc_8388:				; CODE XREF: ROM:000082BAj
					; ROM:00008362j
		move.w	a0,d5
		subi.w	#$B000,d5
		lsr.w	#6,d5
		andi.w	#$7F,d5	; ''
		move.b	d5,(a2)+
		move.w	#$4080,$26(a0)
		move.w	#$FE00,$3E(a0)
		cmpi.b	#5,(Current_Zone).w
		beq.s	loc_83CA

loc_83AA:				; DATA XREF: ROM:00008214o
		move.w	8(a0),-(sp)
		bsr.w	sub_83D2
		moveq	#0,d1
		move.b	$19(a0),d1
		moveq	#0,d3
		move.b	$16(a0),d3
		addq.b	#1,d3
		move.w	(sp)+,d4
		bsr.w	sub_F82E
		bra.w	loc_84EE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_83CA:				; CODE XREF: ROM:000083A8j
					; DATA XREF: ROM:0000821Co
		bsr.w	sub_83D2
		bra.w	loc_84EE

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_83D2:				; CODE XREF: ROM:000083AEp
					; ROM:loc_83CAp
		move.b	($FFFFFE78).w,d0
		move.w	#$80,d1	; ''
		btst	#0,$22(a0)
		beq.s	loc_83E6
		neg.w	d0
		add.w	d1,d0

loc_83E6:				; CODE XREF: sub_83D2+Ej
		bra.w	loc_8472
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_83EA:				; CODE XREF: ROM:0001922Ap
		tst.b	$3D(a0)
		bne.s	loc_840E
		move.w	$3E(a0),d0
		addi.w	#8,d0
		move.w	d0,$3E(a0)
		add.w	d0,$26(a0)
		cmpi.w	#$200,d0
		bne.s	loc_842A
		move.b	#1,$3D(a0)
		bra.s	loc_842A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_840E:				; CODE XREF: sub_83D2+1Cj
		move.w	$3E(a0),d0
		subi.w	#8,d0
		move.w	d0,$3E(a0)
		add.w	d0,$26(a0)
		cmpi.w	#$FE00,d0
		bne.s	loc_842A
		move.b	#0,$3D(a0)

loc_842A:				; CODE XREF: sub_83D2+32j sub_83D2+3Aj ...
		move.b	$26(a0),d0

loc_842E:				; CODE XREF: ROM:0001921Ap
		bsr.w	CalcSine
		move.w	$38(a0),d2
		move.w	$3A(a0),d3
		lea	$28(a0),a2
		moveq	#0,d6
		move.b	(a2)+,d6

loc_8442:				; CODE XREF: sub_83D2+9Aj
		moveq	#0,d4
		move.b	(a2)+,d4
		lsl.w	#6,d4
		addi.l	#$FFFFB000,d4
		movea.l	d4,a1
		moveq	#0,d4
		move.b	$3C(a1),d4
		move.l	d4,d5
		muls.w	d0,d4
		asr.l	#8,d4
		muls.w	d1,d5
		asr.l	#8,d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d4,$C(a1)
		move.w	d5,8(a1)
		dbf	d6,loc_8442
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8472:				; CODE XREF: sub_83D2:loc_83E6j
		bsr.w	CalcSine
		move.w	$38(a0),d2
		move.w	$3A(a0),d3
		moveq	#0,d4
		move.b	$3C(a0),d4
		move.l	d4,d5
		muls.w	d0,d4
		asr.l	#8,d4
		muls.w	d1,d5
		asr.l	#8,d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d4,$C(a0)
		move.w	d5,8(a0)
		lea	$28(a0),a2
		moveq	#0,d6
		move.b	(a2)+,d6
		adda.w	d6,a2
		subq.b	#1,d6
		bcs.s	locret_84EC
		move.w	d6,-(sp)
		asl.w	#4,d0
		ext.l	d0
		asl.l	#8,d0
		asl.w	#4,d1
		ext.l	d1
		asl.l	#8,d1
		moveq	#0,d4
		moveq	#0,d5

loc_84BA:				; CODE XREF: sub_83D2+114j
		moveq	#0,d6
		move.b	-(a2),d6
		lsl.w	#6,d6
		addi.l	#$FFFFB000,d6
		movea.l	d6,a1
		movem.l	d4-d5,-(sp)
		swap	d4
		swap	d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d4,$C(a1)
		move.w	d5,8(a1)
		movem.l	(sp)+,d4-d5
		add.l	d0,d4
		add.l	d1,d5
		subq.w	#1,(sp)
		bcc.w	loc_84BA
		addq.w	#2,sp

locret_84EC:				; CODE XREF: sub_83D2+D4j
		rts
; End of function sub_83D2

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_84EE:				; CODE XREF: ROM:000083C6j
					; ROM:000083CEj
		move.w	$3A(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_8506
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8506:				; CODE XREF: ROM:000084FEj
		moveq	#0,d2
		lea	$28(a0),a2
		move.b	(a2)+,d2

loc_850E:				; CODE XREF: ROM:00008520j
		moveq	#0,d0
		move.b	(a2)+,d0
		lsl.w	#6,d0
		addi.l	#$FFFFB000,d0
		movea.l	d0,a1
		bsr.w	DeleteObject2
		dbf	d2,loc_850E
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8526:				; DATA XREF: ROM:00008216o
					; ROM:00008218o
		bra.w	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_852A:				; DATA XREF: ROM:0000821Ao
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj15:	dc.w word_8534-Map_Obj15 ; DATA	XREF: ROM:00008222o
					; ROM:Map_Obj15o ...
		dc.w word_8546-Map_Obj15
		dc.w word_8550-Map_Obj15
word_8534:	dc.w 2			; DATA XREF: ROM:Map_Obj15o
		dc.w $F809,    4,    2,$FFE8; 0
		dc.w $F809,    4,    2,	   0; 4
word_8546:	dc.w 1			; DATA XREF: ROM:00008530o
		dc.w $F805,    0,    0,$FFF8; 0
word_8550:	dc.w 1			; DATA XREF: ROM:00008532o
		dc.w $F805,   $A,    5,$FFF8; 0
Map_Obj15_CPZ:	dc.w word_855C-Map_Obj15_CPZ ; DATA XREF: ROM:0000828Co
					; ROM:Map_Obj15_CPZo ...
word_855C:	dc.w 2			; DATA XREF: ROM:Map_Obj15_CPZo
		dc.w $F00F,    8,    4,$FFE0; 0
		dc.w $F00F, $808, $804,	   0; 4
Map_Obj15_EHZ:	dc.w word_8574-Map_Obj15_EHZ ; DATA XREF: ROM:00008260o
					; ROM:Map_Obj15_EHZo ...
		dc.w word_85B6-Map_Obj15_EHZ
		dc.w word_85C0-Map_Obj15_EHZ
word_8574:	dc.w 8			; DATA XREF: ROM:Map_Obj15_EHZo
		dc.w $F00F,    4,    2,$FFE0; 0
		dc.w $F00F, $804, $802,	   0; 4
		dc.w $F005,  $14,   $A,$FFD0; 8
		dc.w $F005, $814, $80A,	 $20; 12
		dc.w $1004,  $18,   $C,$FFE0; 16
		dc.w $1004, $818, $80C,	 $10; 20
		dc.w $1001,  $1A,   $D,$FFF8; 24
		dc.w $1001, $81A, $80D,	   0; 28
word_85B6:	dc.w 1			; DATA XREF: ROM:00008570o
		dc.w $F805,$4000,$4000,$FFF8; 0
word_85C0:	dc.w 1			; DATA XREF: ROM:00008572o
		dc.w $F805,  $1C,   $E,$FFF8; 0
Map_Obj48:	dc.w word_85D2-Map_Obj48 ; DATA	XREF: ROM:00008364o
					; ROM:Map_Obj48o ...
		dc.w word_8604-Map_Obj48
		dc.w word_8626-Map_Obj48
		dc.w word_8648-Map_Obj48
word_85D2:	dc.w 6			; DATA XREF: ROM:Map_Obj48o
		dc.w $F004,  $24,  $12,$FFF0; 0
		dc.w $F804,$1024,$1012,$FFF0; 4
		dc.w $E80A,    0,    0,$FFE8; 8
		dc.w $E80A, $800, $800,	   0; 12
		dc.w	$A,$1000,$1000,$FFE8; 16
		dc.w	$A,$1800,$1800,	   0; 20
word_8604:	dc.w 4			; DATA XREF: ROM:000085CCo
		dc.w $E80A,    9,    4,$FFE8; 0
		dc.w $E80A, $809, $804,	   0; 4
		dc.w	$A,$1009,$1004,$FFE8; 8
		dc.w	$A,$1809,$1804,	   0; 12
word_8626:	dc.w 4			; DATA XREF: ROM:000085CEo
		dc.w $E80A,  $12,    9,$FFE8; 0
		dc.w $E80A,  $1B,   $D,	   0; 4
		dc.w	$A,$181B,$180D,$FFE8; 8
		dc.w	$A,$1812,$1809,	   0; 12
word_8648:	dc.w 4			; DATA XREF: ROM:000085D0o
		dc.w $E80A, $81B, $80D,$FFE8; 0
		dc.w $E80A, $812, $809,	   0; 4
		dc.w	$A,$1012,$1009,$FFE8; 8
		dc.w	$A,$101B,$100D,	   0; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

Obj17:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj17_Index(pc,d0.w),d1
		jmp	Obj17_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj17_Index:	dc.w loc_8680-Obj17_Index ; DATA XREF: ROM:Obj17_Indexo
					; ROM:0000867Co ...
		dc.w loc_874A-Obj17_Index
		dc.w loc_87AC-Obj17_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8680:				; DATA XREF: ROM:Obj17_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj17,4(a0)
		move.w	#$4398,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#7,$22(a0)
		move.b	#4,1(a0)
		move.b	#3,$18(a0)
		move.b	#8,$19(a0)
		move.w	$C(a0),d2
		move.w	8(a0),d3
		move.b	0(a0),d4
		lea	$28(a0),a2
		moveq	#0,d1
		move.b	(a2),d1
		move.b	#0,(a2)+
		move.w	d1,d0
		lsr.w	#1,d0
		lsl.w	#4,d0
		sub.w	d0,d3
		subq.b	#2,d1
		bcs.s	loc_874A
		moveq	#0,d6

loc_86D4:				; CODE XREF: ROM:loc_8746j
		bsr.w	SingleObjLoad2
		bne.s	loc_874A
		addq.b	#1,$28(a0)
		move.w	a1,d5
		subi.w	#$B000,d5
		lsr.w	#6,d5
		andi.w	#$7F,d5	; ''
		move.b	d5,(a2)+
		move.b	#4,routine(a1)
		move.b	d4,0(a1)
		move.w	d2,$C(a1)
		move.w	d3,8(a1)
		move.l	4(a0),4(a1)
		move.w	#$4398,2(a1)
		bsr.w	Adjust2PArtPointer2
		move.b	#4,1(a1)
		move.b	#3,$18(a1)
		move.b	#8,$19(a1)
		move.b	d6,$3E(a1)
		addq.b	#1,d6
		andi.b	#7,d6
		addi.w	#$10,d3
		cmp.w	8(a0),d3
		bne.s	loc_8746
		move.b	d6,$3E(a0)
		addq.b	#1,d6
		andi.b	#7,d6
		addi.w	#$10,d3
		addq.b	#1,$28(a0)

loc_8746:				; CODE XREF: ROM:00008732j
		dbf	d1,loc_86D4

loc_874A:				; CODE XREF: ROM:000086D0j
					; ROM:000086D8j
					; DATA XREF: ...
		bsr.w	sub_878C
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_8766
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8766:				; CODE XREF: ROM:0000875Ej
		moveq	#0,d2
		lea	$28(a0),a2
		move.b	(a2)+,d2
		subq.b	#2,d2
		bcs.s	loc_8788

loc_8772:				; CODE XREF: ROM:00008784j
		moveq	#0,d0
		move.b	(a2)+,d0
		lsl.w	#6,d0
		addi.l	#$FFFFB000,d0
		movea.l	d0,a1
		bsr.w	DeleteObject2
		dbf	d2,loc_8772

loc_8788:				; CODE XREF: ROM:00008770j
		bra.w	DeleteObject

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_878C:				; CODE XREF: ROM:loc_874Ap
					; ROM:loc_87ACp
		move.b	($FFFFFEC1).w,d0
		move.b	#0,$20(a0)
		add.b	$3E(a0),d0
		andi.b	#7,d0
		move.b	d0,$1A(a0)
		bne.s	locret_87AA
		move.b	#$84,$20(a0)

locret_87AA:				; CODE XREF: sub_878C+16j
		rts
; End of function sub_878C

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_87AC:				; DATA XREF: ROM:0000867Eo
		bsr.w	sub_878C
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj17:	dc.w word_87C4-Map_Obj17 ; DATA	XREF: ROM:00008684o
					; ROM:Map_Obj17o ...
		dc.w word_87CE-Map_Obj17
		dc.w word_87D8-Map_Obj17
		dc.w word_87E2-Map_Obj17
		dc.w word_87EC-Map_Obj17
		dc.w word_87F6-Map_Obj17
		dc.w word_880A-Map_Obj17
		dc.w word_8800-Map_Obj17
word_87C4:	dc.w 1			; DATA XREF: ROM:Map_Obj17o
		dc.w $F001,    0,    0,$FFFC; 0
word_87CE:	dc.w 1			; DATA XREF: ROM:000087B6o
		dc.w $F505,    2,    1,$FFF8; 0
word_87D8:	dc.w 1			; DATA XREF: ROM:000087B8o
		dc.w $F805,    6,    3,$FFF8; 0
word_87E2:	dc.w 1			; DATA XREF: ROM:000087BAo
		dc.w $FB05,   $A,    5,$FFF8; 0
word_87EC:	dc.w 1			; DATA XREF: ROM:000087BCo
		dc.w	 1,   $E,    7,$FFFC; 0
word_87F6:	dc.w 1			; DATA XREF: ROM:000087BEo
		dc.w  $400,  $10,    8,$FFFD; 0
word_8800:	dc.w 1			; DATA XREF: ROM:000087C2o
		dc.w $F400,  $11,    8,$FFFD; 0
word_880A:	dc.w 0			; DATA XREF: ROM:000087C0o
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj18:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj18_Index(pc,d0.w),d1
		jmp	Obj18_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj18_Index:	dc.w loc_882C-Obj18_Index ; DATA XREF: ROM:Obj18_Indexo
					; ROM:0000881Co ...
		dc.w loc_88A2-Obj18_Index
		dc.w loc_8908-Obj18_Index
		dc.w loc_88E0-Obj18_Index
Obj18_Conf:	dc.w $2000
		dc.w $2001
		dc.w $2002
		dc.w $4003
		dc.w $3004
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_882C:				; DATA XREF: ROM:Obj18_Indexo
		addq.b	#2,routine(a0)
		moveq	#0,d0
		move.b	$28(a0),d0
		lsr.w	#3,d0
		andi.w	#$1E,d0
		lea	Obj18_Conf(pc,d0.w),a2
		move.b	(a2)+,$19(a0)
		move.b	(a2)+,$1A(a0)
		move.w	#$4000,2(a0)
		move.l	#Map_Obj18,4(a0)
		cmpi.b	#3,(Current_Zone).w
		beq.s	loc_8866
		cmpi.b	#5,(Current_Zone).w
		bne.s	loc_8874

loc_8866:				; CODE XREF: ROM:0000885Cj
		move.l	#Map_obj18_EHZ,4(a0)
		move.w	#$4000,2(a0)

loc_8874:				; CODE XREF: ROM:00008864j
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.w	$C(a0),$2C(a0)
		move.w	$C(a0),$34(a0)
		move.w	8(a0),$32(a0)
		move.w	#$80,$26(a0) ; ''
		andi.b	#$F,$28(a0)

loc_88A2:				; DATA XREF: ROM:0000881Co
		move.b	$22(a0),d0
		andi.b	#$18,d0
		bne.s	loc_88B8
		tst.b	$38(a0)
		beq.s	loc_88C4
		subq.b	#4,$38(a0)
		bra.s	loc_88C4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_88B8:				; CODE XREF: ROM:000088AAj
		cmpi.b	#$40,$38(a0) ; '@'
		beq.s	loc_88C4
		addq.b	#4,$38(a0)

loc_88C4:				; CODE XREF: ROM:000088B0j
					; ROM:000088B6j ...
		move.w	8(a0),-(sp)
		bsr.w	sub_8926
		bsr.w	sub_890C
		moveq	#0,d1
		move.b	$19(a0),d1
		moveq	#8,d3
		move.w	(sp)+,d4
		bsr.w	sub_F78A
		bra.s	loc_88E8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_88E0:				; DATA XREF: ROM:00008820o
		bsr.w	sub_8926
		bsr.w	sub_890C

loc_88E8:				; CODE XREF: ROM:000088DEj
		tst.w	(Two_player_mode).w
		beq.s	loc_88F2
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_88F2:				; CODE XREF: ROM:000088ECj
		move.w	$32(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_8908
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8908:				; CODE XREF: ROM:00008902j
					; DATA XREF: ROM:0000881Eo
		bra.w	DeleteObject

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_890C:				; CODE XREF: ROM:000088CCp
					; ROM:000088E4p
		move.b	$38(a0),d0
		bsr.w	CalcSine
		move.w	#$400,d1
		muls.w	d1,d0
		swap	d0
		add.w	$2C(a0),d0
		move.w	d0,$C(a0)
		rts
; End of function sub_890C


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_8926:				; CODE XREF: ROM:000088C8p
					; ROM:loc_88E0p
		moveq	#0,d0
		move.b	$28(a0),d0
		andi.w	#$F,d0
		add.w	d0,d0
		move.w	off_893A(pc,d0.w),d1
		jmp	off_893A(pc,d1.w)
; End of function sub_8926

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_893A:	dc.w locret_8956-off_893A ; DATA XREF: ROM:off_893Ao
					; ROM:0000893Co ...
		dc.w loc_8968-off_893A
		dc.w loc_89AE-off_893A
		dc.w loc_89C6-off_893A
		dc.w loc_89EE-off_893A
		dc.w loc_8958-off_893A
		dc.w loc_899E-off_893A
		dc.w loc_8A5C-off_893A
		dc.w loc_8A88-off_893A
		dc.w locret_8956-off_893A
		dc.w loc_8AA0-off_893A
		dc.w loc_8ABA-off_893A
		dc.w loc_8990-off_893A
		dc.w loc_8980-off_893A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_8956:				; DATA XREF: ROM:off_893Ao
					; ROM:0000894Co
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8958:				; DATA XREF: ROM:00008944o
		move.w	$32(a0),d0
		move.b	$26(a0),d1
		neg.b	d1
		addi.b	#$40,d1	; '@'
		bra.s	loc_8974
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8968:				; DATA XREF: ROM:0000893Co
		move.w	$32(a0),d0
		move.b	$26(a0),d1
		subi.b	#$40,d1	; '@'

loc_8974:				; CODE XREF: ROM:00008966j
		ext.w	d1
		add.w	d1,d0
		move.w	d0,8(a0)
		bra.w	loc_8AD2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8980:				; DATA XREF: ROM:00008954o
		move.w	$34(a0),d0
		move.b	($FFFFFE6C).w,d1
		neg.b	d1
		addi.b	#$30,d1	; '0'
		bra.s	loc_89BA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8990:				; DATA XREF: ROM:00008952o
		move.w	$34(a0),d0
		move.b	($FFFFFE6C).w,d1
		subi.b	#$30,d1	; '0'
		bra.s	loc_89BA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_899E:				; DATA XREF: ROM:00008946o
		move.w	$34(a0),d0
		move.b	$26(a0),d1
		neg.b	d1
		addi.b	#$40,d1	; '@'
		bra.s	loc_89BA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_89AE:				; DATA XREF: ROM:0000893Eo
		move.w	$34(a0),d0
		move.b	$26(a0),d1
		subi.b	#$40,d1	; '@'

loc_89BA:				; CODE XREF: ROM:0000898Ej
					; ROM:0000899Cj ...
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$2C(a0)
		bra.w	loc_8AD2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_89C6:				; DATA XREF: ROM:00008940o
		tst.w	$3A(a0)
		bne.s	loc_89DC
		btst	#3,$22(a0)
		beq.s	locret_89DA
		move.w	#$1E,$3A(a0)

locret_89DA:				; CODE XREF: ROM:000089D2j
					; ROM:000089E0j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_89DC:				; CODE XREF: ROM:000089CAj
		subq.w	#1,$3A(a0)
		bne.s	locret_89DA
		move.w	#$20,$3A(a0) ; ' '
		addq.b	#1,$28(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_89EE:				; DATA XREF: ROM:00008942o
		tst.w	$3A(a0)
		beq.s	loc_8A2E
		subq.w	#1,$3A(a0)
		bne.s	loc_8A2E
		btst	#3,$22(a0)
		beq.s	loc_8A28
		lea	($FFFFB000).w,a1
		bset	#1,$22(a1)
		bclr	#3,$22(a1)
		move.b	#2,routine(a1)
		bclr	#3,$22(a0)
		clr.b	$25(a0)
		move.w	$12(a0),$12(a1)

loc_8A28:				; CODE XREF: ROM:00008A00j
		move.b	#6,routine(a0)

loc_8A2E:				; CODE XREF: ROM:000089F2j
					; ROM:000089F8j
		move.l	$2C(a0),d3
		move.w	$12(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d3
		move.l	d3,$2C(a0)
		addi.w	#$38,$12(a0) ; '8'
		move.w	($FFFFEECE).w,d0
		addi.w	#$E0,d0	; 'à'
		cmp.w	$2C(a0),d0
		bcc.s	locret_8A5A
		move.b	#4,routine(a0)

locret_8A5A:				; CODE XREF: ROM:00008A52j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A5C:				; DATA XREF: ROM:00008948o
		tst.w	$3A(a0)
		bne.s	loc_8A7C
		lea	($FFFFF7E0).w,a2
		moveq	#0,d0
		move.b	$28(a0),d0
		lsr.w	#4,d0
		tst.b	(a2,d0.w)
		beq.s	locret_8A7A
		move.w	#$3C,$3A(a0) ; '<'

locret_8A7A:				; CODE XREF: ROM:00008A72j
					; ROM:00008A80j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A7C:				; CODE XREF: ROM:00008A60j
		subq.w	#1,$3A(a0)
		bne.s	locret_8A7A
		addq.b	#1,$28(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A88:				; DATA XREF: ROM:0000894Ao
		subq.w	#2,$2C(a0)
		move.w	$34(a0),d0
		subi.w	#$200,d0
		cmp.w	$2C(a0),d0
		bne.s	locret_8A9E
		clr.b	$28(a0)

locret_8A9E:				; CODE XREF: ROM:00008A98j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8AA0:				; DATA XREF: ROM:0000894Eo
		move.w	$34(a0),d0
		move.b	$26(a0),d1
		subi.b	#$40,d1	; '@'
		ext.w	d1
		asr.w	#1,d1
		add.w	d1,d0
		move.w	d0,$2C(a0)
		bra.w	loc_8AD2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8ABA:				; DATA XREF: ROM:00008950o
		move.w	$34(a0),d0
		move.b	$26(a0),d1
		neg.b	d1
		addi.b	#$40,d1	; '@'
		ext.w	d1
		asr.w	#1,d1
		add.w	d1,d0
		move.w	d0,$2C(a0)

loc_8AD2:				; CODE XREF: ROM:0000897Cj
					; ROM:000089C2j ...
		move.b	($FFFFFE78).w,$26(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj18x:	dc.w word_8ADE-Map_Obj18x ; DATA XREF: ROM:Map_Obj18xo
					; ROM:00008ADCo
		dc.w word_8AF0-Map_Obj18x
word_8ADE:	dc.w 2			; DATA XREF: ROM:Map_Obj18xo
		dc.w $F40B,  $3C,  $1E,$FFE8; 0
		dc.w $F40B,  $48,  $24,	   0; 4
word_8AF0:	dc.w $A			; DATA XREF: ROM:00008ADCo
		dc.w $F40F,  $CA,  $65,$FFE0; 0
		dc.w  $40F,  $DA,  $6D,$FFE0; 4
		dc.w $240F,  $DA,  $6D,$FFE0; 8
		dc.w $440F,  $DA,  $6D,$FFE0; 12
		dc.w $640F,  $DA,  $6D,$FFE0; 16
		dc.w $F40F, $8CA, $865,	   0; 20
		dc.w  $40F, $8DA, $86D,	   0; 24
		dc.w $240F, $8DA, $86D,	   0; 28
		dc.w $440F, $8DA, $86D,	   0; 32
		dc.w $640F, $8DA, $86D,	   0; 36
Map_Obj18:	dc.w word_8B46-Map_Obj18 ; DATA	XREF: ROM:0000884Eo
					; ROM:Map_Obj18o ...
		dc.w word_8B68-Map_Obj18
word_8B46:	dc.w 4			; DATA XREF: ROM:Map_Obj18o
		dc.w $F40B,  $3B,  $1D,$FFE0; 0
		dc.w $F407,  $3F,  $1F,$FFF8; 4
		dc.w $F407,  $3F,  $1F,	   8; 8
		dc.w $F403,  $47,  $23,	 $18; 12
word_8B68:	dc.w $A			; DATA XREF: ROM:00008B44o
		dc.w $F40F,  $C5,  $62,$FFE0; 0
		dc.w  $40F,  $D5,  $6A,$FFE0; 4
		dc.w $240F,  $D5,  $6A,$FFE0; 8
		dc.w $440F,  $D5,  $6A,$FFE0; 12
		dc.w $640F,  $D5,  $6A,$FFE0; 16
		dc.w $F40F, $8C5, $862,	   0; 20
		dc.w  $40F, $8D5, $86A,	   0; 24
		dc.w $240F, $8D5, $86A,	   0; 28
		dc.w $440F, $8D5, $86A,	   0; 32
		dc.w $640F, $8D5, $86A,	   0; 36
		dc.w	 2,    3,$F60B,	 $49; 40
		dc.w   $24,$FFE0,$F607,	 $51; 44
		dc.w   $28,$FFF8,$F60B,	 $55; 48
		dc.w   $2A,    8,    2,	   2; 52
		dc.w $F80F,  $21,  $10,$FFE0; 56
		dc.w $F80F,  $21,  $10,	   0; 60
; ---------------------------------------------------------------------------
; Sprite mappings - EHZ platforms
; ---------------------------------------------------------------------------
Map_obj18_EHZ:	incbin	"mappings/sprite/obj18_EHZ.bin"

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

Obj1A:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj1A_Index(pc,d0.w),d1
		jmp	Obj1A_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj1A_Index:	dc.w loc_8C58-Obj1A_Index ; DATA XREF: ROM:Obj1A_Indexo
					; ROM:00008C54o ...
		dc.w loc_8CCA-Obj1A_Index
		dc.w loc_8D02-Obj1A_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8C58:				; DATA XREF: ROM:Obj1A_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj1A,4(a0)
		move.w	#$4000,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#7,$38(a0)
		move.b	$28(a0),$1A(a0)
		cmpi.b	#4,(Current_Zone).w
		bne.s	loc_8CB0
		move.l	#Map_Obj1A_HPZ,4(a0)
		move.w	#$434A,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#$30,$19(a0) ; '0'
		move.l	#Obj1A_Conf_HPZ,$3C(a0)
		bra.s	loc_8CCA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8CB0:				; CODE XREF: ROM:00008C8Cj
		move.l	#Obj1A_Conf,$3C(a0)
		move.b	#$34,$19(a0) ; '4'
		move.b	#$38,$16(a0) ; '8'
		bset	#4,1(a0)

loc_8CCA:				; CODE XREF: ROM:00008CAEj
					; DATA XREF: ROM:00008C54o
		tst.b	$3A(a0)
		beq.s	loc_8CDC
		tst.b	$38(a0)
		beq.w	loc_8E58
		subq.b	#1,$38(a0)

loc_8CDC:				; CODE XREF: ROM:00008CCEj
		move.b	$22(a0),d0
		andi.b	#$18,d0
		beq.s	sub_8CEC
		move.b	#1,$3A(a0)

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_8CEC:				; CODE XREF: ROM:00008CE4j
					; ROM:loc_8D16p

; FUNCTION CHUNK AT 0000CE5A SIZE 00000038 BYTES
; FUNCTION CHUNK AT 0000CF3A SIZE 00000002 BYTES

		moveq	#0,d1
		move.b	$19(a0),d1
		movea.l	$3C(a0),a2
		move.w	8(a0),d4
		bsr.w	sub_F7DC
		bra.w	MarkObjGone
; End of function sub_8CEC

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8D02:				; DATA XREF: ROM:00008C56o
		tst.b	$38(a0)
		beq.s	loc_8D46
		tst.b	$3A(a0)
		bne.s	loc_8D16
		subq.b	#1,$38(a0)
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8D16:				; CODE XREF: ROM:00008D0Cj
		bsr.w	sub_8CEC
		subq.b	#1,$38(a0)
		bne.s	locret_8D44
		lea	($FFFFB000).w,a1
		bsr.s	sub_8D2A
		lea	($FFFFB040).w,a1

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_8D2A:				; CODE XREF: ROM:00008D24p
		btst	#3,$22(a1)
		beq.s	locret_8D44
		bclr	#3,$22(a1)
		bclr	#5,$22(a1)
		move.b	#1,$1D(a1)

locret_8D44:				; CODE XREF: ROM:00008D1Ej sub_8D2A+6j
		rts
; End of function sub_8D2A

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8D46:				; CODE XREF: ROM:00008D06j
		bsr.w	ObjectMoveAndFall
		tst.b	1(a0)
		bpl.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1Obj_53:				; leftover object from Sonic 1
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	S1Obj_53_Index(pc,d0.w),d1
		jmp	S1Obj_53_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1Obj_53_Index:	dc.w loc_8D6A-S1Obj_53_Index ; DATA XREF: ROM:S1Obj_53_Indexo
					; ROM:00008D66o ...
		dc.w loc_8DB4-S1Obj_53_Index
		dc.w loc_8DEA-S1Obj_53_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8D6A:				; DATA XREF: ROM:S1Obj_53_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_S1Obj53,4(a0)
		move.w	#$42B8,2(a0)
		cmpi.b	#3,(Current_Zone).w
		bne.s	loc_8D8E
		move.w	#$44E0,2(a0)
		addq.b	#2,$1A(a0)

loc_8D8E:				; CODE XREF: ROM:00008D82j
		cmpi.b	#5,(Current_Zone).w
		bne.s	loc_8D9C
		move.w	#$43F5,2(a0)

loc_8D9C:				; CODE XREF: ROM:00008D94j
		ori.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#7,$38(a0)
		move.b	#$44,$19(a0) ; 'D'

loc_8DB4:				; DATA XREF: ROM:00008D66o
		tst.b	$3A(a0)
		beq.s	loc_8DC6
		tst.b	$38(a0)
		beq.w	loc_8E3E
		subq.b	#1,$38(a0)

loc_8DC6:				; CODE XREF: ROM:00008DB8j
		move.b	$22(a0),d0
		andi.b	#$18,d0
		beq.s	sub_8DD6
		move.b	#1,$3A(a0)

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_8DD6:				; CODE XREF: ROM:00008DCEj
					; ROM:loc_8DFEp
		move.w	#$20,d1	; ' '
		move.w	#8,d3
		move.w	8(a0),d4
		bsr.w	sub_F78A
		bra.w	MarkObjGone
; End of function sub_8DD6

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8DEA:				; DATA XREF: ROM:00008D68o
		tst.b	$38(a0)
		beq.s	loc_8E2E
		tst.b	$3A(a0)
		bne.s	loc_8DFE
		subq.b	#1,$38(a0)
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8DFE:				; CODE XREF: ROM:00008DF4j
		bsr.w	sub_8DD6
		subq.b	#1,$38(a0)
		bne.s	locret_8E2C
		lea	($FFFFB000).w,a1
		bsr.s	sub_8E12
		lea	($FFFFB040).w,a1

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_8E12:				; CODE XREF: ROM:00008E0Cp
		btst	#3,$22(a1)
		beq.s	locret_8E2C
		bclr	#3,$22(a1)
		bclr	#5,$22(a1)
		move.b	#1,$1D(a1)

locret_8E2C:				; CODE XREF: ROM:00008E06j sub_8E12+6j
		rts
; End of function sub_8E12

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8E2E:				; CODE XREF: ROM:00008DEEj
		bsr.w	ObjectMoveAndFall
		tst.b	1(a0)
		bpl.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8E3E:				; CODE XREF: ROM:00008DBEj
		lea	(byte_8F17).l,a4
		btst	#0,$28(a0)
		beq.s	loc_8E52
		lea	(byte_8F1F).l,a4

loc_8E52:				; CODE XREF: ROM:00008E4Aj
		addq.b	#1,$1A(a0)
		bra.s	loc_8E70
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8E58:				; CODE XREF: ROM:00008CD4j
		lea	(byte_8EF2).l,a4
		cmpi.b	#4,(Current_Zone).w
		bne.s	loc_8E6C
		lea	(byte_8F0B).l,a4

loc_8E6C:				; CODE XREF: ROM:00008E64j
		addq.b	#2,$1A(a0)

loc_8E70:				; CODE XREF: ROM:00008E56j
		moveq	#0,d0
		move.b	$1A(a0),d0
		add.w	d0,d0
		movea.l	4(a0),a3
		adda.w	(a3,d0.w),a3
		move.w	(a3)+,d1
		subq.w	#1,d1
		bset	#5,1(a0)
		move.b	0(a0),d4
		move.b	1(a0),d5
		movea.l	a0,a1
		bra.s	loc_8E9E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8E96:				; CODE XREF: ROM:loc_8EE0j
		bsr.w	SingleObjLoad
		bne.s	loc_8EE4
		addq.w	#8,a3

loc_8E9E:				; CODE XREF: ROM:00008E94j
		move.b	#4,routine(a1)
		move.b	d4,0(a1)
		move.l	a3,4(a1)
		move.b	d5,1(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.w	2(a0),2(a1)
		move.b	$18(a0),$18(a1)
		move.b	$19(a0),$19(a1)
		move.b	$16(a0),$16(a1)
		move.b	(a4)+,$38(a1)
		cmpa.l	a0,a1
		bcc.s	loc_8EE0
		bsr.w	DisplaySprite2

loc_8EE0:				; CODE XREF: ROM:00008EDAj
		dbf	d1,loc_8E96

loc_8EE4:				; CODE XREF: ROM:00008E9Aj
		bsr.w	DisplaySprite
		move.w	#$B9,d0	; '¹'
		jmp	(PlaySound_Special).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_8EF2:	dc.b $1C,$18,$14,$10	; 0 ; DATA XREF: ROM:loc_8E58o
		dc.b $1A,$16,$12, $E	; 4
		dc.b  $A,  6,$18,$14	; 8
		dc.b $10, $C,  8,  4	; 12
		dc.b $16,$12, $E, $A	; 16
		dc.b   6,  2,$14,$10	; 20
		dc.b  $C		; 24
byte_8F0B:	dc.b $18,$1C,$20,$1E	; 0 ; DATA XREF: ROM:00008E66o
		dc.b $1A,$16,  6, $E	; 4
		dc.b $14,$12, $A,  2	; 8
byte_8F17:	dc.b $1E,$16, $E,  6	; 0 ; DATA XREF: ROM:loc_8E3Eo
		dc.b $1A,$12, $A,  2	; 4
byte_8F1F:	dc.b $16,$1E,$1A,$12	; 0 ; DATA XREF: ROM:00008E4Co
		dc.b   6, $E, $A,  2	; 4
		dc.b   0		; 8
Obj1A_Conf:	dc.b $20,$20,$20,$20	; 0 ; DATA XREF: ROM:loc_8CB0o
		dc.b $20,$20,$20,$20	; 4
		dc.b $21,$21,$22,$22	; 8
		dc.b $23,$23,$24,$24	; 12
		dc.b $25,$25,$26,$26	; 16
		dc.b $27,$27,$28,$28	; 20
		dc.b $29,$29,$2A,$2A	; 24
		dc.b $2B,$2B,$2C,$2C	; 28
		dc.b $2D,$2D,$2E,$2E	; 32
		dc.b $2F,$2F,$30,$30	; 36
		dc.b $30,$30,$30,$30	; 40
		dc.b $30,$30,$30,$30	; 44
Map_Obj1A:	dc.w word_8F60-Map_Obj1A ; DATA	XREF: ROM:00008C5Co
					; ROM:Map_Obj1Ao ...
		dc.w word_8FE2-Map_Obj1A
		dc.w word_9064-Map_Obj1A
		dc.w word_912E-Map_Obj1A
word_8F60:	dc.w $10		; DATA XREF: ROM:Map_Obj1Ao
		dc.w $C80E,  $57,  $2B,	 $10; 0
		dc.w $D00D,  $63,  $31,$FFF0; 4
		dc.w $E00D,  $6B,  $35,	 $10; 8
		dc.w $E00D,  $73,  $39,$FFF0; 12
		dc.w $D806,  $7B,  $3D,$FFE0; 16
		dc.w $D806,  $81,  $40,$FFD0; 20
		dc.w $F00D,  $87,  $43,	 $10; 24
		dc.w $F00D,  $8F,  $47,$FFF0; 28
		dc.w $F005,  $97,  $4B,$FFE0; 32
		dc.w $F005,  $9B,  $4D,$FFD0; 36
		dc.w	$D,  $9F,  $4F,	 $10; 40
		dc.w	 5,  $A7,  $53,	   0; 44
		dc.w	$D,  $AB,  $55,$FFE0; 48
		dc.w	 5,  $B3,  $59,$FFD0; 52
		dc.w $100D,  $AB,  $55,	 $10; 56
		dc.w $1005,  $B7,  $5B,	   0; 60
word_8FE2:	dc.w $10		; DATA XREF: ROM:00008F5Ao
		dc.w $C80E,  $57,  $2B,	 $10; 0
		dc.w $D00D,  $63,  $31,$FFF0; 4
		dc.w $E00D,  $6B,  $35,	 $10; 8
		dc.w $E00D,  $73,  $39,$FFF0; 12
		dc.w $D806,  $7B,  $3D,$FFE0; 16
		dc.w $D806,  $BB,  $5D,$FFD0; 20
		dc.w $F00D,  $87,  $43,	 $10; 24
		dc.w $F00D,  $8F,  $47,$FFF0; 28
		dc.w $F005,  $97,  $4B,$FFE0; 32
		dc.w $F005,  $C1,  $60,$FFD0; 36
		dc.w	$D,  $9F,  $4F,	 $10; 40
		dc.w	 5,  $A7,  $53,	   0; 44
		dc.w	$D,  $AB,  $55,$FFE0; 48
		dc.w	 5,  $B7,  $5B,$FFD0; 52
		dc.w $100D,  $AB,  $55,	 $10; 56
		dc.w $1005,  $B7,  $5B,	   0; 60
word_9064:	dc.w $19		; DATA XREF: ROM:00008F5Co
		dc.w $C806,  $5D,  $2E,	 $20; 0
		dc.w $C806,  $57,  $2B,	 $10; 4
		dc.w $D005,  $67,  $33,	   0; 8
		dc.w $D005,  $63,  $31,$FFF0; 12
		dc.w $E005,  $6F,  $37,	 $20; 16
		dc.w $E005,  $6B,  $35,	 $10; 20
		dc.w $E005,  $77,  $3B,	   0; 24
		dc.w $E005,  $73,  $39,$FFF0; 28
		dc.w $D806,  $7B,  $3D,$FFE0; 32
		dc.w $D806,  $81,  $40,$FFD0; 36
		dc.w $F005,  $8B,  $45,	 $20; 40
		dc.w $F005,  $87,  $43,	 $10; 44
		dc.w $F005,  $93,  $49,	   0; 48
		dc.w $F005,  $8F,  $47,$FFF0; 52
		dc.w $F005,  $97,  $4B,$FFE0; 56
		dc.w $F005,  $9B,  $4D,$FFD0; 60
		dc.w	 5,  $8B,  $45,	 $20; 64
		dc.w	 5,  $8B,  $45,	 $10; 68
		dc.w	 5,  $A7,  $53,	   0; 72
		dc.w	 5,  $AB,  $55,$FFF0; 76
		dc.w	 5,  $AB,  $55,$FFE0; 80
		dc.w	 5,  $B3,  $59,$FFD0; 84
		dc.w $1005,  $AB,  $55,	 $20; 88
		dc.w $1005,  $AB,  $55,	 $10; 92
		dc.w $1005,  $B7,  $5B,	   0; 96
word_912E:	dc.w $19		; DATA XREF: ROM:00008F5Eo
		dc.w $C806,  $5D,  $2E,	 $20; 0
		dc.w $C806,  $57,  $2B,	 $10; 4
		dc.w $D005,  $67,  $33,	   0; 8
		dc.w $D005,  $63,  $31,$FFF0; 12
		dc.w $E005,  $6F,  $37,	 $20; 16
		dc.w $E005,  $6B,  $35,	 $10; 20
		dc.w $E005,  $77,  $3B,	   0; 24
		dc.w $E005,  $73,  $39,$FFF0; 28
		dc.w $D806,  $7B,  $3D,$FFE0; 32
		dc.w $D806,  $BB,  $5D,$FFD0; 36
		dc.w $F005,  $8B,  $45,	 $20; 40
		dc.w $F005,  $87,  $43,	 $10; 44
		dc.w $F005,  $93,  $49,	   0; 48
		dc.w $F005,  $8F,  $47,$FFF0; 52
		dc.w $F005,  $97,  $4B,$FFE0; 56
		dc.w $F005,  $C1,  $60,$FFD0; 60
		dc.w	 5,  $8B,  $45,	 $20; 64
		dc.w	 5,  $8B,  $45,	 $10; 68
		dc.w	 5,  $A7,  $53,	   0; 72
		dc.w	 5,  $AB,  $55,$FFF0; 76
		dc.w	 5,  $AB,  $55,$FFE0; 80
		dc.w	 5,  $B7,  $5B,$FFD0; 84
		dc.w $1005,  $AB,  $55,	 $20; 88
		dc.w $1005,  $AB,  $55,	 $10; 92
		dc.w $1005,  $B7,  $5B,	   0; 96
Map_S1Obj53:	dc.w word_9200-Map_S1Obj53 ; DATA XREF:	ROM:00008D6Eo
					; ROM:Map_S1Obj53o ...
		dc.w word_9222-Map_S1Obj53
		dc.w word_9264-Map_S1Obj53
		dc.w word_9286-Map_S1Obj53
word_9200:	dc.w 4			; DATA XREF: ROM:Map_S1Obj53o
		dc.w $F80D,    0,    0,$FFE0; 0
		dc.w  $80D,    0,    0,$FFE0; 4
		dc.w $F80D,    0,    0,	   0; 8
		dc.w  $80D,    0,    0,	   0; 12
word_9222:	dc.w 8			; DATA XREF: ROM:000091FAo
		dc.w $F805,    0,    0,$FFE0; 0
		dc.w $F805,    0,    0,$FFF0; 4
		dc.w $F805,    0,    0,	   0; 8
		dc.w $F805,    0,    0,	 $10; 12
		dc.w  $805,    0,    0,$FFE0; 16
		dc.w  $805,    0,    0,$FFF0; 20
		dc.w  $805,    0,    0,	   0; 24
		dc.w  $805,    0,    0,	 $10; 28
word_9264:	dc.w 4			; DATA XREF: ROM:000091FCo
		dc.w $F80D,    0,    0,$FFE0; 0
		dc.w  $80D,    8,    4,$FFE0; 4
		dc.w $F80D,    0,    0,	   0; 8
		dc.w  $80D,    8,    4,	   0; 12
word_9286:	dc.w 8			; DATA XREF: ROM:000091FEo
		dc.w $F805,    0,    0,$FFE0; 0
		dc.w $F805,    4,    2,$FFF0; 4
		dc.w $F805,    0,    0,	   0; 8
		dc.w $F805,    4,    2,	 $10; 12
		dc.w  $805,    8,    4,$FFE0; 16
		dc.w  $805,   $C,    6,$FFF0; 20
		dc.w  $805,    8,    4,	   0; 24
		dc.w  $805,   $C,    6,	 $10; 28
Obj1A_Conf_HPZ:	dc.b $10,$10,$10,$10	; 0 ; DATA XREF: ROM:00008CA6o
		dc.b $10,$10,$10,$10	; 4
		dc.b $10,$10,$10,$10	; 8
		dc.b $10,$10,$10,$10	; 12
		dc.b $10,$10,$10,$10	; 16
		dc.b $10,$10,$10,$10	; 20
		dc.b $10,$10,$10,$10	; 24
		dc.b $10,$10,$10,$10	; 28
		dc.b $10,$10,$10,$10	; 32
		dc.b $10,$10,$10,$10	; 36
		dc.b $10,$10,$10,$10	; 40
		dc.b $10,$10,$10,$10	; 44
Map_Obj1A_HPZ:	dc.w word_92FE-Map_Obj1A_HPZ ; DATA XREF: ROM:00008C8Eo
					; ROM:Map_Obj1A_HPZo ...
		dc.w word_9340-Map_Obj1A_HPZ
		dc.w word_9340-Map_Obj1A_HPZ
word_92FE:	dc.w 8			; DATA XREF: ROM:Map_Obj1A_HPZo
		dc.w $F00D,    0,    0,$FFD0; 0
		dc.w	$D,    8,    4,$FFD0; 4
		dc.w $F005,    4,    2,$FFF0; 8
		dc.w $F005, $804, $802,	   0; 12
		dc.w	 5,   $C,    6,$FFF0; 16
		dc.w	 5, $80C, $806,	   0; 20
		dc.w $F00D, $800, $800,	 $10; 24
		dc.w	$D, $808, $804,	 $10; 28
word_9340:	dc.w $C			; DATA XREF: ROM:000092FAo
					; ROM:000092FCo
		dc.w $F005,    0,    0,$FFD0; 0
		dc.w $F005,    4,    2,$FFE0; 4
		dc.w $F005,    4,    2,$FFF0; 8
		dc.w $F005, $804, $802,	   0; 12
		dc.w $F005, $804, $802,	 $10; 16
		dc.w $F005, $800, $800,	 $20; 20
		dc.w	 5,    8,    4,$FFD0; 24
		dc.w	 5,   $C,    6,$FFE0; 28
		dc.w	 5,   $C,    6,$FFF0; 32
		dc.w	 5, $80C, $806,	   0; 36
		dc.w	 5, $80C, $806,	 $10; 40
		dc.w	 5, $808, $804,	 $20; 44
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

Obj1C:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj1C_Index(pc,d0.w),d1
		jmp	Obj1C_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj1C_Index:	dc.w loc_93F4-Obj1C_Index ; DATA XREF: ROM:Obj1C_Indexo
					; ROM:000093B4o ...
		dc.w loc_9442-Obj1C_Index
		dc.w loc_9464-Obj1C_Index
Obj1C_Conf:	dc.l Map_obj11_HPZ
		dc.w $6300
		dc.b   3,  4,  1,  0	; 0
		dc.l Map_Obj1C_01
		dc.w $E35A
		dc.b   0,$10,  1,  0	; 0
		dc.l Map_obj11
		dc.w $43C6
		dc.b   1,  4,  1,  0	; 0
		dc.l Map_obj11_GHZ
		dc.w $44C6
		dc.b   1,$10,  1,  0	; 0
		dc.l Map_Obj16
		dc.w $43E6
		dc.b   1,  8,  4,  0	; 0
		dc.l Map_Obj16
		dc.w $43E6
		dc.b   2,  8,  4,  0	; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_93F4:				; DATA XREF: ROM:Obj1C_Indexo
		addq.b	#2,routine(a0)
		move.b	$28(a0),d0
		andi.w	#$F,d0
		mulu.w	#$A,d0
		lea	Obj1C_Conf(pc,d0.w),a1
		move.l	(a1)+,4(a0)
		move.w	(a1)+,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	(a1)+,$1A(a0)
		move.b	(a1)+,$19(a0)
		move.b	(a1)+,$18(a0)
		move.b	(a1)+,$20(a0)
		move.b	$28(a0),d0
		andi.w	#$F0,d0	; 'ğ'
		beq.s	loc_9442
		addq.b	#2,routine(a0)
		lsr.b	#4,d0
		subq.b	#1,d0
		move.b	d0,$1C(a0)
		bra.s	loc_9464
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9442:				; CODE XREF: ROM:00009432j
					; DATA XREF: ROM:000093B4o
		tst.w	(Two_player_mode).w
		beq.s	loc_944C
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_944C:				; CODE XREF: ROM:00009446j
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9464:				; CODE XREF: ROM:00009440j
					; DATA XREF: ROM:000093B6o
		lea	(Ani_Obj1C).l,a1
		bsr.w	AnimateSprite
		tst.w	(Two_player_mode).w
		beq.s	loc_9478
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9478:				; CODE XREF: ROM:00009472j
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj1C:	dc.w byte_9494-Ani_Obj1C ; DATA	XREF: ROM:loc_9464o
					; ROM:Ani_Obj1Co ...
		dc.w byte_949C-Ani_Obj1C
byte_9494:	dc.b   8,  3,  3,  4,  5,  5,  4,$FF; 0	; DATA XREF: ROM:Ani_Obj1Co
byte_949C:	dc.b   5,  0,  0,  0,  1,  2,  3,  3; 0	; DATA XREF: ROM:00009492o
		dc.b   2,  1,  2,  3,  3,  1,$FF,  0; 8
Map_Obj1C_01:	dc.w word_94B4-Map_Obj1C_01 ; DATA XREF: ROM:000093C2o
					; ROM:Map_Obj1C_01o ...
		dc.w word_94BE-Map_Obj1C_01
		dc.w word_94C8-Map_Obj1C_01
		dc.w word_94DA-Map_Obj1C_01
word_94B4:	dc.w 1			; DATA XREF: ROM:Map_Obj1C_01o
		dc.w $F40A,    0,    0,$FFF4; 0
word_94BE:	dc.w 1			; DATA XREF: ROM:000094AEo
		dc.w $F40A,    9,    4,$FFF4; 0
word_94C8:	dc.w 2			; DATA XREF: ROM:000094B0o
		dc.w $F00D,  $12,    9,$FFF0; 0
		dc.w	$D,$1812,$1809,$FFF0; 4
word_94DA:	dc.w 2			; DATA XREF: ROM:000094B2o
		dc.w $F00D,  $1A,   $D,$FFF0; 0
		dc.w	$D,$181A,$180D,$FFF0; 4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj2A:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj2A_Index(pc,d0.w),d1
		jmp	Obj2A_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj2A_Index:	dc.w loc_94FE-Obj2A_Index ; DATA XREF: ROM:Obj2A_Indexo
					; ROM:000094FCo
		dc.w loc_9526-Obj2A_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_94FE:				; DATA XREF: ROM:Obj2A_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj2A,4(a0)
		move.w	#$42E8,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#8,$19(a0)
		move.b	#4,$18(a0)

loc_9526:				; DATA XREF: ROM:000094FCo
		move.w	#$40,d1	; '@'
		clr.b	$1C(a0)
		move.w	($FFFFB008).w,d0
		add.w	d1,d0
		cmp.w	8(a0),d0
		bcs.s	loc_9564
		sub.w	d1,d0
		sub.w	d1,d0
		cmp.w	8(a0),d0
		bcc.s	loc_9564
		add.w	d1,d0
		cmp.w	8(a0),d0
		bcc.s	loc_9556
		btst	#0,$22(a0)
		bne.s	loc_9564
		bra.s	loc_955E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9556:				; CODE XREF: ROM:0000954Aj
		btst	#0,$22(a0)
		beq.s	loc_9564

loc_955E:				; CODE XREF: ROM:00009554j
		move.b	#1,$1C(a0)

loc_9564:				; CODE XREF: ROM:00009538j
					; ROM:00009542j ...
		lea	(Ani_Obj2A).l,a1
		bsr.w	AnimateSprite
		tst.b	$1A(a0)
		bne.s	loc_9588
		move.w	#$11,d1
		move.w	#$20,d2	; ' '
		move.w	d2,d3
		addq.w	#1,d3
		move.w	8(a0),d4
		bsr.w	SolidObject

loc_9588:				; CODE XREF: ROM:00009572j
		bra.w	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj2A:	dc.w byte_9590-Ani_Obj2A ; DATA	XREF: ROM:loc_9564o
					; ROM:Ani_Obj2Ao ...
		dc.w byte_959C-Ani_Obj2A
byte_9590:	dc.b   0,  8,  7,  6,  5,  4,  3,  2; 0	; DATA XREF: ROM:Ani_Obj2Ao
		dc.b   1,  0,$FE,  1	; 8
byte_959C:	dc.b   0,  0,  1,  2,  3,  4,  5,  6; 0	; DATA XREF: ROM:0000958Eo
		dc.b   7,  8,$FE,  1	; 8
Map_Obj2A:	dc.w word_95BA-Map_Obj2A ; DATA	XREF: ROM:00009502o
					; ROM:Map_Obj2Ao ...
		dc.w word_95CC-Map_Obj2A
		dc.w word_95DE-Map_Obj2A
		dc.w word_95F0-Map_Obj2A
		dc.w word_9602-Map_Obj2A
		dc.w word_9614-Map_Obj2A
		dc.w word_9626-Map_Obj2A
		dc.w word_9638-Map_Obj2A
		dc.w word_964A-Map_Obj2A
word_95BA:	dc.w 2			; DATA XREF: ROM:Map_Obj2Ao
		dc.w $E007, $800, $800,$FFF8; 0
		dc.w	 7, $800, $800,$FFF8; 4
word_95CC:	dc.w 2			; DATA XREF: ROM:000095AAo
		dc.w $DC07, $800, $800,$FFF8; 0
		dc.w  $407, $800, $800,$FFF8; 4
word_95DE:	dc.w 2			; DATA XREF: ROM:000095ACo
		dc.w $D807, $800, $800,$FFF8; 0
		dc.w  $807, $800, $800,$FFF8; 4
word_95F0:	dc.w 2			; DATA XREF: ROM:000095AEo
		dc.w $D407, $800, $800,$FFF8; 0
		dc.w  $C07, $800, $800,$FFF8; 4
word_9602:	dc.w 2			; DATA XREF: ROM:000095B0o
		dc.w $D007, $800, $800,$FFF8; 0
		dc.w $1007, $800, $800,$FFF8; 4
word_9614:	dc.w 2			; DATA XREF: ROM:000095B2o
		dc.w $CC07, $800, $800,$FFF8; 0
		dc.w $1407, $800, $800,$FFF8; 4
word_9626:	dc.w 2			; DATA XREF: ROM:000095B4o
		dc.w $C807, $800, $800,$FFF8; 0
		dc.w $1807, $800, $800,$FFF8; 4
word_9638:	dc.w 2			; DATA XREF: ROM:000095B6o
		dc.w $C407, $800, $800,$FFF8; 0
		dc.w $1C07, $800, $800,$FFF8; 4
word_964A:	dc.w 2			; DATA XREF: ROM:000095B8o
		dc.w $C007, $800, $800,$FFF8; 0
		dc.w $2007, $800, $800,$FFF8; 4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Sonic	1 Object 1E - leftover Ballhog object
;----------------------------------------------------

S1Obj_1E:				; leftover from	Sonic 1
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	S1Obj_1E_Index(pc,d0.w),d1
		jmp	S1Obj_1E_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1Obj_1E_Index:	dc.w loc_966E-S1Obj_1E_Index ; DATA XREF: ROM:S1Obj_1E_Indexo
					; ROM:0000966Co
		dc.w loc_96C2-S1Obj_1E_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_966E:				; DATA XREF: ROM:S1Obj_1E_Indexo
		move.b	#$13,$16(a0)
		move.b	#8,$17(a0)
		move.l	#Map_S1Obj1E,4(a0)
		move.w	#$2302,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#5,$20(a0)
		move.b	#$C,$19(a0)
		bsr.w	ObjectMoveAndFall
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	locret_96C0
		add.w	d1,$C(a0)
		move.w	#0,$12(a0)
		addq.b	#2,routine(a0)

locret_96C0:				; CODE XREF: ROM:000096B0j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_96C2:				; DATA XREF: ROM:0000966Co
		lea	(Ani_S1Obj1E).l,a1
		bsr.w	AnimateSprite
		cmpi.b	#1,$1A(a0)
		bne.s	loc_96DC
		tst.b	$32(a0)
		beq.s	loc_96E4
		bra.s	loc_96E0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_96DC:				; CODE XREF: ROM:000096D2j
		clr.b	$32(a0)

loc_96E0:				; CODE XREF: ROM:000096DAj
					; ROM:loc_972Ej
		bra.w	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_96E4:				; CODE XREF: ROM:000096D8j
		move.b	#1,$32(a0)
		bsr.w	SingleObjLoad
		bne.s	loc_972E
		move.b	#$20,0(a1) ; ' '
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.w	#$FF00,$10(a1)
		move.w	#0,$12(a1)
		moveq	#$FFFFFFFC,d0
		btst	#0,$22(a0)
		beq.s	loc_971E
		neg.w	d0
		neg.w	$10(a1)

loc_971E:				; CODE XREF: ROM:00009716j
		add.w	d0,8(a1)
		addi.w	#$C,$C(a1)
		move.b	$28(a0),$28(a1)

loc_972E:				; CODE XREF: ROM:000096EEj
		bra.s	loc_96E0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Sonic	1 Object 20 - leftover object for the
;  ball	that S1	Ballhog	throws
;----------------------------------------------------

S1Obj20:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	S1Obj20_Index(pc,d0.w),d1
		jmp	S1Obj20_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1Obj20_Index:	dc.w loc_9742-S1Obj20_Index ; DATA XREF: ROM:S1Obj20_Indexo
					; ROM:00009740o
		dc.w loc_978A-S1Obj20_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9742:				; DATA XREF: ROM:S1Obj20_Indexo
		addq.b	#2,routine(a0)
		move.b	#7,$16(a0)
		move.l	#Map_S1Obj1E,4(a0)
		move.w	#$2302,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#3,$18(a0)
		move.b	#$87,$20(a0)
		move.b	#8,$19(a0)
		moveq	#0,d0
		move.b	$28(a0),d0
		mulu.w	#$3C,d0	; '<'
		move.w	d0,$30(a0)
		move.b	#4,$1A(a0)

loc_978A:				; DATA XREF: ROM:00009740o
		jsr	ObjectMoveAndFall
		tst.w	$12(a0)
		bmi.s	loc_97C6
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_97C6
		add.w	d1,$C(a0)
		move.w	#$FD00,$12(a0)
		tst.b	d3
		beq.s	loc_97C6
		bmi.s	loc_97BC
		tst.w	$10(a0)
		bpl.s	loc_97C6
		neg.w	$10(a0)
		bra.s	loc_97C6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_97BC:				; CODE XREF: ROM:000097AEj
		tst.w	$10(a0)
		bmi.s	loc_97C6
		neg.w	$10(a0)

loc_97C6:				; CODE XREF: ROM:00009794j
					; ROM:0000979Ej ...
		subq.w	#1,$30(a0)
		bpl.s	loc_97E2
		move.b	#$24,0(a0) ; '$'
		move.b	#$3F,0(a0) ; '?'
		move.b	#0,routine(a0)
		bra.w	Obj3F		; explosion object
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_97E2:				; CODE XREF: ROM:000097CAj
		subq.b	#1,$1E(a0)
		bpl.s	loc_97F4
		move.b	#5,$1E(a0)
		bchg	#0,$1A(a0)

loc_97F4:				; CODE XREF: ROM:000097E6j
		move.w	($FFFFEECE).w,d0
		addi.w	#$E0,d0	; 'à'
		cmp.w	$C(a0),d0
		bcs.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 24 - explosion	from a hit monitor
;----------------------------------------------------

Obj24:					; CODE XREF: ROM:0000A62Cj
					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj24_Index(pc,d0.w),d1
		jmp	Obj24_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj24_Index:	dc.w loc_981A-Obj24_Index ; DATA XREF: ROM:Obj24_Indexo
					; ROM:00009818o
		dc.w loc_985E-Obj24_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_981A:				; DATA XREF: ROM:Obj24_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj24,4(a0)
		move.w	#$41C,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#1,$18(a0)
		move.b	#0,$20(a0)
		move.b	#$C,$19(a0)
		move.b	#9,$1E(a0)
		move.b	#0,$1A(a0)
		move.w	#$A5,d0	; '¥'
		jsr	(PlaySound_Special).l

loc_985E:				; DATA XREF: ROM:00009818o
		subq.b	#1,$1E(a0)
		bpl.s	loc_9878
		move.b	#9,$1E(a0)
		addq.b	#1,$1A(a0)
		cmpi.b	#4,$1A(a0)
		beq.w	DeleteObject

loc_9878:				; CODE XREF: ROM:00009862j
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 27 - explosion	from a hit enemy
;----------------------------------------------------

Obj27:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj27_Index(pc,d0.w),d1
		jmp	Obj27_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj27_Index:	dc.w loc_9890-Obj27_Index ; DATA XREF: ROM:Obj27_Indexo
					; ROM:0000988Co ...
		dc.w loc_98B2-Obj27_Index
		dc.w loc_98F6-Obj27_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9890:				; DATA XREF: ROM:Obj27_Indexo
		addq.b	#2,routine(a0)
		bsr.w	SingleObjLoad
		bne.s	loc_98B2
		move.b	#$28,0(a1) ; '('
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.w	$3E(a0),$3E(a1)

loc_98B2:				; CODE XREF: ROM:00009898j
					; DATA XREF: ROM:0000988Co
		addq.b	#2,routine(a0)
		move.l	#Map_Obj27,4(a0)
		move.w	#$5A0,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#1,$18(a0)
		move.b	#0,$20(a0)
		move.b	#$C,$19(a0)
		move.b	#7,$1E(a0)
		move.b	#0,$1A(a0)
		move.w	#$C1,d0	; 'Á'
		jsr	(PlaySound_Special).l

loc_98F6:				; DATA XREF: ROM:0000988Eo
					; ROM:00009924o
		subq.b	#1,$1E(a0)
		bpl.s	loc_9910
		move.b	#7,$1E(a0)
		addq.b	#1,$1A(a0)
		cmpi.b	#5,$1A(a0)
		beq.w	DeleteObject

loc_9910:				; CODE XREF: ROM:000098FAj
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 3F - Explosion
;----------------------------------------------------

Obj3F:					; CODE XREF: ROM:000097DEj
					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0		; explosion object
		move.b	routine(a0),d0
		move.w	Obj3F_Index(pc,d0.w),d1
		jmp	Obj3F_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj3F_Index:	dc.w loc_9926-Obj3F_Index ; DATA XREF: ROM:Obj3F_Indexo
					; ROM:00009924o
		dc.w loc_98F6-Obj3F_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9926:				; DATA XREF: ROM:Obj3F_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj3F,4(a0)
		move.w	#$5A0,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#1,$18(a0)
		move.b	#0,$20(a0)
		move.b	#$C,$19(a0)
		move.b	#7,$1E(a0)
		move.b	#0,$1A(a0)
		move.w	#$C4,d0	; 'Ä'
		jmp	(PlaySound_Special).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_S1Obj1E:	dc.w byte_996C-Ani_S1Obj1E ; DATA XREF:	ROM:loc_96C2o
					; ROM:Ani_S1Obj1Eo
byte_996C:	dc.b   9,  0,  0,  2,  2,  3,  2,  0 ; DATA XREF: ROM:Ani_S1Obj1Eo
		dc.b   0,  2,  2,  3,  2,  0,  0,  2
		dc.b   2,  3,  2,  0,  0,  1,$FF,  0
Map_S1Obj1E:	dc.w word_9990-Map_S1Obj1E ; DATA XREF:	ROM:0000967Ao
					; ROM:0000974Co ...
		dc.w word_99A2-Map_S1Obj1E
		dc.w word_99B4-Map_S1Obj1E
		dc.w word_99C6-Map_S1Obj1E
		dc.w word_99D8-Map_S1Obj1E
		dc.w word_99E2-Map_S1Obj1E
word_9990:	dc.w 2			; DATA XREF: ROM:Map_S1Obj1Eo
		dc.w $EF09,    0,    0,$FFF4; 0
		dc.w $FF0A,    6,    3,$FFF4; 4
word_99A2:	dc.w 2			; DATA XREF: ROM:00009986o
		dc.w $EF09,    0,    0,$FFF4; 0
		dc.w $FF0A,   $F,    7,$FFF4; 4
word_99B4:	dc.w 2			; DATA XREF: ROM:00009988o
		dc.w $F409,    0,    0,$FFF4; 0
		dc.w  $409,  $18,   $C,$FFF4; 4
word_99C6:	dc.w 2			; DATA XREF: ROM:0000998Ao
		dc.w $E409,    0,    0,$FFF4; 0
		dc.w $F40A,  $1E,   $F,$FFF4; 4
word_99D8:	dc.w 1			; DATA XREF: ROM:0000998Co
		dc.w $F805,  $27,  $13,$FFF8; 0
word_99E2:	dc.w 1			; DATA XREF: ROM:0000998Eo
		dc.w $F805,  $2B,  $15,$FFF8; 0
Map_Obj24:	dc.w word_99F4-Map_Obj24 ; DATA	XREF: ROM:0000981Eo
					; ROM:Map_Obj24o ...
		dc.w word_99FE-Map_Obj24
		dc.w word_9A08-Map_Obj24
		dc.w word_9A12-Map_Obj24
word_99F4:	dc.w 1			; DATA XREF: ROM:Map_Obj24o
		dc.w $F40A,    0,    0,$FFF4; 0
word_99FE:	dc.w 1			; DATA XREF: ROM:000099EEo
		dc.w $F40A,    9,    4,$FFF4; 0
word_9A08:	dc.w 1			; DATA XREF: ROM:000099F0o
		dc.w $F40A,  $12,    9,$FFF4; 0
word_9A12:	dc.w 1			; DATA XREF: ROM:000099F2o
		dc.w $F40A,  $1B,   $D,$FFF4; 0
Map_Obj27:	dc.w word_9A26-Map_Obj27 ; DATA	XREF: ROM:000098B6o
					; ROM:Map_Obj27o ...
		dc.w word_9A30-Map_Obj27
		dc.w word_9A3A-Map_Obj27
		dc.w word_9A44-Map_Obj27
		dc.w word_9A66-Map_Obj27
word_9A26:	dc.w 1			; DATA XREF: ROM:Map_Obj27o
					; ROM:Map_Obj3Fo
		dc.w $F809,    0,    0,$FFF4; 0
word_9A30:	dc.w 1			; DATA XREF: ROM:00009A1Eo
		dc.w $F00F,    6,    3,$FFF0; 0
word_9A3A:	dc.w 1			; DATA XREF: ROM:00009A20o
		dc.w $F00F,  $16,   $B,$FFF0; 0
word_9A44:	dc.w 4			; DATA XREF: ROM:00009A22o
					; ROM:00009A8Eo
		dc.w $EC0A,  $26,  $13,$FFEC; 0
		dc.w $EC05,  $2F,  $17,	   4; 4
		dc.w  $405,$182F,$1817,$FFEC; 8
		dc.w $FC0A,$1826,$1813,$FFFC; 12
word_9A66:	dc.w 4			; DATA XREF: ROM:00009A24o
					; ROM:00009A90o
		dc.w $EC0A,  $33,  $19,$FFEC; 0
		dc.w $EC05,  $3C,  $1E,	   4; 4
		dc.w  $405,$183C,$181E,$FFEC; 8
		dc.w $FC0A,$1833,$1819,$FFFC; 12
Map_Obj3F:	dc.w word_9A26-Map_Obj3F ; DATA	XREF: ROM:0000992Ao
					; ROM:Map_Obj3Fo ...
		dc.w word_9A92-Map_Obj3F
		dc.w word_9A9C-Map_Obj3F
		dc.w word_9A44-Map_Obj3F
		dc.w word_9A66-Map_Obj3F
word_9A92:	dc.w 1			; DATA XREF: ROM:00009A8Ao
		dc.w $F00F,  $40,  $20,$FFF0; 0
word_9A9C:	dc.w 1			; DATA XREF: ROM:00009A8Co
		dc.w $F00F,  $50,  $28,$FFF0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop
;----------------------------------------------------
; Object 28 - animals
;----------------------------------------------------

Obj28:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	off_9AB6(pc,d0.w),d1
		jmp	off_9AB6(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_9AB6:	dc.w loc_9B92-off_9AB6,loc_9CB8-off_9AB6,loc_9D12-off_9AB6; 0
					; DATA XREF: ROM:off_9AB6o
					; ROM:off_9AB6+2o ...
		dc.w loc_9D4E-off_9AB6,loc_9D12-off_9AB6,loc_9D12-off_9AB6; 3
		dc.w loc_9D12-off_9AB6,loc_9D4E-off_9AB6,loc_9D12-off_9AB6; 6
		dc.w loc_9DCE-off_9AB6,loc_9DEE-off_9AB6,loc_9DEE-off_9AB6; 9
		dc.w loc_9E0E-off_9AB6,loc_9E48-off_9AB6,loc_9EA2-off_9AB6; 12
		dc.w loc_9EC0-off_9AB6,loc_9EA2-off_9AB6,loc_9EC0-off_9AB6; 15
		dc.w loc_9EA2-off_9AB6,loc_9EFE-off_9AB6,loc_9E64-off_9AB6; 18
byte_9AE0:	dc.b   0,  5,  2,  3,  6,  3,  4,  5,  4,  1,  0,  1; 0
					; DATA XREF: ROM:00009C16t
word_9AEC:	dc.w $FE00		; DATA XREF: ROM:00009C24t
		dc.w $FC00
		dc.l Map_Obj28a
		dc.w $FE00
		dc.w $FD00
		dc.l Map_Obj28
		dc.w $FE80
		dc.w $FD00
		dc.l Map_Obj28a
		dc.w $FEC0
		dc.w $FE80
		dc.l Map_Obj28
		dc.w $FE40
		dc.w $FD00
		dc.l Map_Obj28b
		dc.w $FD00
		dc.w $FC00
		dc.l Map_Obj28
		dc.w $FD80
		dc.w $FC80
		dc.l Map_Obj28b
word_9B24:	dc.w $FBC0,$FC00,$FBC0,$FC00; 0	; DATA XREF: ROM:00009BB8t
		dc.w $FBC0,$FC00,$FD00,$FC00; 4
		dc.w $FD00,$FC00,$FE80,$FD00; 8
		dc.w $FE80,$FD00,$FEC0,$FE80; 12
		dc.w $FE40,$FD00,$FE00,$FD00; 16
		dc.w $FD80,$FC80	; 20
off_9B50:	dc.l Map_Obj28,Map_Obj28; 0
		dc.l Map_Obj28,Map_Obj28a; 2
		dc.l Map_Obj28a,Map_Obj28a; 4
		dc.l Map_Obj28a,Map_Obj28; 6
		dc.l Map_Obj28b,Map_Obj28; 8
		dc.l Map_Obj28b		; 10
word_9B7C:	dc.w  $5A5, $5A5, $5A5,	$553, $553, $573, $573,	$585, $593, $565, $5B3;	0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9B92:				; DATA XREF: ROM:off_9AB6o
		tst.b	$28(a0)
		beq.w	loc_9C00
		moveq	#0,d0
		move.b	$28(a0),d0
		add.w	d0,d0
		move.b	d0,routine(a0)
		subi.w	#$14,d0
		move.w	word_9B7C(pc,d0.w),2(a0)
		add.w	d0,d0
		move.l	off_9B50(pc,d0.w),4(a0)
		lea	word_9B24(pc),a1
		move.w	(a1,d0.w),$32(a0)
		move.w	(a1,d0.w),$10(a0)
		move.w	2(a1,d0.w),$34(a0)
		move.w	2(a1,d0.w),$12(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#$C,$16(a0)
		move.b	#4,1(a0)
		bset	#0,1(a0)
		move.b	#6,$18(a0)
		move.b	#8,$19(a0)
		move.b	#7,$1E(a0)
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9C00:				; CODE XREF: ROM:00009B96j
		addq.b	#2,routine(a0)
		bsr.w	RandomNumber
		andi.w	#1,d0
		moveq	#0,d1
		move.b	(Current_Zone).w,d1
		add.w	d1,d1
		add.w	d0,d1
		lea	byte_9AE0(pc),a1
		move.b	(a1,d1.w),d0
		move.b	d0,$30(a0)
		lsl.w	#3,d0
		lea	word_9AEC(pc),a1
		adda.w	d0,a1
		move.w	(a1)+,$32(a0)
		move.w	(a1)+,$34(a0)
		move.l	(a1)+,4(a0)
		move.w	#$580,2(a0)
		btst	#0,$30(a0)
		beq.s	loc_9C4A
		move.w	#$592,2(a0)

loc_9C4A:				; CODE XREF: ROM:00009C42j
		bsr.w	Adjust2PArtPointer
		move.b	#$C,$16(a0)
		move.b	#4,1(a0)
		bset	#0,1(a0)
		move.b	#6,$18(a0)
		move.b	#8,$19(a0)
		move.b	#7,$1E(a0)
		move.b	#2,$1A(a0)
		move.w	#$FC00,$12(a0)
		tst.b	($FFFFF7A7).w
		bne.s	loc_9CAA
		bsr.w	SingleObjLoad
		bne.s	loc_9CA6
		move.b	#$29,0(a1) ; ')'
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.w	$3E(a0),d0
		lsr.w	#1,d0
		move.b	d0,$1A(a1)

loc_9CA6:				; CODE XREF: ROM:00009C88j
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9CAA:				; CODE XREF: ROM:00009C82j
		move.b	#$12,routine(a0)
		clr.w	$10(a0)
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9CB8:				; DATA XREF: ROM:off_9AB6o
		tst.b	1(a0)
		bpl.w	DeleteObject
		bsr.w	ObjectMoveAndFall
		tst.w	$12(a0)
		bmi.s	loc_9D0E
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_9D0E
		add.w	d1,$C(a0)
		move.w	$32(a0),$10(a0)
		move.w	$34(a0),$12(a0)
		move.b	#1,$1A(a0)
		move.b	$30(a0),d0
		add.b	d0,d0
		addq.b	#4,d0
		move.b	d0,routine(a0)
		tst.b	($FFFFF7A7).w
		beq.s	loc_9D0E
		btst	#4,($FFFFFE0F).w
		beq.s	loc_9D0E
		neg.w	$10(a0)
		bchg	#0,1(a0)

loc_9D0E:				; CODE XREF: ROM:00009CC8j
					; ROM:00009CD2j ...
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9D12:				; CODE XREF: ROM:00009E60j
					; DATA XREF: ROM:off_9AB6o
		bsr.w	ObjectMoveAndFall
		move.b	#1,$1A(a0)
		tst.w	$12(a0)
		bmi.s	loc_9D3C
		move.b	#0,$1A(a0)
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_9D3C
		add.w	d1,$C(a0)
		move.w	$34(a0),$12(a0)

loc_9D3C:				; CODE XREF: ROM:00009D20j
					; ROM:00009D30j
		tst.b	$28(a0)
		bne.s	loc_9DB2
		tst.b	1(a0)
		bpl.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9D4E:				; CODE XREF: ROM:00009E06j
					; DATA XREF: ROM:off_9AB6o
		bsr.w	ObjectMove
		addi.w	#$18,$12(a0)
		tst.w	$12(a0)
		bmi.s	loc_9D8A
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_9D8A
		add.w	d1,$C(a0)
		move.w	$34(a0),$12(a0)
		tst.b	$28(a0)
		beq.s	loc_9D8A
		cmpi.b	#$A,$28(a0)
		beq.s	loc_9D8A
		neg.w	$10(a0)
		bchg	#0,1(a0)

loc_9D8A:				; CODE XREF: ROM:00009D5Cj
					; ROM:00009D66j ...
		subq.b	#1,$1E(a0)
		bpl.s	loc_9DA0
		move.b	#1,$1E(a0)
		addq.b	#1,$1A(a0)
		andi.b	#1,$1A(a0)

loc_9DA0:				; CODE XREF: ROM:00009D8Ej
		tst.b	$28(a0)
		bne.s	loc_9DB2
		tst.b	1(a0)
		bpl.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DB2:				; CODE XREF: ROM:00009D40j
					; ROM:00009DA4j ...
		move.w	8(a0),d0
		sub.w	($FFFFB008).w,d0
		bcs.s	loc_9DCA
		subi.w	#$180,d0
		bpl.s	loc_9DCA
		tst.b	1(a0)
		bpl.w	DeleteObject

loc_9DCA:				; CODE XREF: ROM:00009DBAj
					; ROM:00009DC0j
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DCE:				; DATA XREF: ROM:off_9AB6o
		tst.b	1(a0)
		bpl.w	DeleteObject
		subq.w	#1,$36(a0)
		bne.w	loc_9DEA
		move.b	#2,routine(a0)
		move.b	#3,$18(a0)

loc_9DEA:				; CODE XREF: ROM:00009DDAj
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DEE:				; DATA XREF: ROM:off_9AB6o
		bsr.w	sub_9F92
		bcc.s	loc_9E0A
		move.w	$32(a0),$10(a0)
		move.w	$34(a0),$12(a0)
		move.b	#$E,routine(a0)
		bra.w	loc_9D4E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9E0A:				; CODE XREF: ROM:00009DF2j
		bra.w	loc_9DB2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9E0E:				; DATA XREF: ROM:off_9AB6o
		bsr.w	sub_9F92
		bpl.s	loc_9E44
		clr.w	$10(a0)
		clr.w	$32(a0)
		bsr.w	ObjectMove
		addi.w	#$18,$12(a0)
		bsr.w	sub_9F52
		bsr.w	sub_9F7A
		subq.b	#1,$1E(a0)
		bpl.s	loc_9E44
		move.b	#1,$1E(a0)
		addq.b	#1,$1A(a0)
		andi.b	#1,$1A(a0)

loc_9E44:				; CODE XREF: ROM:00009E12j
					; ROM:00009E32j
		bra.w	loc_9DB2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9E48:				; DATA XREF: ROM:off_9AB6o
		bsr.w	sub_9F92
		bpl.s	loc_9E9E
		move.w	$32(a0),$10(a0)
		move.w	$34(a0),$12(a0)
		move.b	#4,routine(a0)
		bra.w	loc_9D12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9E64:				; DATA XREF: ROM:off_9AB6o
		bsr.w	ObjectMoveAndFall
		move.b	#1,$1A(a0)
		tst.w	$12(a0)
		bmi.s	loc_9E9E
		move.b	#0,$1A(a0)
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_9E9E
		not.b	$29(a0)
		bne.s	loc_9E94
		neg.w	$10(a0)
		bchg	#0,1(a0)

loc_9E94:				; CODE XREF: ROM:00009E88j
		add.w	d1,$C(a0)
		move.w	$34(a0),$12(a0)

loc_9E9E:				; CODE XREF: ROM:00009E4Cj
					; ROM:00009E72j ...
		bra.w	loc_9DB2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9EA2:				; DATA XREF: ROM:off_9AB6o
		bsr.w	sub_9F92
		bpl.s	loc_9EBC
		clr.w	$10(a0)
		clr.w	$32(a0)
		bsr.w	ObjectMoveAndFall
		bsr.w	sub_9F52
		bsr.w	sub_9F7A

loc_9EBC:				; CODE XREF: ROM:00009EA6j
		bra.w	loc_9DB2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9EC0:				; DATA XREF: ROM:off_9AB6o
		bsr.w	sub_9F92
		bpl.s	loc_9EFA
		bsr.w	ObjectMoveAndFall
		move.b	#1,$1A(a0)
		tst.w	$12(a0)
		bmi.s	loc_9EFA
		move.b	#0,$1A(a0)
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_9EFA
		neg.w	$10(a0)
		bchg	#0,1(a0)
		add.w	d1,$C(a0)
		move.w	$34(a0),$12(a0)

loc_9EFA:				; CODE XREF: ROM:00009EC4j
					; ROM:00009ED4j ...
		bra.w	loc_9DB2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9EFE:				; DATA XREF: ROM:off_9AB6o
		bsr.w	sub_9F92
		bpl.s	loc_9F4E
		bsr.w	ObjectMove
		addi.w	#$18,$12(a0)
		tst.w	$12(a0)
		bmi.s	loc_9F38
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_9F38
		not.b	$29(a0)
		bne.s	loc_9F2E
		neg.w	$10(a0)
		bchg	#0,1(a0)

loc_9F2E:				; CODE XREF: ROM:00009F22j
		add.w	d1,$C(a0)
		move.w	$34(a0),$12(a0)

loc_9F38:				; CODE XREF: ROM:00009F12j
					; ROM:00009F1Cj
		subq.b	#1,$1E(a0)
		bpl.s	loc_9F4E
		move.b	#1,$1E(a0)
		addq.b	#1,$1A(a0)
		andi.b	#1,$1A(a0)

loc_9F4E:				; CODE XREF: ROM:00009F02j
					; ROM:00009F3Cj
		bra.w	loc_9DB2

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_9F52:				; CODE XREF: ROM:00009E26p
					; ROM:00009EB4p
		move.b	#1,$1A(a0)
		tst.w	$12(a0)
		bmi.s	locret_9F78
		move.b	#0,$1A(a0)
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	locret_9F78
		add.w	d1,$C(a0)
		move.w	$34(a0),$12(a0)

locret_9F78:				; CODE XREF: sub_9F52+Aj sub_9F52+1Aj
		rts
; End of function sub_9F52


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_9F7A:				; CODE XREF: ROM:00009E2Ap
					; ROM:00009EB8p
		bset	#0,1(a0)
		move.w	8(a0),d0
		sub.w	($FFFFB008).w,d0
		bcc.s	locret_9F90
		bclr	#0,1(a0)

locret_9F90:				; CODE XREF: sub_9F7A+Ej
		rts
; End of function sub_9F7A


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_9F92:				; CODE XREF: ROM:loc_9DEEp
					; ROM:loc_9E0Ep ...
		move.w	($FFFFB008).w,d0
		sub.w	8(a0),d0
		subi.w	#$B8,d0	; '¸'
		rts
; End of function sub_9F92

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 29 - points that appear when you destroy something
;----------------------------------------------------

Obj29:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj29_Index(pc,d0.w),d1
		jmp	Obj29_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj29_Index:	dc.w loc_9FB2-Obj29_Index ; DATA XREF: ROM:Obj29_Indexo
					; ROM:00009FB0o
		dc.w loc_9FE0-Obj29_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9FB2:				; DATA XREF: ROM:Obj29_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj29,4(a0)
		move.w	#$4AC,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#1,$18(a0)
		move.b	#8,$19(a0)
		move.w	#$FD00,$12(a0)

loc_9FE0:				; DATA XREF: ROM:00009FB0o
		tst.w	$12(a0)
		bpl.w	DeleteObject
		bsr.w	ObjectMove
		addi.w	#$18,$12(a0)
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj28a:	dc.w word_A006-Map_Obj28a ; DATA XREF: ROM:00009AF0o
					; ROM:00009B00o ...
		dc.w word_A010-Map_Obj28a
		dc.w word_9FFC-Map_Obj28a
word_9FFC:	dc.w 1			; DATA XREF: ROM:00009FFAo
		dc.w $F406,    0,    0,$FFF8; 0
word_A006:	dc.w 1			; DATA XREF: ROM:Map_Obj28ao
		dc.w $F406,    6,    3,$FFF8; 0
word_A010:	dc.w 1			; DATA XREF: ROM:00009FF8o
		dc.w $F406,   $C,    6,$FFF8; 0
Map_Obj28:	dc.w word_A02A-Map_Obj28 ; DATA	XREF: ROM:00009AF8o
					; ROM:00009B08o ...
		dc.w word_A034-Map_Obj28
		dc.w word_A020-Map_Obj28
word_A020:	dc.w 1			; DATA XREF: ROM:0000A01Eo
		dc.w $F406,    0,    0,$FFF8; 0
word_A02A:	dc.w 1			; DATA XREF: ROM:Map_Obj28o
		dc.w $FC05,    6,    3,$FFF8; 0
word_A034:	dc.w 1			; DATA XREF: ROM:0000A01Co
		dc.w $FC05,   $A,    5,$FFF8; 0
Map_Obj28b:	dc.w word_A04E-Map_Obj28b ; DATA XREF: ROM:00009B10o
					; ROM:00009B20o ...
		dc.w word_A058-Map_Obj28b
		dc.w word_A044-Map_Obj28b
word_A044:	dc.w 1			; DATA XREF: ROM:0000A042o
		dc.w $F406,    0,    0,$FFF8; 0
word_A04E:	dc.w 1			; DATA XREF: ROM:Map_Obj28bo
		dc.w $FC09,    6,    3,$FFF4; 0
word_A058:	dc.w 1			; DATA XREF: ROM:0000A040o
		dc.w $FC09,   $C,    6,$FFF4; 0
Map_Obj29:	dc.w word_A070-Map_Obj29 ; DATA	XREF: ROM:00009FB6o
					; ROM:Map_Obj29o ...
		dc.w word_A07A-Map_Obj29
		dc.w word_A084-Map_Obj29
		dc.w word_A08E-Map_Obj29
		dc.w word_A0A0-Map_Obj29
		dc.w word_A0AA-Map_Obj29
		dc.w word_A0BC-Map_Obj29
word_A070:	dc.w 1			; DATA XREF: ROM:Map_Obj29o
		dc.w $F805,    2,    1,$FFF8; 0
word_A07A:	dc.w 1			; DATA XREF: ROM:0000A064o
		dc.w $F805,    6,    3,$FFF8; 0
word_A084:	dc.w 1			; DATA XREF: ROM:0000A066o
		dc.w $F805,   $A,    5,$FFF8; 0
word_A08E:	dc.w 2			; DATA XREF: ROM:0000A068o
		dc.w $F801,    0,    0,$FFF8; 0
		dc.w $F805,   $E,    7,	   0; 4
word_A0A0:	dc.w 1			; DATA XREF: ROM:0000A06Ao
		dc.w $F801,    0,    0,$FFFC; 0
word_A0AA:	dc.w 2			; DATA XREF: ROM:0000A06Co
		dc.w $F805,    2,    1,$FFF0; 0
		dc.w $F805,   $E,    7,	   0; 4
word_A0BC:	dc.w 2			; DATA XREF: ROM:0000A06Eo
		dc.w $F805,   $A,    5,$FFF0; 0
		dc.w $F805,   $E,    7,	   0; 4

; ===========================================================================
		nop
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 1F - Crabmeat from GHZ
; ---------------------------------------------------------------------------
; OST:
obj1F_timer:	equ $30	; time to wait for performing an action
obj1F_status:	equ $32	; 0 = moving, 1 = firing
; ---------------------------------------------------------------------------

Obj1F:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj1F_Index(pc,d0.w),d1
		jmp	Obj1F_Index(pc,d1.w)
; ===========================================================================
Obj1F_Index:	dc.w Obj1F_Init-Obj1F_Index
		dc.w Obj1F_Main-Obj1F_Index
		dc.w Obj1F_Delete-Obj1F_Index
		dc.w Obj1F_BallInit-Obj1F_Index
		dc.w Obj1F_BallMove-Obj1F_Index
; ===========================================================================
; loc_A0E8:
Obj1F_Init:
		move.b	#$10,$16(a0)
		move.b	#8,$17(a0)
		move.l	#Map_obj1F,4(a0)
		move.w	#$400,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#3,$18(a0)
		move.b	#6,$20(a0)
		move.b	#$15,$19(a0)
		bsr.w	ObjectMoveAndFall
		jsr	(ObjHitFloor).l
		tst.w	d1
		bpl.s	locret_A13E
		add.w	d1,$C(a0)
		move.b	d3,$26(a0)
		move.w	#0,$12(a0)
		addq.b	#2,routine(a0)

locret_A13E:
		rts
; ===========================================================================
; loc_A140:
Obj1F_Main:
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj1F_Main_Index(pc,d0.w),d1
		jsr	Obj1F_Main_Index(pc,d1.w)
		lea	(Ani_obj1F).l,a1
		bsr.w	AnimateSprite
		bra.w	MarkObjGone
; ===========================================================================
Obj1F_Main_Index:	dc.w Obj1F_WaitMove-Obj1F_Main_Index
			dc.w Obj1F_WalkOnFloor-Obj1F_Main_Index
; ===========================================================================
; loc_A160:
Obj1F_WaitMove:
		subq.w	#1,obj1F_timer(a0)
		bpl.s	locret_A19A
		tst.b	1(a0)
		bpl.s	Obj1F_Move
		bchg	#1,obj1F_status(a0)
		bne.s	Obj1F_MakeFire
; loc_A174:
Obj1F_Move:
		addq.b	#2,$25(a0)
		move.w	#$7F,obj1F_timer(a0)
		move.w	#$80,$10(a0)
		bsr.w	Obj1F_SetAni
		addq.b	#3,d0
		move.b	d0,$1C(a0)
		bchg	#0,$22(a0)
		bne.s	locret_A19A
		neg.w	$10(a0)

locret_A19A:
		rts
; ===========================================================================
; loc_A19C:
Obj1F_MakeFire:
		move.w	#$3B,obj1F_timer(a0)
		move.b	#6,$1C(a0)
		bsr.w	SingleObjLoad
		bne.s	Obj1F_MakeFire2
		move.b	#$1F,0(a1)
		move.b	#6,routine(a1)
		move.w	8(a0),8(a1)
		subi.w	#$10,8(a1)
		move.w	$C(a0),$C(a1)
		move.w	#-$100,$10(a1)
; loc_A1D2:
Obj1F_MakeFire2:
		bsr.w	SingleObjLoad
		bne.s	locret_A1FC
		move.b	#$1F,0(a1)
		move.b	#6,routine(a1)
		move.w	8(a0),8(a1)
		addi.w	#$10,8(a1)
		move.w	$C(a0),$C(a1)
		move.w	#$100,$10(a1)

locret_A1FC:
		rts
; ===========================================================================
; loc_A1FE:
Obj1F_WalkOnFloor:
		subq.w	#1,obj1F_timer(a0)
		bmi.s	loc_A252
		bsr.w	ObjectMove
		bchg	#0,obj1F_status(a0)
		bne.s	loc_A238
		move.w	8(a0),d3
		addi.w	#$10,d3
		btst	#0,$22(a0)
		beq.s	loc_A224
		subi.w	#$20,d3

loc_A224:
		jsr	(ObjHitFloor2).l
		cmpi.w	#-8,d1
		blt.s	loc_A252
		cmpi.w	#$C,d1
		bge.s	loc_A252
		rts
; ===========================================================================

loc_A238:
		jsr	(ObjHitFloor).l
		add.w	d1,$C(a0)
		move.b	d3,$26(a0)
		bsr.w	Obj1F_SetAni
		addq.b	#3,d0
		move.b	d0,$1C(a0)
		rts
; ===========================================================================

loc_A252:
		subq.b	#2,$25(a0)
		move.w	#$3B,obj1F_timer(a0)
		move.w	#0,$10(a0)
		bsr.w	Obj1F_SetAni
		move.b	d0,$1C(a0)
		rts

; ---------------------------------------------------------------------------
; Subroutine to	set the	correct	animation for a	Crabmeat
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B	R O U T	I N E |||||||||||||||||||||||||||||||||||||||

; sub_A26C:
Obj1F_SetAni:
		moveq	#0,d0
		move.b	$26(a0),d3
		bmi.s	loc_A288
		cmpi.b	#6,d3
		bcs.s	locret_A286
		moveq	#1,d0
		btst	#0,$22(a0)
		bne.s	locret_A286
		moveq	#2,d0

locret_A286:
		rts
; ===========================================================================

loc_A288:
		cmpi.b	#-6,d3
		bhi.s	locret_A29A
		moveq	#2,d0
		btst	#0,$22(a0)
		bne.s	locret_A29A
		moveq	#1,d0

locret_A29A:
		rts
; End of function Obj1F_SetAni

; ===========================================================================
; loc_A29C:
Obj1F_Delete:
		bra.w	DeleteObject
; ===========================================================================
; loc_A2A0:
Obj1F_BallInit:
		addq.b	#2,routine(a0)
		move.l	#Map_obj1F,4(a0)
		move.w	#$400,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#3,$18(a0)
		move.b	#$87,$20(a0)
		move.b	#8,$19(a0)
		move.w	#$FC00,$12(a0)
		move.b	#7,$1C(a0)
; loc_A2DA:
Obj1F_BallMove:
		lea	(Ani_obj1F).l,a1
		bsr.w	AnimateSprite
		bsr.w	ObjectMoveAndFall
		move.w	($FFFFEECE).w,d0
		addi.w	#$E0,d0
		cmp.w	$C(a0),d0
		bcs.w	DeleteObject
		bra.w	DisplaySprite
; ===========================================================================
; animation script
Ani_obj1F:	dc.w byte_A30C-Ani_obj1F
		dc.w byte_A30F-Ani_obj1F
		dc.w byte_A312-Ani_obj1F
		dc.w byte_A315-Ani_obj1F
		dc.w byte_A31A-Ani_obj1F
		dc.w byte_A31F-Ani_obj1F
		dc.w byte_A324-Ani_obj1F
		dc.w byte_A327-Ani_obj1F
byte_A30C:	dc.b  $F,  0,$FF
byte_A30F:	dc.b  $F,  2,$FF
byte_A312:	dc.b  $F,$22,$FF
byte_A315:	dc.b  $F,  1,$21,  0,$FF
byte_A31A:	dc.b  $F,$21,  3,  2,$FF
byte_A31F:	dc.b  $F,  1,$23,$22,$FF
byte_A324:	dc.b  $F,  4,$FF
byte_A327:	dc.b   1,  5,  6,$FF,  0

; ---------------------------------------------------------------------------
; Sprite mappings
; ---------------------------------------------------------------------------
Map_obj1F:	incbin	"mappings/sprite/obj1F.bin"

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 22 - Buzz Bomber from GHZ
; ---------------------------------------------------------------------------
; OST:
obj22_time:	equ $32		; time to wait for performing an action
obj22_status:	equ $34		; 0 = still, 1 = flying, 2 = shooting
obj22_parent:	equ $3C
; ---------------------------------------------------------------------------

Obj22:	
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj22_Index(pc,d0.w),d1
		jmp	Obj22_Index(pc,d1.w)
; ===========================================================================
Obj22_Index:	dc.w Obj22_Init-Obj22_Index
		dc.w Obj22_Main-Obj22_Index
		dc.w Obj22_Delete-Obj22_Index
; ===========================================================================
; loc_A41C:
Obj22_Init:
		addq.b	#2,routine(a0)
		move.l	#Map_obj22,4(a0)
		move.w	#$444,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#3,$18(a0)
		move.b	#8,$20(a0)
		move.b	#$18,$19(a0)
; loc_A44A:
Obj22_Main:
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj22_Main_Index(pc,d0.w),d1
		jsr	Obj22_Main_Index(pc,d1.w)
		lea	(Ani_obj22).l,a1
		bsr.w	AnimateSprite
		bra.w	MarkObjGone
; ===========================================================================
Obj22_Main_Index:	dc.w Obj22_Move-Obj22_Main_Index
			dc.w Obj22_NearSonic-Obj22_Main_Index
; ===========================================================================
; loc_A46A:
Obj22_Move:
		subq.w	#1,obj22_time(a0)
		bpl.s	locret_A49A
		btst	#1,obj22_status(a0)
		bne.s	Obj22_LoadMissile
		addq.b	#2,$25(a0)
		move.w	#$7F,obj22_time(a0)
		move.w	#$400,$10(a0)
		move.b	#1,$1C(a0)
		btst	#0,$22(a0)
		bne.s	locret_A49A
		neg.w	$10(a0)

locret_A49A:
		rts
; ===========================================================================
; loc_A49C:
Obj22_LoadMissile:
		bsr.w	SingleObjLoad
		bne.s	locret_A4FE
		move.b	#$23,0(a1)	; load Obj23 (Buzz Bomber/Newtron missile)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		addi.w	#$1C,$C(a1)
		move.w	#$200,$12(a1)
		move.w	#$200,$10(a1)
		move.w	#$18,d0
		btst	#0,$22(a0)
		bne.s	loc_A4D8
		neg.w	d0
		neg.w	$10(a1)

loc_A4D8:
		add.w	d0,8(a1)
		move.b	$22(a0),$22(a1)
		move.w	#$E,obj22_time(a1)
		move.l	a0,obj22_parent(a1)
		move.b	#1,obj22_status(a0)
		move.w	#$3B,obj22_time(a0)
		move.b	#2,$1C(a0)

locret_A4FE:
		rts
; ===========================================================================
; loc_A500:
Obj22_NearSonic:
		subq.w	#1,obj22_time(a0)
		bmi.s	loc_A536
		bsr.w	ObjectMove
		tst.b	obj22_status(a0)
		bne.s	locret_A558
		move.w	($FFFFB008).w,d0
		sub.w	8(a0),d0
		bpl.s	loc_A51C
		neg.w	d0

loc_A51C:
		cmpi.w	#$60,d0		; is Buzz Bomber within $60 pixels of Sonic?
		bcc.s	locret_A558	; if not, branch
		tst.b	1(a0)
		bpl.s	locret_A558
		move.b	#2,obj22_status(a0)
		move.w	#$1D,obj22_time(a0)
		bra.s	loc_A548
; ===========================================================================

loc_A536:
		move.b	#0,obj22_status(a0)
		bchg	#0,$22(a0)
		move.w	#$3B,obj22_time(a0)

loc_A548:
		subq.b	#2,$25(a0)
		move.w	#0,$10(a0)
		move.b	#0,$1C(a0)

locret_A558:
		rts
; ===========================================================================
; loc_A55A:
Obj22_Delete:
		bra.w	DeleteObject
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 23 - Buzz Bomber/Newtron missile
; ---------------------------------------------------------------------------
; OST:
obj23_parent:	equ $3C
; ---------------------------------------------------------------------------

Obj23:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj23_Index(pc,d0.w),d1
		jmp	Obj23_Index(pc,d1.w)
; ===========================================================================
Obj23_Index:	dc.w Obj23_Init-Obj23_Index
		dc.w Obj23_Animate-Obj23_Index
		dc.w Obj23_Move-Obj23_Index
		dc.w Obj23_Delete-Obj23_Index
		dc.w Obj23_Newtron-Obj23_Index
; ===========================================================================
; loc_A576:
Obj23_Init:
		subq.w	#1,$32(a0)
		bpl.s	Obj23_ChkDel
		addq.b	#2,routine(a0)
		move.l	#Map_obj23,4(a0)
		move.w	#$2444,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#3,$18(a0)
		move.b	#8,$19(a0)
		andi.b	#3,$22(a0)
		tst.b	$28(a0)		; was the object created by a Newtron?
		beq.s	Obj23_Animate	; if not, branch

		move.b	#8,routine(a0)
		move.b	#$87,$20(a0)
		move.b	#1,$1C(a0)
		bra.s	Obj23_Animate2
; ===========================================================================
; loc_A5C4:
Obj23_Animate:
		movea.l	obj23_parent(a0),a1
		cmpi.b	#$27,0(a1)	; is Buzz Bomber destroyed?
		beq.s	Obj23_Delete	; if yes, branch
		lea	(Ani_obj23).l,a1
		bsr.w	AnimateSprite
		bra.w	DisplaySprite

; ---------------------------------------------------------------------------
; Subroutine to	check if the Buzz Bomber which fired the missile has been
; destroyed, and if it has, deletes the missile
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B	R O U T	I N E |||||||||||||||||||||||||||||||||||||||

; loc_A5DE:
Obj23_ChkDel:
		movea.l	obj23_parent(a0),a1
		cmpi.b	#$27,0(a1)	; is Buzz Bomber destroyed?
		beq.s	Obj23_Delete	; if yes, branch
		rts
; End of function Obj23_ChkDel

; ===========================================================================
; loc_A5EC:
Obj23_Move:
		btst	#7,$22(a0)	; has the missile collided with the level? (flag never set)
		bne.s	Obj23_Explode	; if yes, branch
		move.b	#$87,$20(a0)
		move.b	#1,$1C(a0)
		bsr.w	ObjectMove
		lea	(Ani_obj23).l,a1
		bsr.w	AnimateSprite
		move.w	($FFFFEECE).w,d0
		addi.w	#$E0,d0
		cmp.w	$C(a0),d0
		bcs.s	Obj23_Delete
		bra.w	DisplaySprite
; ===========================================================================
; loc_A620:
Obj23_Explode:
		move.b	#$24,0(a0) ; load Obj24 (unused Buzz Bomber missile explosion)
		move.b	#0,routine(a0)
		bra.w	Obj24
; ===========================================================================
; loc_A630:
Obj23_Delete:
		bra.w	DeleteObject
; ===========================================================================
; loc_A634:
Obj23_Newtron:
		tst.b	1(a0)
		bpl.s	Obj23_Delete
		bsr.w	ObjectMove
; loc_A63E:
Obj23_Animate2:
		lea	(Ani_obj23).l,a1
		bsr.w	AnimateSprite
		bra.w	DisplaySprite
; ===========================================================================
; animation script
Ani_obj22:	dc.w byte_A652-Ani_obj22
		dc.w byte_A656-Ani_obj22
		dc.w byte_A65A-Ani_obj22
byte_A652:	dc.b   1,  0,  1,$FF
byte_A656:	dc.b   1,  2,  3,$FF
byte_A65A:	dc.b   1,  4,  5,$FF

Ani_obj23:	dc.w byte_A662-Ani_obj23
		dc.w byte_A666-Ani_obj23
byte_A662:	dc.b   7,  0,  1,$FC
byte_A666:	dc.b   1,  2,  3,$FF

; ---------------------------------------------------------------------------
; sprite mappings - Buzz Bomber
; ---------------------------------------------------------------------------
Map_obj22:	incbin	"mappings/sprite/obj22.bin"

; ---------------------------------------------------------------------------
; sprite mappings - Buzz Bomber missile
; ---------------------------------------------------------------------------
Map_obj23:	incbin	"mappings/sprite/obj23.bin"

; ===========================================================================
		nop
; ===========================================================================
;----------------------------------------------------------------------------
; Object 25 - Rings
;----------------------------------------------------------------------------

Obj25:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj25_Index(pc,d0.w),d1
		jmp	Obj25_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj25_Index:	dc.w loc_A81C-Obj25_Index ; DATA XREF: ROM:Obj25_Indexo
					; ROM:0000A7F4o ...
		dc.w loc_A88A-Obj25_Index
		dc.w loc_A8A6-Obj25_Index
		dc.w loc_A8CC-Obj25_Index
		dc.w loc_A8DA-Obj25_Index
		dc.b $10,  0,$18,  0	; 0
		dc.b $20,  0,  0,$10	; 4
		dc.b   0,$18,  0,$20	; 8
		dc.b $10,$10,$18,$18	; 12
		dc.b $20,$20,$F0,$10	; 16
		dc.b $E8,$18,$E0,$20	; 20
		dc.b $10,  8,$18,$10	; 24
		dc.b $F0,  8,$E8,$10	; 28
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A81C:				; DATA XREF: ROM:Obj25_Indexo
		movea.l	a0,a1
		moveq	#0,d1
		move.w	8(a0),d2
		move.w	$C(a0),d3
		bra.s	loc_A832
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A82A:				; CODE XREF: ROM:0000A886j
		swap	d1
		bsr.w	SingleObjLoad
		bne.s	loc_A88A

loc_A832:				; CODE XREF: ROM:0000A828j
		move.b	#$25,0(a1) ; '%'
		addq.b	#2,routine(a1)
		move.w	d2,8(a1)
		move.w	8(a0),$32(a1)
		move.w	d3,$C(a1)
		move.l	#Map_Obj25,4(a1)
		move.w	#$26BC,2(a1)
		bsr.w	Adjust2PArtPointer2
		move.b	#4,1(a1)
		move.b	#2,$18(a1)
		move.b	#$47,$20(a1) ; 'G'
		move.b	#8,$19(a1)
		move.b	$23(a0),$23(a1)
		move.b	d1,$34(a1)
		addq.w	#1,d1
		add.w	d5,d2
		add.w	d6,d3
		swap	d1
		dbf	d1,loc_A82A

loc_A88A:				; CODE XREF: ROM:0000A830j
					; DATA XREF: ROM:0000A7F4o
		move.b	($FFFFFEC3).w,$1A(a0)
		move.w	$32(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_A8DA
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A8A6:				; DATA XREF: ROM:0000A7F6o
		addq.b	#2,routine(a0)
		move.b	#0,$20(a0)
		move.b	#1,$18(a0)
		bsr.w	sub_A8DE
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		move.b	$34(a0),d1
		bset	d1,2(a2,d0.w)

loc_A8CC:				; DATA XREF: ROM:0000A7F8o
		lea	(Ani_Obj25).l,a1
		bsr.w	AnimateSprite
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A8DA:				; CODE XREF: ROM:0000A8A0j
					; DATA XREF: ROM:0000A7FAo
		bra.w	DeleteObject

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_A8DE:				; CODE XREF: ROM:0000A8B6p
					; ROM:0000AA5Cp ...
		addq.w	#1,($FFFFFE20).w
		ori.b	#1,($FFFFFE1D).w
		move.w	#$B5,d0	; 'µ'
		cmpi.w	#$64,($FFFFFE20).w ; 'd'
		bcs.s	loc_A918
		bset	#1,($FFFFFE1B).w
		beq.s	loc_A90C
		cmpi.w	#$C8,($FFFFFE20).w ; 'È'
		bcs.s	loc_A918
		bset	#2,($FFFFFE1B).w
		bne.s	loc_A918

loc_A90C:				; CODE XREF: sub_A8DE+1Cj
		addq.b	#1,($FFFFFE12).w
		addq.b	#1,($FFFFFE1C).w
		move.w	#MusID_ExtraLife,d0

loc_A918:				; CODE XREF: sub_A8DE+14j sub_A8DE+24j ...
		jmp	(PlaySound_Special).l
; End of function sub_A8DE

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 37 - Rings flying out of you when you get hit
;----------------------------------------------------

Obj37:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj37_Index(pc,d0.w),d1
		jmp	Obj37_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj37_Index:	dc.w loc_A936-Obj37_Index ; DATA XREF: ROM:Obj37_Indexo
					; ROM:0000A92Eo ...
		dc.w loc_A9FA-Obj37_Index
		dc.w loc_AA4C-Obj37_Index
		dc.w loc_AA60-Obj37_Index
		dc.w loc_AA6E-Obj37_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A936:				; DATA XREF: ROM:Obj37_Indexo
		movea.l	a0,a1
		moveq	#0,d5
		move.w	($FFFFFE20).w,d5
		moveq	#$20,d0	; ' '
		cmp.w	d0,d5
		bcs.s	loc_A946
		move.w	d0,d5

loc_A946:				; CODE XREF: ROM:0000A942j
		subq.w	#1,d5
		move.w	#$288,d4
		bra.s	loc_A956
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A94E:				; CODE XREF: ROM:0000A9DAj
		bsr.w	SingleObjLoad
		bne.w	loc_A9DE

loc_A956:				; CODE XREF: ROM:0000A94Cj
		move.b	#$37,0(a1) ; '7'
		addq.b	#2,routine(a1)
		move.b	#8,$16(a1)
		move.b	#8,$17(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.l	#Map_Obj25,4(a1)
		move.w	#$26BC,2(a1)
		bsr.w	Adjust2PArtPointer2
		move.b	#4,1(a1)
		move.b	#3,$18(a1)
		move.b	#$47,$20(a1) ; 'G'
		move.b	#8,$19(a1)
		move.b	#$FF,($FFFFFEC6).w
		tst.w	d4
		bmi.s	loc_A9CE
		move.w	d4,d0
		bsr.w	CalcSine
		move.w	d4,d2
		lsr.w	#8,d2
		asl.w	d2,d0
		asl.w	d2,d1
		move.w	d0,d2
		move.w	d1,d3
		addi.b	#$10,d4
		bcc.s	loc_A9CE
		subi.w	#$80,d4	; ''
		bcc.s	loc_A9CE
		move.w	#$288,d4

loc_A9CE:				; CODE XREF: ROM:0000A9AAj
					; ROM:0000A9C2j ...
		move.w	d2,$10(a1)
		move.w	d3,$12(a1)
		neg.w	d2
		neg.w	d4
		dbf	d5,loc_A94E

loc_A9DE:				; CODE XREF: ROM:0000A952j
		move.w	#0,($FFFFFE20).w
		move.b	#$80,($FFFFFE1D).w
		move.b	#0,($FFFFFE1B).w
		move.w	#$C6,d0	; 'Æ'
		jsr	(PlaySound_Special).l

loc_A9FA:				; DATA XREF: ROM:0000A92Eo
		move.b	($FFFFFEC7).w,$1A(a0)
		bsr.w	ObjectMove
		addi.w	#$18,$12(a0)
		bmi.s	loc_AA34
		move.b	($FFFFFE0F).w,d0
		add.b	d7,d0
		andi.b	#3,d0
		bne.s	loc_AA34
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_AA34
		add.w	d1,$C(a0)
		move.w	$12(a0),d0
		asr.w	#2,d0
		sub.w	d0,$12(a0)
		neg.w	$12(a0)

loc_AA34:				; CODE XREF: ROM:0000AA0Aj
					; ROM:0000AA16j ...
		tst.b	($FFFFFEC6).w
		beq.s	loc_AA6E
		move.w	($FFFFEECE).w,d0
		addi.w	#$E0,d0	; 'à'
		cmp.w	$C(a0),d0
		bcs.s	loc_AA6E
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AA4C:				; DATA XREF: ROM:0000A930o
		addq.b	#2,routine(a0)
		move.b	#0,$20(a0)
		move.b	#1,$18(a0)
		bsr.w	sub_A8DE

loc_AA60:				; DATA XREF: ROM:0000A932o
		lea	(Ani_Obj25).l,a1
		bsr.w	AnimateSprite
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AA6E:				; CODE XREF: ROM:0000AA38j
					; ROM:0000AA46j
					; DATA XREF: ...
		bra.w	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Sonic	1 Object 4B - leftover giant ring code
;----------------------------------------------------

S1Obj4B:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	S1Obj4B_Index(pc,d0.w),d1
		jmp	S1Obj4B_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1Obj4B_Index:	dc.w loc_AA88-S1Obj4B_Index ; DATA XREF: ROM:S1Obj4B_Indexo
					; ROM:0000AA82o ...
		dc.w loc_AAD6-S1Obj4B_Index
		dc.w loc_AAF4-S1Obj4B_Index
		dc.w loc_AB38-S1Obj4B_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AA88:				; DATA XREF: ROM:S1Obj4B_Indexo
		move.l	#Map_S1Obj4B,4(a0)
		move.w	#$2400,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#$40,$19(a0) ; '@'
		tst.b	1(a0)
		bpl.s	loc_AAD6
		cmpi.b	#6,($FFFFFE57).w
		beq.w	loc_AB38
		cmpi.w	#$32,($FFFFFE20).w ; '2'
		bcc.s	loc_AAC0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AAC0:				; CODE XREF: ROM:0000AABCj
		addq.b	#2,routine(a0)
		move.b	#2,$18(a0)
		move.b	#$52,$20(a0) ; 'R'
		move.w	#$C40,($FFFFF7BE).w

loc_AAD6:				; CODE XREF: ROM:0000AAAAj
					; ROM:0000AB36j
					; DATA XREF: ...
		move.b	($FFFFFEC3).w,$1A(a0)
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AAF4:				; DATA XREF: ROM:0000AA84o
		subq.b	#2,routine(a0)
		move.b	#0,$20(a0)
		bsr.w	SingleObjLoad
		bne.w	loc_AB2C
		move.b	#$7C,0(a1) ; '|'
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.l	a0,$3C(a1)
		move.w	($FFFFB008).w,d0
		cmp.w	8(a0),d0
		bcs.s	loc_AB2C
		bset	#0,1(a1)

loc_AB2C:				; CODE XREF: ROM:0000AB02j
					; ROM:0000AB24j
		move.w	#$C3,d0	; 'Ã'
		jsr	(PlaySound_Special).l
		bra.s	loc_AAD6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AB38:				; CODE XREF: ROM:0000AAB2j
					; DATA XREF: ROM:0000AA86o
		bra.w	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Sonic	1 Object 7C - leftover giant flash when	you
;   collected the giant	ring
;----------------------------------------------------

Obj_S1Obj7C:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj_S1Obj7C_Index(pc,d0.w),d1
		jmp	Obj_S1Obj7C_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj_S1Obj7C_Index:dc.w loc_AB50-Obj_S1Obj7C_Index ; DATA XREF: ROM:Obj_S1Obj7C_Indexo
					; ROM:0000AB4Co ...
		dc.w loc_AB7E-Obj_S1Obj7C_Index
		dc.w loc_ABE6-Obj_S1Obj7C_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AB50:				; DATA XREF: ROM:Obj_S1Obj7C_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_S1Obj7C,4(a0)
		move.w	#$2462,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#0,$18(a0)
		move.b	#$20,$19(a0) ; ' '
		move.b	#$FF,$1A(a0)

loc_AB7E:				; DATA XREF: ROM:0000AB4Co
		bsr.s	sub_AB98
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_AB98:				; CODE XREF: ROM:loc_AB7Ep
		subq.b	#1,$1E(a0)
		bpl.s	locret_ABD6
		move.b	#1,$1E(a0)
		addq.b	#1,$1A(a0)
		cmpi.b	#8,$1A(a0)
		bcc.s	loc_ABD8
		cmpi.b	#3,$1A(a0)
		bne.s	locret_ABD6
		movea.l	$3C(a0),a1
		move.b	#6,routine(a1)
		move.b	#$1C,($FFFFB01C).w
		move.b	#1,($FFFFF7CD).w
		clr.b	($FFFFFE2D).w
		clr.b	($FFFFFE2C).w

locret_ABD6:				; CODE XREF: sub_AB98+4j sub_AB98+1Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_ABD8:				; CODE XREF: sub_AB98+16j
		addq.b	#2,routine(a0)
		move.w	#0,($FFFFB000).w
		addq.l	#4,sp
		rts
; End of function sub_AB98

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_ABE6:				; DATA XREF: ROM:0000AB4Eo
		bra.w	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj25:	dc.w byte_ABEC-Ani_Obj25 ; DATA	XREF: ROM:loc_A8CCo
					; ROM:loc_AA60o ...
byte_ABEC:	dc.b   5,  4,  5,  6,  7,$FC; 0	; DATA XREF: ROM:Ani_Obj25o
; ===========================================================================
; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Map_Obj25:	incbin	"mappings/sprite/obj37_a.bin"
		even

Map_S1Obj4B:	dc.w word_AC5E-Map_S1Obj4B ; DATA XREF:	ROM:loc_AA88o
					; ROM:Map_S1Obj4Bo ...
		dc.w word_ACB0-Map_S1Obj4B
		dc.w word_ACF2-Map_S1Obj4B
		dc.w word_AD14-Map_S1Obj4B
word_AC5E:	dc.w $A			; DATA XREF: ROM:Map_S1Obj4Bo
		dc.w $E008,    0,    0,$FFE8; 0
		dc.w $E008,    3,    1,	   0; 4
		dc.w $E80C,    6,    3,$FFE0; 8
		dc.w $E80C,   $A,    5,	   0; 12
		dc.w $F007,   $E,    7,$FFE0; 16
		dc.w $F007,  $16,   $B,	 $10; 20
		dc.w $100C,  $1E,   $F,$FFE0; 24
		dc.w $100C,  $22,  $11,	   0; 28
		dc.w $1808,  $26,  $13,$FFE8; 32
		dc.w $1808,  $29,  $14,	   0; 36
word_ACB0:	dc.w 8			; DATA XREF: ROM:0000AC58o
		dc.w $E00C,  $2C,  $16,$FFF0; 0
		dc.w $E808,  $30,  $18,$FFE8; 4
		dc.w $E809,  $33,  $19,	   0; 8
		dc.w $F007,  $39,  $1C,$FFE8; 12
		dc.w $F805,  $41,  $20,	   8; 16
		dc.w  $809,  $45,  $22,	   0; 20
		dc.w $1008,  $4B,  $25,$FFE8; 24
		dc.w $180C,  $4E,  $27,$FFF0; 28
word_ACF2:	dc.w 4			; DATA XREF: ROM:0000AC5Ao
		dc.w $E007,  $52,  $29,$FFF4; 0
		dc.w $E003, $852, $829,	   4; 4
		dc.w	 7,  $5A,  $2D,$FFF4; 8
		dc.w	 3, $85A, $82D,	   4; 12
word_AD14:	dc.w 8			; DATA XREF: ROM:0000AC5Co
		dc.w $E00C, $82C, $816,$FFF0; 0
		dc.w $E808, $830, $818,	   0; 4
		dc.w $E809, $833, $819,$FFE8; 8
		dc.w $F007, $839, $81C,	   8; 12
		dc.w $F805, $841, $820,$FFE8; 16
		dc.w  $809, $845, $822,$FFE8; 20
		dc.w $1008, $84B, $825,	   0; 24
		dc.w $180C, $84E, $827,$FFF0; 28
Map_S1Obj7C:	dc.w word_AD66-Map_S1Obj7C ; DATA XREF:	ROM:0000AB54o
					; ROM:Map_S1Obj7Co ...
		dc.w word_AD78-Map_S1Obj7C
		dc.w word_AD9A-Map_S1Obj7C
		dc.w word_ADBC-Map_S1Obj7C
		dc.w word_ADDE-Map_S1Obj7C
		dc.w word_AE00-Map_S1Obj7C
		dc.w word_AE22-Map_S1Obj7C
		dc.w word_AE34-Map_S1Obj7C
word_AD66:	dc.w 2			; DATA XREF: ROM:Map_S1Obj7Co
		dc.w $E00F,    0,    0,	   0; 0
		dc.w	$F,$1000,$1000,	   0; 4
word_AD78:	dc.w 4			; DATA XREF: ROM:0000AD58o
		dc.w $E00F,  $10,    8,$FFF0; 0
		dc.w $E007,  $20,  $10,	 $10; 4
		dc.w	$F,$1010,$1008,$FFF0; 8
		dc.w	 7,$1020,$1010,	 $10; 12
word_AD9A:	dc.w 4			; DATA XREF: ROM:0000AD5Ao
		dc.w $E00F,  $28,  $14,$FFE8; 0
		dc.w $E00B,  $38,  $1C,	   8; 4
		dc.w	$F,$1028,$1014,$FFE8; 8
		dc.w	$B,$1038,$101C,	   8; 12
word_ADBC:	dc.w 4			; DATA XREF: ROM:0000AD5Co
		dc.w $E00F, $834, $81A,$FFE0; 0
		dc.w $E00F,  $34,  $1A,	   0; 4
		dc.w	$F,$1834,$181A,$FFE0; 8
		dc.w	$F,$1034,$101A,	   0; 12
word_ADDE:	dc.w 4			; DATA XREF: ROM:0000AD5Eo
		dc.w $E00B, $838, $81C,$FFE0; 0
		dc.w $E00F, $828, $814,$FFF8; 4
		dc.w	$B,$1838,$181C,$FFE0; 8
		dc.w	$F,$1828,$1814,$FFF8; 12
word_AE00:	dc.w 4			; DATA XREF: ROM:0000AD60o
		dc.w $E007, $820, $810,$FFE0; 0
		dc.w $E00F, $810, $808,$FFF0; 4
		dc.w	 7,$1820,$1810,$FFE0; 8
		dc.w	$F,$1810,$1808,$FFF0; 12
word_AE22:	dc.w 2			; DATA XREF: ROM:0000AD62o
		dc.w $E00F, $800, $800,$FFE0; 0
		dc.w	$F,$1800,$1800,$FFE0; 4
word_AE34:	dc.w 4			; DATA XREF: ROM:0000AD64o
		dc.w $E00F,  $44,  $22,$FFE0; 0
		dc.w $E00F, $844, $822,	   0; 4
		dc.w	$F,$1044,$1022,$FFE0; 8
		dc.w	$F,$1844,$1822,	   0; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop
;----------------------------------------------------
; Object 26 - monitor
;----------------------------------------------------

Obj26:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj26_Index(pc,d0.w),d1
		jmp	Obj26_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj26_Index:	dc.w loc_AE70-Obj26_Index ; DATA XREF: ROM:Obj26_Indexo
					; ROM:0000AE68o ...
		dc.w loc_AED6-Obj26_Index
		dc.w loc_AFDC-Obj26_Index
		dc.w loc_AFBA-Obj26_Index
		dc.w loc_AFC4-Obj26_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AE70:				; DATA XREF: ROM:Obj26_Indexo
		addq.b	#2,routine(a0)
		move.b	#$E,$16(a0)
		move.b	#$E,$17(a0)
		move.l	#Map_Obj26,4(a0)
		move.w	#$680,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#3,$18(a0)
		move.b	#$F,$19(a0)
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		bclr	#7,2(a2,d0.w)
		btst	#0,2(a2,d0.w)
		beq.s	loc_AECA
		move.b	#8,routine(a0)
		move.b	#$B,$1A(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AECA:				; CODE XREF: ROM:0000AEBAj
		move.b	#$46,$20(a0) ; 'F'
		move.b	$28(a0),$1C(a0)

loc_AED6:				; DATA XREF: ROM:0000AE68o
		move.b	$25(a0),d0
		beq.s	loc_AF30
		subq.b	#2,d0
		bne.s	loc_AF10
		moveq	#0,d1
		move.b	$19(a0),d1
		addi.w	#$B,d1
		bsr.w	sub_F9C8
		btst	#3,$22(a1)
		bne.w	loc_AF00
		clr.b	$25(a0)
		bra.w	loc_AFBA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AF00:				; CODE XREF: ROM:0000AEF4j
		move.w	#$10,d3
		move.w	8(a0),d2
		bsr.w	MvSonicOnPtfm
		bra.w	loc_AFBA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AF10:				; CODE XREF: ROM:0000AEDEj
		bsr.w	ObjectMoveAndFall
		jsr	ObjHitFloor
		tst.w	d1
		bpl.w	loc_AFBA
		add.w	d1,$C(a0)
		clr.w	$12(a0)
		clr.b	$25(a0)
		bra.w	loc_AFBA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AF30:				; CODE XREF: ROM:0000AEDAj
		move.w	#$1A,d1
		move.w	#$F,d2
		bsr.w	Obj26_SolidSides
		beq.w	loc_AFA0
		tst.w	$12(a1)
		bmi.s	loc_AF4E
		cmpi.b	#2,$1C(a1)
		beq.s	loc_AFA0

loc_AF4E:				; CODE XREF: ROM:0000AF44j
		tst.w	d1
		bpl.s	loc_AF64
		sub.w	d3,$C(a1)
		bsr.w	RideObject_SetRide
		move.b	#2,$25(a0)
		bra.w	loc_AFBA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AF64:				; CODE XREF: ROM:0000AF50j
		tst.w	d0
		beq.w	loc_AF8A
		bmi.s	loc_AF74
		tst.w	$10(a1)
		bmi.s	loc_AF8A
		bra.s	loc_AF7A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AF74:				; CODE XREF: ROM:0000AF6Aj
		tst.w	$10(a1)
		bpl.s	loc_AF8A

loc_AF7A:				; CODE XREF: ROM:0000AF72j
		sub.w	d0,8(a1)
		move.w	#0,$14(a1)
		move.w	#0,$10(a1)

loc_AF8A:				; CODE XREF: ROM:0000AF66j
					; ROM:0000AF70j ...
		btst	#1,$22(a1)
		bne.s	loc_AFAE
		bset	#5,$22(a1)
		bset	#5,$22(a0)
		bra.s	loc_AFBA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AFA0:				; CODE XREF: ROM:0000AF3Cj
					; ROM:0000AF4Cj
		btst	#5,$22(a0)
		beq.s	loc_AFBA
		move.w	#1,$1C(a1)

loc_AFAE:				; CODE XREF: ROM:0000AF90j
		bclr	#5,$22(a0)
		bclr	#5,$22(a1)

loc_AFBA:				; CODE XREF: ROM:0000AEFCj
					; ROM:0000AF0Cj ...
		lea	(Ani_obj26).l,a1
		bsr.w	AnimateSprite

loc_AFC4:				; DATA XREF: ROM:0000AE6Eo
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_AFDC:				; DATA XREF: ROM:0000AE6Ao
		addq.b	#2,routine(a0)
		move.b	#0,$20(a0)
		bsr.w	SingleObjLoad
		bne.s	loc_B004
		move.b	#$2E,0(a1) ; '.'
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	$1C(a0),$1C(a1)

loc_B004:				; CODE XREF: ROM:0000AFEAj
		bsr.w	SingleObjLoad
		bne.s	loc_B020
		move.b	#$27,0(a1) ; '''
		addq.b	#2,routine(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)

loc_B020:				; CODE XREF: ROM:0000B008j
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		bset	#0,2(a2,d0.w)
		move.b	#$A,$1C(a0)
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 2E - monitor contents (code for power-up behavior and rising image)
;----------------------------------------------------

Obj2E:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj2E_Index(pc,d0.w),d1
		jmp	Obj2E_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj2E_Index:	dc.w loc_B04E-Obj2E_Index ; DATA XREF: ROM:Obj2E_Indexo
					; ROM:0000B04Ao ...
		dc.w loc_B092-Obj2E_Index
		dc.w loc_B1AA-Obj2E_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B04E:				; DATA XREF: ROM:Obj2E_Indexo
		addq.b	#2,routine(a0)
		move.w	#$680,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#$24,1(a0) ; '$'
		move.b	#3,$18(a0)
		move.b	#8,$19(a0)
		move.w	#-$300,$12(a0)
		moveq	#0,d0
		move.b	$1C(a0),d0
		addq.b	#1,d0
		move.b	d0,$1A(a0)
		movea.l	#Map_Obj26,a1
		add.b	d0,d0
		adda.w	(a1,d0.w),a1
		addq.w	#2,a1
		move.l	a1,4(a0)

loc_B092:				; DATA XREF: ROM:0000B04Ao
		bsr.s	sub_B098
		bra.w	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_B098:				; CODE XREF: ROM:loc_B092p
		tst.w	$12(a0)
		bpl.w	loc_B0AC
		bsr.w	ObjectMove
		addi.w	#$18,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B0AC:				; CODE XREF: sub_B098+4j
		addq.b	#2,routine(a0)
		move.w	#$1D,$1E(a0)
		moveq	#0,d0
		move.b	$1C(a0),d0
		add.w	d0,d0
		move.w	Monitor_Subroutines(pc,d0.w),d0
		jmp	Monitor_Subroutines(pc,d0.w)
; End of function sub_B098

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Monitor_Subroutines:dc.w Monitor_Null-Monitor_Subroutines
					; DATA XREF: ROM:Monitor_Subroutineso
					; ROM:0000B0C8o ...
		dc.w Monitor_SonicLife-Monitor_Subroutines
		dc.w Monitor_TailsLife-Monitor_Subroutines
		dc.w Monitor_Null-Monitor_Subroutines
		dc.w Monitor_Rigns-Monitor_Subroutines
		dc.w Monitor_Shoes-Monitor_Subroutines
		dc.w Monitor_Shield-Monitor_Subroutines
		dc.w Monitor_Invincibility-Monitor_Subroutines
		dc.w Monitor_Null-Monitor_Subroutines
		dc.w Monitor_Null-Monitor_Subroutines
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Monitor_Null:				; DATA XREF: ROM:Monitor_Subroutineso
					; ROM:0000B0CCo ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Monitor_SonicLife:			; CODE XREF: ROM:0000B11Aj
					; ROM:0000B12Cj
					; DATA XREF: ...
		addq.b	#1,($FFFFFE12).w
		addq.b	#1,($FFFFFE1C).w
		move.w	#MusID_ExtraLife,d0
		jmp	(PlaySound).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Monitor_TailsLife:			; DATA XREF: ROM:0000B0CAo
		addq.b	#1,($FFFFFE12).w
		addq.b	#1,($FFFFFE1C).w
		move.w	#MusID_ExtraLife,d0
		jmp	(PlaySound).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Monitor_Rigns:				; DATA XREF: ROM:0000B0CEo
		addi.w	#$A,($FFFFFE20).w
		ori.b	#1,($FFFFFE1D).w
		cmpi.w	#$64,($FFFFFE20).w ; 'd'
		bcs.s	loc_B130
		bset	#1,($FFFFFE1B).w
		beq.w	Monitor_SonicLife
		cmpi.w	#$C8,($FFFFFE20).w ; 'È'
		bcs.s	loc_B130
		bset	#2,($FFFFFE1B).w
		beq.w	Monitor_SonicLife

loc_B130:				; CODE XREF: ROM:0000B112j
					; ROM:0000B124j
		move.w	#$B5,d0	; 'µ'
		jmp	(PlaySound).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Monitor_Shoes:				; DATA XREF: ROM:0000B0D0o
		move.b	#1,($FFFFFE2E).w
		move.w	#$4B0,($FFFFB034).w
		move.w	#$C00,(Sonic_top_speed).w
		move.w	#$18,(Sonic_acceleration).w
		move.w	#$80,(Sonic_deceleration).w ; ''
		move.w	#$E2,d0	; 'â'
		jmp	(PlaySound).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Monitor_Shield:				; DATA XREF: ROM:0000B0D2o
		move.b	#1,($FFFFFE2C).w
		move.b	#$38,($FFFFB180).w ; '8'
		move.w	#$AF,d0	; '¯'
		jmp	(PlaySound).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Monitor_Invincibility:			; DATA XREF: ROM:0000B0D4o
		move.b	#1,($FFFFFE2D).w
		move.w	#$4B0,($FFFFB032).w
		move.b	#$38,($FFFFB200).w ; '8'
		move.b	#1,($FFFFB21C).w
		tst.b	($FFFFF7AA).w
		bne.s	locret_B1A8
		cmpi.w	#$C,($FFFFFE14).w
		bls.s	locret_B1A8
		move.w	#MusID_Invincible,d0
		jmp	(PlaySound).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_B1A8:				; CODE XREF: ROM:0000B194j
					; ROM:0000B19Cj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B1AA:				; DATA XREF: ROM:0000B04Co
		subq.w	#1,$1E(a0)
		bmi.w	DeleteObject
		bra.w	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Obj26_SolidSides:			; CODE XREF: ROM:0000AF38p
		lea	($FFFFB000).w,a1
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.s	loc_B20E
		move.w	d1,d3
		add.w	d3,d3
		cmp.w	d3,d0
		bhi.s	loc_B20E
		move.b	$16(a1),d3
		ext.w	d3
		add.w	d3,d2
		move.w	$C(a1),d3
		sub.w	$C(a0),d3
		add.w	d2,d3
		bmi.s	loc_B20E
		add.w	d2,d2
		cmp.w	d2,d3
		bcc.s	loc_B20E
		tst.b	($FFFFF7C8).w
		bmi.s	loc_B20E
		cmpi.b	#6,($FFFFB000+routine).w
		bcc.s	loc_B20E
		tst.w	(Debug_placement_mode).w
		bne.s	loc_B20E
		cmp.w	d0,d1
		bcc.s	loc_B204
		add.w	d1,d1
		sub.w	d1,d0

loc_B204:				; CODE XREF: Obj26_SolidSides+48j
		cmpi.w	#$10,d3
		bcs.s	loc_B212

loc_B20A:				; CODE XREF: Obj26_SolidSides+70j
					; Obj26_SolidSides+74j
		moveq	#1,d1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B20E:				; CODE XREF: Obj26_SolidSides+Ej
					; Obj26_SolidSides+16j	...
		moveq	#0,d1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B212:				; CODE XREF: Obj26_SolidSides+52j
		moveq	#0,d1
		move.b	$19(a0),d1
		addq.w	#4,d1
		move.w	d1,d2
		add.w	d2,d2
		add.w	8(a1),d1
		sub.w	8(a0),d1
		bmi.s	loc_B20A
		cmp.w	d2,d1
		bcc.s	loc_B20A
		moveq	#-1,d1
		rts
; End of function Obj26_SolidSides

; ===========================================================================
; animation script
Ani_obj26:	dc.w byte_B246-Ani_obj26
		dc.w byte_B24A-Ani_obj26
		dc.w byte_B252-Ani_obj26
		dc.w byte_B25A-Ani_obj26
		dc.w byte_B262-Ani_obj26
		dc.w byte_B26A-Ani_obj26
		dc.w byte_B272-Ani_obj26
		dc.w byte_B27A-Ani_obj26
		dc.w byte_B282-Ani_obj26
		dc.w byte_B28A-Ani_obj26
		dc.w byte_B292-Ani_obj26
byte_B246:	dc.b   1,  0,  1,$FF
byte_B24A:	dc.b   1,  0,  2,  2,  1,  2,  2,$FF
byte_B252:	dc.b   1,  0,  3,  3,  1,  3,  3,$FF
byte_B25A:	dc.b   1,  0,  4,  4,  1,  4,  4,$FF
byte_B262:	dc.b   1,  0,  5,  5,  1,  5,  5,$FF
byte_B26A:	dc.b   1,  0,  6,  6,  1,  6,  6,$FF
byte_B272:	dc.b   1,  0,  7,  7,  1,  7,  7,$FF
byte_B27A:	dc.b   1,  0,  8,  8,  1,  8,  8,$FF
byte_B282:	dc.b   1,  0,  9,  9,  1,  9,  9,$FF
byte_B28A:	dc.b   1,  0, $A, $A,  1, $A, $A,$FF
byte_B292:	dc.b   2,  0,  1, $B,$FE,  1

; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Map_Obj26:	incbin	"mappings/sprite/obj26.bin"
		even

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 0E - Sonic and Tails from the title screen
;----------------------------------------------------

Obj0E:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj0E_Index(pc,d0.w),d1
		jmp	Obj0E_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj0E_Index:	dc.w loc_B38E-Obj0E_Index ; DATA XREF: ROM:Obj0E_Indexo
					; ROM:0000B388o ...
		dc.w loc_B3D0-Obj0E_Index
		dc.w loc_B3E4-Obj0E_Index
		dc.w loc_B3FA-Obj0E_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B38E:				; DATA XREF: ROM:Obj0E_Indexo
		addq.b	#2,routine(a0)
		move.w	#$148,8(a0)
		move.w	#$C4,$A(a0) ; 'Ä'
		move.l	#Map_Obj0E,4(a0)
		move.w	#$4200,2(a0)
		move.b	#1,$18(a0)
		move.b	#$1D,$1F(a0)
		tst.b	$1A(a0)
		beq.s	loc_B3D0
		move.w	#$FC,8(a0) ; 'ü'
		move.w	#$CC,$A(a0) ; 'Ì'
		move.w	#$2200,2(a0)

loc_B3D0:				; CODE XREF: ROM:0000B3BCj
					; DATA XREF: ROM:0000B388o
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		subq.b	#1,$1F(a0)
		bpl.s	locret_B3E2
		addq.b	#2,routine(a0)
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_B3E2:				; CODE XREF: ROM:0000B3D8j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B3E4:				; DATA XREF: ROM:0000B38Ao
		subi.w	#8,$A(a0)
		cmpi.w	#$96,$A(a0) ; ''
		bne.s	loc_B3F6
		addq.b	#2,routine(a0)

loc_B3F6:				; CODE XREF: ROM:0000B3F0j
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B3FA:				; DATA XREF: ROM:0000B38Co
		bra.w	DisplaySprite
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 0F - Mappings test?
; ---------------------------------------------------------------------------

Obj0F:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj0F_Index(pc,d0.w),d1
		jsr	Obj0F_Index(pc,d1.w)
		bra.w	DisplaySprite
; ===========================================================================
Obj0F_Index:	dc.w loc_B416-Obj0F_Index
		dc.w loc_B438-Obj0F_Index
		dc.w loc_B438-Obj0F_Index
; ===========================================================================

loc_B416:
		addq.b	#2,routine(a0)
		move.w	#$90,8(a0)
		move.w	#$90,$A(a0)
		move.l	#Map_Obj0F,4(a0)
		move.w	#$680,2(a0)
		bsr.w	Adjust2PArtPointer

loc_B438:
		move.b	($FFFFF605).w,d0
		btst	#5,d0		; has C been pressed?
		beq.s	loc_B44C	; if not, branch
		addq.b	#1,$1A(a0)	; increment mappings
		andi.b	#$F,$1A(a0)	; if above $F, reset

loc_B44C:
		btst	#4,d0		; has B been pressed?
		beq.s	locret_B458	; if not, branch
		bchg	#0,($FFFFFFE9).w	; set unused variable... which crashes the game?

locret_B458:
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj0F:	dc.w word_B47A-Map_Obj0F ; DATA	XREF: ROM:0000B426o
					; ROM:Map_Obj0Fo ...
		dc.w word_B484-Map_Obj0F
		dc.w word_B48E-Map_Obj0F
		dc.w word_B498-Map_Obj0F
		dc.w word_B4A2-Map_Obj0F
		dc.w word_B4AC-Map_Obj0F
		dc.w word_B4B6-Map_Obj0F
		dc.w word_B4C0-Map_Obj0F
		dc.w word_B4CA-Map_Obj0F
		dc.w word_B4D4-Map_Obj0F
		dc.w word_B4DE-Map_Obj0F
		dc.w word_B4E8-Map_Obj0F
		dc.w word_B4F2-Map_Obj0F
		dc.w word_B4FC-Map_Obj0F
		dc.w word_B506-Map_Obj0F
		dc.w word_B510-Map_Obj0F
word_B47A:	dc.w 1			; DATA XREF: ROM:Map_Obj0Fo
		dc.w	 0,    0,    0,	   0; 0
word_B484:	dc.w 1			; DATA XREF: ROM:0000B45Co
		dc.w	 1,    0,    0,	   0; 0
word_B48E:	dc.w 1			; DATA XREF: ROM:0000B45Eo
		dc.w	 2,    0,    0,	   0; 0
word_B498:	dc.w 1			; DATA XREF: ROM:0000B460o
		dc.w	 3,    0,    0,	   0; 0
word_B4A2:	dc.w 1			; DATA XREF: ROM:0000B462o
		dc.w	 4,    0,    0,	   0; 0
word_B4AC:	dc.w 1			; DATA XREF: ROM:0000B464o
		dc.w	 5,    0,    0,	   0; 0
word_B4B6:	dc.w 1			; DATA XREF: ROM:0000B466o
		dc.w	 6,    0,    0,	   0; 0
word_B4C0:	dc.w 1			; DATA XREF: ROM:0000B468o
		dc.w	 7,    0,    0,	   0; 0
word_B4CA:	dc.w 1			; DATA XREF: ROM:0000B46Ao
		dc.w	 8,    0,    0,	   0; 0
word_B4D4:	dc.w 1			; DATA XREF: ROM:0000B46Co
		dc.w	 9,    0,    0,	   0; 0
word_B4DE:	dc.w 1			; DATA XREF: ROM:0000B46Eo
		dc.w	$A,    0,    0,	   0; 0
word_B4E8:	dc.w 1			; DATA XREF: ROM:0000B470o
		dc.w	$B,    0,    0,	   0; 0
word_B4F2:	dc.w 1			; DATA XREF: ROM:0000B472o
		dc.b   0, $C,  0,  0	; 0
		dc.b   0,  0,  0,  0	; 4
word_B4FC:	dc.w 1			; DATA XREF: ROM:0000B474o
		dc.b   0, $D,  0,  0	; 0
		dc.b   0,  0,  0,  0	; 4
word_B506:	dc.w 1			; DATA XREF: ROM:0000B476o
		dc.w	$E,    0,    0,	   0; 0
word_B510:	dc.w 1			; DATA XREF: ROM:0000B478o
		dc.w	$F,    0,    0,	   0; 0
off_B51A:	dc.w byte_B51C-off_B51A	; DATA XREF: ROM:off_B51Ao
byte_B51C:	dc.b   7,  0,  1,  2,  3,  4,  5,  6; 0	; DATA XREF: ROM:off_B51Ao
		dc.b   7,$FE,  2,  0	; 8
off_B528:	dc.w byte_B52A-off_B528	; DATA XREF: ROM:off_B528o
byte_B52A:	dc.b $1F,  0,  1,$FF	; 0 ; DATA XREF: ROM:off_B528o
Map_S1Obj0F:	dc.w word_B536-Map_S1Obj0F ; DATA XREF:	ROM:Map_S1Obj0Fo
					; ROM:0000B530o ...
					; leftover from	Sonic 1
		dc.w word_B538-Map_S1Obj0F ; leftover from Sonic 1
		dc.w word_B56A-Map_S1Obj0F ; leftover from Sonic 1
		dc.w word_B65C-Map_S1Obj0F ; leftover from Sonic 1
word_B536:	dc.w 0			; DATA XREF: ROM:Map_S1Obj0Fo
word_B538:	dc.w 6			; DATA XREF: ROM:0000B530o
		dc.w	$C,  $F0,  $78,	   0; 0
		dc.w	 0,  $F3,  $79,	 $20; 4
		dc.w	 0,  $F3,  $79,	 $30; 8
		dc.w	$C,  $F4,  $7A,	 $38; 12
		dc.w	 8,  $F8,  $7C,	 $60; 16
		dc.w	 8,  $FB,  $7D,	 $78; 20
word_B56A:	dc.w $1E		; DATA XREF: ROM:0000B532o
		dc.w $B80F,    0,    0,$FF80; 0
		dc.w $B80F,    0,    0,$FF80; 4
		dc.w $B80F,    0,    0,$FF80; 8
		dc.w $B80F,    0,    0,$FF80; 12
		dc.w $B80F,    0,    0,$FF80; 16
		dc.w $B80F,    0,    0,$FF80; 20
		dc.w $B80F,    0,    0,$FF80; 24
		dc.w $B80F,    0,    0,$FF80; 28
		dc.w $B80F,    0,    0,$FF80; 32
		dc.w $B80F,    0,    0,$FF80; 36
		dc.w $D80F,    0,    0,$FF80; 40
		dc.w $D80F,    0,    0,$FF80; 44
		dc.w $D80F,    0,    0,$FF80; 48
		dc.w $D80F,    0,    0,$FF80; 52
		dc.w $D80F,    0,    0,$FF80; 56
		dc.w $D80F,    0,    0,$FF80; 60
		dc.w $D80F,    0,    0,$FF80; 64
		dc.w $D80F,    0,    0,$FF80; 68
		dc.w $D80F,    0,    0,$FF80; 72
		dc.w $D80F,    0,    0,$FF80; 76
		dc.w $F80F,    0,    0,$FF80; 80
		dc.w $F80F,    0,    0,$FF80; 84
		dc.w $F80F,    0,    0,$FF80; 88
		dc.w $F80F,    0,    0,$FF80; 92
		dc.w $F80F,    0,    0,$FF80; 96
		dc.w $F80F,    0,    0,$FF80; 100
		dc.w $F80F,    0,    0,$FF80; 104
		dc.w $F80F,    0,    0,$FF80; 108
		dc.w $F80F,    0,    0,$FF80; 112
		dc.w $F80F,    0,    0,$FF80; 116
word_B65C:	dc.w 1			; DATA XREF: ROM:0000B534o
		dc.w $FC04,    0,    0,$FFF8; 0
Map_Obj0E:	dc.w word_B66A-Map_Obj0E ; DATA	XREF: ROM:0000B39Eo
					; ROM:Map_Obj0Eo ...
		dc.w word_B6C4-Map_Obj0E
word_B66A:	dc.w $B			; DATA XREF: ROM:Map_Obj0Eo
		dc.w $D40D,    0,    0,$FFD8; 0
		dc.w $CC0E,    8,    4,$FFF8; 4
		dc.w $CC07,  $14,   $A,	 $18; 8
		dc.w $E40F,  $1C,   $E,$FFE0; 12
		dc.w $E40B,  $2C,  $16,	   0; 16
		dc.w $EC07,  $38,  $1C,	 $18; 20
		dc.w  $40F,  $40,  $20,$FFD8; 24
		dc.w  $40F,  $50,  $28,$FFF8; 28
		dc.w  $C06,  $60,  $30,	 $18; 32
		dc.w $2404,  $66,  $33,$FFE8; 36
		dc.w $240D,  $68,  $34,$FFF8; 40
word_B6C4:	dc.w $A			; DATA XREF: ROM:0000B668o
		dc.w $DC06,  $70,  $38,$FFEC; 0
		dc.w $F40F,  $76,  $3B,$FFD4; 4
		dc.w $F40F,  $86,  $43,$FFF4; 8
		dc.w $E409,  $96,  $4B,$FFFC; 12
		dc.w $DC0B,  $9C,  $4E,	 $14; 16
		dc.w $FC08,  $A8,  $54,	 $14; 20
		dc.w  $405,  $AB,  $55,	 $14; 24
		dc.w $1404,  $AF,  $57,$FFD4; 28
		dc.w $140D,  $B1,  $58,$FFE4; 32
		dc.w $140D,  $B9,  $5C,	   4; 36
		dc.w $4E71		; 40
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 2B - GHZ Chopper Badnik
;----------------------------------------------------

Obj2B:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj2B_Index(pc,d0.w),d1
		jsr	Obj2B_Index(pc,d1.w)
		bra.w	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj2B_Index:	dc.w loc_B72E-Obj2B_Index ; DATA XREF: ROM:Obj2B_Indexo
					; ROM:0000B72Co
		dc.w loc_B768-Obj2B_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B72E:				; DATA XREF: ROM:Obj2B_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj2B,4(a0)
		move.w	#$470,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#9,$20(a0)
		move.b	#$10,$19(a0)
		move.w	#$F900,$12(a0)
		move.w	$C(a0),$30(a0)

loc_B768:				; DATA XREF: ROM:0000B72Co
		lea	(Ani_Obj2B).l,a1
		bsr.w	AnimateSprite
		bsr.w	ObjectMove
		addi.w	#$18,$12(a0)
		move.w	$30(a0),d0
		cmp.w	$C(a0),d0
		bcc.s	loc_B790
		move.w	d0,$C(a0)
		move.w	#$F900,$12(a0)

loc_B790:				; CODE XREF: ROM:0000B784j
		move.b	#1,$1C(a0)
		subi.w	#$C0,d0	; 'À'
		cmp.w	$C(a0),d0
		bcc.s	locret_B7B2
		move.b	#0,$1C(a0)
		tst.w	$12(a0)
		bmi.s	locret_B7B2
		move.b	#2,$1C(a0)

locret_B7B2:				; CODE XREF: ROM:0000B79Ej
					; ROM:0000B7AAj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj2B:	dc.w byte_B7BA-Ani_Obj2B ; DATA	XREF: ROM:loc_B768o
					; ROM:Ani_Obj2Bo ...
		dc.w byte_B7BE-Ani_Obj2B
		dc.w byte_B7C2-Ani_Obj2B
byte_B7BA:	dc.b   7,  0,  1,$FF	; 0 ; DATA XREF: ROM:Ani_Obj2Bo
byte_B7BE:	dc.b   3,  0,  1,$FF	; 0 ; DATA XREF: ROM:0000B7B6o
byte_B7C2:	dc.b   7,  0,$FF,  0	; 0 ; DATA XREF: ROM:0000B7B8o
Map_Obj2B:	dc.w word_B7CA-Map_Obj2B ; DATA	XREF: ROM:0000B732o
					; ROM:Map_Obj2Bo ...
		dc.w word_B7D4-Map_Obj2B
word_B7CA:	dc.w 1			; DATA XREF: ROM:Map_Obj2Bo
		dc.w $F00F,    0,    0,$FFF0; 0
word_B7D4:	dc.w 1			; DATA XREF: ROM:0000B7C8o
		dc.w $F00F,  $10,    8,$FFF0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 2C - LZ Jaws Badnik
;----------------------------------------------------

Obj2C:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj2C_Index(pc,d0.w),d1
		jmp	Obj2C_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj2C_Index:	dc.w loc_B7F0-Obj2C_Index ; DATA XREF: ROM:Obj2C_Indexo
					; ROM:0000B7EEo
		dc.w loc_B842-Obj2C_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B7F0:				; DATA XREF: ROM:Obj2C_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj2C,4(a0)
		move.w	#$2486,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#$A,$20(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		moveq	#0,d0
		move.b	$28(a0),d0
		lsl.w	#6,d0
		subq.w	#1,d0
		move.w	d0,$30(a0)
		move.w	d0,$32(a0)
		move.w	#$FFC0,$10(a0)
		btst	#0,$22(a0)
		beq.s	loc_B842
		neg.w	$10(a0)

loc_B842:				; CODE XREF: ROM:0000B83Cj
					; DATA XREF: ROM:0000B7EEo
		subq.w	#1,$30(a0)
		bpl.s	loc_B85E
		move.w	$32(a0),$30(a0)
		neg.w	$10(a0)
		bchg	#0,$22(a0)
		move.b	#1,$1D(a0)

loc_B85E:				; CODE XREF: ROM:0000B846j
		lea	(Ani_Obj2C).l,a1
		bsr.w	AnimateSprite
		bsr.w	ObjectMove
		bra.w	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj2C:	dc.b   0,  2,  7,  0,  1,  2,  3,$FF; 0	; DATA XREF: ROM:loc_B85Eo
Map_Obj2C:	dc.w word_B880-Map_Obj2C ; DATA	XREF: ROM:0000B7F4o
					; ROM:Map_Obj2Co ...
		dc.w word_B892-Map_Obj2C
		dc.w word_B8A4-Map_Obj2C
		dc.w word_B8B6-Map_Obj2C
word_B880:	dc.w 2			; DATA XREF: ROM:Map_Obj2Co
		dc.w $F40E,    0,    0,$FFF0; 0
		dc.w $F505,  $18,   $C,	 $10; 4
word_B892:	dc.w 2			; DATA XREF: ROM:0000B87Ao
		dc.w $F40E,   $C,    6,$FFF0; 0
		dc.w $F505,  $1C,   $E,	 $10; 4
word_B8A4:	dc.w 2			; DATA XREF: ROM:0000B87Co
		dc.w $F40E,    0,    0,$FFF0; 0
		dc.w $F505,$1018,$100C,	 $10; 4
word_B8B6:	dc.w 2			; DATA XREF: ROM:0000B87Eo
		dc.w $F40E,   $C,    6,$FFF0; 0
		dc.w $F505,$101C,$100E,	 $10; 4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 34 - leftover Sonic 1 title cards
;----------------------------------------------------

Obj34:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj34_Index(pc,d0.w),d1
		jmp	Obj34_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj34_Index:	dc.w Obj34_CheckLZ4-Obj34_Index; 0 ; DATA XREF:	ROM:Obj34_Indexo
					; ROM:Obj34_Index+2o ...
		dc.w Obj34_CheckPos-Obj34_Index; 1
		dc.w Obj34_Wait-Obj34_Index; 2
		dc.w Obj34_Wait-Obj34_Index; 3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj34_CheckLZ4:				; DATA XREF: ROM:Obj34_Indexo
		movea.l	a0,a1
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		cmpi.w	#$103,(Current_ZoneAndAct).w
		bne.s	Obj34_CheckFZ
		moveq	#5,d0

Obj34_CheckFZ:				; CODE XREF: ROM:0000B8ECj
		move.w	d0,d2
		cmpi.w	#$502,(Current_ZoneAndAct).w
		bne.s	Obj34_CheckConfig
		moveq	#6,d0
		moveq	#$B,d2

Obj34_CheckConfig:			; CODE XREF: ROM:0000B8F8j
		lea	(Obj34_Config).l,a3
		lsl.w	#4,d0
		adda.w	d0,a3
		lea	(Obj34_ItemData).l,a2
		moveq	#3,d1

Obj34_Loop:				; CODE XREF: ROM:0000B976j
		move.b	#$34,0(a1) ; '4'
		move.w	(a3),8(a1)
		move.w	(a3)+,$32(a1)
		move.w	(a3)+,$30(a1)
		move.w	(a2)+,$A(a1)
		move.b	(a2)+,routine(a1)
		move.b	(a2)+,d0
		bne.s	Obj34_ActNumber
		move.b	d2,d0

Obj34_ActNumber:			; CODE XREF: ROM:0000B92Cj
		cmpi.b	#7,d0
		bne.s	Obj34_MakeSprite
		add.b	(Current_Act).w,d0
		cmpi.b	#3,(Current_Act).w
		bne.s	Obj34_MakeSprite
		subq.b	#1,d0

Obj34_MakeSprite:			; CODE XREF: ROM:0000B934j
					; ROM:0000B940j
		move.b	d0,$1A(a1)
		move.l	#Map_Obj34,4(a1)
		move.w	#$8580,2(a1)
		bsr.w	Adjust2PArtPointer2
		move.b	#$78,$19(a1) ; 'x'
		move.b	#0,1(a1)
		move.b	#0,$18(a1)
		move.w	#$3C,$1E(a1) ; '<'
		lea	$40(a1),a1
		dbf	d1,Obj34_Loop

Obj34_CheckPos:				; DATA XREF: ROM:Obj34_Indexo
		moveq	#$10,d1
		move.w	$30(a0),d0
		cmp.w	8(a0),d0
		beq.s	loc_B98E
		bge.s	Obj34_Move
		neg.w	d1

Obj34_Move:				; CODE XREF: ROM:0000B986j
		add.w	d1,8(a0)

loc_B98E:				; CODE XREF: ROM:0000B984j
		move.w	8(a0),d0
		bmi.s	Obj34_NoDisplay
		cmpi.w	#$200,d0
		bcc.s	Obj34_NoDisplay
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj34_NoDisplay:			; CODE XREF: ROM:0000B992j
					; ROM:0000B998j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj34_Wait:				; DATA XREF: ROM:Obj34_Indexo
		tst.w	$1E(a0)
		beq.s	Obj34_CheckPos2
		subq.w	#1,$1E(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj34_CheckPos2:			; CODE XREF: ROM:0000B9A6j
		tst.b	1(a0)
		bpl.s	Obj34_ChangeArt
		moveq	#$20,d1	; ' '
		move.w	$32(a0),d0
		cmp.w	8(a0),d0
		beq.s	Obj34_ChangeArt
		bge.s	Obj34_Move2
		neg.w	d1

Obj34_Move2:				; CODE XREF: ROM:0000B9C4j
		add.w	d1,8(a0)
		move.w	8(a0),d0
		bmi.s	Obj34_NoDisplay2
		cmpi.w	#$200,d0
		bcc.s	Obj34_NoDisplay2
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj34_NoDisplay2:			; CODE XREF: ROM:0000B9D0j
					; ROM:0000B9D6j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj34_ChangeArt:			; CODE XREF: ROM:0000B9B6j
					; ROM:0000B9C2j
		cmpi.b	#4,routine(a0)
		bne.s	Obj34_Delete
		moveq	#2,d0
		jsr	(LoadPLC).l
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		addi.w	#$15,d0
		jsr	(LoadPLC).l

Obj34_Delete:				; CODE XREF: ROM:0000B9E6j
		bra.w	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj34_ItemData:	dc.w $D0		; DATA XREF: ROM:0000B908o
		dc.b   2,  0		; 0
		dc.w $E4
		dc.b   2,  6		; 0
		dc.w $EA
		dc.b   2,  7		; 0
		dc.w $E0
		dc.b   2, $A		; 0
Obj34_Config:	dc.w	 0, $120,$FEFC,	$13C, $414, $154, $214,	$154; 0
					; DATA XREF: ROM:Obj34_CheckConfigo
		dc.w	 0, $120,$FEF4,	$134, $40C, $14C, $20C,	$14C; 8
		dc.w	 0, $120,$FEE0,	$120, $3F8, $138, $1F8,	$138; 16
		dc.w	 0, $120,$FEFC,	$13C, $414, $154, $214,	$154; 24
		dc.w	 0, $120,$FF04,	$144, $41C, $15C, $21C,	$15C; 32
		dc.w	 0, $120,$FF04,	$144, $41C, $15C, $21C,	$15C; 40
		dc.w	 0, $120,$FEE4,	$124, $3EC, $3EC, $1EC,	$12C; 48
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 39 - Game over	/ time over
;----------------------------------------------------

Obj39:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj39_Index(pc,d0.w),d1
		jmp	Obj39_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj39_Index:	dc.w loc_BA98-Obj39_Index ; DATA XREF: ROM:Obj39_Indexo
					; ROM:0000BA94o ...
		dc.w loc_BADC-Obj39_Index
		dc.w loc_BAFE-Obj39_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BA98:				; DATA XREF: ROM:Obj39_Indexo
		tst.l	(Plc_Buffer).w
		beq.s	loc_BAA0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BAA0:				; CODE XREF: ROM:0000BA9Cj
		addq.b	#2,routine(a0)
		move.w	#$50,8(a0) ; 'P'
		btst	#0,$1A(a0)
		beq.s	loc_BAB8
		move.w	#$1F0,8(a0)

loc_BAB8:				; CODE XREF: ROM:0000BAB0j
		move.w	#$F0,$A(a0) ; 'ğ'
		move.l	#Map_Obj39,4(a0)
		move.w	#$855E,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#0,1(a0)
		move.b	#0,$18(a0)

loc_BADC:				; DATA XREF: ROM:0000BA94o
		moveq	#$10,d1
		cmpi.w	#$120,8(a0)
		beq.s	loc_BAF2
		bcs.s	loc_BAEA
		neg.w	d1

loc_BAEA:				; CODE XREF: ROM:0000BAE6j
		add.w	d1,8(a0)
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BAF2:				; CODE XREF: ROM:0000BAE4j
		move.w	#$2D0,$1E(a0)
		addq.b	#2,routine(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BAFE:				; DATA XREF: ROM:0000BA96o
		move.b	($FFFFF605).w,d0
		andi.b	#$70,d0	; 'p'
		bne.s	loc_BB1E
		btst	#0,$1A(a0)
		bne.s	loc_BB42
		tst.w	$1E(a0)
		beq.s	loc_BB1E
		subq.w	#1,$1E(a0)
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BB1E:				; CODE XREF: ROM:0000BB06j
					; ROM:0000BB14j
		tst.b	($FFFFFE1A).w
		bne.s	loc_BB38
		move.b	#GameModeID_ContinueScreen,(Game_Mode).w
		tst.b	($FFFFFE18).w
		bne.s	loc_BB42
		move.b	#GameModeID_SegaScreen,(Game_Mode).w
		bra.s	loc_BB42
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BB38:				; CODE XREF: ROM:0000BB22j
		clr.l	($FFFFFE38).w
		move.w	#1,($FFFFFE02).w

loc_BB42:				; CODE XREF: ROM:0000BB0Ej
					; ROM:0000BB2Ej ...
		bra.w	DisplaySprite
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 3A - End of level results screen
; ---------------------------------------------------------------------------

Obj3A:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj3A_Index(pc,d0.w),d1
		jmp	Obj3A_Index(pc,d1.w)
; ===========================================================================
Obj3A_Index:	dc.w Obj3A_ChkPLC-Obj3A_Index
		dc.w Obj3A_ChkPos-Obj3A_Index
		dc.w Obj3A_Wait-Obj3A_Index
		dc.w Obj3A_NextLevel-Obj3A_Index
; ===========================================================================
; loc_BB5C:
Obj3A_ChkPLC:
		tst.l	(Plc_Buffer).w
		beq.s	Obj3A_Config
		rts
; ---------------------------------------------------------------------------
; loc_BB64:
Obj3A_Config:
		movea.l	a0,a1
		lea	(Obj3A_Conf).l,a2
		moveq	#6,d1
; loc_BB6E:
Obj3A_Init:
		move.b	#$3A,0(a1)
		move.w	(a2),8(a1)
		move.w	(a2)+,$32(a1)
		move.w	(a2)+,$30(a1)
		move.w	(a2)+,$A(a1)
		move.b	(a2)+,routine(a1)
		move.b	(a2)+,d0
		cmpi.b	#6,d0
		bne.s	loc_BB94
		add.b	(Current_Act).w,d0

loc_BB94:
		move.b	d0,$1A(a1)
		move.l	#Map_Obj3A,4(a1)
		move.w	#$8580,2(a1)
		bsr.w	Adjust2PArtPointer2
		move.b	#0,1(a1)
		lea	$40(a1),a1
		dbf	d1,Obj3A_Init
; loc_BBB8:
Obj3A_ChkPos:
		moveq	#$10,d1
		move.w	$30(a0),d0
		cmp.w	8(a0),d0
		beq.s	loc_BBEA
		bge.s	Obj3A_Move
		neg.w	d1
; loc_BBC8:
Obj3A_Move
		add.w	d1,8(a0)

loc_BBCC:
		move.w	8(a0),d0
		bmi.s	locret_BBDE
		cmpi.w	#$200,d0
		bcc.s	locret_BBDE
		rts
; ---------------------------------------------------------------------------
		bra.w	DisplaySprite
; ===========================================================================

locret_BBDE:
		rts
; ===========================================================================

loc_BBE0:
		move.b	#$E,routine(a0)
		bra.w	loc_BCF8
; ===========================================================================

loc_BBEA:
		cmpi.b	#$E,($FFFFB700+routine).w
		beq.s	loc_BBE0
		cmpi.b	#4,$1A(a0)
		bne.s	loc_BBCC
		addq.b	#2,routine(a0)
		move.w	#$B4,$1E(a0)
; loc_BC04:
Obj3A_Wait:
		subq.w	#1,$1E(a0)
		bne.s	locret_BC0E
		addq.b	#2,routine(a0)

locret_BC0E:
		rts
; ---------------------------------------------------------------------------
		bra.w	DisplaySprite
; ===========================================================================
; Obj3A_TimeBonus:
		bsr.w	DisplaySprite
		move.b	#1,($FFFFF7D6).w
		moveq	#0,d0
		tst.w	($FFFFF7D2).w
		beq.s	Obj3A_RingBonus
		addi.w	#$A,d0
		subi.w	#$A,($FFFFF7D2).w
; loc_BC30:
Obj3A_RingBonus:
		tst.w	($FFFFF7D4).w
		beq.s	Obj3A_ChkBonus
		addi.w	#$A,d0
		subi.w	#$A,($FFFFF7D4).w
; loc_BC40:
Obj3A_ChkBonus:
		tst.w	d0
		bne.s	Obj3A_AddBonus
		move.w	#$C5,d0
		jsr	(PlaySound_Special).l
		addq.b	#2,routine(a0)
		cmpi.w	#$501,(Current_ZoneAndAct).w
		bne.s	Obj3A_SetDelay
		addq.b	#4,routine(a0)
; loc_BC5E:
Obj3A_SetDelay:
		move.w	#$B4,$1E(a0)

locret_BC64:
		rts
; ===========================================================================
; loc_BC66:
Obj3A_AddBonus:
		jsr	(AddPoints).l
		move.b	($FFFFFE0F).w,d0
		andi.b	#3,d0
		bne.s	locret_BC64
		move.w	#$CD,d0
		jmp	(PlaySound_Special).l
; ===========================================================================
; loc_BC80:
Obj3A_NextLevel:
		move.b	(Current_Zone).w,d0
		andi.w	#7,d0
		lsl.w	#3,d0
		move.b	(Current_Act).w,d1
		andi.w	#3,d1
		add.w	d1,d1
		add.w	d1,d0
		move.w	LevelOrder(pc,d0.w),d0
		move.w	d0,(Current_ZoneAndAct).w
		tst.w	d0
		bne.s	Obj3A_ChkSS
		move.b	#GameModeID_SegaScreen,(Game_Mode).w
		bra.s	locret_BCC2
; ===========================================================================
; loc_BCAA:
Obj3A_ChkSS:
		clr.b	($FFFFFE30).w
		tst.b	($FFFFF7CD).w
		beq.s	loc_BCBC
		move.b	#GameModeID_SpecialStage,(Game_Mode).w
		bra.s	locret_BCC2
; ===========================================================================

loc_BCBC:
		move.w	#1,($FFFFFE02).w

locret_BCC2:
		rts
; ---------------------------------------------------------------------------
		bra.w	DisplaySprite
; ===========================================================================
LevelOrder:	dc.w	 1,    2, $200,	   0; 0
		dc.w  $101, $102, $300,	$502; 4
		dc.w  $201, $202, $400,	   0; 8
		dc.w  $301, $302, $500,	   0; 12
		dc.w  $401, $402, $100,	   0; 16
		dc.w  $501, $103,    0,	   0; 20
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCF8:				; CODE XREF: ROM:0000BBE6j
		moveq	#$20,d1	; ' '
		move.w	$32(a0),d0
		cmp.w	8(a0),d0
		beq.s	loc_BD1E
		bge.s	loc_BD08
		neg.w	d1

loc_BD08:				; CODE XREF: ROM:0000BD04j
		add.w	d1,8(a0)
		move.w	8(a0),d0
		bmi.s	locret_BD1C
		cmpi.w	#$200,d0
		bcc.s	locret_BD1C
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_BD1C:				; CODE XREF: ROM:0000BD10j
					; ROM:0000BD16j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BD1E:				; CODE XREF: ROM:0000BD02j
		cmpi.b	#4,$1A(a0)
		bne.w	DeleteObject
		addq.b	#2,routine(a0)
		clr.b	($FFFFF7CC).w
		move.w	#$8D,d0	; ''
		jmp	(PlaySound).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		addq.w	#2,($FFFFEECA).w
		cmpi.w	#$2100,($FFFFEECA).w
		beq.w	DeleteObject
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj3A_Conf:	dc.w	 4, $124,  $BC,	$200; 0	; DATA XREF: ROM:0000BB66o
		dc.w $FEE0, $120,  $D0,	$201; 4
		dc.w  $40C, $14C,  $D6,	$206; 8
		dc.w  $520, $120,  $EC,	$202; 12
		dc.w  $540, $120,  $FC,	$203; 16
		dc.w  $560, $120, $10C,	$204; 20
		dc.w  $20C, $14C,  $CC,	$205; 24
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Sonic	1 Object 7E - leftover S1 Special Stage	results
;----------------------------------------------------

S1Obj7E:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	S1Obj7E_Index(pc,d0.w),d1
		jmp	S1Obj7E_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1Obj7E_Index:	dc.w loc_BDA6-S1Obj7E_Index ; DATA XREF: ROM:S1Obj7E_Indexo
					; ROM:0000BD92o ...
		dc.w loc_BE1E-S1Obj7E_Index
		dc.w loc_BE5C-S1Obj7E_Index
		dc.w loc_BE6A-S1Obj7E_Index
		dc.w loc_BE5C-S1Obj7E_Index
		dc.w loc_BEC4-S1Obj7E_Index
		dc.w loc_BE5C-S1Obj7E_Index
		dc.w loc_BECE-S1Obj7E_Index
		dc.w loc_BE5C-S1Obj7E_Index
		dc.w loc_BEC4-S1Obj7E_Index
		dc.w loc_BEF2-S1Obj7E_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BDA6:				; DATA XREF: ROM:S1Obj7E_Indexo
		tst.l	(Plc_Buffer).w
		beq.s	loc_BDAE
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BDAE:				; CODE XREF: ROM:0000BDAAj
		movea.l	a0,a1
		lea	(S1Obj7E_Conf).l,a2
		moveq	#3,d1
		cmpi.w	#$32,($FFFFFE20).w ; '2'
		bcs.s	loc_BDC2
		addq.w	#1,d1

loc_BDC2:				; CODE XREF: ROM:0000BDBEj
					; ROM:0000BDF8j
		move.b	#$7E,0(a1) ; '~'
		move.w	(a2)+,8(a1)
		move.w	(a2)+,$30(a1)
		move.w	(a2)+,$A(a1)
		move.b	(a2)+,routine(a1)
		move.b	(a2)+,$1A(a1)
		move.l	#Map_S1Obj7E,4(a1)
		move.w	#$8580,2(a1)
		bsr.w	Adjust2PArtPointer2
		move.b	#0,1(a1)
		lea	$40(a1),a1
		dbf	d1,loc_BDC2
		moveq	#7,d0
		move.b	($FFFFFE57).w,d1
		beq.s	loc_BE1A
		moveq	#0,d0
		cmpi.b	#6,d1
		bne.s	loc_BE1A
		moveq	#8,d0
		move.w	#$18,8(a0)
		move.w	#$118,$30(a0)

loc_BE1A:				; CODE XREF: ROM:0000BE02j
					; ROM:0000BE0Aj
		move.b	d0,$1A(a0)

loc_BE1E:				; DATA XREF: ROM:0000BD92o
		moveq	#$10,d1
		move.w	$30(a0),d0
		cmp.w	8(a0),d0
		beq.s	loc_BE44
		bge.s	loc_BE2E
		neg.w	d1

loc_BE2E:				; CODE XREF: ROM:0000BE2Aj
		add.w	d1,8(a0)

loc_BE32:				; CODE XREF: ROM:0000BE4Aj
		move.w	8(a0),d0
		bmi.s	locret_BE42
		cmpi.w	#$200,d0
		bcc.s	locret_BE42
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_BE42:				; CODE XREF: ROM:0000BE36j
					; ROM:0000BE3Cj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BE44:				; CODE XREF: ROM:0000BE28j
		cmpi.b	#2,$1A(a0)
		bne.s	loc_BE32
		addq.b	#2,routine(a0)
		move.w	#$B4,$1E(a0) ; '´'
		move.b	#$7F,($FFFFB800).w ; ''

loc_BE5C:				; DATA XREF: ROM:0000BD94o
					; ROM:0000BD98o ...
		subq.w	#1,$1E(a0)
		bne.s	loc_BE66
		addq.b	#2,routine(a0)

loc_BE66:				; CODE XREF: ROM:0000BE60j
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BE6A:				; DATA XREF: ROM:0000BD96o
		bsr.w	DisplaySprite
		move.b	#1,($FFFFF7D6).w
		tst.w	($FFFFF7D4).w
		beq.s	loc_BE9C
		subi.w	#$A,($FFFFF7D4).w
		moveq	#$A,d0
		jsr	AddPoints
		move.b	($FFFFFE0F).w,d0
		andi.b	#3,d0
		bne.s	locret_BEC2
		move.w	#$CD,d0	; 'Í'
		jmp	(PlaySound_Special).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BE9C:				; CODE XREF: ROM:0000BE78j
		move.w	#$C5,d0	; 'Å'
		jsr	(PlaySound_Special).l
		addq.b	#2,routine(a0)
		move.w	#$B4,$1E(a0) ; '´'
		cmpi.w	#$32,($FFFFFE20).w ; '2'
		bcs.s	locret_BEC2
		move.w	#$3C,$1E(a0) ; '<'
		addq.b	#4,routine(a0)

locret_BEC2:				; CODE XREF: ROM:0000BE90j
					; ROM:0000BEB6j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BEC4:				; DATA XREF: ROM:0000BD9Ao
					; ROM:0000BDA2o
		move.w	#1,($FFFFFE02).w
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BECE:				; DATA XREF: ROM:0000BD9Eo
		move.b	#4,($FFFFB6DA).w
		move.b	#$14,($FFFFB6C0+routine).w
		move.w	#$BF,d0	; '¿'
		jsr	(PlaySound_Special).l
		addq.b	#2,routine(a0)
		move.w	#$168,$1E(a0)
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BEF2:				; DATA XREF: ROM:0000BDA4o
		move.b	($FFFFFE0F).w,d0
		andi.b	#$F,d0
		bne.s	loc_BF02
		bchg	#0,$1A(a0)

loc_BF02:				; CODE XREF: ROM:0000BEFAj
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1Obj7E_Conf:	dc.w   $20, $120,  $C4,	$200; 0	; DATA XREF: ROM:0000BDB0o
		dc.w  $320, $120, $118,	$201; 4
		dc.w  $360, $120, $128,	$202; 8
		dc.w  $1EC, $11C,  $C4,	$203; 12
		dc.w  $3A0, $120, $138,	$206; 16
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Sonic	1 Object 7F - leftover Sonic 1 SS emeralds
;----------------------------------------------------

S1Obj7F:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	S1Obj7F_Index(pc,d0.w),d1
		jmp	S1Obj7F_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1Obj7F_Index:	dc.w loc_BF4C-S1Obj7F_Index ; DATA XREF: ROM:S1Obj7F_Indexo
					; ROM:0000BF3Eo
		dc.w loc_BFA6-S1Obj7F_Index
word_BF40:	dc.w $110		; DATA XREF: ROM:0000BF4Et
		dc.w $128
		dc.w $F8
		dc.w $140
		dc.w $E0
		dc.w $158
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BF4C:				; DATA XREF: ROM:S1Obj7F_Indexo
		movea.l	a0,a1
		lea	word_BF40(pc),a2
		moveq	#0,d2
		moveq	#0,d1
		move.b	($FFFFFE57).w,d1
		subq.b	#1,d1
		bcs.w	DeleteObject

loc_BF60:				; CODE XREF: ROM:0000BFA2j
		move.b	#$7F,0(a1) ; ''
		move.w	(a2)+,8(a1)
		move.w	#$F0,$A(a1) ; 'ğ'
		lea	($FFFFFE58).w,a3
		move.b	(a3,d2.w),d3
		move.b	d3,$1A(a1)
		move.b	d3,$1C(a1)
		addq.b	#1,d2
		addq.b	#2,routine(a1)
		move.l	#Map_S1Obj7F,4(a1)
		move.w	#$8541,2(a1)
		bsr.w	Adjust2PArtPointer2
		move.b	#0,1(a1)
		lea	$40(a1),a1
		dbf	d1,loc_BF60

loc_BFA6:				; DATA XREF: ROM:0000BF3Eo
		move.b	$1A(a0),d0
		move.b	#6,$1A(a0)
		cmpi.b	#6,d0
		bne.s	loc_BFBC
		move.b	$1C(a0),$1A(a0)

loc_BFBC:				; CODE XREF: ROM:0000BFB4j
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj34:	dc.w word_BFD8-Map_Obj34 ; DATA	XREF: ROM:0000B948o
					; ROM:Map_Obj34o ...
		dc.w word_C022-Map_Obj34
		dc.w word_C06C-Map_Obj34
		dc.w word_C09E-Map_Obj34
		dc.w word_C0E8-Map_Obj34
		dc.w word_C13A-Map_Obj34
		dc.w word_C18C-Map_Obj34
		dc.w word_C1AE-Map_Obj34
		dc.w word_C1C0-Map_Obj34
		dc.w word_C1D2-Map_Obj34
		dc.w word_C1E4-Map_Obj34
		dc.w word_C24E-Map_Obj34
word_BFD8:	dc.w 9			; DATA XREF: ROM:Map_Obj34o
		dc.w $F805,  $18,   $C,$FFB4; 0
		dc.w $F805,  $3A,  $1D,$FFC4; 4
		dc.w $F805,  $10,    8,$FFD4; 8
		dc.w $F805,  $10,    8,$FFE4; 12
		dc.w $F805,  $2E,  $17,$FFF4; 16
		dc.w $F805,  $1C,   $E,	 $14; 20
		dc.w $F801,  $20,  $10,	 $24; 24
		dc.w $F805,  $26,  $13,	 $2C; 28
		dc.w $F805,  $26,  $13,	 $3C; 32
word_C022:	dc.w 9			; DATA XREF: ROM:0000BFC2o
		dc.w $F805,  $26,  $13,$FFBC; 0
		dc.w $F805,    0,    0,$FFCC; 4
		dc.w $F805,    4,    2,$FFDC; 8
		dc.w $F805,  $4A,  $25,$FFEC; 12
		dc.w $F805,  $3A,  $1D,$FFFC; 16
		dc.w $F801,  $20,  $10,	  $C; 20
		dc.w $F805,  $2E,  $17,	 $14; 24
		dc.w $F805,  $42,  $21,	 $24; 28
		dc.w $F805,  $1C,   $E,	 $34; 32
word_C06C:	dc.w 6			; DATA XREF: ROM:0000BFC4o
		dc.w $F805,  $2A,  $15,$FFCF; 0
		dc.w $F805,    0,    0,$FFE0; 4
		dc.w $F805,  $3A,  $1D,$FFF0; 8
		dc.w $F805,    4,    2,	   0; 12
		dc.w $F805,  $26,  $13,	 $10; 16
		dc.w $F805,  $10,    8,	 $20; 20
word_C09E:	dc.w 9			; DATA XREF: ROM:0000BFC6o
		dc.w $F805,  $3E,  $1F,$FFB4; 0
		dc.w $F805,  $42,  $21,$FFC4; 4
		dc.w $F805,    0,    0,$FFD4; 8
		dc.w $F805,  $3A,  $1D,$FFE4; 12
		dc.w $F805,  $26,  $13,	   4; 16
		dc.w $F801,  $20,  $10,	 $14; 20
		dc.w $F805,  $18,   $C,	 $1C; 24
		dc.w $F805,  $1C,   $E,	 $2C; 28
		dc.w $F805,  $42,  $21,	 $3C; 32
word_C0E8:	dc.w $A			; DATA XREF: ROM:0000BFC8o
		dc.w $F805,  $3E,  $1F,$FFAC; 0
		dc.w $F805,  $36,  $1B,$FFBC; 4
		dc.w $F805,  $3A,  $1D,$FFCC; 8
		dc.w $F801,  $20,  $10,$FFDC; 12
		dc.w $F805,  $2E,  $17,$FFE4; 16
		dc.w $F805,  $18,   $C,$FFF4; 20
		dc.w $F805,  $4A,  $25,	 $14; 24
		dc.w $F805,    0,    0,	 $24; 28
		dc.w $F805,  $3A,  $1D,	 $34; 32
		dc.w $F805,   $C,    6,	 $44; 36
word_C13A:	dc.w $A			; DATA XREF: ROM:0000BFCAo
		dc.w $F805,  $3E,  $1F,$FFAC; 0
		dc.w $F805,    8,    4,$FFBC; 4
		dc.w $F805,  $3A,  $1D,$FFCC; 8
		dc.w $F805,    0,    0,$FFDC; 12
		dc.w $F805,  $36,  $1B,$FFEC; 16
		dc.w $F805,    4,    2,	  $C; 20
		dc.w $F805,  $3A,  $1D,	 $1C; 24
		dc.w $F805,    0,    0,	 $2C; 28
		dc.w $F801,  $20,  $10,	 $3C; 32
		dc.w $F805,  $2E,  $17,	 $44; 36
word_C18C:	dc.w 4			; DATA XREF: ROM:0000BFCCo
		dc.w $F805,  $4E,  $27,$FFE0; 0
		dc.w $F805,  $32,  $19,$FFF0; 4
		dc.w $F805,  $2E,  $17,	   0; 8
		dc.w $F805,  $10,    8,	 $10; 12
word_C1AE:	dc.w 2			; DATA XREF: ROM:0000BFCEo
					; ROM:0000C2D4o
		dc.w  $40C,  $53,  $29,$FFEC; 0
		dc.w $F402,  $57,  $2B,	  $C; 4
word_C1C0:	dc.w 2			; DATA XREF: ROM:0000BFD0o
					; ROM:0000C2D6o
		dc.w  $40C,  $53,  $29,$FFEC; 0
		dc.w $F406,  $5A,  $2D,	   8; 4
word_C1D2:	dc.w 2			; DATA XREF: ROM:0000BFD2o
					; ROM:0000C2D8o
		dc.w  $40C,  $53,  $29,$FFEC; 0
		dc.w $F406,  $60,  $30,	   8; 4
word_C1E4:	dc.w $D			; DATA XREF: ROM:0000BFD4o
					; ROM:0000C2D2o
		dc.w $E40C,  $70,  $38,$FFF4; 0
		dc.w $E402,  $74,  $3A,	 $14; 4
		dc.w $EC04,  $77,  $3B,$FFEC; 8
		dc.w $F405,  $79,  $3C,$FFE4; 12
		dc.w $140C,$1870,$1838,$FFEC; 16
		dc.w  $402,$1874,$183A,$FFE4; 20
		dc.w  $C04,$1877,$183B,	   4; 24
		dc.w $FC05,$1879,$183C,	  $C; 28
		dc.w $EC08,  $7D,  $3E,$FFFC; 32
		dc.w $F40C,  $7C,  $3E,$FFF4; 36
		dc.w $FC08,  $7C,  $3E,$FFF4; 40
		dc.w  $40C,  $7C,  $3E,$FFEC; 44
		dc.w  $C08,  $7C,  $3E,$FFEC; 48
word_C24E:	dc.w 5			; DATA XREF: ROM:0000BFD6o
		dc.w $F805,  $14,   $A,$FFDC; 0
		dc.w $F801,  $20,  $10,$FFEC; 4
		dc.w $F805,  $2E,  $17,$FFF4; 8
		dc.w $F805,    0,    0,	   4; 12
		dc.w $F805,  $26,  $13,	 $14; 16
Map_Obj39:	dc.w word_C280-Map_Obj39 ; DATA	XREF: ROM:0000BABEo
					; ROM:Map_Obj39o ...
		dc.w word_C292-Map_Obj39
		dc.w word_C2A4-Map_Obj39
		dc.w word_C2B6-Map_Obj39
word_C280:	dc.w 2			; DATA XREF: ROM:Map_Obj39o
		dc.w $F80D,    0,    0,$FFB8; 0
		dc.w $F80D,    8,    4,$FFD8; 4
word_C292:	dc.w 2			; DATA XREF: ROM:0000C27Ao
		dc.w $F80D,  $14,   $A,	   8; 0
		dc.w $F80D,   $C,    6,	 $28; 4
word_C2A4:	dc.w 2			; DATA XREF: ROM:0000C27Co
		dc.w $F809,  $1C,   $E,$FFC4; 0
		dc.w $F80D,    8,    4,$FFDC; 4
word_C2B6:	dc.w 2			; DATA XREF: ROM:0000C27Eo
		dc.w $F80D,  $14,   $A,	  $C; 0
		dc.w $F80D,   $C,    6,	 $2C; 4
Map_Obj3A:	dc.w word_C2DA-Map_Obj3A ; DATA	XREF: ROM:0000BB98o
					; ROM:Map_Obj3Ao ...
		dc.w word_C31C-Map_Obj3A
		dc.w word_C34E-Map_Obj3A
		dc.w word_C380-Map_Obj3A
		dc.w word_C3BA-Map_Obj3A
		dc.w word_C1E4-Map_Obj3A
		dc.w word_C1AE-Map_Obj3A
		dc.w word_C1C0-Map_Obj3A
		dc.w word_C1D2-Map_Obj3A
word_C2DA:	dc.w 8			; DATA XREF: ROM:Map_Obj3Ao
		dc.w $F805,  $3E,  $1F,$FFB8; 0
		dc.w $F805,  $32,  $19,$FFC8; 4
		dc.w $F805,  $2E,  $17,$FFD8; 8
		dc.w $F801,  $20,  $10,$FFE8; 12
		dc.w $F805,    8,    4,$FFF0; 16
		dc.w $F805,  $1C,   $E,	 $10; 20
		dc.w $F805,    0,    0,	 $20; 24
		dc.w $F805,  $3E,  $1F,	 $30; 28
word_C31C:	dc.w 6			; DATA XREF: ROM:0000C2CAo
		dc.w $F805,  $36,  $1B,$FFD0; 0
		dc.w $F805,    0,    0,$FFE0; 4
		dc.w $F805,  $3E,  $1F,$FFF0; 8
		dc.w $F805,  $3E,  $1F,	   0; 12
		dc.w $F805,  $10,    8,	 $10; 16
		dc.w $F805,   $C,    6,	 $20; 20
word_C34E:	dc.w 6			; DATA XREF: ROM:0000C2CCo
		dc.w $F80D, $14A,  $A5,$FFB0; 0
		dc.w $F801, $162,  $B1,$FFD0; 4
		dc.w $F809, $164,  $B2,	 $18; 8
		dc.w $F80D, $16A,  $B5,	 $30; 12
		dc.w $F704,  $6E,  $37,$FFCD; 16
		dc.w $FF04,$186E,$1837,$FFCD; 20
word_C380:	dc.w 7			; DATA XREF: ROM:0000C2CEo
		dc.w $F80D, $15A,  $AD,$FFB0; 0
		dc.w $F80D,  $66,  $33,$FFD9; 4
		dc.w $F801, $14A,  $A5,$FFF9; 8
		dc.w $F704,  $6E,  $37,$FFF6; 12
		dc.w $FF04,$186E,$1837,$FFF6; 16
		dc.w $F80D,$FFF0,$FBF8,	 $28; 20
		dc.w $F801, $170,  $B8,	 $48; 24
word_C3BA:	dc.w 7			; DATA XREF: ROM:0000C2D0o
		dc.w $F80D, $152,  $A9,$FFB0; 0
		dc.w $F80D,  $66,  $33,$FFD9; 4
		dc.w $F801, $14A,  $A5,$FFF9; 8
		dc.w $F704,  $6E,  $37,$FFF6; 12
		dc.w $FF04,$186E,$1837,$FFF6; 16
		dc.w $F80D,$FFF8,$FBFC,	 $28; 20
		dc.w $F801, $170,  $B8,	 $48; 24
Map_S1Obj7E:	dc.w word_C406-Map_S1Obj7E ; DATA XREF:	ROM:0000BDDCo
					; ROM:Map_S1Obj7Eo ...
		dc.w word_C470-Map_S1Obj7E
		dc.w word_C4A2-Map_S1Obj7E
		; for some reason, this part of the mappings references a PLR list,
		; meaning in order to use macros for it, we need this hackish fix,
		; AND we can't compile it...
		dc.w word_1C1E2+1-Map_S1Obj7E
		dc.w word_C4DC-Map_S1Obj7E
		dc.w word_C4FE-Map_S1Obj7E
		dc.w word_C520-Map_S1Obj7E
		dc.w word_C53A-Map_S1Obj7E
		dc.w word_C59C-Map_S1Obj7E
word_C406:	dc.w $D			; DATA XREF: ROM:Map_S1Obj7Eo
		dc.w $F805,    8,    4,$FF90; 0
		dc.w $F805,  $1C,   $E,$FFA0; 4
		dc.w $F805,    0,    0,$FFB0; 8
		dc.w $F805,  $32,  $19,$FFC0; 12
		dc.w $F805,  $3E,  $1F,$FFD0; 16
		dc.w $F805,  $10,    8,$FFF0; 20
		dc.w $F805,  $2A,  $15,	   0; 24
		dc.w $F805,  $10,    8,	 $10; 28
		dc.w $F805,  $3A,  $1D,	 $20; 32
		dc.w $F805,    0,    0,	 $30; 36
		dc.w $F805,  $26,  $13,	 $40; 40
		dc.w $F805,   $C,    6,	 $50; 44
		dc.w $F805,  $3E,  $1F,	 $60; 48
word_C470:	dc.w 6			; DATA XREF: ROM:0000C3F6o
		dc.w $F80D, $14A,  $A5,$FFB0; 0
		dc.w $F801, $162,  $B1,$FFD0; 4
		dc.w $F809, $164,  $B2,	 $18; 8
		dc.w $F80D, $16A,  $B5,	 $30; 12
		dc.w $F704,  $6E,  $37,$FFCD; 16
		dc.w $FF04,$186E,$1837,$FFCD; 20
word_C4A2:	dc.w 7			; DATA XREF: ROM:0000C3F8o
		dc.w $F80D, $152,  $A9,$FFB0; 0
		dc.w $F80D,  $66,  $33,$FFD9; 4
		dc.w $F801, $14A,  $A5,$FFF9; 8
		dc.w $F704,  $6E,  $37,$FFF6; 12
		dc.w $FF04,$186E,$1837,$FFF6; 16
		dc.w $F80D,$FFF8,$FBFC,	 $28; 20
		dc.w $F801, $170,  $B8,	 $48; 24
word_C4DC:	dc.w 4			; DATA XREF: ROM:0000C3FCo
		dc.w $F80D,$FFD1,$7FC8,$FFB0; 0
		dc.w $F80D,$FFD9,$7FD4,$FFD0; 4
		dc.w $F801,$FFE1,$7FE0,$FFF0; 8
		dc.w $F806,$1FE3,$2FE3,	 $40; 12
word_C4FE:	dc.w 4			; DATA XREF: ROM:0000C3FEo
		dc.w $F80D,$FFD1,$7FC8,$FFB0; 0
		dc.w $F80D,$FFD9,$7FD4,$FFD0; 4
		dc.w $F801,$FFE1,$7FE0,$FFF0; 8
		dc.w $F806,$1FE9,$2FEC,	 $40; 12
word_C520:	dc.w 3			; DATA XREF: ROM:0000C400o
		dc.w $F80D,$FFD1,$7FC8,$FFB0; 0
		dc.w $F80D,$FFD9,$7FD4,$FFD0; 4
		dc.w $F801,$FFE1,$7FE0,$FFF0; 8
word_C53A:	dc.w $C			; DATA XREF: ROM:0000C402o
		dc.w $F805,  $3E,  $1F,$FF9C; 0
		dc.w $F805,  $36,  $1B,$FFAC; 4
		dc.w $F805,  $10,    8,$FFBC; 8
		dc.w $F805,    8,    4,$FFCC; 12
		dc.w $F801,  $20,  $10,$FFDC; 16
		dc.w $F805,    0,    0,$FFE4; 20
		dc.w $F805,  $26,  $13,$FFF4; 24
		dc.w $F805,  $3E,  $1F,	 $14; 28
		dc.w $F805,  $42,  $21,	 $24; 32
		dc.w $F805,    0,    0,	 $34; 36
		dc.w $F805,  $18,   $C,	 $44; 40
		dc.w $F805,  $10,    8,	 $54; 44
word_C59C:	dc.w $F			; DATA XREF: ROM:0000C404o
		dc.w $F805,  $3E,  $1F,$FF88; 0
		dc.w $F805,  $32,  $19,$FF98; 4
		dc.w $F805,  $2E,  $17,$FFA8; 8
		dc.w $F801,  $20,  $10,$FFB8; 12
		dc.w $F805,    8,    4,$FFC0; 16
		dc.w $F805,  $18,   $C,$FFD8; 20
		dc.w $F805,  $32,  $19,$FFE8; 24
		dc.w $F805,  $42,  $21,$FFF8; 28
		dc.w $F805,  $42,  $21,	 $10; 32
		dc.w $F805,  $1C,   $E,	 $20; 36
		dc.w $F805,  $10,    8,	 $30; 40
		dc.w $F805,  $2A,  $15,	 $40; 44
		dc.w $F805,    0,    0,	 $58; 48
		dc.w $F805,  $26,  $13,	 $68; 52
		dc.w $F805,  $26,  $13,	 $78; 56
Map_S1Obj7F:	dc.w word_C624-Map_S1Obj7F ; DATA XREF:	ROM:0000BF86o
					; ROM:Map_S1Obj7Fo ...
		dc.w word_C62E-Map_S1Obj7F
		dc.w word_C638-Map_S1Obj7F
		dc.w word_C642-Map_S1Obj7F
		dc.w word_C64C-Map_S1Obj7F
		dc.w word_C656-Map_S1Obj7F
		dc.w word_C660-Map_S1Obj7F
word_C624:	dc.w 1			; DATA XREF: ROM:Map_S1Obj7Fo
		dc.w $F805,$2004,$2002,$FFF8; 0
word_C62E:	dc.w 1			; DATA XREF: ROM:0000C618o
		dc.w $F805,    0,    0,$FFF8; 0
word_C638:	dc.w 1			; DATA XREF: ROM:0000C61Ao
		dc.w $F805,$4004,$4002,$FFF8; 0
word_C642:	dc.w 1			; DATA XREF: ROM:0000C61Co
		dc.w $F805,$6004,$6002,$FFF8; 0
word_C64C:	dc.w 1			; DATA XREF: ROM:0000C61Eo
		dc.w $F805,$2008,$2004,$FFF8; 0
word_C656:	dc.w 1			; DATA XREF: ROM:0000C620o
		dc.w $F805,$200C,$2006,$FFF8; 0
word_C660:	dc.w 0			; DATA XREF: ROM:0000C622o
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop
;----------------------------------------------------
; Object 36 - Spikes
;----------------------------------------------------

Obj36:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj36_Index(pc,d0.w),d1
		jmp	Obj36_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj36_Index:	dc.w loc_C682-Obj36_Index ; DATA XREF: ROM:Obj36_Indexo
					; ROM:0000C674o
		dc.w loc_C6CE-Obj36_Index
Obj36_Conf:	dc.b   0,$10		; 0 ; DATA XREF: ROM:0000C6B2t
		dc.b   0,$10		; 2
		dc.b   0,$10		; 4
		dc.b   0,$10		; 6
		dc.b   0,$10		; 8
		dc.b   0,$10		; 10
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C682:				; DATA XREF: ROM:Obj36_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj36,4(a0)
		move.w	#$2434,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	$28(a0),d0
		andi.b	#$F,$28(a0)
		andi.w	#$F0,d0	; 'ğ'
		lea	Obj36_Conf(pc),a1
		lsr.w	#3,d0
		adda.w	d0,a1
		move.b	(a1)+,$1A(a0)
		move.b	(a1)+,$19(a0)
		move.w	8(a0),$30(a0)
		move.w	$C(a0),$32(a0)

loc_C6CE:				; DATA XREF: ROM:0000C674o
		bsr.w	sub_C788
		move.w	#4,d2
		cmpi.b	#5,$1A(a0)
		beq.s	loc_C6EA
		cmpi.b	#1,$1A(a0)
		bne.s	loc_C70C
		move.w	#$14,d2

loc_C6EA:				; CODE XREF: ROM:0000C6DCj
		move.w	#$1B,d1
		move.w	d2,d3
		addq.w	#1,d3
		move.w	8(a0),d4
		bsr.w	SolidObject
		btst	#3,$22(a0)
		bne.s	loc_C766
		swap	d6
		andi.w	#3,d6
		bne.s	loc_C736
		bra.s	loc_C766
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C70C:				; CODE XREF: ROM:0000C6E4j
		moveq	#0,d1
		move.b	$19(a0),d1
		addi.w	#$B,d1
		move.w	#$10,d2
		move.w	#$11,d3
		move.w	8(a0),d4
		bsr.w	SolidObject
		btst	#3,$22(a0)
		bne.s	loc_C736
		swap	d6
		andi.w	#$C0,d6	; 'À'
		beq.s	loc_C766

loc_C736:				; CODE XREF: ROM:0000C708j
					; ROM:0000C72Cj
		tst.b	($FFFFFE2D).w
		bne.s	loc_C766
		move.l	a0,-(sp)
		movea.l	a0,a2
		lea	($FFFFB000).w,a0
		cmpi.b	#4,routine(a0)
		bcc.s	loc_C764
		move.l	$C(a0),d3
		move.w	$12(a0),d0
		ext.l	d0
		asl.l	#8,d0
		sub.l	d0,d3
		move.l	d3,$C(a0)
		jsr	HurtSonic

loc_C764:				; CODE XREF: ROM:0000C74Aj
		movea.l	(sp)+,a0

loc_C766:				; CODE XREF: ROM:0000C700j
					; ROM:0000C70Aj ...
		tst.w	(Two_player_mode).w
		beq.s	loc_C770
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C770:				; CODE XREF: ROM:0000C76Aj
		move.w	$30(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_C788:				; CODE XREF: ROM:loc_C6CEp
		moveq	#0,d0
		move.b	$28(a0),d0
		add.w	d0,d0
		move.w	off_C798(pc,d0.w),d1
		jmp	off_C798(pc,d1.w)
; End of function sub_C788

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_C798:	dc.w locret_C79E-off_C798 ; DATA XREF: ROM:off_C798o
					; ROM:0000C79Ao ...
		dc.w loc_C7A0-off_C798
		dc.w loc_C7B4-off_C798
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_C79E:				; DATA XREF: ROM:off_C798o
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C7A0:				; DATA XREF: ROM:0000C79Ao
		bsr.w	sub_C7C8
		moveq	#0,d0
		move.b	$34(a0),d0
		add.w	$32(a0),d0
		move.w	d0,$C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C7B4:				; DATA XREF: ROM:0000C79Co
		bsr.w	sub_C7C8
		moveq	#0,d0
		move.b	$34(a0),d0
		add.w	$30(a0),d0
		move.w	d0,8(a0)
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_C7C8:				; CODE XREF: ROM:loc_C7A0p
					; ROM:loc_C7B4p
		tst.w	$38(a0)
		beq.s	loc_C7E6
		subq.w	#1,$38(a0)
		bne.s	locret_C828
		tst.b	1(a0)
		bpl.s	locret_C828
		move.w	#$B6,d0	; '¶'
		jsr	(PlaySound_Special).l
		bra.s	locret_C828
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C7E6:				; CODE XREF: sub_C7C8+4j
		tst.w	$36(a0)
		beq.s	loc_C808
		subi.w	#$800,$34(a0)
		bcc.s	locret_C828
		move.w	#0,$34(a0)
		move.w	#0,$36(a0)
		move.w	#$3C,$38(a0) ; '<'
		bra.s	locret_C828
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C808:				; CODE XREF: sub_C7C8+22j
		addi.w	#$800,$34(a0)
		cmpi.w	#$2000,$34(a0)
		bcs.s	locret_C828
		move.w	#$2000,$34(a0)
		move.w	#1,$36(a0)
		move.w	#$3C,$38(a0) ; '<'

locret_C828:				; CODE XREF: sub_C7C8+Aj sub_C7C8+10j	...
		rts
; End of function sub_C7C8

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj36:	dc.w word_C836-Map_Obj36 ; DATA	XREF: ROM:0000C686o
					; ROM:Map_Obj36o ...
		dc.w word_C836-Map_Obj36
		dc.w word_C836-Map_Obj36
		dc.w word_C836-Map_Obj36
		dc.w word_C836-Map_Obj36
		dc.w word_C836-Map_Obj36
word_C836:	dc.w 2			; DATA XREF: ROM:Map_Obj36o
					; ROM:0000C82Co ...
		dc.w $F007,    0,    0,$FFF0; 0
		dc.w $F007,    0,    0,	   0; 4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 3B - GHZ Purple Rock
;----------------------------------------------------

Obj3B:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0

loc_C84A:
		move.b	routine(a0),d0
		move.w	Obj3B_Index(pc,d0.w),d1
		jmp	Obj3B_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj3B_Index:	dc.w loc_C85A-Obj3B_Index ; DATA XREF: ROM:Obj3B_Indexo
					; ROM:0000C858o
		dc.w loc_C882-Obj3B_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C85A:				; DATA XREF: ROM:Obj3B_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj3B,4(a0)
		move.w	#$66C0,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$13,$19(a0)
		move.b	#4,$18(a0)

loc_C882:				; DATA XREF: ROM:0000C858o
		move.w	#$1B,d1
		move.w	#$10,d2
		move.w	#$10,d3
		move.w	8(a0),d4
		bsr.w	SolidObject
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj3B:	dc.w word_C8B0-Map_Obj3B ; DATA	XREF: ROM:0000C85Eo
					; ROM:Map_Obj3Bo ...
word_C8B0:	dc.w 2			; DATA XREF: ROM:Map_Obj3Bo
		dc.w $F00B,    0,    0,$FFE8; 0
		dc.w $F00B,   $C,    6,	   0; 4
		dc.w 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 3C - GHZ smashable wall
;----------------------------------------------------

Obj3C:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj3C_Index(pc,d0.w),d1
		jsr	Obj3C_Index(pc,d1.w)
		bra.w	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj3C_Index:	dc.w loc_C8DC-Obj3C_Index ; DATA XREF: ROM:Obj3C_Indexo
					; ROM:0000C8D8o ...
		dc.w loc_C90A-Obj3C_Index
		dc.w loc_C988-Obj3C_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C8DC:				; DATA XREF: ROM:Obj3C_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj3C,4(a0)
		move.w	#$4590,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$10,$19(a0)
		move.b	#4,$18(a0)
		move.b	$28(a0),$1A(a0)

loc_C90A:				; DATA XREF: ROM:0000C8D8o
		move.w	($FFFFB010).w,$30(a0)
		move.w	#$1B,d1
		move.w	#$20,d2	; ' '
		move.w	#$20,d3	; ' '
		move.w	8(a0),d4
		bsr.w	SolidObject
		btst	#5,$22(a0)
		bne.s	loc_C92E

locret_C92C:				; CODE XREF: ROM:0000C938j
					; ROM:0000C946j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C92E:				; CODE XREF: ROM:0000C92Aj
		lea	($FFFFB000).w,a1
		cmpi.b	#2,$1C(a1)
		bne.s	locret_C92C
		move.w	$30(a0),d0
		bpl.s	loc_C942
		neg.w	d0

loc_C942:				; CODE XREF: ROM:0000C93Ej
		cmpi.w	#$480,d0
		bcs.s	locret_C92C
		move.w	$30(a0),$10(a1)
		addq.w	#4,8(a1)
		lea	(Obj3C_FragSpdRight).l,a4
		move.w	8(a0),d0
		cmp.w	8(a1),d0
		bcs.s	loc_C96E
		subi.w	#8,8(a1)
		lea	(Obj3C_FragSpdLeft).l,a4

loc_C96E:				; CODE XREF: ROM:0000C960j
		move.w	$10(a1),$14(a1)
		bclr	#5,$22(a0)
		bclr	#5,$22(a1)
		moveq	#7,d1
		move.w	#$70,d2	; 'p'
		bsr.s	sub_C99E

loc_C988:				; DATA XREF: ROM:0000C8DAo
		bsr.w	ObjectMove
		addi.w	#$70,$12(a0) ; 'p'
		tst.b	1(a0)
		bpl.w	DeleteObject
		bra.w	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_C99E:				; CODE XREF: ROM:0000C986p
		moveq	#0,d0
		move.b	$1A(a0),d0
		add.w	d0,d0
		movea.l	4(a0),a3
		adda.w	(a3,d0.w),a3
		addq.w	#2,a3
		bset	#5,1(a0)
		move.b	0(a0),d4
		move.b	1(a0),d5
		movea.l	a0,a1
		bra.s	loc_C9CA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_C9C2:				; CODE XREF: sub_C99E:loc_CA18j
		bsr.w	SingleObjLoad
		bne.s	loc_CA1C
		addq.w	#8,a3

loc_C9CA:				; CODE XREF: sub_C99E+22j
		move.b	#4,routine(a1)
		move.b	d4,0(a1)
		move.l	a3,4(a1)
		move.b	d5,1(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.w	2(a0),2(a1)
		move.b	$18(a0),$18(a1)
		move.b	$19(a0),$19(a1)
		move.w	(a4)+,$10(a1)
		move.w	(a4)+,$12(a1)
		cmpa.l	a0,a1
		bcc.s	loc_CA18
		move.l	a0,-(sp)
		movea.l	a1,a0
		bsr.w	ObjectMove
		add.w	d2,$12(a0)
		movea.l	(sp)+,a0
		bsr.w	DisplaySprite2

loc_CA18:				; CODE XREF: sub_C99E+66j
		dbf	d1,loc_C9C2

loc_CA1C:				; CODE XREF: sub_C99E+28j
		move.w	#$CB,d0	; 'Ë'
		jmp	(PlaySound_Special).l
; End of function sub_C99E

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj3C_FragSpdRight:dc.w	 $400,$FB00	   ; 0 ; DATA XREF: ROM:0000C952o
		dc.w  $600,$FF00	; 2
		dc.w  $600, $100	; 4
		dc.w  $400, $500	; 6
		dc.w  $600,$FA00	; 8
		dc.w  $800,$FE00	; 10
		dc.w  $800, $200	; 12
		dc.w  $600, $600	; 14
Obj3C_FragSpdLeft:dc.w $FA00,$FA00	  ; 0 ;	DATA XREF: ROM:0000C968o
		dc.w $F800,$FE00	; 2
		dc.w $F800, $200	; 4
		dc.w $FA00, $600	; 6
		dc.w $FC00,$FB00	; 8
		dc.w $FA00,$FF00	; 10
		dc.w $FA00, $100	; 12
		dc.w $FC00, $500	; 14
Map_Obj3C:	dc.w word_CA6C-Map_Obj3C ; DATA	XREF: ROM:0000C8E0o
					; ROM:Map_Obj3Co ...
		dc.w word_CAAE-Map_Obj3C
		dc.w word_CAF0-Map_Obj3C
word_CA6C:	dc.w 8			; DATA XREF: ROM:Map_Obj3Co
		dc.w $E005,    0,    0,$FFF0; 0
		dc.w $F005,    0,    0,$FFF0; 4
		dc.w	 5,    0,    0,$FFF0; 8
		dc.w $1005,    0,    0,$FFF0; 12
		dc.w $E005,    4,    2,	   0; 16
		dc.w $F005,    4,    2,	   0; 20
		dc.w	 5,    4,    2,	   0; 24
		dc.w $1005,    4,    2,	   0; 28
word_CAAE:	dc.w 8			; DATA XREF: ROM:0000CA68o
		dc.w $E005,    4,    2,$FFF0; 0
		dc.w $F005,    4,    2,$FFF0; 4
		dc.w	 5,    4,    2,$FFF0; 8
		dc.w $1005,    4,    2,$FFF0; 12
		dc.w $E005,    4,    2,	   0; 16
		dc.w $F005,    4,    2,	   0; 20
		dc.w	 5,    4,    2,	   0; 24
		dc.w $1005,    4,    2,	   0; 28
word_CAF0:	dc.w 8			; DATA XREF: ROM:0000CA6Ao
		dc.w $E005,    4,    2,$FFF0; 0
		dc.w $F005,    4,    2,$FFF0; 4
		dc.w	 5,    4,    2,$FFF0; 8
		dc.w $1005,    4,    2,$FFF0; 12
		dc.w $E005,    8,    4,	   0; 16
		dc.w $F005,    8,    4,	   0; 20
		dc.w	 5,    8,    4,	   0; 24
		dc.w $1005,    8,    4,	   0; 28
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

; ===========================================================================
; ---------------------------------------------------------------------------
; This runs the code of all the objects that are in Object_RAM
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; ObjectsLoad:
RunObjects:
		lea	($FFFFB000).w,a0
		moveq	#$7F,d7			; run the first $80 objects out of levels
		moveq	#0,d0
		cmpi.b	#6,($FFFFB000+routine).w	; is Sonic dead?
		bcc.s	RunObjectsWhenPlayerIsDead	; if yes, branch

; ---------------------------------------------------------------------------
; This is THE place where each individual object's code gets called from
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_CB44:
RunObject:
		move.b	(a0),d0		; get the object's ID
		beq.s	loc_CB54	; if it's obj00, skip it
		add.w	d0,d0
		add.w	d0,d0	; d0 = object ID * 4
		movea.l	Obj_Index-4(pc,d0.w),a1	; load the address of the object's code
		jsr	(a1)	; dynamic call! to one of the the entries in Obj_Index
		moveq	#0,d0

loc_CB54:
		lea	$40(a0),a0	; load obj address
		dbf	d7,RunObject
		rts
; ---------------------------------------------------------------------------
; this skips certain objects to make enemies and things pause when Sonic dies
; loc_CB5E:
RunObjectsWhenPlayerIsDead:
		moveq	#$1F,d7
		bsr.s	RunObject
		moveq	#$5F,d7

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_CB64:
RunObjectsDisplayOnly:
		moveq	#0,d0
		move.b	(a0),d0		; get the object's ID
		beq.s	loc_CB74	; if it's obj00, skip it
		tst.b	1(a0)		; should we render it?
		bpl.s	loc_CB74	; if not, skip it
		bsr.w	DisplaySprite

loc_CB74:
		lea	$40(a0),a0	; load obj address
		dbf	d7,RunObjectsDisplayOnly
		rts
; End of function RunObjects

; ===========================================================================
; ---------------------------------------------------------------------------
; OBJECT POINTER ARRAY ; object pointers ; sprite pointers ; object list ; sprite list
;
; This array contains the pointers to all the objects used in the game.
; ---------------------------------------------------------------------------
Obj_Index:
		dc.l Obj01		; Sonic
		dc.l Obj02		; Tails
		dc.l Obj03		; Collision plane/layer switcher
		dc.l Obj04		; Surface of the water
		dc.l Obj05		; Tails' tails
		dc.l Obj06		; Twisting spiral pathway in EHZ
		dc.l ObjNull
		dc.l Obj08		; Water splash in HPZ
		dc.l Obj09		; (S1) Sonic in the Speical Stage
		dc.l Obj0A		; Small bubbles from Sonic's face while underwater
		dc.l Obj0B		; (S1) Pole that breaks in LZ
		dc.l Obj0C		; Strange floating/falling platform object from CPZ
		dc.l Obj0D		; End of level signpost
		dc.l Obj0E		; Sonic and Tails from the title screen
		dc.l Obj0F		; Mappings test?
		dc.l Obj10		; (S1) Blank, animation test in prototype
		dc.l Obj11		; Bridges in GHZ, EHZ and HPZ
		dc.l Obj12		; Emerald from Hidden Palace Zone
		dc.l Obj13		; Waterfall from Hidden Palace Zone
		dc.l Obj14		; Seesaw from Hill Top Zone
		dc.l Obj15		; Swinging platforms in GHZ, CPZ and EHZ
		dc.l Obj16		; Diagonally moving lift from HTZ
		dc.l Obj17		; (S1) GHZ rotating log helix spikes
		dc.l Obj18		; Stationary/moving platforms from GHZ and EHZ
		dc.l Obj19		; Platform from CPZ
		dc.l Obj1A		; Collapsing platform from GHZ and HPZ
		dc.l ObjNull
		dc.l Obj1C		; Stage decorations in GHZ, EHZ, HTZ and HPZ
		dc.l ObjNull
		dc.l ObjNull
		dc.l Obj1F		; (S1) Crabmeat from GHZ
		dc.l ObjNull
		dc.l Obj21		; Score/Rings/Time display (HUD)
		dc.l Obj22		; (S1) Buzz Bomber from GHZ
		dc.l Obj23		; (S1) Buzz Bomber/Newtron missile
		dc.l Obj24		; (S1) Unused Buzz Bomber missile explosion
		dc.l Obj25		; A ring
		dc.l Obj26		; Monitor
		dc.l Obj27		; An explosion, giving off an animal and 100 points
		dc.l Obj28		; Animal and the 100 points from a badnik
		dc.l Obj29		; "100 points" text
		dc.l Obj2A		; (S1) Small door from SBZ
		dc.l Obj2B		; (S1) Chopper from GHZ
		dc.l Obj2C		; (S1) Jaws from LZ
		dc.l ObjNull
		dc.l Obj2E		; Monitor contents (code for power-up behavior and rising image)
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l Obj34		; (S1) Level title card
		dc.l ObjNull
		dc.l Obj36		; Vertical spikes
		dc.l Obj37		; Scattering rings (generated when Sonic or Tails are hurt and has rings)
		dc.l Obj38		; Shield
		dc.l Obj39		; Game Over/Time Over text
		dc.l Obj3A		; (S1) End of level results screen
		dc.l Obj3B		; (S1) Purple rock from GHZ
		dc.l Obj3C		; (S1) Breakable wall
		dc.l Obj3D		; (S1) GHZ boss
		dc.l Obj3E		; Egg prison
		dc.l Obj3F		; Boss explosion
		dc.l Obj40		; (S1) Motobug from GHZ
		dc.l Obj41		; Spring
		dc.l Obj42		; (S1) Newtron from GHZ
		dc.l ObjNull
		dc.l Obj44		; (S1) Unbreakable wall
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l Obj48		; (S1) Eggman's wrecking ball
		dc.l Obj49		; Waterfall sound effect
		dc.l Obj4A		; Octus from HPZ
		dc.l Obj4B		; Buzzer from EHZ
		dc.l Obj4C		; BBat from HPZ
		dc.l Obj4D		; Stego/Stegway from HPZ
		dc.l Obj4E		; Gator from HPZ
		dc.l Obj4F		; Redz (dinosaur badnik) from HPZ
		dc.l Obj50		; Seahorse/Aquis from HPZ
		dc.l Obj51		; Skyhorse from HPZ
		dc.l Obj52		; BFish from HPZ
		dc.l Obj53		; Masher from EHZ
		dc.l Obj54		; Snail badnik from EHZ
		dc.l Obj55		; EHZ boss
		dc.l Obj56		; EHZ boss part 2
		dc.l Obj57		; EHZ boss part 3
		dc.l Obj58		; EHZ boss part 4
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l Obj79		; Checkpoint
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l Obj7D		; (S1) Hidden points at end of stage
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l ObjNull
		dc.l Obj8A		; (S1) "SONIC TEAM PRESENTS" screen and credits
		dc.l ObjNull
		dc.l ObjNull
; ===========================================================================
; blank object, allocates its array
; jmp_DeleteObject:
ObjNull:
		bra.w	DeleteObject

; ---------------------------------------------------------------------------
; Subroutine to make an object move and fall downward increasingly fast
; This moves the object horizontally and vertically
; and also applies gravity to its speed
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; ObjectFall:
ObjectMoveAndFall:
		move.l	8(a0),d2	; load x position
		move.l	$C(a0),d3	; load y position
		move.w	$10(a0),d0	; load x speed
		ext.l	d0
		asl.l	#8,d0		; shift velocity to line up with the middle 16 bits of the 32-bit position
		add.l	d0,d2		; add x speed to x position
		move.w	$12(a0),d0	; load y speed
		addi.w	#$38,$12(a0)	; increase vertical speed (apply gravity)
		ext.l	d0
		asl.l	#8,d0		; shift velocity to line up with the middle 16 bits of the 32-bit position
		add.l	d0,d3		; add old y speed to y position
		move.l	d2,8(a0)	; store new x position
		move.l	d3,$C(a0)	; store new y position
		rts
; End of function ObjectMoveAndFall

; ---------------------------------------------------------------------------
; Subroutine translating object speed to update object position
; This moves the object horizontally and vertically
; but does not apply gravity to it
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; SpeedToPos:
ObjectMove:
		move.l	8(a0),d2	; load x position
		move.l	$C(a0),d3	; load y position
		move.w	$10(a0),d0	; load x speed
		ext.l	d0
		asl.l	#8,d0		; shift velocity to line up with the middle 16 bits of the 32-bit position
		add.l	d0,d2		; add x speed to x position
		move.w	$12(a0),d0	; load y speed
		ext.l	d0
		asl.l	#8,d0		; shift velocity to line up with the middle 16 bits of the 32-bit position
		add.l	d0,d3		; add old y speed to y position
		move.l	d2,8(a0)	; store new x position
		move.l	d3,$C(a0)	; store new y position
		rts
; End of function ObjectMove

; ---------------------------------------------------------------------------
; Subroutine to display a sprite/object, when a0 is the object RAM
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


DisplaySprite:
		lea	($FFFFAC00).w,a1
		move.w	$18(a0),d0
		lsr.w	#1,d0
		andi.w	#$380,d0
		adda.w	d0,a1
		cmpi.w	#$7E,(a1)
		bcc.s	locret_CE20
		addq.w	#2,(a1)
		adda.w	(a1),a1
		move.w	a0,(a1)

locret_CE20:
		rts
; End of function DisplaySprite

; ---------------------------------------------------------------------------
; Subroutine to display a sprite/object, when a1 is the object RAM
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; DisplayA1Sprite:
DisplaySprite2:
		lea	($FFFFAC00).w,a2
		move.w	$18(a1),d0
		lsr.w	#1,d0
		andi.w	#$380,d0
		adda.w	d0,a2
		cmpi.w	#$7E,(a2)
		bcc.s	locret_CE3E
		addq.w	#2,(a2)
		adda.w	(a2),a2
		move.w	a1,(a2)

locret_CE3E:
		rts
; End of function DisplaySprite2

; ---------------------------------------------------------------------------
; Subroutine to display a sprite/object, when a0 is the object RAM
; and d0 is already (priority/2)&$380
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; DisplaySprite_Param:
DisplaySprite3:
		lea	($FFFFAC00).w,a1
		lsr.w	#1,d0
		andi.w	#$380,d0
		adda.w	d0,a1
		cmpi.w	#$7E,(a1)
		bcc.s	locret_CE58
		addq.w	#2,(a1)
		adda.w	(a1),a1
		move.w	a0,(a1)

locret_CE58:
		rts
; End of function DisplaySprite3

; ===========================================================================
; ---------------------------------------------------------------------------
; Routines to mark an enemy/monitor/ring/platform as destroyed
; a0 = the object
; ---------------------------------------------------------------------------

MarkObjGone:
		tst.w	(Two_player_mode).w
		beq.s	loc_CE64
		bra.w	DisplaySprite
; ---------------------------------------------------------------------------

loc_CE64:
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_CE7C
		bra.w	DisplaySprite
; ---------------------------------------------------------------------------

loc_CE7C:
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		beq.s	loc_CE8E
		bclr	#7,2(a2,d0.w)

loc_CE8E:
		bra.w	DeleteObject
; ===========================================================================
; does nothing instead of calling DisplaySprite in the case of no deletion
; loc_CE92:
MarkObjGone2:
		tst.w	(Two_player_mode).w
		beq.s	loc_CE9A
		rts
; ---------------------------------------------------------------------------

loc_CE9A:
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_CEB0
		rts
; ---------------------------------------------------------------------------

loc_CEB0:
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		beq.s	loc_CEC2
		bclr	#7,2(a2,d0.w)

loc_CEC2:
		bra.w	DeleteObject
; ===========================================================================
; first player in two player mode
; loc_CEC6:
MarkObjGone_P1:
		tst.w	(Two_player_mode).w
		bne.s	MarkObjGone_P2
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_CEE4
		bra.w	DisplaySprite
; ---------------------------------------------------------------------------

loc_CEE4:
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		beq.s	loc_CEF6
		bclr	#7,2(a2,d0.w)

loc_CEF6:
		bra.w	DeleteObject
; ===========================================================================
; second player in two player mode
; loc_CEFA:
MarkObjGone_P2:
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		move.w	d0,d1
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_CF14
		bra.w	DisplaySprite
; ---------------------------------------------------------------------------

loc_CF14:
		sub.w	($FFFFF7DC).w,d1
		cmpi.w	#$280,d1
		bhi.w	loc_CF24
		bra.w	DisplaySprite
; ---------------------------------------------------------------------------

loc_CF24:
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		beq.s	loc_CF36
		bclr	#7,2(a2,d0.w)

loc_CF36:
		bra.w	DeleteObject	; useless branch...

; ---------------------------------------------------------------------------
; Subroutine to delete an object
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


DeleteObject:
		movea.l	a0,a1
; sub_CF3C:
DeleteObject2:
		moveq	#0,d1
		moveq	#$F,d0	; we want to clear up to the next object
		; delete the object by setting all of its bytes to 0
loc_CF40:
		move.l	d1,(a1)+
		dbf	d0,loc_CF40
		rts
; End of function DeleteObject

; ---------------------------------------------------------------------------
; Subroutine to animate a sprite using an animation script
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


AnimateSprite:
		moveq	#0,d0
		move.b	$1C(a0),d0	; move animation number to d0
		cmp.b	$1D(a0),d0	; is animation set to change?
		beq.s	Anim_Run	; if not, branch
		move.b	d0,$1D(a0)	; set previous animation to current one
		move.b	#0,$1B(a0)	; reset animation
		move.b	#0,$1E(a0)	; reset frame duration
; loc_CF64:
Anim_Run:
		subq.b	#1,$1E(a0)	; subtract 1 from frame duration
		bpl.s	Anim_Wait	; if time remains, branch
		add.w	d0,d0
		adda.w	(a1,d0.w),a1	; calculate address of appropriate animation script
		move.b	(a1),$1E(a0)	; load frame duration
		moveq	#0,d1
		move.b	$1B(a0),d1	; load current frame number
		move.b	1(a1,d1.w),d0	; read sprite number from script
		bmi.s	Anim_End_FF	; if animation is complete, branch
; loc_CF80:
Anim_Next:
		move.b	d0,d1		; move animation number to current frame number
		andi.b	#$1F,d0
		move.b	d0,$1A(a0)	; load sprite number
		move.b	$22(a0),d0	; match the orientation dictated by the object
		rol.b	#3,d1		; with the orientation used by the object engine
		eor.b	d0,d1
		andi.b	#3,d1
		andi.b	#$FC,1(a0)
		or.b	d1,1(a0)
		addq.b	#1,$1B(a0)	; next frame number
; locret_CFA4:
Anim_Wait:
		rts
; ===========================================================================
; loc_CFA6:
Anim_End_FF:
		addq.b	#1,d0		; is the end flag = $FF ?
		bne.s	Anim_End_FE	; if not, branch
		move.b	#0,$1B(a0)	; restart the animation
		move.b	1(a1),d0	; read sprite number
		bra.s	Anim_Next
; ===========================================================================
; loc_CFB6:
Anim_End_FE:
		addq.b	#1,d0		; is the end flag = $FE ?
		bne.s	Anim_End_FD	; if not, branch
		move.b	2(a1,d1.w),d0	; read the next byte in the script
		sub.b	d0,$1B(a0)	; jump back d0 bytes in the script
		sub.b	d0,d1
		move.b	1(a1,d1.w),d0	; read sprite number
		bra.s	Anim_Next
; ===========================================================================
; loc_CFCA:
Anim_End_FD:
		addq.b	#1,d0		; is the end flag = $FD ?
		bne.s	Anim_End_FC	; if not, branch
		move.b	2(a1,d1.w),$1C(a0)	; read next byte, run that animation
		rts
; ===========================================================================
; loc_CFD6:
Anim_End_FC:
		addq.b	#1,d0		; is the end flag = $FC ?
		bne.s	Anim_End_FB	; if not, branch
		addq.b	#2,routine(a0)	; jump to next routine
		rts
; ===========================================================================
; loc_CFE0:
Anim_End_FB:
		addq.b	#1,d0		; is the end flag = $FB ?
		bne.s	Anim_End_FA	; if not, branch
		move.b	#0,$1B(a0)	; reset animation
		clr.b	$25(a0)		; reset 2nd routine counter
		rts
; ===========================================================================
; loc_CFF0:
Anim_End_FA:
		addq.b	#1,d0		; is the end flag = $FA ?
		bne.s	Anim_End	; if not, branch
		addq.b	#2,$25(a0)	; jump to next routine
		rts
; ===========================================================================
; locret_CFFA:
Anim_End:
		rts
; End of function AnimateSprite

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
BldSpr_ScrPos:	dc.l 0
		dc.l $FFFFEE00
		dc.l $FFFFEE08
		dc.l $FFFFEE18

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


BuildSprites:
		tst.w	(Two_player_mode).w
		bne.w	BuildSprites_2p
		lea	(Sprite_Table).w,a2
		moveq	#0,d5
		moveq	#0,d4
		tst.b	(Level_started_flag).w
		beq.s	loc_D026
		bsr.w	BuildSprites2

loc_D026:				; CODE XREF: BuildSprites+14j
		lea	($FFFFAC00).w,a4
		moveq	#7,d7

loc_D02C:				; CODE XREF: BuildSprites+FAj
		tst.w	(a4)
		beq.w	loc_D102
		moveq	#2,d6

loc_D034:				; CODE XREF: BuildSprites+F2j
		movea.w	(a4,d6.w),a0
		tst.b	(a0)
		beq.w	loc_D124
		tst.l	4(a0)
		beq.w	loc_D124
		andi.b	#$7F,1(a0) ; ''
		move.b	1(a0),d0
		move.b	d0,d4
		btst	#6,d0
		bne.w	loc_D126
		andi.w	#$C,d0
		beq.s	loc_D0B2
		movea.l	BldSpr_ScrPos(pc,d0.w),a1
		moveq	#0,d0
		move.b	$19(a0),d0
		move.w	8(a0),d3
		sub.w	(a1),d3
		move.w	d3,d1
		add.w	d0,d1
		bmi.w	loc_D0FA
		move.w	d3,d1
		sub.w	d0,d1
		cmpi.w	#$140,d1
		bge.w	loc_D0FA
		addi.w	#$80,d3	; ''
		btst	#4,d4
		beq.s	loc_D0BC
		moveq	#0,d0
		move.b	$16(a0),d0
		move.w	$C(a0),d2
		sub.w	4(a1),d2
		move.w	d2,d1
		add.w	d0,d1
		bmi.s	loc_D0FA
		move.w	d2,d1
		sub.w	d0,d1
		cmpi.w	#$E0,d1	; 'à'
		bge.s	loc_D0FA
		addi.w	#$80,d2	; ''
		bra.s	loc_D0D4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D0B2:				; CODE XREF: BuildSprites+52j
		move.w	$A(a0),d2
		move.w	8(a0),d3
		bra.s	loc_D0D4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D0BC:				; CODE XREF: BuildSprites+80j
		move.w	$C(a0),d2
		sub.w	4(a1),d2
		addi.w	#$80,d2	; ''
		cmpi.w	#$60,d2	; '`'
		bcs.s	loc_D0FA
		cmpi.w	#$180,d2
		bcc.s	loc_D0FA

loc_D0D4:				; CODE XREF: BuildSprites+A4j
					; BuildSprites+AEj
		movea.l	4(a0),a1
		moveq	#0,d1
		btst	#5,d4
		bne.s	loc_D0F0
		move.b	$1A(a0),d1
		add.w	d1,d1
		adda.w	(a1,d1.w),a1
		move.w	(a1)+,d1
		subq.w	#1,d1
		bmi.s	loc_D0F4

loc_D0F0:				; CODE XREF: BuildSprites+D2j
		bsr.w	sub_D1B6

loc_D0F4:				; CODE XREF: BuildSprites+E2j
		ori.b	#$80,1(a0)

loc_D0FA:				; CODE XREF: BuildSprites+68j
					; BuildSprites+74j ...
		addq.w	#2,d6
		subq.w	#2,(a4)
		bne.w	loc_D034

loc_D102:				; CODE XREF: BuildSprites+22j
		lea	$80(a4),a4
		dbf	d7,loc_D02C
		move.b	d5,($FFFFF62C).w
		cmpi.b	#$50,d5	; 'P'
		beq.s	loc_D11C
		move.l	#0,(a2)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D11C:				; CODE XREF: BuildSprites+106j
		move.b	#0,-5(a2)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D124:				; CODE XREF: BuildSprites+2Ej
					; BuildSprites+36j
		bra.s	loc_D0FA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D126:				; CODE XREF: BuildSprites+4Aj
		move.l	a4,-(sp)
		lea	($FFFFEE00).w,a4
		movea.w	2(a0),a3
		movea.l	4(a0),a5
		moveq	#0,d0
		move.b	$E(a0),d0
		move.w	8(a0),d3
		sub.w	(a4),d3
		move.w	d3,d1
		add.w	d0,d1
		bmi.w	loc_D1B0
		move.w	d3,d1
		sub.w	d0,d1
		cmpi.w	#$140,d1
		bge.s	loc_D1B0
		move.w	$C(a0),d2
		sub.w	4(a4),d2
		addi.w	#$80,d2	; ''
		cmpi.w	#$60,d2	; '`'
		bcs.s	loc_D1B0
		cmpi.w	#$180,d2
		bcc.s	loc_D1B0
		ori.b	#$80,1(a0)
		lea	$10(a0),a6
		moveq	#0,d0
		move.b	$F(a0),d0
		subq.w	#1,d0
		bcs.s	loc_D1B0

loc_D17E:				; CODE XREF: BuildSprites+1A0j
		swap	d0
		move.w	(a6)+,d3
		sub.w	(a4),d3
		addi.w	#$80,d3	; ''
		move.w	(a6)+,d2
		sub.w	4(a4),d2
		addi.w	#$80,d2	; ''
		addq.w	#1,a6
		moveq	#0,d1
		move.b	(a6)+,d1
		add.w	d1,d1
		movea.l	a5,a1
		adda.w	(a1,d1.w),a1
		move.w	(a1)+,d1
		subq.w	#1,d1
		bmi.s	loc_D1AA
		bsr.w	sub_D1BA

loc_D1AA:				; CODE XREF: BuildSprites+198j
		swap	d0
		dbf	d0,loc_D17E

loc_D1B0:				; CODE XREF: BuildSprites+138j
					; BuildSprites+144j ...
		movea.l	(sp)+,a4
		bra.w	loc_D0FA
; End of function BuildSprites


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_D1B6:				; CODE XREF: BuildSprites:loc_D0F0p
		movea.w	2(a0),a3
; End of function sub_D1B6


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_D1BA:				; CODE XREF: BuildSprites+19Ap
		cmpi.b	#$50,d5	; 'P'
		bcc.s	locret_D1F6
		btst	#0,d4
		bne.s	loc_D1F8
		btst	#1,d4
		bne.w	loc_D258

loc_D1CE:				; CODE XREF: sub_D1BA+38j
					; S1SS_ShowLayout+114p
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		move.w	(a1)+,d0
		add.w	a3,d0
		move.w	d0,(a2)+
		addq.w	#2,a1
		move.w	(a1)+,d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_D1F0
		addq.w	#1,d0

loc_D1F0:				; CODE XREF: sub_D1BA+32j
		move.w	d0,(a2)+
		dbf	d1,loc_D1CE

locret_D1F6:				; CODE XREF: sub_D1BA+4j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D1F8:				; CODE XREF: sub_D1BA+Aj
		btst	#1,d4
		bne.w	loc_D2A0

loc_D200:				; CODE XREF: sub_D1BA+78j
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d4
		move.b	d4,(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		move.w	(a1)+,d0
		add.w	a3,d0
		eori.w	#$800,d0
		move.w	d0,(a2)+
		addq.w	#2,a1
		move.w	(a1)+,d0
		neg.w	d0
		move.b	byte_D238(pc,d4.w),d4
		sub.w	d4,d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_D230
		addq.w	#1,d0

loc_D230:				; CODE XREF: sub_D1BA+72j
		move.w	d0,(a2)+
		dbf	d1,loc_D200
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_D238:	dc.b   8,  8,  8,  8	; 0
		dc.b $10,$10,$10,$10	; 4
		dc.b $18,$18,$18,$18	; 8
		dc.b $20,$20,$20,$20	; 12
byte_D248:	dc.b   8,$10,$18,$20	; 0
		dc.b   8,$10,$18,$20	; 4
		dc.b   8,$10,$18,$20	; 8
		dc.b   8,$10,$18,$20	; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D258:				; CODE XREF: sub_D1BA+10j sub_D1BA+D0j
		move.b	(a1)+,d0
		move.b	(a1),d4
		ext.w	d0
		neg.w	d0
		move.b	byte_D248(pc,d4.w),d4
		sub.w	d4,d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		move.w	(a1)+,d0
		add.w	a3,d0
		eori.w	#$1000,d0
		move.w	d0,(a2)+
		addq.w	#2,a1
		move.w	(a1)+,d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_D288
		addq.w	#1,d0

loc_D288:				; CODE XREF: sub_D1BA+CAj
		move.w	d0,(a2)+
		dbf	d1,loc_D258
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_D290:	dc.b   8,$10,$18,$20	; 0
		dc.b   8,$10,$18,$20	; 4
		dc.b   8,$10,$18,$20	; 8
		dc.b   8,$10,$18,$20	; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D2A0:				; CODE XREF: sub_D1BA+42j
					; sub_D1BA+122j
		move.b	(a1)+,d0
		move.b	(a1),d4
		ext.w	d0
		neg.w	d0
		move.b	byte_D290(pc,d4.w),d4
		sub.w	d4,d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d4
		move.b	d4,(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		move.w	(a1)+,d0
		add.w	a3,d0
		eori.w	#$1800,d0
		move.w	d0,(a2)+
		addq.w	#2,a1
		move.w	(a1)+,d0
		neg.w	d0
		move.b	byte_D2E2(pc,d4.w),d4
		sub.w	d4,d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_D2DA
		addq.w	#1,d0

loc_D2DA:				; CODE XREF: sub_D1BA+11Cj
		move.w	d0,(a2)+
		dbf	d1,loc_D2A0
		rts
; End of function sub_D1BA

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_D2E2:	dc.b   8,  8,  8,  8	; 0
		dc.b $10,$10,$10,$10	; 4
		dc.b $18,$18,$18,$18	; 8
		dc.b $20,$20,$20,$20	; 12
BldSpr_ScrPos_2p:dc.l 0
		dc.l $FFFFEE00
		dc.l $FFFFEE08
		dc.l $FFFFEE18
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR BuildSprites

BuildSprites_2p:			; CODE XREF: BuildSprites+4j
					; BuildSprites+2FAj
		tst.w	(Hint_flag).w
		bne.s	BuildSprites_2p
		lea	(Sprite_Table).w,a2
		moveq	#2,d5
		moveq	#0,d4
		move.l	#$1D80F01,(a2)+
		move.l	#1,(a2)+
		move.l	#$1D80F02,(a2)+
		move.l	#0,(a2)+
		tst.b	(Level_started_flag).w
		beq.s	loc_D332
		bsr.w	BuildSprites2_2p

loc_D332:				; CODE XREF: BuildSprites+320j
		lea	($FFFFAC00).w,a4
		moveq	#7,d7

loc_D338:				; CODE XREF: BuildSprites+408j
		move.w	(a4),d0
		beq.w	loc_D410
		move.w	d0,-(sp)
		moveq	#2,d6

loc_D342:				; CODE XREF: BuildSprites+3FEj
		movea.w	(a4,d6.w),a0
		tst.b	(a0)
		beq.w	loc_D406
		andi.b	#$7F,1(a0) ; ''
		move.b	1(a0),d0
		move.b	d0,d4
		btst	#6,d0
		bne.w	loc_D54A
		andi.w	#$C,d0
		beq.s	loc_D3B6
		movea.l	BldSpr_ScrPos_2p(pc,d0.w),a1
		moveq	#0,d0
		move.b	$19(a0),d0
		move.w	8(a0),d3
		sub.w	(a1),d3
		move.w	d3,d1
		add.w	d0,d1
		bmi.w	loc_D406
		move.w	d3,d1
		sub.w	d0,d1
		cmpi.w	#$140,d1
		bge.s	loc_D406
		addi.w	#$80,d3	; ''
		btst	#4,d4
		beq.s	loc_D3C4
		moveq	#0,d0
		move.b	$16(a0),d0
		move.w	$C(a0),d2
		sub.w	4(a1),d2
		move.w	d2,d1
		add.w	d0,d1
		bmi.s	loc_D406
		move.w	d2,d1
		sub.w	d0,d1
		cmpi.w	#$E0,d1	; 'à'
		bge.s	loc_D406
		addi.w	#$100,d2
		bra.s	loc_D3E0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D3B6:				; CODE XREF: BuildSprites+358j
		move.w	$A(a0),d2
		move.w	8(a0),d3
		addi.w	#$80,d2	; ''
		bra.s	loc_D3E0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D3C4:				; CODE XREF: BuildSprites+384j
		move.w	$C(a0),d2
		sub.w	4(a1),d2
		addi.w	#$80,d2	; ''
		cmpi.w	#$60,d2	; '`'
		bcs.s	loc_D406
		cmpi.w	#$180,d2
		bcc.s	loc_D406
		addi.w	#$80,d2	; ''

loc_D3E0:				; CODE XREF: BuildSprites+3A8j
					; BuildSprites+3B6j
		movea.l	4(a0),a1
		moveq	#0,d1
		btst	#5,d4
		bne.s	loc_D3FC
		move.b	$1A(a0),d1
		add.w	d1,d1
		adda.w	(a1,d1.w),a1
		move.w	(a1)+,d1
		subq.w	#1,d1
		bmi.s	loc_D400

loc_D3FC:				; CODE XREF: BuildSprites+3DEj
		bsr.w	sub_D6A2

loc_D400:				; CODE XREF: BuildSprites+3EEj
		ori.b	#$80,1(a0)

loc_D406:				; CODE XREF: BuildSprites+33Cj
					; BuildSprites+36Ej ...
		addq.w	#2,d6
		subq.w	#2,(sp)
		bne.w	loc_D342
		addq.w	#2,sp

loc_D410:				; CODE XREF: BuildSprites+32Ej
		lea	$80(a4),a4
		dbf	d7,loc_D338
		move.b	d5,($FFFFF62C).w
		cmpi.b	#$50,d5	; 'P'
		bcc.s	loc_D42A
		move.l	#0,(a2)
		bra.s	loc_D442
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D42A:				; CODE XREF: BuildSprites+414j
		move.b	#0,-5(a2)
		bra.s	loc_D442
; END OF FUNCTION CHUNK	FOR BuildSprites
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
dword_D432:	dc.l 0
		dc.l $FFFFEE20
		dc.l $FFFFEE28
		dc.l $FFFFEE38
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR BuildSprites

loc_D442:				; CODE XREF: BuildSprites+41Cj
					; BuildSprites+424j
		lea	($FFFFDD00).w,a2
		moveq	#0,d5
		moveq	#0,d4
		tst.b	(Level_started_flag).w
		beq.s	loc_D454
		bsr.w	sub_DACA

loc_D454:				; CODE XREF: BuildSprites+442j
		lea	($FFFFAC00).w,a4
		moveq	#7,d7

loc_D45A:				; CODE XREF: BuildSprites+520j
		tst.w	(a4)
		beq.w	loc_D528
		moveq	#2,d6

loc_D462:				; CODE XREF: BuildSprites+518j
		movea.w	(a4,d6.w),a0
		tst.b	(a0)
		beq.w	loc_D520
		move.b	1(a0),d0
		move.b	d0,d4
		btst	#6,d0
		bne.w	loc_D5DA
		andi.w	#$C,d0
		beq.s	loc_D4D0
		movea.l	dword_D432(pc,d0.w),a1
		moveq	#0,d0
		move.b	$19(a0),d0
		move.w	8(a0),d3
		sub.w	(a1),d3
		move.w	d3,d1
		add.w	d0,d1
		bmi.w	loc_D520
		move.w	d3,d1
		sub.w	d0,d1
		cmpi.w	#$140,d1
		bge.s	loc_D520
		addi.w	#$80,d3	; ''
		btst	#4,d4
		beq.s	loc_D4DE
		moveq	#0,d0
		move.b	$16(a0),d0
		move.w	$C(a0),d2
		sub.w	4(a1),d2
		move.w	d2,d1
		add.w	d0,d1
		bmi.s	loc_D520
		move.w	d2,d1
		sub.w	d0,d1
		cmpi.w	#$E0,d1	; 'à'
		bge.s	loc_D520
		addi.w	#$1E0,d2
		bra.s	loc_D4FA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D4D0:				; CODE XREF: BuildSprites+472j
		move.w	$A(a0),d2
		move.w	8(a0),d3
		addi.w	#$160,d2
		bra.s	loc_D4FA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D4DE:				; CODE XREF: BuildSprites+49Ej
		move.w	$C(a0),d2
		sub.w	4(a1),d2
		addi.w	#$80,d2	; ''
		cmpi.w	#$60,d2	; '`'
		bcs.s	loc_D520
		cmpi.w	#$180,d2
		bcc.s	loc_D520
		addi.w	#$160,d2

loc_D4FA:				; CODE XREF: BuildSprites+4C2j
					; BuildSprites+4D0j
		movea.l	4(a0),a1
		moveq	#0,d1
		btst	#5,d4
		bne.s	loc_D516
		move.b	$1A(a0),d1
		add.w	d1,d1
		adda.w	(a1,d1.w),a1
		move.w	(a1)+,d1
		subq.w	#1,d1
		bmi.s	loc_D51A

loc_D516:				; CODE XREF: BuildSprites+4F8j
		bsr.w	sub_D6A2

loc_D51A:				; CODE XREF: BuildSprites+508j
		ori.b	#$80,1(a0)

loc_D520:				; CODE XREF: BuildSprites+45Cj
					; BuildSprites+488j ...
		addq.w	#2,d6
		subq.w	#2,(a4)
		bne.w	loc_D462

loc_D528:				; CODE XREF: BuildSprites+450j
		lea	$80(a4),a4
		dbf	d7,loc_D45A
		move.b	d5,($FFFFF62C).w
		cmpi.b	#$50,d5	; 'P'
		beq.s	loc_D542
		move.l	#0,(a2)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D542:				; CODE XREF: BuildSprites+52Cj
		move.b	#0,-5(a2)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D54A:				; CODE XREF: BuildSprites+350j
		move.l	a4,-(sp)
		lea	($FFFFEE00).w,a4
		movea.w	2(a0),a3
		movea.l	4(a0),a5
		moveq	#0,d0
		move.b	$E(a0),d0
		move.w	8(a0),d3
		sub.w	(a4),d3
		move.w	d3,d1
		add.w	d0,d1
		bmi.w	loc_D5D4
		move.w	d3,d1
		sub.w	d0,d1
		cmpi.w	#$140,d1
		bge.s	loc_D5D4
		move.w	$C(a0),d2
		sub.w	4(a4),d2
		addi.w	#$80,d2	; ''
		cmpi.w	#$60,d2	; '`'
		bcs.s	loc_D5D4
		cmpi.w	#$180,d2
		bcc.s	loc_D5D4
		ori.b	#$80,1(a0)
		lea	$10(a0),a6
		moveq	#0,d0
		move.b	$F(a0),d0
		subq.w	#1,d0
		bcs.s	loc_D5D4

loc_D5A2:				; CODE XREF: BuildSprites+5C4j
		swap	d0
		move.w	(a6)+,d3
		sub.w	(a4),d3
		addi.w	#$80,d3	; ''
		move.w	(a6)+,d2
		sub.w	4(a4),d2
		addi.w	#$100,d2
		addq.w	#1,a6
		moveq	#0,d1
		move.b	(a6)+,d1
		add.w	d1,d1
		movea.l	a5,a1
		adda.w	(a1,d1.w),a1
		move.w	(a1)+,d1
		subq.w	#1,d1
		bmi.s	loc_D5CE
		bsr.w	sub_D6A6

loc_D5CE:				; CODE XREF: BuildSprites+5BCj
		swap	d0
		dbf	d0,loc_D5A2

loc_D5D4:				; CODE XREF: BuildSprites+55Cj
					; BuildSprites+568j ...
		movea.l	(sp)+,a4
		bra.w	loc_D406
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D5DA:				; CODE XREF: BuildSprites+46Aj
		move.l	a4,-(sp)
		lea	($FFFFEE20).w,a4
		movea.w	2(a0),a3
		movea.l	4(a0),a5
		moveq	#0,d0
		move.b	$E(a0),d0
		move.w	8(a0),d3
		sub.w	(a4),d3
		move.w	d3,d1
		add.w	d0,d1
		bmi.w	loc_D664
		move.w	d3,d1
		sub.w	d0,d1
		cmpi.w	#$140,d1
		bge.s	loc_D664
		move.w	$C(a0),d2
		sub.w	4(a4),d2
		addi.w	#$80,d2	; ''
		cmpi.w	#$60,d2	; '`'
		bcs.s	loc_D664
		cmpi.w	#$180,d2
		bcc.s	loc_D664
		ori.b	#$80,1(a0)
		lea	$10(a0),a6
		moveq	#0,d0
		move.b	$F(a0),d0
		subq.w	#1,d0
		bcs.s	loc_D664

loc_D632:				; CODE XREF: BuildSprites+654j
		swap	d0
		move.w	(a6)+,d3
		sub.w	(a4),d3
		addi.w	#$80,d3	; ''
		move.w	(a6)+,d2
		sub.w	4(a4),d2
		addi.w	#$1E0,d2
		addq.w	#1,a6
		moveq	#0,d1
		move.b	(a6)+,d1
		add.w	d1,d1
		movea.l	a5,a1
		adda.w	(a1,d1.w),a1
		move.w	(a1)+,d1
		subq.w	#1,d1
		bmi.s	loc_D65E
		bsr.w	sub_D6A6

loc_D65E:				; CODE XREF: BuildSprites+64Cj
		swap	d0
		dbf	d0,loc_D632

loc_D664:				; CODE XREF: BuildSprites+5ECj
					; BuildSprites+5F8j ...
		movea.l	(sp)+,a4
		bra.w	loc_D520
; END OF FUNCTION CHUNK	FOR BuildSprites


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; adjust art pointer of object at a0 for 2-player mode
; ModifySpriteAttr_2P:
Adjust2PArtPointer:
		tst.w	(Two_player_mode).w
		beq.s	locret_D684
		move.w	2(a0),d0
		andi.w	#$7FF,d0
		lsr.w	#1,d0
		andi.w	#$F800,2(a0)
		add.w	d0,2(a0)

locret_D684:
		rts
; End of function Adjust2PArtPointer


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; adjust art pointer of object at a1 for 2-player mode
; ModifyA1SpriteAttr_2P:
Adjust2PArtPointer2:
		tst.w	(Two_player_mode).w
		beq.s	locret_D6BE
		move.w	2(a1),d0
		andi.w	#$7FF,d0
		lsr.w	#1,d0
		andi.w	#$F800,2(a1)
		add.w	d0,2(a1)

locret_D6BE
		rts
; End of function Adjust2PArtPointer2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_D6A2:
		movea.w	2(a0),a3
; End of function sub_D6A2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_D6A6:				; CODE XREF: BuildSprites+5BEp
					; BuildSprites+64Ep
		cmpi.b	#$50,d5	; 'P'
		bcc.s	locret_D6E6
		btst	#0,d4
		bne.s	loc_D6F8
		btst	#1,d4
		bne.w	loc_D75A

loc_D6BA:				; CODE XREF: sub_D6A6+3Cj
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d4
		move.b	byte_D6E8(pc,d4.w),(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		addq.w	#2,a1
		move.w	(a1)+,d0
		add.w	a3,d0
		move.w	d0,(a2)+
		move.w	(a1)+,d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_D6E0
		addq.w	#1,d0

loc_D6E0:				; CODE XREF: sub_D6A6+36j
		move.w	d0,(a2)+
		dbf	d1,loc_D6BA

locret_D6E6:				; CODE XREF: sub_D6A6+4j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_D6E8:	dc.b   0,  0		; 0
		dc.b   1,  1		; 2
		dc.b   4,  4		; 4
		dc.b   5,  5		; 6
		dc.b   8,  8		; 8
		dc.b   9,  9		; 10
		dc.b  $C, $C		; 12
		dc.b  $D, $D		; 14
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D6F8:				; CODE XREF: sub_D6A6+Aj
		btst	#1,d4
		bne.w	loc_D7B6

loc_D700:				; CODE XREF: sub_D6A6+8Ej
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d4
		move.b	byte_D6E8(pc,d4.w),(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		addq.w	#2,a1
		move.w	(a1)+,d0
		add.w	a3,d0
		eori.w	#$800,d0
		move.w	d0,(a2)+
		move.w	(a1)+,d0
		neg.w	d0
		move.b	byte_D73A(pc,d4.w),d4
		sub.w	d4,d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_D732
		addq.w	#1,d0

loc_D732:				; CODE XREF: sub_D6A6+88j
		move.w	d0,(a2)+
		dbf	d1,loc_D700
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_D73A:	dc.b   8,  8		; 0
		dc.b   8,  8		; 2
		dc.b $10,$10		; 4
		dc.b $10,$10		; 6
		dc.b $18,$18		; 8
		dc.b $18,$18		; 10
		dc.b $20,$20		; 12
		dc.b $20,$20		; 14
byte_D74A:	dc.b   8,$10,$18,$20	; 0
		dc.b   8,$10,$18,$20	; 4
		dc.b   8,$10,$18,$20	; 8
		dc.b   8,$10,$18,$20	; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D75A:				; CODE XREF: sub_D6A6+10j sub_D6A6+EAj
		move.b	(a1)+,d0
		move.b	(a1),d4
		ext.w	d0
		neg.w	d0
		move.b	byte_D74A(pc,d4.w),d4
		sub.w	d4,d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d4
		move.b	byte_D796(pc,d4.w),(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		addq.w	#2,a1
		move.w	(a1)+,d0
		add.w	a3,d0
		eori.w	#$1000,d0
		move.w	d0,(a2)+
		move.w	(a1)+,d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_D78E
		addq.w	#1,d0

loc_D78E:				; CODE XREF: sub_D6A6+E4j
		move.w	d0,(a2)+
		dbf	d1,loc_D75A
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_D796:	dc.b   0,  0,  1,  1	; 0
		dc.b   4,  4,  5,  5	; 4
		dc.b   8,  8,  9,  9	; 8
		dc.b  $C, $C, $D, $D	; 12
byte_D7A6:	dc.b   8,$10,$18,$20	; 0
		dc.b   8,$10,$18,$20	; 4
		dc.b   8,$10,$18,$20	; 8
		dc.b   8,$10,$18,$20	; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D7B6:				; CODE XREF: sub_D6A6+56j
					; sub_D6A6+14Ej
		move.b	(a1)+,d0
		move.b	(a1),d4
		ext.w	d0
		neg.w	d0
		move.b	byte_D7A6(pc,d4.w),d4
		sub.w	d4,d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d4
		move.b	byte_D796(pc,d4.w),(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		addq.w	#2,a1
		move.w	(a1)+,d0
		add.w	a3,d0
		eori.w	#$1800,d0
		move.w	d0,(a2)+
		move.w	(a1)+,d0
		neg.w	d0
		move.b	byte_D7FA(pc,d4.w),d4
		sub.w	d4,d0
		add.w	d3,d0
		andi.w	#$1FF,d0
		bne.s	loc_D7F2
		addq.w	#1,d0

loc_D7F2:				; CODE XREF: sub_D6A6+148j
		move.w	d0,(a2)+
		dbf	d1,loc_D7B6
		rts
; End of function sub_D6A6

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_D7FA:	dc.b   8,  8,  8,  8	; 0
		dc.b $10,$10,$10,$10	; 4
		dc.b $18,$18,$18,$18	; 8
		dc.b $20,$20,$20,$20	; 12
		dc.b $30,$28,  0,  8	; 16
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		sub.w	($FFFFEE00).w,d0
		bmi.s	loc_D82E
		cmpi.w	#$140,d0
		bge.s	loc_D82E
		move.w	$C(a0),d1
		sub.w	($FFFFEE04).w,d1
		bmi.s	loc_D82E
		cmpi.w	#$E0,d1	; 'à'
		bge.s	loc_D82E
		moveq	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D82E:				; CODE XREF: ROM:0000D812j
					; ROM:0000D818j ...
		moveq	#1,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		moveq	#0,d1
		move.b	$19(a0),d1
		move.w	8(a0),d0
		sub.w	($FFFFEE00).w,d0
		add.w	d1,d0
		bmi.s	loc_D862
		add.w	d1,d1
		sub.w	d1,d0
		cmpi.w	#$140,d0
		bge.s	loc_D862
		move.w	$C(a0),d1
		sub.w	($FFFFEE04).w,d1
		bmi.s	loc_D862
		cmpi.w	#$E0,d1	; 'à'
		bge.s	loc_D862
		moveq	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_D862:				; CODE XREF: ROM:0000D842j
					; ROM:0000D84Cj ...
		moveq	#1,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

; ============================================================================
; ----------------------------------------------------------------------------
; Pseudo-object that manages where rings are placed onscreen
; as you move through the level, and otherwise updates them.
; ----------------------------------------------------------------------------

; RingPosLoad:
RingsManager:
		moveq	#0,d0
		move.b	(Rings_manager_routine).w,d0
		move.w	RingsManager_States(pc,d0.w),d0
		jmp	RingsManager_States(pc,d0.w)
; End of function RingsManager

; ===========================================================================
; RPL_Index:
RingsManager_States:
		dc.w RingsManager_Init-RingsManager_States
		dc.w RingsManager_Main-RingsManager_States
; ===========================================================================
; RPL_Main:
RingsManager_Init:
		addq.b	#2,(Rings_manager_routine).w	; => RingsManager_Main
		bsr.w	RingsManager_Setup	; perform initial setup
		lea	(Ring_Positions).w,a1
		move.w	($FFFFEE00).w,d4
		subq.w	#8,d4
		bhi.s	loc_D896
		moveq	#1,d4			; no negative values allowed
		bra.s	loc_D896
; ---------------------------------------------------------------------------

loc_D892:
		lea	6(a1),a1		; load next ring

loc_D896:
		cmp.w	2(a1),d4		; is the X pos of the ring < camera X pos?
		bhi.s	loc_D892		; if it is, check next ring
		move.w	a1,(Ring_start_addr).w	; set start addresses
		move.w	a1,(Ring_start_addr_P2).w
		addi.w	#$150,d4		; advance by a screen
		bra.s	loc_D8AE
; ---------------------------------------------------------------------------

loc_D8AA:
		lea	6(a1),a1		; load next ring

loc_D8AE:
		cmp.w	2(a1),d4		; is the X pos of the ring < camera X + 336?
		bhi.s	loc_D8AA		; if it is, check next ring
		move.w	a1,(Ring_end_addr).w	; set end addresses
		move.w	a1,(Ring_end_addr_P2).w
		move.b	#1,(Level_started_flag).w
		rts
; ===========================================================================
; RPL_Next:
RingsManager_Main:
		lea	(Ring_Positions).w,a1
		move.w	#$FF,d1

loc_D8CC:
		move.b	(a1),d0		; is there a ring in this slot?
		beq.s	loc_D8EA	; if not, branch
		bmi.s	loc_D8EA
		subq.b	#1,(a1)		; decrement timer
		bne.s	loc_D8EA	; if it's not 0 yet, branch
		move.b	#6,(a1)		; reset timer
		addq.b	#1,1(a1)	; increment frame
		cmpi.b	#8,1(a1)	; is it destruction time yet?
		bne.s	loc_D8EA	; if not, branch
		move.w	#-1,(a1)	; destroy ring

loc_D8EA:
		lea	6(a1),a1
		dbf	d1,loc_D8CC

		; update ring start and end addresses
		movea.w	(Ring_start_addr).w,a1
		move.w	($FFFFEE00).w,d4
		subq.w	#8,d4
		bhi.s	loc_D906
		moveq	#1,d4
		bra.s	loc_D906
; ---------------------------------------------------------------------------

loc_D902:
		lea	6(a1),a1

loc_D906:
		cmp.w	2(a1),d4
		bhi.s	loc_D902
		bra.s	loc_D910
; ---------------------------------------------------------------------------

loc_D90E:
		subq.w	#6,a1

loc_D910:
		cmp.w	-4(a1),d4
		bls.s	loc_D90E
		move.w	a1,(Ring_start_addr).w	; update start address

		movea.w	(Ring_end_addr).w,a2
		addi.w	#$150,d4
		bra.s	loc_D928
; ---------------------------------------------------------------------------

loc_D924:
		lea	6(a2),a2

loc_D928:
		cmp.w	2(a2),d4
		bhi.s	loc_D924
		bra.s	loc_D932
; ---------------------------------------------------------------------------

loc_D930:
		subq.w	#6,a2

loc_D932:
		cmp.w	-4(a2),d4
		bls.s	loc_D930
		move.w	a2,(Ring_end_addr).w	; update end address
		tst.w	(Two_player_mode).w	; are we in 2P mode?
		bne.s	loc_D94C		; if we are, update P2 addresses
		move.w	a1,(Ring_start_addr_P2).w	; otherwise, copy over P1 addresses
		move.w	a2,(Ring_end_addr_P2).w
		rts
; ---------------------------------------------------------------------------

loc_D94C:
		; update ring start and end addresses for P2
		movea.w	(Ring_start_addr_P2).w,a1
		move.w	($FFFFEE20).w,d4
		subq.w	#8,d4
		bhi.s	loc_D960
		moveq	#1,d4
		bra.s	loc_D960
; ---------------------------------------------------------------------------

loc_D95C:
		lea	6(a1),a1

loc_D960:
		cmp.w	2(a1),d4
		bhi.s	loc_D95C
		bra.s	loc_D96A
; ---------------------------------------------------------------------------

loc_D968:
		subq.w	#6,a1

loc_D96A:
		cmp.w	-4(a1),d4
		bls.s	loc_D968
		move.w	a1,(Ring_start_addr_P2).w	; update start address

		movea.w	(Ring_end_addr_P2).w,a2
		addi.w	#$150,d4
		bra.s	loc_D982
; ---------------------------------------------------------------------------

loc_D97E:
		lea	6(a2),a2

loc_D982:
		cmp.w	2(a2),d4
		bhi.s	loc_D97E
		bra.s	loc_D98C
; ---------------------------------------------------------------------------

loc_D98A:
		subq.w	#6,a2

loc_D98C:
		cmp.w	-4(a2),d4
		bls.s	loc_D98A
		move.w	a2,(Ring_end_addr_P2).w		; update end address
		rts

; ---------------------------------------------------------------------------
; Subroutine to handle ring collision
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_D998:
Touch_Rings:
		movea.w	(Ring_start_addr).w,a1
		movea.w	(Ring_end_addr).w,a2
		cmpa.w	#$B000,a0
		beq.s	loc_D9AE
		movea.w	(Ring_start_addr_P2).w,a1
		movea.w	(Ring_end_addr_P2).w,a2

loc_D9AE:
		cmpa.l	a1,a2
		beq.w	locret_DA36
		cmpi.w	#$5A,$30(a0)
		bcc.s	locret_DA36
		move.w	8(a0),d2
		move.w	$C(a0),d3
		subi.w	#8,d2
		moveq	#0,d5
		move.b	$16(a0),d5
		subq.b	#3,d5
		sub.w	d5,d3
		cmpi.b	#$39,$1A(a0)
		bne.s	loc_D9E0
		addi.w	#$C,d3
		moveq	#$A,d5

loc_D9E0:				; CODE XREF: Touch_Rings+40j
		move.w	#6,d1
		move.w	#$C,d6
		move.w	#$10,d4
		add.w	d5,d5

loc_D9EE:				; CODE XREF: Touch_Rings+9Aj
		tst.w	(a1)
		bne.w	loc_DA2C
		move.w	2(a1),d0
		sub.w	d1,d0
		sub.w	d2,d0
		bcc.s	loc_DA06
		add.w	d6,d0
		bcs.s	loc_DA0C
		bra.w	loc_DA2C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_DA06:				; CODE XREF: Touch_Rings+64j
		cmp.w	d4,d0
		bhi.w	loc_DA2C

loc_DA0C:				; CODE XREF: Touch_Rings+68j
		move.w	4(a1),d0
		sub.w	d1,d0
		sub.w	d3,d0
		bcc.s	loc_DA1E
		add.w	d6,d0
		bcs.s	loc_DA24
		bra.w	loc_DA2C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_DA1E:				; CODE XREF: Touch_Rings+7Cj
		cmp.w	d5,d0
		bhi.w	loc_DA2C

loc_DA24:				; CODE XREF: Touch_Rings+80j
		move.w	#$604,(a1)
		bsr.w	sub_A8DE

loc_DA2C:				; CODE XREF: Touch_Rings+58j Touch_Rings+6Aj ...
		lea	6(a1),a1
		cmpa.l	a1,a2
		bne.w	loc_D9EE

locret_DA36:				; CODE XREF: Touch_Rings+18j Touch_Rings+22j
		rts
; End of function Touch_Rings


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


BuildSprites2:				; CODE XREF: BuildSprites+16p
		movea.w	(Ring_start_addr).w,a0
		movea.w	(Ring_end_addr).w,a4
		cmpa.l	a0,a4
		bne.s	loc_DA46
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_DA46:				; CODE XREF: BuildSprites2+Aj
		lea	($FFFFEE00).w,a3

loc_DA4A:				; CODE XREF: BuildSprites2+76j
		tst.w	(a0)
		bmi.w	loc_DAA8
		move.w	2(a0),d3
		sub.w	(a3),d3
		addi.w	#$80,d3	; ''
		move.w	4(a0),d2
		sub.w	4(a3),d2
		addi.w	#8,d2
		bmi.s	loc_DAA8
		cmpi.w	#$F0,d2	; 'ğ'
		bge.s	loc_DAA8
		addi.w	#$78,d2	; 'x'
		lea	(off_DC04).l,a1
		moveq	#0,d1
		move.b	1(a0),d1
		bne.s	loc_DA84
		move.b	($FFFFFEC3).w,d1

loc_DA84:				; CODE XREF: BuildSprites2+46j
		add.w	d1,d1
		adda.w	(a1,d1.w),a1
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		move.w	(a1)+,d0
		addi.w	#$26BC,d0
		move.w	d0,(a2)+
		addq.w	#2,a1
		move.w	(a1)+,d0
		add.w	d3,d0
		move.w	d0,(a2)+

loc_DAA8:				; CODE XREF: BuildSprites2+14j
					; BuildSprites2+2Ej ...
		lea	6(a0),a0
		cmpa.l	a0,a4
		bne.w	loc_DA4A
		rts
; End of function BuildSprites2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


BuildSprites2_2p:			; CODE XREF: BuildSprites+322p
		lea	($FFFFEE00).w,a3
		move.w	#$78,d6	; 'x'
		movea.w	(Ring_start_addr).w,a0
		movea.w	(Ring_end_addr).w,a4
		cmpa.l	a0,a4
		bne.s	loc_DAE0
		rts
; End of function BuildSprites2_2p


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_DACA:				; CODE XREF: BuildSprites+444p
		lea	($FFFFEE20).w,a3
		move.w	#$158,d6
		movea.w	(Ring_start_addr_P2).w,a0
		movea.w	(Ring_end_addr_P2).w,a4
		cmpa.l	a0,a4
		bne.s	loc_DAE0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_DAE0:				; CODE XREF: BuildSprites2_2p+12j
					; sub_DACA+12j	...
		tst.w	(a0)
		bmi.w	loc_DB40
		move.w	2(a0),d3
		sub.w	(a3),d3
		addi.w	#$80,d3	; ''
		move.w	4(a0),d2
		sub.w	4(a3),d2
		addi.w	#$88,d2	; ''
		bmi.s	loc_DB40
		cmpi.w	#$170,d2
		bge.s	loc_DB40
		add.w	d6,d2
		lea	(off_DC04).l,a1
		moveq	#0,d1
		move.b	1(a0),d1
		bne.s	loc_DB18
		move.b	($FFFFFEC3).w,d1

loc_DB18:				; CODE XREF: sub_DACA+48j
		add.w	d1,d1
		adda.w	(a1,d1.w),a1
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,(a2)+
		move.b	(a1)+,d4
		move.b	byte_DB4C(pc,d4.w),(a2)+
		addq.b	#1,d5
		move.b	d5,(a2)+
		addq.w	#2,a1
		move.w	(a1)+,d0
		addi.w	#$235E,d0
		move.w	d0,(a2)+
		move.w	(a1)+,d0
		add.w	d3,d0
		move.w	d0,(a2)+

loc_DB40:				; CODE XREF: sub_DACA+18j sub_DACA+32j ...
		lea	6(a0),a0
		cmpa.l	a0,a4
		bne.w	loc_DAE0
		rts
; End of function sub_DACA

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_DB4C:	dc.b   0,  0,  1,  1	; 0
		dc.b   4,  4,  5,  5	; 4
		dc.b   8,  8,  9,  9	; 8
		dc.b  $C, $C, $D, $D	; 12

; ---------------------------------------------------------------------------
; Subroutine to perform initial rings manager setup
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; RingsManager2:
RingsManager_Setup:
		lea	(Ring_Positions).w,a1
		moveq	#0,d0
		move.w	#$17F,d1

loc_DB66:
		move.l	d0,(a1)+
		dbf	d1,loc_DB66
		moveq	#0,d0
		move.w	(Current_ZoneAndAct).w,d0
		lsl.b	#6,d0
		lsr.w	#5,d0
		lea	(RingPos_Index).l,a1
		move.w	(a1,d0.w),d0
		lea	(a1,d0.w),a1
		lea	(Ring_Positions+6).w,a2
; loc_DB88:
RingsMgr_NextRowOrCol:
		move.w	(a1)+,d2
		bmi.s	RingsMgr_SortRings
		move.w	(a1)+,d3
		bmi.s	RingsMgr_RingCol
		move.w	d3,d0
		rol.w	#4,d0
		andi.w	#7,d0
		andi.w	#$FFF,d3
; loc_DB9C:
RingsMgr_NextRingInRow:
		move.w	#0,(a2)+
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		addi.w	#$18,d2
		dbf	d0,RingsMgr_NextRingInRow
		bra.s	RingsMgr_NextRowOrCol
; ===========================================================================
; loc_DBAE:
RingsMgr_RingCol:
		move.w	d3,d0
		rol.w	#4,d0
		andi.w	#7,d0
		andi.w	#$FFF,d3
; loc_DBBA:
RingsMgr_NextRingInCol:
		move.w	#0,(a2)+
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		addi.w	#$18,d3
		dbf	d0,RingsMgr_NextRingInCol
		bra.s	RingsMgr_NextRowOrCol
; ===========================================================================
; loc_DBCC:
RingsMgr_SortRings:
		moveq	#-1,d0
		move.l	d0,(a2)+
		lea	(Ring_Positions+2).w,a1
		move.w	#$FE,d3

loc_DBD8:
		move.w	d3,d4
		lea	6(a1),a2
		move.w	(a1),d0

loc_DBE0:
		tst.w	(a2)
		beq.s	loc_DBF2
		cmp.w	(a2),d0
		bls.s	loc_DBF2
		move.l	(a1),d1
		move.l	(a2),d0
		move.l	d0,(a1)
		move.l	d1,(a2)
		swap	d0

loc_DBF2:
		lea	6(a2),a2
		dbf	d4,loc_DBE0
		lea	6(a1),a1
		dbf	d3,loc_DBD8
		rts
; End of function RingsManager_Setup

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_DC04:	incbin	"mappings/sprite/Rings.bin"

; ===========================================================================
; ---------------------------------------------------------------------------
; Objects Manager
; Subroutine that keeps track of any objects that need to remember
; their state, such as monitors or enemies.
;
; input variables:
;  -none-
;
; writes:
;  d0, d1
;  d2 = respawn index of object to load
;  d6 = camera position
;
;  a0 = address in object placement list
;  a2 = respawn table
; ---------------------------------------------------------------------------

; ObjPosLoad:
ObjectsManager:
		moveq	#0,d0
		move.b	(Obj_placement_routine).w,d0
		move.w	ObjectsManager_States(pc,d0.w),d0
		jmp	ObjectsManager_States(pc,d0.w)
; End of function ObjectsManager

; ===========================================================================
; OPL_Index:
ObjectsManager_States:	
		dc.w ObjectsManager_Init-ObjectsManager_States
		dc.w ObjectsManager_Main-ObjectsManager_States
		dc.w loc_DE5C-ObjectsManager_States
; ===========================================================================
; loc_DC68:
ObjectsManager_Init:
		addq.b	#2,(Obj_placement_routine).w
		move.w	(Current_ZoneAndAct).w,d0
		lsl.b	#6,d0
		lsr.w	#4,d0
		lea	(ObjPos_Index).l,a0
		movea.l	a0,a1
		adda.w	(a0,d0.w),a0
		move.l	a0,(Obj_load_addr_right).w
		move.l	a0,(Obj_load_addr_left).w
		move.l	a0,(Obj_load_addr_2).w
		move.l	a0,(Obj_load_addr_3).w
		lea	($FFFFFC00).w,a2
		move.w	#$101,(a2)+
		move.w	#$5E,d0

loc_DC9C:
		clr.l	(a2)+
		dbf	d0,loc_DC9C
		lea	($FFFFFC00).w,a2
		moveq	#0,d2
		move.w	($FFFFEE00).w,d6
		subi.w	#$80,d6
		bcc.s	loc_DCB4
		moveq	#0,d6

loc_DCB4:
		andi.w	#$FF80,d6
		movea.l	(Obj_load_addr_right).w,a0

loc_DCBC:
		cmp.w	(a0),d6
		bls.s	loc_DCCE
		tst.b	4(a0)
		bpl.s	loc_DCCA
		move.b	(a2),d2
		addq.b	#1,(a2)

loc_DCCA:
		addq.w	#6,a0
		bra.s	loc_DCBC
; ===========================================================================

loc_DCCE:
		move.l	a0,(Obj_load_addr_right).w
		move.l	a0,(Obj_load_addr_2).w
		movea.l	(Obj_load_addr_left).w,a0
		subi.w	#$80,d6
		bcs.s	loc_DCF2

loc_DCE0:
		cmp.w	(a0),d6
		bls.s	loc_DCF2
		tst.b	4(a0)
		bpl.s	loc_DCEE
		addq.b	#1,1(a2)

loc_DCEE:
		addq.w	#6,a0
		bra.s	loc_DCE0
; ===========================================================================

loc_DCF2:
		move.l	a0,(Obj_load_addr_left).w
		move.l	a0,(Obj_load_addr_3).w
		move.w	#-1,(Camera_X_pos_last).w
		move.w	#-1,(Camera_X_pos_last_P2).w
		tst.w	(Two_player_mode).w
		beq.s	ObjectsManager_Main
		addq.b	#2,(Obj_placement_routine).w
		bra.w	loc_DDE0
; ===========================================================================
; loc_DD14:
ObjectsManager_Main:
		move.w	($FFFFEE00).w,d1
		subi.w	#$80,d1
		andi.w	#$FF80,d1
		move.w	d1,($FFFFF7DA).w
		lea	($FFFFFC00).w,a2
		moveq	#0,d2
		move.w	($FFFFEE00).w,d6
		andi.w	#$FF80,d6
		cmp.w	(Camera_X_pos_last).w,d6
		beq.w	locret_DDDE
		bge.s	loc_DD9A
		move.w	d6,(Camera_X_pos_last).w
		movea.l	(Obj_load_addr_left).w,a0
		subi.w	#$80,d6
		bcs.s	loc_DD76

loc_DD4A:
		cmp.w	-6(a0),d6
		bge.s	loc_DD76
		subq.w	#6,a0
		tst.b	4(a0)
		bpl.s	loc_DD60
		subq.b	#1,1(a2)
		move.b	1(a2),d2

loc_DD60:
		bsr.w	sub_E0D2
		bne.s	loc_DD6A
		subq.w	#6,a0
		bra.s	loc_DD4A
; ===========================================================================

loc_DD6A:
		tst.b	4(a0)
		bpl.s	loc_DD74
		addq.b	#1,1(a2)

loc_DD74:
		addq.w	#6,a0

loc_DD76:
		move.l	a0,(Obj_load_addr_left).w
		movea.l	(Obj_load_addr_right).w,a0
		addi.w	#$300,d6

loc_DD82:
		cmp.w	-6(a0),d6
		bgt.s	loc_DD94
		tst.b	-2(a0)
		bpl.s	loc_DD90
		subq.b	#1,(a2)

loc_DD90:
		subq.w	#6,a0
		bra.s	loc_DD82
; ===========================================================================

loc_DD94:
		move.l	a0,(Obj_load_addr_right).w
		rts
; ===========================================================================

loc_DD9A:
		move.w	d6,(Camera_X_pos_last).w
		movea.l	(Obj_load_addr_right).w,a0
		addi.w	#$280,d6

loc_DDA6:
		cmp.w	(a0),d6
		bls.s	loc_DDBA
		tst.b	4(a0)
		bpl.s	loc_DDB4
		move.b	(a2),d2
		addq.b	#1,(a2)

loc_DDB4:
		bsr.w	sub_E0D2
		beq.s	loc_DDA6

loc_DDBA:
		move.l	a0,(Obj_load_addr_right).w
		movea.l	(Obj_load_addr_left).w,a0
		subi.w	#$300,d6
		bcs.s	loc_DDDA

loc_DDC8:
		cmp.w	(a0),d6
		bls.s	loc_DDDA
		tst.b	4(a0)
		bpl.s	loc_DDD6
		addq.b	#1,1(a2)

loc_DDD6:
		addq.w	#6,a0
		bra.s	loc_DDC8
; ===========================================================================

loc_DDDA:
		move.l	a0,(Obj_load_addr_left).w

locret_DDDE:
		rts
; ===========================================================================

loc_DDE0:
		moveq	#-1,d0
		move.l	d0,($FFFFF780).w
		move.l	d0,($FFFFF784).w
		move.l	d0,($FFFFF788).w
		move.l	d0,(Camera_X_pos_last_P2).w
		move.w	#0,(Camera_X_pos_last).w
		move.w	#0,(Camera_X_pos_last_P2).w
		lea	($FFFFFC00).w,a2
		move.w	(a2),($FFFFF78E).w
		moveq	#0,d2
		lea	($FFFFFC00).w,a5
		lea	(Obj_load_addr_right).w,a4
		lea	($FFFFF786).w,a1
		lea	($FFFFF789).w,a6
		moveq	#-2,d6
		bsr.w	sub_DF80
		lea	($FFFFF786).w,a1
		moveq	#-1,d6
		bsr.w	sub_DF80
		lea	($FFFFF786).w,a1
		moveq	#0,d6
		bsr.w	sub_DF80
		lea	($FFFFF78E).w,a5
		lea	(Obj_load_addr_2).w,a4
		lea	($FFFFF789).w,a1
		lea	($FFFFF786).w,a6
		moveq	#-2,d6
		bsr.w	sub_DF80
		lea	($FFFFF789).w,a1
		moveq	#-1,d6
		bsr.w	sub_DF80
		lea	($FFFFF789).w,a1
		moveq	#0,d6
		bsr.w	sub_DF80

loc_DE5C:
		move.w	($FFFFEE00).w,d1
		andi.w	#$FF00,d1
		move.w	d1,($FFFFF7DA).w
		move.w	($FFFFEE20).w,d1
		andi.w	#$FF00,d1
		move.w	d1,($FFFFF7DC).w
		move.b	($FFFFEE00).w,d6
		andi.w	#$FF,d6
		move.w	(Camera_X_pos_last).w,d0
		cmp.w	(Camera_X_pos_last).w,d6
		beq.s	loc_DE9C
		move.w	d6,(Camera_X_pos_last).w
		lea	($FFFFFC00).w,a5
		lea	(Obj_load_addr_right).w,a4
		lea	($FFFFF786).w,a1
		lea	($FFFFF789).w,a6
		bsr.s	sub_DED2

loc_DE9C:
		move.b	($FFFFEE20).w,d6
		andi.w	#$FF,d6
		move.w	(Camera_X_pos_last_P2).w,d0
		cmp.w	(Camera_X_pos_last_P2).w,d6
		beq.s	loc_DEC4
		move.w	d6,(Camera_X_pos_last_P2).w
		lea	($FFFFF78E).w,a5
		lea	(Obj_load_addr_2).w,a4
		lea	($FFFFF789).w,a1
		lea	($FFFFF786).w,a6
		bsr.s	sub_DED2

loc_DEC4:
		move.w	($FFFFFC00).w,($FFFFFFEC).w
		move.w	($FFFFF78E).w,($FFFFFFEE).w
		rts
; ===========================================================================

sub_DED2:
		lea	($FFFFFC00).w,a2
		moveq	#0,d2
		cmp.w	d0,d6
		beq.w	locret_DDDE
		bge.w	sub_DF80
		move.b	2(a1),d2
		move.b	1(a1),2(a1)
		move.b	(a1),1(a1)
		move.b	d6,(a1)
		cmp.b	(a6),d2
		beq.s	loc_DF08
		cmp.b	1(a6),d2
		beq.s	loc_DF08
		cmp.b	2(a6),d2
		beq.s	loc_DF08
		bsr.w	sub_E062
		bra.s	loc_DF0C
; ===========================================================================

loc_DF08:
		bsr.w	sub_E026

loc_DF0C:
		bsr.w	sub_E002
		bne.s	loc_DF30
		movea.l	4(a4),a0

loc_DF16:
		cmp.b	-6(a0),d6
		bne.s	loc_DF2A
		tst.b	-2(a0)
		bpl.s	loc_DF26
		subq.b	#1,1(a5)

loc_DF26:
		subq.w	#6,a0
		bra.s	loc_DF16
; ===========================================================================

loc_DF2A:
		move.l	a0,4(a4)
		bra.s	loc_DF66
; ===========================================================================

loc_DF30:
		movea.l	4(a4),a0
		move.b	d6,(a1)

loc_DF36:
		cmp.b	-6(a0),d6
		bne.s	loc_DF62
		subq.w	#6,a0
		tst.b	4(a0)
		bpl.s	loc_DF4C
		subq.b	#1,1(a5)
		move.b	1(a5),d2

loc_DF4C:
		bsr.w	sub_E122
		bne.s	loc_DF56
		subq.w	#6,a0
		bra.s	loc_DF36
; ===========================================================================

loc_DF56:
		tst.b	4(a0)
		bpl.s	loc_DF60
		addq.b	#1,1(a5)

loc_DF60:
		addq.w	#6,a0

loc_DF62:
		move.l	a0,4(a4)

loc_DF66:
		movea.l	(a4),a0
		addq.w	#3,d6

loc_DF6A:
		cmp.b	-6(a0),d6
		bne.s	loc_DF7C
		tst.b	-2(a0)
		bpl.s	loc_DF78
		subq.b	#1,(a5)

loc_DF78:
		subq.w	#6,a0
		bra.s	loc_DF6A
; ===========================================================================

loc_DF7C:
		move.l	a0,(a4)
		rts
; ===========================================================================

sub_DF80:
		addq.w	#2,d6
		move.b	(a1),d2
		move.b	1(a1),(a1)
		move.b	2(a1),1(a1)
		move.b	d6,2(a1)
		cmp.b	(a6),d2
		beq.s	loc_DFA8
		cmp.b	1(a6),d2
		beq.s	loc_DFA8
		cmp.b	2(a6),d2
		beq.s	loc_DFA8
		bsr.w	sub_E062
		bra.s	loc_DFAC
; ===========================================================================

loc_DFA8:
		bsr.w	sub_E026

loc_DFAC:
		bsr.w	sub_E002
		bne.s	loc_DFC8
		movea.l	(a4),a0

loc_DFB4:
		cmp.b	(a0),d6
		bne.s	loc_DFC4
		tst.b	4(a0)
		bpl.s	loc_DFC0
		addq.b	#1,(a5)

loc_DFC0:
		addq.w	#6,a0
		bra.s	loc_DFB4
; ===========================================================================

loc_DFC4:
		move.l	a0,(a4)
		bra.s	loc_DFE2
; ===========================================================================

loc_DFC8:
		movea.l	(a4),a0
		move.b	d6,(a1)

loc_DFCC:
		cmp.b	(a0),d6
		bne.s	loc_DFE0
		tst.b	4(a0)
		bpl.s	loc_DFDA
		move.b	(a5),d2
		addq.b	#1,(a5)

loc_DFDA:
		bsr.w	sub_E122
		beq.s	loc_DFCC

loc_DFE0:
		move.l	a0,(a4)

loc_DFE2:
		movea.l	4(a4),a0
		subq.w	#3,d6
		bcs.s	loc_DFFC

loc_DFEA:
		cmp.b	(a0),d6
		bne.s	loc_DFFC
		tst.b	4(a0)
		bpl.s	loc_DFF8
		addq.b	#1,1(a5)

loc_DFF8:
		addq.w	#6,a0
		bra.s	loc_DFEA
; ===========================================================================

loc_DFFC:
		move.l	a0,4(a4)
		rts
; End of function sub_DF80


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_E002:
		move.l	a1,-(sp)
		lea	($FFFFF780).w,a1
		cmp.b	(a1)+,d6
		beq.s	loc_E022
		cmp.b	(a1)+,d6
		beq.s	loc_E022
		cmp.b	(a1)+,d6
		beq.s	loc_E022
		cmp.b	(a1)+,d6
		beq.s	loc_E022
		cmp.b	(a1)+,d6
		beq.s	loc_E022
		cmp.b	(a1)+,d6
		beq.s	loc_E022
		moveq	#1,d0

loc_E022:
		movea.l	(sp)+,a1
		rts
; End of function sub_E002


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_E026:
		lea	($FFFFF780).w,a1
		lea	($FFFFBE00).w,a3
		tst.b	(a1)+
		bmi.s	loc_E05E
		lea	($FFFFC100).w,a3
		tst.b	(a1)+
		bmi.s	loc_E05E
		lea	($FFFFC400).w,a3
		tst.b	(a1)+
		bmi.s	loc_E05E
		lea	($FFFFC700).w,a3
		tst.b	(a1)+
		bmi.s	loc_E05E
		lea	($FFFFCA00).w,a3
		tst.b	(a1)+
		bmi.s	loc_E05E
		lea	($FFFFCD00).w,a3
		tst.b	(a1)+
		bmi.s	loc_E05E
		nop
		nop

loc_E05E:
		subq.w	#1,a1
		rts
; End of function sub_E026


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_E062:				; CODE XREF: sub_DED2+30p sub_DF80+22p
		lea	($FFFFF780).w,a1
		lea	($FFFFBE00).w,a3
		cmp.b	(a1)+,d2
		beq.s	loc_E09A
		lea	($FFFFC100).w,a3
		cmp.b	(a1)+,d2
		beq.s	loc_E09A
		lea	($FFFFC400).w,a3
		cmp.b	(a1)+,d2
		beq.s	loc_E09A
		lea	($FFFFC700).w,a3
		cmp.b	(a1)+,d2
		beq.s	loc_E09A
		lea	($FFFFCA00).w,a3
		cmp.b	(a1)+,d2
		beq.s	loc_E09A
		lea	($FFFFCD00).w,a3
		cmp.b	(a1)+,d2
		beq.s	loc_E09A
		nop
		nop

loc_E09A:				; CODE XREF: sub_E062+Aj sub_E062+12j	...
		move.b	#$FF,-(a1)
		movem.l	a1/a3,-(sp)
		moveq	#0,d1
		moveq	#$B,d2

loc_E0A6:				; CODE XREF: sub_E062+64j
		tst.b	(a3)
		beq.s	loc_E0C2
		movea.l	a3,a1
		moveq	#0,d0
		move.b	$23(a1),d0
		beq.s	loc_E0BA
		bclr	#7,2(a2,d0.w)

loc_E0BA:				; CODE XREF: sub_E062+50j
		moveq	#$F,d0

loc_E0BC:				; CODE XREF: sub_E062+5Cj
		move.l	d1,(a1)+
		dbf	d0,loc_E0BC

loc_E0C2:				; CODE XREF: sub_E062+46j
		lea	$40(a3),a3
		dbf	d2,loc_E0A6
		moveq	#0,d2
		movem.l	(sp)+,a1/a3
		rts
; End of function sub_E062


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_E0D2:				; CODE XREF: ROM:loc_DD60p
					; ROM:loc_DDB4p
		tst.b	4(a0)
		bpl.s	loc_E0E6
		bset	#7,2(a2,d2.w)
		beq.s	loc_E0E6
		addq.w	#6,a0
		moveq	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_E0E6:				; CODE XREF: sub_E0D2+4j sub_E0D2+Cj
		bsr.w	SingleObjLoad
		bne.s	locret_E120
		move.w	(a0)+,8(a1)
		move.w	(a0)+,d0
		move.w	d0,d1
		andi.w	#$FFF,d0
		move.w	d0,$C(a1)
		rol.w	#2,d1
		andi.b	#3,d1
		move.b	d1,1(a1)
		move.b	d1,$22(a1)
		move.b	(a0)+,d0
		bpl.s	loc_E116
		andi.b	#$7F,d0	; ''
		move.b	d2,$23(a1)

loc_E116:				; CODE XREF: sub_E0D2+3Aj
		move.b	d0,0(a1)
		move.b	(a0)+,$28(a1)
		moveq	#0,d0

locret_E120:				; CODE XREF: sub_E0D2+18j
		rts
; End of function sub_E0D2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_E122:				; CODE XREF: sub_DED2:loc_DF4Cp
					; sub_DF80:loc_DFDAp
		tst.b	4(a0)
		bpl.s	loc_E136
		bset	#7,2(a2,d2.w)
		beq.s	loc_E136
		addq.w	#6,a0
		moveq	#0,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_E136:				; CODE XREF: sub_E122+4j sub_E122+Cj
		btst	#5,2(a0)
		beq.s	loc_E146
		bsr.w	SingleObjLoad
		bne.s	locret_E180
		bra.s	loc_E14C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_E146:				; CODE XREF: sub_E122+1Aj
		bsr.w	SingleObjLoad3
		bne.s	locret_E180

loc_E14C:				; CODE XREF: sub_E122+22j
		move.w	(a0)+,8(a1)
		move.w	(a0)+,d0
		move.w	d0,d1
		andi.w	#$FFF,d0
		move.w	d0,$C(a1)
		rol.w	#2,d1
		andi.b	#3,d1
		move.b	d1,1(a1)
		move.b	d1,$22(a1)
		move.b	(a0)+,d0
		bpl.s	loc_E176
		andi.b	#$7F,d0	; ''
		move.b	d2,$23(a1)

loc_E176:				; CODE XREF: sub_E122+4Aj
		move.b	d0,0(a1)
		move.b	(a0)+,$28(a1)
		moveq	#0,d0

locret_E180:				; CODE XREF: sub_E122+20j sub_E122+28j
		rts
; End of function sub_E122

; ===========================================================================
; ---------------------------------------------------------------------------
; Single object loading subroutine
; Find an empty object array
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_E182: SingleObjectLoad:
SingleObjLoad:
		lea	($FFFFB800).w,a1	; a1=object
		move.w	#$5F,d0			; search to end of table

loc_E18A:
		tst.b	(a1)		; is object RAM slot empty?
		beq.s	locret_E196	; if yes, branch
		lea	$40(a1),a1	; load obj address ; goto next object RAM slot
		dbf	d0,loc_E18A	; repeat until end

locret_E196:
		rts
; End of function SingleObjLoad

; ===========================================================================
; ---------------------------------------------------------------------------
; Single object loading subroutine
; Find an empty object array AFTER the current one in the table
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_E198: S1SingleObjectLoad2:
SingleObjLoad2:
		movea.l	a0,a1
		move.w	#$D000,d0
		sub.w	a0,d0	; subtract current object location
		lsr.w	#6,d0	; divide by $40
		subq.w	#1,d0	; keep from going over the object zone
		bcs.s	locret_E1B2

loc_E1A6:
		tst.b	(a1)		; is object RAM slot empty?
		beq.s	locret_E1B2	; if yes, branch
		lea	$40(a1),a1	; load obj address ; goto next object RAM slot
		dbf	d0,loc_E1A6	; repeat until end

locret_E1B2:
		rts
; End of function SingleObjLoad2

; ===========================================================================
; ---------------------------------------------------------------------------
; Single object loading subroutine
; Find an empty object at or within < 12 slots after a3
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_E1B4:
SingleObjLoad3:
		movea.l	a3,a1
		move.w	#$B,d0

loc_E1BA:
		tst.b	(a1)		; is object RAM slot empty?
		beq.s	locret_E1C6	; if yes, branch
		lea	$40(a1),a1	; load obj address ; goto next object RAM slot
		dbf	d0,loc_E1BA	; repeat until end

locret_E1C6:
		rts
; End of function SingleObjLoad3


; ===========================================================================
; ---------------------------------------------------------------------------
; Object 41 - springs
; ---------------------------------------------------------------------------

Obj41:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj41_Index(pc,d0.w),d1
		jsr	Obj41_Index(pc,d1.w)
		tst.w	(Two_player_mode).w
		beq.s	loc_E1E0
		bra.w	DisplaySprite
; ---------------------------------------------------------------------------

loc_E1E0:
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ===========================================================================
Obj41_Index:	dc.w Obj41_Init-Obj41_Index		; 0
		dc.w Obj41_Up-Obj41_Index		; 2
		dc.w Obj41_Horizontal-Obj41_Index	; 4
		dc.w Obj41_Down-Obj41_Index		; 6
		dc.w Obj41_DiagonallyUp-Obj41_Index	; 8
		dc.w Obj41_DiagonallyDown-Obj41_Index	; $A
; ============================================================================
; loc_E204:
Obj41_Init:
		addq.b	#2,routine(a0)
		move.l	#Map_obj41_GHZ,4(a0)
		move.w	#$4A8,2(a0)
		tst.b	(Current_Zone).w
		beq.s	loc_E22A
		move.l	#Map_obj41,4(a0)
		move.w	#$45C,2(a0)

loc_E22A:
		ori.b	#4,1(a0)
		move.b	#$10,$19(a0)
		move.b	#4,$18(a0)
		move.b	$28(a0),d0
		lsr.w	#3,d0
		andi.w	#$E,d0
		move.w	Obj41_Init_Subtypes(pc,d0.w),d0
		jmp	Obj41_Init_Subtypes(pc,d0.w)
; ===========================================================================
Obj41_Init_Subtypes:
		dc.w Obj41_Init_Common-Obj41_Init_Subtypes
		dc.w Obj41_Init_Horizontal-Obj41_Init_Subtypes
		dc.w Obj41_Init_Down-Obj41_Init_Subtypes
		dc.w Obj41_Init_DiagonallyUp-Obj41_Init_Subtypes
		dc.w Obj41_Init_DiagonallyDown-Obj41_Init_Subtypes
; ===========================================================================
; loc_E258:
Obj41_Init_Horizontal:
		move.b	#4,routine(a0)
		move.b	#2,$1C(a0)
		move.b	#3,$1A(a0)
		move.w	#$4B8,2(a0)
		tst.b	(Current_Zone).w
		beq.s	loc_E27C
		move.w	#$470,2(a0)

loc_E27C:
		move.b	#8,$19(a0)
		bra.s	Obj41_Init_Common
; ===========================================================================
; loc_E284:
Obj41_Init_Down:
		move.b	#6,routine(a0)
		move.b	#6,$1A(a0)
		bset	#1,$22(a0)
		bra.s	Obj41_Init_Common
; ===========================================================================
; loc_E298:
Obj41_Init_DiagonallyUp:
		move.b	#8,routine(a0)
		move.b	#4,$1C(a0)
		move.b	#7,$1A(a0)
		move.w	#$43C,2(a0)
		bra.s	Obj41_Init_Common
; ===========================================================================
; loc_E2B2:
Obj41_Init_DiagonallyDown:
		move.b	#$A,routine(a0)
		move.b	#4,$1C(a0)
		move.b	#$A,$1A(a0)
		move.w	#$43C,2(a0)
		bset	#1,$22(a0)
; loc_E2D0:
Obj41_Init_Common:
		move.b	$28(a0),d0
		andi.w	#2,d0
		move.w	Obj41_Strengths(pc,d0.w),$30(a0)
		btst	#1,d0
		beq.s	loc_E2F8
		bset	#5,2(a0)
		tst.b	(Current_Zone).w
		beq.s	loc_E2F8
		move.l	#Map_obj41a,4(a0)

loc_E2F8:
		bsr.w	Adjust2PArtPointer
		rts
; ===========================================================================
; word_E2FE:
Obj41_Strengths:	dc.w -$1000
			dc.w -$A00
; ===========================================================================
; loc_E302:
Obj41_Up:
		move.w	#$1B,d1
		move.w	#8,d2
		move.w	#$10,d3
		move.w	8(a0),d4
		lea	($FFFFB000).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SolidObject_Always_SingleCharacter
		btst	#3,$22(a0)
		beq.s	loc_E32A
		bsr.s	sub_E34E

loc_E32A:
		movem.l	(sp)+,d1-d4
		lea	($FFFFB040).w,a1
		moveq	#4,d6
		bsr.w	SolidObject_Always_SingleCharacter
		btst	#4,$22(a0)
		beq.s	loc_E342
		bsr.s	sub_E34E

loc_E342:
		lea	(Ani_obj41).l,a1
		bra.w	AnimateSprite
; ===========================================================================
		rts

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


sub_E34E:
		move.w	#$100,$1C(a0)
		addq.w	#8,$C(a1)
		move.w	$30(a0),$12(a1)
		bset	#1,$22(a1)
		bclr	#3,$22(a1)
		move.b	#$10,$1C(a1)
		move.b	#2,routine(a1)
		move.b	$28(a0),d0
		bpl.s	loc_E382
		move.w	#0,$10(a1)

loc_E382:
		btst	#0,d0
		beq.s	loc_E3C2
		move.w	#1,$14(a1)
		move.b	#1,$27(a1)
		move.b	#0,$1C(a1)
		move.b	#0,$2C(a1)
		move.b	#4,$2D(a1)
		btst	#1,d0
		bne.s	loc_E3B2
		move.b	#1,$2C(a1)

loc_E3B2:
		btst	#0,$22(a1)
		beq.s	loc_E3C2
		neg.b	$27(a1)
		neg.w	$14(a1)

loc_E3C2:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_E3D8
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)

loc_E3D8:
		cmpi.b	#8,d0
		bne.s	loc_E3EA
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_E3EA:
		move.w	#$CC,d0
		jmp	(PlaySound_Special).l
; End of function sub_E34E

; ===========================================================================
; loc_E3F4:
Obj41_Horizontal:
		move.w	#$13,d1
		move.w	#$E,d2
		move.w	#$F,d3
		move.w	8(a0),d4
		lea	($FFFFB000).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SolidObject_Always_SingleCharacter
		btst	#5,$22(a0)
		beq.s	loc_E434
		move.b	$22(a0),d1
		move.w	8(a0),d0
		sub.w	8(a1),d0
		bcs.s	loc_E42C
		eori.b	#1,d1

loc_E42C:
		andi.b	#1,d1
		bne.s	loc_E434
		bsr.s	sub_E474

loc_E434:
		movem.l	(sp)+,d1-d4
		lea	($FFFFB040).w,a1
		moveq	#4,d6
		bsr.w	SolidObject_Always_SingleCharacter
		btst	#6,$22(a0)
		beq.s	loc_E464
		move.b	$22(a0),d1
		move.w	8(a0),d0
		sub.w	8(a1),d0
		bcs.s	loc_E45C
		eori.b	#1,d1

loc_E45C:
		andi.b	#1,d1
		bne.s	loc_E464
		bsr.s	sub_E474

loc_E464:
		bsr.w	sub_E54C
		lea	(Ani_obj41).l,a1
		bra.w	AnimateSprite
; ===========================================================================
		rts

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


sub_E474:
		move.w	#$300,$1C(a0)
		move.w	$30(a0),$10(a1)
		addq.w	#8,8(a1)
		bset	#0,$22(a1)
		btst	#0,$22(a0)
		bne.s	loc_E4A2
		bclr	#0,$22(a1)
		subi.w	#$10,8(a1)
		neg.w	$10(a1)

loc_E4A2:
		move.w	#$F,$2E(a1)
		move.w	$10(a1),$14(a1)
		btst	#2,$22(a1)
		bne.s	loc_E4BC
		move.b	#0,$1C(a1)

loc_E4BC:
		move.b	$28(a0),d0
		bpl.s	loc_E4C8
		move.w	#0,$12(a1)

loc_E4C8:
		btst	#0,d0
		beq.s	loc_E508
		move.w	#1,$14(a1)
		move.b	#1,$27(a1)
		move.b	#0,$1C(a1)
		move.b	#1,$2C(a1)
		move.b	#8,$2D(a1)
		btst	#1,d0
		bne.s	loc_E4F8
		move.b	#3,$2C(a1)

loc_E4F8:
		btst	#0,$22(a1)
		beq.s	loc_E508
		neg.b	$27(a1)
		neg.w	$14(a1)

loc_E508:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_E51E
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)

loc_E51E:
		cmpi.b	#8,d0
		bne.s	loc_E530
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_E530:
		bclr	#5,$22(a0)
		bclr	#6,$22(a0)
		bclr	#5,$22(a1)
		move.w	#$CC,d0
		jmp	(PlaySound_Special).l
; End of function sub_E474


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


sub_E54C:
		cmpi.b	#3,$1C(a0)
		beq.w	locret_E604
		move.w	8(a0),d0
		move.w	d0,d1
		addi.w	#$28,d1
		btst	#0,$22(a0)
		beq.s	loc_E56E
		move.w	d0,d1
		subi.w	#$28,d0

loc_E56E:
		move.w	$C(a0),d2
		move.w	d2,d3
		subi.w	#$18,d2
		addi.w	#$18,d3
		lea	($FFFFB000).w,a1
		btst	#1,$22(a1)
		bne.s	loc_E5C2
		move.w	$14(a1),d4
		btst	#0,$22(a0)
		beq.s	loc_E596
		neg.w	d4

loc_E596:
		tst.w	d4
		bmi.s	loc_E5C2
		move.w	8(a1),d4
		cmp.w	d0,d4
		bcs.w	loc_E5C2
		cmp.w	d1,d4
		bcc.w	loc_E5C2
		move.w	$C(a1),d4
		cmp.w	d2,d4
		bcs.w	loc_E5C2
		cmp.w	d3,d4
		bcc.w	loc_E5C2
		move.w	d0,-(sp)
		bsr.w	sub_E474
		move.w	(sp)+,d0

loc_E5C2:
		lea	($FFFFB040).w,a1
		btst	#1,$22(a1)
		bne.s	locret_E604
		move.w	$14(a1),d4
		btst	#0,$22(a0)
		beq.s	loc_E5DC
		neg.w	d4

loc_E5DC:
		tst.w	d4
		bmi.s	locret_E604
		move.w	8(a1),d4
		cmp.w	d0,d4
		bcs.w	locret_E604
		cmp.w	d1,d4
		bcc.w	locret_E604
		move.w	$C(a1),d4
		cmp.w	d2,d4
		bcs.w	locret_E604
		cmp.w	d3,d4
		bcc.w	locret_E604
		bsr.w	sub_E474

locret_E604:
		rts
; End of function sub_E54C

; ===========================================================================
; loc_E606:
Obj41_Down:
		move.w	#$1B,d1
		move.w	#8,d2
		move.w	#$10,d3
		move.w	8(a0),d4
		lea	($FFFFB000).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SolidObject_Always_SingleCharacter
		cmpi.w	#-2,d4
		bne.s	loc_E62C
		bsr.s	sub_E64E

loc_E62C:
		movem.l	(sp)+,d1-d4
		lea	($FFFFB040).w,a1
		moveq	#4,d6
		bsr.w	SolidObject_Always_SingleCharacter
		cmpi.w	#-2,d4
		bne.s	loc_E642
		bsr.s	sub_E64E

loc_E642:
		lea	(Ani_obj41).l,a1
		bra.w	AnimateSprite
; ===========================================================================
		rts

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


sub_E64E:
		move.w	#$100,$1C(a0)
		subq.w	#8,$C(a1)
		move.w	$30(a0),$12(a1)
		neg.w	$12(a1)
		move.b	$28(a0),d0
		bpl.s	loc_E66E
		move.w	#0,$10(a1)

loc_E66E:
		btst	#0,d0
		beq.s	loc_E6AE
		move.w	#1,$14(a1)
		move.b	#1,$27(a1)
		move.b	#0,$1C(a1)
		move.b	#0,$2C(a1)
		move.b	#4,$2D(a1)
		btst	#1,d0
		bne.s	loc_E69E
		move.b	#1,$2C(a1)

loc_E69E:
		btst	#0,$22(a1)
		beq.s	loc_E6AE
		neg.b	$27(a1)
		neg.w	$14(a1)

loc_E6AE:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_E6C4
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)

loc_E6C4:
		cmpi.b	#8,d0
		bne.s	loc_E6D6
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_E6D6:
		bset	#1,$22(a1)
		bclr	#3,$22(a1)
		move.b	#2,routine(a1)
		move.w	#$CC,d0
		jmp	(PlaySound_Special).l
; End of function sub_E64E

; ===========================================================================
; loc_E6F2:
Obj41_DiagonallyUp:
		move.w	#$1B,d1
		move.w	#$10,d2
		move.w	8(a0),d4
		lea	Obj41_SlopeData_DiagUp(pc),a2
		lea	($FFFFB000).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SlopedSolid_SingleCharacter
		btst	#3,$22(a0)
		beq.s	loc_E71A
		bsr.s	sub_E73E

loc_E71A:
		movem.l	(sp)+,d1-d4
		lea	($FFFFB040).w,a1
		moveq	#4,d6
		bsr.w	SlopedSolid_SingleCharacter
		btst	#4,$22(a0)
		beq.s	loc_E732
		bsr.s	sub_E73E

loc_E732:
		lea	(Ani_obj41).l,a1
		bra.w	AnimateSprite
; ===========================================================================
		rts

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


sub_E73E:
		btst	#0,$22(a0)
		bne.s	loc_E754
		move.w	8(a0),d0
		subq.w	#4,d0
		cmp.w	8(a1),d0
		bcs.s	loc_E762
		rts
; ===========================================================================

loc_E754:
		move.w	8(a0),d0
		addq.w	#4,d0
		cmp.w	8(a1),d0
		bcc.s	loc_E762
		rts
; ===========================================================================

loc_E762:
		move.w	#$500,$1C(a0)
		move.w	$30(a0),$12(a1)
		move.w	$30(a0),$10(a1)
		addq.w	#6,$C(a1)
		addq.w	#6,8(a1)
		bset	#0,$22(a1)
		btst	#0,$22(a0)
		bne.s	loc_E79A
		bclr	#0,$22(a1)
		subi.w	#$C,8(a1)
		neg.w	$10(a1)

loc_E79A:
		bset	#1,$22(a1)
		bclr	#3,$22(a1)
		move.b	#$10,$1C(a1)
		move.b	#2,routine(a1)
		move.b	$28(a0),d0
		btst	#0,d0
		beq.s	loc_E7F6
		move.w	#1,$14(a1)
		move.b	#1,$27(a1)
		move.b	#0,$1C(a1)
		move.b	#1,$2C(a1)
		move.b	#8,$2D(a1)
		btst	#1,d0
		bne.s	loc_E7E6
		move.b	#3,$2C(a1)

loc_E7E6:
		btst	#0,$22(a1)
		beq.s	loc_E7F6
		neg.b	$27(a1)
		neg.w	$14(a1)

loc_E7F6:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_E80C
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)

loc_E80C:
		cmpi.b	#8,d0
		bne.s	loc_E81E
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_E81E:
		move.w	#$CC,d0
		jmp	(PlaySound_Special).l
; End of function sub_E73E

; ===========================================================================
; loc_E828:
Obj41_DiagonallyDown:
		move.w	#$1B,d1
		move.w	#$10,d2
		move.w	8(a0),d4
		lea	Obj41_SlopeData_DiagDown(pc),a2
		lea	($FFFFB000).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SlopedSolid_SingleCharacter
		cmpi.w	#-2,d4
		bne.s	loc_E84E
		bsr.s	sub_E870

loc_E84E:
		movem.l	(sp)+,d1-d4
		lea	($FFFFB040).w,a1
		moveq	#4,d6
		bsr.w	SlopedSolid_SingleCharacter
		cmpi.w	#-2,d4
		bne.s	loc_E864
		bsr.s	sub_E870

loc_E864:
		lea	(Ani_obj41).l,a1
		bra.w	AnimateSprite
; ===========================================================================
		rts

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


sub_E870:
		move.w	#$500,$1C(a0)
		move.w	$30(a0),$12(a1)
		neg.w	$12(a1)
		move.w	$30(a0),$10(a1)
		subq.w	#6,$C(a1)
		addq.w	#6,8(a1)
		bset	#0,$22(a1)
		btst	#0,$22(a0)
		bne.s	loc_E8AC
		bclr	#0,$22(a1)
		subi.w	#$C,8(a1)
		neg.w	$10(a1)

loc_E8AC:
		bset	#1,$22(a1)
		bclr	#3,$22(a1)
		move.b	#2,routine(a1)
		move.b	$28(a0),d0
		btst	#0,d0
		beq.s	loc_E902
		move.w	#1,$14(a1)
		move.b	#1,$27(a1)
		move.b	#0,$1C(a1)
		move.b	#1,$2C(a1)
		move.b	#8,$2D(a1)
		btst	#1,d0
		bne.s	loc_E8F2
		move.b	#3,$2C(a1)

loc_E8F2:
		btst	#0,$22(a1)
		beq.s	loc_E902
		neg.b	$27(a1)
		neg.w	$14(a1)

loc_E902:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_E918
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)

loc_E918:
		cmpi.b	#8,d0
		bne.s	loc_E92A
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_E92A:
		move.w	#$CC,d0
		jmp	(PlaySound_Special).l
; End of function sub_E870

; ===========================================================================
; byte_E934:
Obj41_SlopeData_DiagUp:
		dc.b $10,$10,$10,$10
		dc.b $10,$10,$10,$10
		dc.b $10,$10,$10,$10
		dc.b  $E, $C, $A,  8
		dc.b   6,  4,  2,  0
		dc.b $FE,$FC,$FC,$FC
		dc.b $FC,$FC,$FC,$FC
; byte_E950:
Obj41_SlopeData_DiagDown:
		dc.b $F4,$F0,$F0,$F0
		dc.b $F0,$F0,$F0,$F0
		dc.b $F0,$F0,$F0,$F0
		dc.b $F2,$F4,$F6,$F8
		dc.b $FA,$FC,$FE,  0
		dc.b   2,  4,  4,  4
		dc.b   4,  4,  4,  4

; animation script
Ani_obj41:	dc.w byte_E978-Ani_obj41
		dc.w byte_E97B-Ani_obj41
		dc.w byte_E987-Ani_obj41
		dc.w byte_E98A-Ani_obj41
		dc.w byte_E996-Ani_obj41
		dc.w byte_E999-Ani_obj41
byte_E978:	dc.b  $F,  0,$FF
byte_E97B:	dc.b   0,  1,  0,  0,  2,  2,  2,  2
		dc.b   2,  2,$FD,  0
byte_E987:	dc.b  $F,  3,$FF
byte_E98A:	dc.b   0,  4,  3,  3,  5,  5,  5,  5
		dc.b   5,  5,$FD,  2
byte_E996:	dc.b  $F,  7,$FF
byte_E999:	dc.b   0,  8,  7,  7,  9,  9,  9,  9
		dc.b   9,  9,$FD,  4,  0

; ----------------------------------------------------------------------------
; Sprite mappings - GHZ springs
; ----------------------------------------------------------------------------
Map_obj41_GHZ:	incbin	"mappings/sprite/obj41_GHZ.bin"
; ----------------------------------------------------------------------------
; Primary sprite mappings for springs
; ----------------------------------------------------------------------------
Map_obj41:	dc.w word_EA4A-Map_obj41
		dc.w word_EA5C-Map_obj41
		dc.w word_EA66-Map_obj41
		dc.w word_EA78-Map_obj41
		dc.w word_EA8A-Map_obj41
		dc.w word_EA94-Map_obj41
		dc.w word_EAA6-Map_obj41
		dc.w word_EAB8-Map_obj41
		dc.w word_EADA-Map_obj41
		dc.w word_EAF4-Map_obj41
		dc.w word_EB16-Map_obj41
; -------------------------------------------------------------------------------
; Secondary sprite mappings for springs
; merged with the above mappings; can't split to file in a useful way...
; -------------------------------------------------------------------------------
Map_obj41a:	dc.w word_EA4A-Map_obj41a
		dc.w word_EA5C-Map_obj41a
		dc.w word_EA66-Map_obj41a
		dc.w word_EA78-Map_obj41a
		dc.w word_EA8A-Map_obj41a
		dc.w word_EA94-Map_obj41a
		dc.w word_EAA6-Map_obj41a
		dc.w word_EB38-Map_obj41a
		dc.w word_EB5A-Map_obj41a
		dc.w word_EB74-Map_obj41a
		dc.w word_EB96-Map_obj41a
word_EA4A:	dc.w 2
		dc.w $F00D,    0,    0,$FFF0
		dc.w	 5,    8,    4,$FFF8
word_EA5C:	dc.w 1
		dc.w $F80D,    0,    0,$FFF0
word_EA66:	dc.w 2
		dc.w $E00D,    0,    0,$FFF0
		dc.w $F007,   $C,    6,$FFF8
word_EA78:	dc.w 2
		dc.w $F003,    0,    0,	   0
		dc.w $F801,    4,    2,$FFF8
word_EA8A:	dc.w 1
		dc.w $F003,    0,    0,$FFF8
word_EA94:	dc.w 2
		dc.w $F003,    0,    0,	 $10
		dc.w $F809,    6,    3,$FFF8
word_EAA6:	dc.w 2
		dc.w	$D,$1000,$1000,$FFF0
		dc.w $F005,$1008,$1004,$FFF8
word_EAB8:	dc.w 4
		dc.w $F00D,    0,    0,$FFF0
		dc.w	 5,    8,    4,	   0
		dc.w $FB05,   $C,    6,$FFF6
		dc.w	 5,$201C,$200E,$FFF0
word_EADA:	dc.w 3
		dc.w $F60D,    0,    0,$FFEA
		dc.w  $605,    8,    4,$FFFA
		dc.w	 5,$201C,$200E,$FFF0
word_EAF4:	dc.w 4
		dc.w $E60D,    0,    0,$FFFB
		dc.w $F605,    8,    4,	  $B
		dc.w $F30B,  $10,    8,$FFF6
		dc.w	 5,$201C,$200E,$FFF0
word_EB16:	dc.w 4
		dc.w	$D,$1000,$1000,$FFF0
		dc.w $F005,$1008,$1004,	   0
		dc.w $F505,$100C,$1006,$FFF6
		dc.w $F005,$301C,$300E,$FFF0
word_EB38:	dc.w 4
		dc.w $F00D,    0,    0,$FFF0
		dc.w	 5,    8,    4,	   0
		dc.w $FB05,   $C,    6,$FFF6
		dc.w	 5,  $1C,   $E,$FFF0
word_EB5A:	dc.w 3
		dc.w $F60D,    0,    0,$FFEA
		dc.w  $605,    8,    4,$FFFA
		dc.w	 5,  $1C,   $E,$FFF0
word_EB74:	dc.w 4
		dc.w $E60D,    0,    0,$FFFB
		dc.w $F605,    8,    4,	  $B
		dc.w $F30B,  $10,    8,$FFF6
		dc.w	 5,  $1C,   $E,$FFF0
word_EB96:	dc.w 4
		dc.w	$D,$1000,$1000,$FFF0
		dc.w $F005,$1008,$1004,	   0
		dc.w $F505,$100C,$1006,$FFF6
		dc.w $F005,$101C,$100E,$FFF0

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 42 - GHZ Newtron badnik
; ---------------------------------------------------------------------------

Obj42:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj42_Index(pc,d0.w),d1
		jmp	Obj42_Index(pc,d1.w)
; ===========================================================================
Obj42_Index:	dc.w Obj42_Init-Obj42_Index
		dc.w Obj42_Main-Obj42_Index
		dc.w Obj42_Delete-Obj42_Index
; ===========================================================================
; loc_EBCC:
Obj42_Init:
		addq.b	#2,routine(a0)
		move.l	#Map_obj42,4(a0)
		move.w	#$49B,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#$14,$19(a0)
		move.b	#$10,$16(a0)
		move.b	#8,$17(a0)
; loc_EC00:
Obj42_Main
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj42_Main_Index(pc,d0.w),d1
		jsr	Obj42_Main_Index(pc,d1.w)
		lea	(Ani_obj42).l,a1
		bsr.w	AnimateSprite
		bra.w	MarkObjGone
; ===========================================================================
Obj42_Main_Index:	dc.w Obj42_ChkDistance-Obj42_Main_Index
			dc.w Obj42_Type00-Obj42_Main_Index
			dc.w Obj42_ChkFloor-Obj42_Main_Index
			dc.w Obj42_Move-Obj42_Main_Index
			dc.w Obj42_Type02-Obj42_Main_Index
; ===========================================================================
; loc_EC26:
Obj42_ChkDistance:
		bset	#0,$22(a0)
		move.w	($FFFFB008).w,d0
		sub.w	8(a0),d0
		bcc.s	loc_EC3E
		neg.w	d0
		bclr	#0,$22(a0)

loc_EC3E:
		cmpi.w	#$80,d0
		bcc.s	locret_EC6A
		addq.b	#2,$25(a0)
		move.b	#1,$1C(a0)
		tst.b	$28(a0)
		beq.s	locret_EC6A
		move.w	#$249B,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#8,$25(a0)
		move.b	#4,$1C(a0)

locret_EC6A:
		rts
; ===========================================================================
; Blue Newtron that appears before chasing Sonic/Tails
; loc_EC6C:
Obj42_Type00:
		cmpi.b	#4,$1A(a0)
		bcc.s	Obj42_Fall
		bset	#0,$22(a0)
		move.w	($FFFFB008).w,d0
		sub.w	8(a0),d0
		bcc.s	locret_EC8A
		bclr	#0,$22(a0)

locret_EC8A:
		rts
; ---------------------------------------------------------------------------
; loc_EC8C:
Obj42_Fall:
		cmpi.b	#1,$1A(a0)
		bne.s	loc_EC9A
		move.b	#$C,$20(a0)

loc_EC9A:
		bsr.w	ObjectMoveAndFall
		bsr.w	ObjHitFloor
		tst.w	d1
		bpl.s	locret_ECDE
		add.w	d1,$C(a0)
		move.w	#0,$12(a0)
		addq.b	#2,$25(a0)
		move.b	#2,$1C(a0)
		btst	#5,2(a0)
		beq.s	loc_ECC6
		addq.b	#1,$1C(a0)

loc_ECC6:
		move.b	#$D,$20(a0)
		move.w	#$200,$10(a0)
		btst	#0,$22(a0)
		bne.s	locret_ECDE
		neg.w	$10(a0)

locret_ECDE:
		rts
; ===========================================================================
; loc_ECE0:
Obj42_ChkFloor:
		bsr.w	ObjectMove
		bsr.w	ObjHitFloor
		cmpi.w	#-8,d1
		blt.s	loc_ECFA
		cmpi.w	#$C,d1
		bge.s	loc_ECFA
		add.w	d1,$C(a0)
		rts
; ---------------------------------------------------------------------------

loc_ECFA:
		addq.b	#2,$25(a0)
		rts
; ===========================================================================
; loc_ED00:
Obj42_Move:
		bsr.w	ObjectMove
		rts
; ===========================================================================
; Green Newtron that fires a missile
; loc_ED06:
Obj42_Type02:
		cmpi.b	#1,$1A(a0)
		bne.s	Obj42_FireMissile
		move.b	#$C,$20(a0)
; loc_ED14:
Obj42_FireMissile:
		cmpi.b	#2,$1A(a0)
		bne.s	locret_ED6C
		tst.b	$32(a0)
		bne.s	locret_ED6C
		move.b	#1,$32(a0)
		bsr.w	SingleObjLoad
		bne.s	locret_ED6C
		move.b	#$23,0(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		subq.w	#8,$C(a1)
		move.w	#$200,$10(a1)
		move.w	#$14,d0
		btst	#0,$22(a0)
		bne.s	loc_ED5C
		neg.w	d0
		neg.w	$10(a1)

loc_ED5C:
		add.w	d0,8(a1)
		move.b	$22(a0),$22(a1)
		move.b	#1,$28(a1)

locret_ED6C:
		rts
; ===========================================================================
; loc_ED6E:
Obj42_Delete:
		bra.w	DeleteObject
; ===========================================================================
; animation script
Ani_obj42:	dc.w byte_ED7C-Ani_obj42
		dc.w byte_ED7F-Ani_obj42
		dc.w byte_ED87-Ani_obj42
		dc.w byte_ED8B-Ani_obj42
		dc.w byte_ED8F-Ani_obj42
byte_ED7C:	dc.b  $F, $A,$FF
byte_ED7F:	dc.b $13,  0,  1,  3,  4,  5,$FE,  1
byte_ED87:	dc.b   2,  6,  7,$FF
byte_ED8B:	dc.b   2,  8,  9,$FF
byte_ED8F:	dc.b $13,  0,  1,  1,  2,  1,  1,  0
		dc.b $FC
; ---------------------------------------------------------------------------
; Sprite mappings
; ---------------------------------------------------------------------------
Map_obj42:	incbin	"mappings/sprite/obj42.bin"

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 44 - GHZ wall
; ---------------------------------------------------------------------------

Obj44:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj44_Index(pc,d0.w),d1
		jmp	Obj44_Index(pc,d1.w)
; ===========================================================================
Obj44_Index:	dc.w Obj44_Init-Obj44_Index
		dc.w Obj44_Main-Obj44_Index
		dc.w Obj44_Display-Obj44_Index
; ===========================================================================
; loc_EEC8:
Obj44_Init:
		addq.b	#2,routine(a0)
		move.l	#Map_obj44,4(a0)
		move.w	#$434C,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#8,$19(a0)
		move.b	#6,$18(a0)
		move.b	$28(a0),$1A(a0)
		bclr	#4,$1A(a0)
		beq.s	Obj44_Main
		addq.b	#2,routine(a0)
		bra.s	Obj44_Display
; ===========================================================================
; loc_EF04:
Obj44_Main:
		move.w	#$13,d1
		move.w	#$28,d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	8(a0),d4
		bsr.w	SolidObject
; loc_EF18:
Obj44_Display:
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ===========================================================================
; ---------------------------------------------------------------------------
; Sprite mappings
; ---------------------------------------------------------------------------
Map_obj44:	incbin	"mappings/sprite/obj44.bin"

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 0D - End of level signpost
; ---------------------------------------------------------------------------

Obj0D:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj0D_Index(pc,d0.w),d1
		jsr	Obj0D_Index(pc,d1.w)
		lea	(Ani_obj0D).l,a1
		bsr.w	AnimateSprite
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ===========================================================================
Obj0D_Index:	dc.w Obj0D_Init-Obj0D_Index
		dc.w Obj0D_Main-Obj0D_Index
		dc.w Obj0D_Spin-Obj0D_Index
		dc.w Obj0D_EndLevel-Obj0D_Index
		dc.w locret_F18A-Obj0D_Index
; ===========================================================================
; loc_EFD6:
Obj0D_Init:
		addq.b	#2,routine(a0)
		move.l	#Map_obj0D,4(a0)
		move.w	#$680,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$18,$19(a0)
		move.b	#4,$18(a0)
; loc_EFFE:
Obj0D_Main:
		move.w	($FFFFB008).w,d0
		sub.w	8(a0),d0
		bcs.s	locret_F026
		cmpi.w	#$20,d0
		bcc.s	locret_F026
		move.w	#$CF,d0
		jsr	(PlaySound).l
		clr.b	($FFFFFE1E).w
		move.w	($FFFFEECA).w,($FFFFEEC8).w
		addq.b	#2,routine(a0)

locret_F026:
		rts
; ===========================================================================
; loc_F028:
Obj0D_Spin:
		subq.w	#1,$30(a0)
		bpl.s	Obj0D_Sparkle
		move.w	#$3C,$30(a0)
		addq.b	#1,$1C(a0)
		cmpi.b	#3,$1C(a0)
		bne.s	Obj0D_Sparkle
		addq.b	#2,routine(a0)
; loc_F044:
Obj0D_Sparkle:
		subq.w	#1,$32(a0)
		bpl.s	locret_F0B2
		move.w	#$B,$32(a0)
		moveq	#0,d0
		move.b	$34(a0),d0
		addq.b	#2,$34(a0)
		andi.b	#$E,$34(a0)
		lea	Obj0D_RingSparklePositions(pc,d0.w),a2
		bsr.w	SingleObjLoad
		bne.s	locret_F0B2
		move.b	#$25,0(a1)
		move.b	#6,routine(a1)
		move.b	(a2)+,d0
		ext.w	d0
		add.w	8(a0),d0
		move.w	d0,8(a1)
		move.b	(a2)+,d0
		ext.w	d0
		add.w	$C(a0),d0
		move.w	d0,$C(a1)
		move.l	#Map_Obj25,4(a1)
		move.w	#$27B2,2(a1)
		bsr.w	Adjust2PArtPointer2
		move.b	#4,1(a1)
		move.b	#2,$18(a1)
		move.b	#8,$19(a1)

locret_F0B2:
		rts
; ===========================================================================
; dword_F0B4:
Obj0D_RingSparklePositions:
		dc.l $E8F00808
		dc.l $F00018F8
		dc.l $F81000
		dc.l $E8081810
; ===========================================================================
; loc_F0C4:
Obj0D_EndLevel:
		tst.w	(Debug_placement_mode).w
		bne.w	locret_F15E
		btst	#1,($FFFFB022).w
		bne.s	loc_F0E0
		move.b	#1,($FFFFF7CC).w
		move.w	#$800,($FFFFF602).w

loc_F0E0:
		; This check here is for S1's Big Ring, which would set Sonic's Object ID to 0
		tst.b	($FFFFB000).w
		beq.s	loc_F0F6
		move.w	($FFFFB008).w,d0
		move.w	($FFFFEECA).w,d1
		addi.w	#$128,d1
		cmp.w	d1,d0
		bcs.s	locret_F15E

loc_F0F6:
		addq.b	#2,routine(a0)

; ---------------------------------------------------------------------------
; Subroutine to load the end of act results screen
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; GotThroughAct:
Load_EndOfAct:
		tst.b	($FFFFB5C0).w
		bne.s	locret_F15E
		move.w	($FFFFEECA).w,($FFFFEEC8).w
		clr.b	($FFFFFE2D).w
		clr.b	($FFFFFE1E).w
		move.b	#$3A,($FFFFB5C0).w
		moveq	#$10,d0
		jsr	(LoadPLC2).l
		move.b	#1,($FFFFF7D6).w
		moveq	#0,d0
		move.b	($FFFFFE23).w,d0
		mulu.w	#$3C,d0
		moveq	#0,d1
		move.b	($FFFFFE24).w,d1
		add.w	d1,d0
		divu.w	#$F,d0
		moveq	#$14,d1
		cmp.w	d1,d0
		bcs.s	loc_F140
		move.w	d1,d0

loc_F140:
		add.w	d0,d0
		move.w	TimeBonuses(pc,d0.w),($FFFFF7D2).w
		move.w	($FFFFFE20).w,d0
		mulu.w	#$A,d0
		move.w	d0,($FFFFF7D4).w
		move.w	#$8E,d0
		jsr	(PlaySound_Special).l

locret_F15E:
		rts
; End of function Load_EndOfAct

; ===========================================================================
; word_F160:
TimeBonuses:	dc.w  5000, 5000, 1000,	 500
		dc.w   400,  400,  300,	 300
		dc.w   200,  200,  200,	 200
		dc.w   100,  100,  100,	 100
		dc.w	50,   50,   50,	  50
		dc.w	 0
; ===========================================================================

locret_F18A:
		rts
; ===========================================================================
; animation script
; off_F18C:
Ani_obj0D:	dc.w byte_F194-Ani_obj0D
		dc.w byte_F197-Ani_obj0D
		dc.w byte_F1A5-Ani_obj0D
		dc.w byte_F1B3-Ani_obj0D
byte_F194:	dc.b  $F,  2,$FF
byte_F197:	dc.b   1,  2,  3,  4,  5,  1,  3,  4
		dc.b   5,  0,  3,  4,  5,$FF
byte_F1A5:	dc.b   1,  2,  3,  4,  5,  1,  3,  4
		dc.b   5,  0,  3,  4,  5,$FF
byte_F1B3:	dc.b  $F,  0,$FF
		even

; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Map_obj0D:	incbin	"mappings/sprite/obj0D.bin"
; ===========================================================================
		nop
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 40 - GHZ Motobug
; ---------------------------------------------------------------------------

Obj40:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj40_Index(pc,d0.w),d1
		jmp	Obj40_Index(pc,d1.w)
; ===========================================================================
; off_F256:
Obj40_Index:	dc.w Obj40_Init-Obj40_Index
		dc.w Obj40_Main-Obj40_Index
		dc.w Obj40_Animate-Obj40_Index
		dc.w Obj40_Delete-Obj40_Index
; ===========================================================================
; loc_F25E:
Obj40_Init:
		move.l	#Map_obj40,4(a0)
		move.w	#$4E0,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#$14,$19(a0)
		tst.b	$1C(a0)
		bne.s	Obj40_Smoke
		move.b	#$E,$16(a0)
		move.b	#8,$17(a0)
		move.b	#$C,$20(a0)
		bsr.w	ObjectMoveAndFall
		jsr	(ObjHitFloor).l
		tst.w	d1
		bpl.s	locret_F2BC
		add.w	d1,$C(a0)
		move.w	#0,$12(a0)
		addq.b	#2,routine(a0)
		bchg	#0,$22(a0)

locret_F2BC:
		rts
; ===========================================================================
; loc_F2BE:
Obj40_Smoke:
		addq.b	#4,routine(a0)
		bra.w	Obj40_Animate
; ===========================================================================
; loc_F2C6:
Obj40_Main:
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj40_Main_Index(pc,d0.w),d1
		jsr	Obj40_Main_Index(pc,d1.w)
		lea	(Ani_obj40).l,a1
		bsr.w	AnimateSprite
		bra.w	MarkObjGone
; ===========================================================================
; off_F2E2
Obj40_Main_Index:	dc.w Obj40_Move-Obj40_Main_Index
			dc.w Obj40_Floor-Obj40_Main_Index
; ===========================================================================
; loc_F2E6:
Obj40_Move:
		subq.w	#1,$30(a0)
		bpl.s	locret_F308
		addq.b	#2,$25(a0)
		move.w	#-$100,$10(a0)
		move.b	#1,$1C(a0)
		bchg	#0,$22(a0)
		bne.s	locret_F308
		neg.w	$10(a0)

locret_F308:
		rts
; ===========================================================================
; loc_F30A:
Obj40_Floor:
		bsr.w	ObjectMove
		jsr	(ObjHitFloor).l
		cmpi.w	#-8,d1
		blt.s	Obj40_StopMoving
		cmpi.w	#$C,d1
		bge.s	Obj40_StopMoving
		add.w	d1,$C(a0)
		subq.b	#1,$33(a0)
		bpl.s	locret_F354
		move.b	#$F,$33(a0)
		bsr.w	SingleObjLoad
		bne.s	locret_F354
		move.b	#$40,0(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	$22(a0),$22(a1)
		move.b	#2,$1C(a1)

locret_F354:
		rts
; ---------------------------------------------------------------------------
; loc_F356:
Obj40_StopMoving:
		subq.b	#2,$25(a0)
		move.w	#$3B,$30(a0)
		move.w	#0,$10(a0)
		move.b	#0,$1C(a0)
		rts
; ===========================================================================
; loc_F36E:
Obj40_Animate:
		lea	(Ani_obj40).l,a1
		bsr.w	AnimateSprite
		bra.w	DisplaySprite
; ===========================================================================
; loc_F37C:
Obj40_Delete:
		bra.w	DeleteObject
; ===========================================================================
; animation script
Ani_obj40:	dc.w byte_F386-Ani_obj40
		dc.w byte_F389-Ani_obj40
		dc.w byte_F38F-Ani_obj40
byte_F386:	dc.b  $F,  2,$FF
byte_F389:	dc.b   7,  0,  1,  0,  2,$FF
byte_F38F:	dc.b   1,  3,  6,  3,  6,  4,  6,  4
		dc.b   6,  4,  6,  5,$FC
		even

; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Map_obj40:	incbin	"mappings/sprite/obj40.bin"




; ===========================================================================
; ---------------------------------------------------------------------------
; Solid object subroutines (includes spikes, blocks, rocks etc)
; These check collision of Sonic/Tails with objects on the screen
;
; input variables:
; d1 = object width
; d2 = object height / 2 (when jumping)
; d3 = object height / 2 (when walking)
; d4 = object x-axis position
;
; address registers:
; a0 = the object to check collision with
; a1 = sonic or tails (set inside these subroutines)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


SolidObject:
		lea	($FFFFB000).w,a1	; a1=character
		moveq	#3,d6
		movem.l	d1-d4,-(sp)	; store input registers
		bsr.s	sub_F456	; first collision check with Sonic
		movem.l	(sp)+,d1-d4	; restore input registers
		lea	($FFFFB040).w,a1	; a1=character ; now check collision with Tails
		tst.b	1(a1)
		bpl.w	locret_F490	; return if not Tails
		addq.b	#1,d6

sub_F456:
		btst	d6,$22(a0)
		beq.w	SolidObject_OnScreenTest
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$22(a1)
		bne.s	loc_F47A
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.s	loc_F47A
		cmp.w	d2,d0
		bcs.s	loc_F488

loc_F47A:
		bclr	#3,$22(a1)
		bclr	d6,$22(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------
loc_F488:
		move.w	d4,d2
		bsr.w	MvSonicOnPtfm
		moveq	#0,d4

locret_F490:
		rts
; End of function SolidObject

; ===========================================================================
; alternate function to check for collision even if off-screen, unused
; in this build...
; SolidObject_Always:
		lea	($FFFFB000).w,a1	; a1=character
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	SolidObject_Always_SingleCharacter
		movem.l	(sp)+,d1-d4
		lea	($FFFFB040).w,a1	; a1=character
		addq.b	#1,d6
; loc_F4A8:
SolidObject_Always_SingleCharacter:
		btst	d6,$22(a0)
		beq.w	SolidObject_cont
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$22(a1)
		bne.s	loc_F4CC
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.s	loc_F4CC
		cmp.w	d2,d0
		bcs.s	loc_F4DA

loc_F4CC:
		bclr	#3,$22(a1)
		bclr	d6,$22(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_F4DA:
		move.w	d4,d2
		bsr.w	MvSonicOnPtfm
		moveq	#0,d4
		rts
; End of function SolidObject_Always

; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to collide Sonic/Tails with the top of a sloped
; solid like diagonal springs; unused in this build...
;
; input variables:
; d1 = object width
; d2 = object height / 2 (when jumping)
; d3 = object height / 2 (when walking)
; d4 = object x-axis position
;
; address registers:
; a0 = the object to check collision with
; a1 = sonic or tails (set inside these subroutines)
; a2 = height data for slope
; ---------------------------------------------------------------------------
		lea	($FFFFB000).w,a1	; a1=character
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	SlopedSolid_SingleCharacter
		movem.l	(sp)+,d1-d4
		lea	($FFFFB040).w,a1	; a1=character
		addq.b	#1,d6
; loc_F4FA:
SlopedSolid_SingleCharacter:
		btst	d6,$22(a0)
		beq.w	SlopedSolid_cont
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$22(a1)
		bne.s	loc_F51E
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.s	loc_F51E
		cmp.w	d2,d0
		bcs.s	loc_F52C

loc_F51E:
		bclr	#3,$22(a1)
		bclr	d6,$22(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_F52C:
		move.w	d4,d2
		bsr.w	sub_F748
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------
; loc_F536:
SlopedSolid_cont:
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.w	SolidObject_TestClearPush
		move.w	d1,d3
		add.w	d3,d3
		cmp.w	d3,d0
		bhi.w	SolidObject_TestClearPush
		move.w	d0,d5
		btst	#0,1(a0)
		beq.s	loc_F55C
		not.w	d5
		add.w	d3,d5

loc_F55C:
		lsr.w	#1,d5
		move.b	(a2,d5.w),d3
		sub.b	(a2),d3
		ext.w	d3
		move.w	$C(a0),d5
		sub.w	d3,d5
		move.b	$16(a1),d3
		ext.w	d3
		add.w	d3,d2
		move.w	$C(a1),d3
		sub.w	d5,d3
		addq.w	#4,d3
		add.w	d2,d3
		bmi.w	SolidObject_TestClearPush
		move.w	d2,d4
		add.w	d4,d4
		cmp.w	d4,d3
		bcc.w	SolidObject_TestClearPush
		bra.w	SolidObject_ChkBounds
; ===========================================================================
; loc_F590:
SolidObject_OnScreenTest:
		tst.b	1(a0)
		bpl.w	SolidObject_TestClearPush
; loc_F598:
SolidObject_cont:
		; We now perform the x portion of a bounding box check.  To do this, we assume a
		; coordinate system where the x origin is at the object's left edge.
		move.w	8(a1),d0	; load Sonic's x position...
		sub.w	8(a0),d0	; ... and calculate his x position relative to the object
		add.w	d1,d0		; assume object's left edge is at (0,0).  This is also Sonic's distance to the object's left edge.
		bmi.w	SolidObject_TestClearPush	; branch, if Sonic is outside the object's left edge
		move.w	d1,d3
		add.w	d3,d3		; calculate object's width
		cmp.w	d3,d0
		bhi.w	SolidObject_TestClearPush	; branch, if Sonic is outside the object's right edge
		; We now perform the y portion of a bounding box check.  To do this, we assume a
		; coordinate system where the y origin is at the highest y position relative to the object
		; at which Sonic would still collide with it.  This point is
		;   y_pos(object) - width(object)/2 - y_radius(Sonic) - 4,
		; where object is stored in (a0), Sonic in (a1), and height(object)/2 in d2.  This way
		; of doing it causes the object's hitbox to be vertically off-center by -4 pixels.
		move.b	$16(a1),d3	; load Sonic's y radius
		ext.w	d3
		add.w	d3,d2		; calculate maximum distance for a top collision
		move.w	$C(a1),d3	; load Sonic's y position
		sub.w	$C(a0),d3	; ... and calculate his y position relative to the object
		addq.w	#4,d3		; assume a slightly lower position for Sonic
		add.w	d2,d3		; assume the highest position where Sonic would still be colliding with the object to be (0,0)
		bmi.w	SolidObject_TestClearPush	; branch, if Sonic is above this point
		move.w	d2,d4
		add.w	d4,d4		; calculate minimum distance for a bottom collision
		cmp.w	d4,d3
		bcc.w	SolidObject_TestClearPush	; branch, if Sonic is below this point
; loc_F5D2:
SolidObject_ChkBounds:
		tst.b	($FFFFF7C8).w
		bmi.w	SolidObject_TestClearPush	; branch, if object collisions are disabled for Sonic
		cmpi.b	#6,routine(a1)			; is Sonic dead?
		bcc.w	loc_F680			; if yes, branch
		tst.w	(Debug_placement_mode).w
		bne.w	loc_F680			; branch, if in Debug Mode

		move.w	d0,d5
		cmp.w	d0,d1
		bcc.s	loc_F5FA	; branch, if Sonic is to the object's left
		add.w	d1,d1
		sub.w	d1,d0
		move.w	d0,d5		; calculate Sonic's distance to the object's right edge...
		neg.w	d5		; ... and calculate the absolute value

loc_F5FA:
		move.w	d3,d1
		cmp.w	d3,d2
		bcc.s	loc_F608
		subq.w	#4,d3
		sub.w	d4,d3
		move.w	d3,d1
		neg.w	d1

loc_F608:
		cmp.w	d1,d5
		bhi.w	loc_F684	; branch, if horizontal distance is greater than vertical distance

		cmpi.w	#4,d1
		bls.s	loc_F65A
		tst.w	d0
		beq.s	loc_F634
		bmi.s	loc_F622
		tst.w	$10(a1)
		bmi.s	loc_F634
		bra.s	loc_F628
; ===========================================================================

loc_F622:
		tst.w	$10(a1)
		bpl.s	loc_F634

loc_F628:
		move.w	#0,$14(a1)
		move.w	#0,$10(a1)

loc_F634:
		sub.w	d0,8(a1)
		btst	#1,$22(a1)
		bne.s	loc_F65A
		move.l	d6,d4
		addq.b	#2,d4	; Character is pushing, not standing
		bset	d4,$22(a0)
		bset	#5,$22(a1)
		move.w	d6,d4
		addi.b	#$D,d4
		bset	d4,d6	; This sets bits 0 (Sonic) or 1 (Tails) of high word of d6
		moveq	#1,d4
		rts
; ===========================================================================

loc_F65A:
		bsr.s	sub_F678
		move.w	d6,d4
		addi.b	#$D,d4
		bset	d4,d6	; This sets bits 0 (Sonic) or 1 (Tails) of high word of d6
		moveq	#1,d4
		rts
; ===========================================================================
; loc_F668:
SolidObject_TestClearPush:
		move.l	d6,d4
		addq.b	#2,d4
		btst	d4,$22(a0)
		beq.s	loc_F680
		move.w	#1,$1C(a1)

sub_F678:
		move.l	d6,d4
		addq.b	#2,d4
		bclr	d4,$22(a0)

loc_F680:
		moveq	#0,d4
		rts
; ===========================================================================

loc_F684:
		tst.w	d3
		bmi.s	loc_F690
		cmpi.w	#$10,d3
		bcs.s	loc_F6D2
		bra.s	SolidObject_TestClearPush
; ===========================================================================

loc_F690:
		tst.w	$12(a1)
		beq.s	loc_F6B2
		bpl.s	loc_F6A6
		tst.w	d3
		bpl.s	loc_F6A6
		sub.w	d3,$C(a1)
		move.w	#0,$12(a1)

loc_F6A6:
		move.w	d6,d4
		addi.b	#$F,d4
		bset	d4,d6	; This sets bits 2 (Sonic) or 3 (Tails) of high word of d6
		moveq	#-2,d4
		rts
; ===========================================================================

loc_F6B2:
		btst	#1,$22(a1)
		bne.s	loc_F6A6
		move.l	a0,-(sp)
		movea.l	a1,a0
		jsr	(KillSonic).l
		movea.l	(sp)+,a0	; load obj address
		move.w	d6,d4
		addi.b	#$F,d4
		bset	d4,d6	; This sets bits 2 (Sonic) or 3 (Tails) of high word of d6
		moveq	#-2,d4
		rts
; ===========================================================================

loc_F6D2:
		subq.w	#4,d3
		moveq	#0,d1
		move.b	$19(a0),d1
		move.w	d1,d2
		add.w	d2,d2
		add.w	8(a1),d1
		sub.w	8(a0),d1
		bmi.s	loc_F70A
		cmp.w	d2,d1
		bcc.s	loc_F70A
		tst.w	$12(a1)
		bmi.s	loc_F70A
		sub.w	d3,$C(a1)
		subq.w	#1,$C(a1)
		bsr.w	RideObject_SetRide
		move.w	d6,d4
		addi.b	#$11,d4
		bset	d4,d6	; This sets bits 4 (Sonic) or 5 (Tails) of high word of d6
		moveq	#-1,d4
		rts
; ===========================================================================

loc_F70A:
		moveq	#0,d4
		rts
; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to change Sonic's position with a platform
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_F70E:
MvSonicOnPtfm:
		move.w	$C(a0),d0
		sub.w	d3,d0
		bra.s	loc_F71E
; ===========================================================================
		; a couple lines of unused/leftover/dead code from Sonic 1 ; a0=object
		move.w	$C(a0),d0
		subi.w	#9,d0

loc_F71E:
		tst.b	($FFFFF7C8).w
		bmi.s	locret_F746
		cmpi.b	#6,routine(a1)
		bcc.s	locret_F746
		tst.w	(Debug_placement_mode).w
		bne.s	locret_F746
		moveq	#0,d1
		move.b	$16(a1),d1
		sub.w	d1,d0
		move.w	d0,$C(a1)
		sub.w	8(a0),d2
		sub.w	d2,8(a1)

locret_F746:
		rts
; End of function MvSonicOnPtfm


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_F748:				; CODE XREF: sub_F456+D8p sub_F7F2+34p
		btst	#3,$22(a1)
		beq.s	locret_F788
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		lsr.w	#1,d0
		btst	#0,1(a0)
		beq.s	loc_F768
		not.w	d0
		add.w	d1,d0

loc_F768:				; CODE XREF: sub_F748+1Aj
		move.b	(a2,d0.w),d1
		ext.w	d1
		move.w	$C(a0),d0
		sub.w	d1,d0
		moveq	#0,d1
		move.b	$16(a1),d1
		sub.w	d1,d0
		move.w	d0,$C(a1)
		sub.w	8(a0),d2
		sub.w	d2,8(a1)

locret_F788:				; CODE XREF: sub_F748+6j
		rts
; End of function sub_F748


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_F78A:				; CODE XREF: ROM:000088DAp sub_8DD6+Cp ...
		lea	($FFFFB000).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_F7A0
		movem.l	(sp)+,d1-d4
		lea	($FFFFB040).w,a1
		addq.b	#1,d6
; End of function sub_F78A


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_F7A0:				; CODE XREF: sub_F78A+Ap
		btst	d6,$22(a0)
		beq.w	loc_F89E
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$22(a1)
		bne.s	loc_F7C4
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.s	loc_F7C4
		cmp.w	d2,d0
		bcs.s	loc_F7D2

loc_F7C4:				; CODE XREF: sub_F7A0+12j sub_F7A0+1Ej
		bclr	#3,$22(a1)
		bclr	d6,$22(a0)
		moveq	#0,d4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_F7D2:				; CODE XREF: sub_F7A0+22j
		move.w	d4,d2
		bsr.w	MvSonicOnPtfm
		moveq	#0,d4
		rts
; End of function sub_F7A0


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_F7DC:				; CODE XREF: sub_8CEC+Ep ROM:00014DEEj
		lea	($FFFFB000).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_F7F2
		movem.l	(sp)+,d1-d4
		lea	($FFFFB040).w,a1
		addq.b	#1,d6
; End of function sub_F7DC


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_F7F2:				; CODE XREF: sub_F7DC+Ap

; FUNCTION CHUNK AT 0000F968 SIZE 00000038 BYTES

		btst	d6,$22(a0)
		beq.w	SlopedPlatform_cont
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$22(a1)
		bne.s	loc_F816
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.s	loc_F816
		cmp.w	d2,d0
		bcs.s	loc_F824

loc_F816:				; CODE XREF: sub_F7F2+12j sub_F7F2+1Ej
		bclr	#3,$22(a1)
		bclr	d6,$22(a0)
		moveq	#0,d4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_F824:				; CODE XREF: sub_F7F2+22j
		move.w	d4,d2
		bsr.w	sub_F748
		moveq	#0,d4
		rts
; End of function sub_F7F2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_F82E:				; CODE XREF: ROM:000083C2p
		lea	($FFFFB000).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_F844
		movem.l	(sp)+,d1-d4
		lea	($FFFFB040).w,a1
		addq.b	#1,d6
; End of function sub_F82E


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_F844:				; CODE XREF: sub_F82E+Ap

; FUNCTION CHUNK AT 0000F9A0 SIZE 00000028 BYTES

		btst	d6,$22(a0)
		beq.w	loc_F9A0
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$22(a1)
		bne.s	loc_F868
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.s	loc_F868
		cmp.w	d2,d0
		bcs.s	loc_F876

loc_F868:				; CODE XREF: sub_F844+12j sub_F844+1Ej
		bclr	#3,$22(a1)
		bclr	d6,$22(a0)
		moveq	#0,d4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_F876:				; CODE XREF: sub_F844+22j
		move.w	d4,d2
		bsr.w	MvSonicOnPtfm
		moveq	#0,d4
		rts
; End of function sub_F844


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_F880:				; CODE XREF: sub_7DDA+66p
		tst.w	$12(a1)
		bmi.w	locret_F966
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.w	locret_F966
		cmp.w	d2,d0
		bcc.w	locret_F966
		bra.s	loc_F8BC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_F89E:				; CODE XREF: sub_F7A0+4j
		tst.w	$12(a1)
		bmi.w	locret_F966
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.w	locret_F966
		add.w	d1,d1
		cmp.w	d1,d0
		bcc.w	locret_F966

loc_F8BC:				; CODE XREF: sub_F880+1Cj
		move.w	$C(a0),d0
		sub.w	d3,d0

loc_F8C2:				; CODE XREF: sub_F7F2+1AAj
					; sub_F844+180j
		move.w	$C(a1),d2
		move.b	$16(a1),d1
		ext.w	d1
		add.w	d2,d1
		addq.w	#4,d1
		sub.w	d1,d0
		bhi.w	locret_F966
		cmpi.w	#$FFF0,d0
		bcs.w	locret_F966
		tst.b	($FFFFF7C8).w
		bmi.w	locret_F966
		cmpi.b	#6,routine(a1)
		bcc.w	locret_F966
		add.w	d0,d2
		addq.w	#3,d2
		move.w	d2,$C(a1)
; sub_F8F8:
RideObject_SetRide:
		btst	#3,$22(a1)
		beq.s	loc_F916
		moveq	#0,d0
		move.b	$3D(a1),d0
		lsl.w	#6,d0
		addi.l	#$FFFFB000,d0
		movea.l	d0,a3
		bclr	#3,$22(a3)

loc_F916:
		move.w	a0,d0
		subi.w	#$B000,d0
		lsr.w	#6,d0
		andi.w	#$7F,d0
		move.b	d0,$3D(a1)
		move.b	#0,$26(a1)
		move.w	#0,$12(a1)
		move.w	$10(a1),$14(a1)
		btst	#1,$22(a1)
		beq.s	loc_F95C
		move.l	a0,-(sp)
		movea.l	a1,a0
		move.w	a0,d1
		subi.w	#$B000,d1
		bne.s	loc_F954
		jsr	(Sonic_ResetOnFloor).l
		bra.s	loc_F95A
; ===========================================================================

loc_F954:
		jsr	(Tails_ResetTailsOnFloor).l

loc_F95A:
		movea.l	(sp)+,a0

loc_F95C:
		bset	#3,$22(a1)
		bset	d6,$22(a0)

locret_F966:
		rts
; ===========================================================================
; loc_F968:
SlopedPlatform_cont:
		tst.w	$12(a1)
		bmi.w	locret_F966
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.s	locret_F966
		add.w	d1,d1
		cmp.w	d1,d0
		bcc.s	locret_F966
		btst	#0,1(a0)
		beq.s	loc_F98E
		not.w	d0
		add.w	d1,d0

loc_F98E:
		lsr.w	#1,d0
		move.b	(a2,d0.w),d3
		ext.w	d3
		move.w	$C(a0),d0
		sub.w	d3,d0
		bra.w	loc_F8C2
; END OF FUNCTION CHUNK	FOR sub_F7F2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR sub_F844

loc_F9A0:				; CODE XREF: sub_F844+4j
		tst.w	$12(a1)
		bmi.w	locret_F966
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.w	locret_F966
		add.w	d1,d1
		cmp.w	d1,d0
		bcc.w	locret_F966
		move.w	$C(a0),d0
		sub.w	d3,d0
		bra.w	loc_F8C2
; END OF FUNCTION CHUNK	FOR sub_F844

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_F9C8:				; CODE XREF: ROM:0000AEEAp
		move.w	d1,d2
		add.w	d2,d2
		lea	($FFFFB000).w,a1
		btst	#1,$22(a1)
		bne.s	loc_F9E8
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d1,d0
		bmi.s	loc_F9E8
		cmp.w	d2,d0
		bcs.s	locret_F9FA

loc_F9E8:				; CODE XREF: sub_F9C8+Ej sub_F9C8+1Aj
		bclr	#3,$22(a1)
		move.b	#2,routine(a0)
		bclr	#3,$22(a0)

locret_F9FA:				; CODE XREF: sub_F9C8+1Ej
		rts
; End of function sub_F9C8

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 01 - Sonic
; ---------------------------------------------------------------------------

Obj01:
		tst.w	(Debug_placement_mode).w	; is debug mode being used?
		beq.s	Obj01_Normal			; if not, branch
		jmp	(DebugMode).l
; ===========================================================================

Obj01_Normal:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj01_Index(pc,d0.w),d1
		jmp	Obj01_Index(pc,d1.w)
; ===========================================================================
Obj01_Index:	dc.w Obj01_Init-Obj01_Index		; 0
		dc.w Obj01_Control-Obj01_Index		; 2
		dc.w Obj01_Hurt-Obj01_Index		; 4
		dc.w Obj01_Dead-Obj01_Index		; 6
		dc.w Obj01_ResetLevel-Obj01_Index	; 8
; ===========================================================================
; Obj01_Main:
Obj01_Init:
		addq.b	#2,routine(a0)	; => Obj01_Control
		move.b	#$13,$16(a0)	; this sets Sonic's collision height (2*pixels)
		move.b	#9,$17(a0)
		move.l	#Map_Sonic,4(a0)
		move.w	#$780,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#2,$18(a0)
		move.b	#$18,$19(a0)
		move.b	#4,1(a0)
		move.w	#$600,(Sonic_top_speed).w	; set Sonic's top speed
		move.w	#$C,(Sonic_acceleration).w	; set Sonic's acceleration
		move.w	#$80,(Sonic_deceleration).w	; set Sonic's deceleration
		move.b	#$C,$3E(a0)
		move.b	#$D,$3F(a0)
		move.b	#0,$2C(a0)
		move.b	#4,$2D(a0)
		move.w	#0,(Sonic_Pos_Record_Index).w
		move.w	#$3F,d2

loc_FA88:
		bsr.w	Sonic_RecordPos
		move.w	#0,(a1,d0.w)
		dbf	d2,loc_FA88

; ---------------------------------------------------------------------------
; Normal state for Sonic
; ---------------------------------------------------------------------------

Obj01_Control:
		tst.w	(Debug_mode_flag).w		; is debug cheat enabled?
		beq.s	loc_FAB0			; if not, branch
		btst	#4,($FFFFF605).w		; is button B pressed?
		beq.s	loc_FAB0			; if not, branch
		move.w	#1,(Debug_placement_mode).w	; change Sonic into ring/item
		clr.b	($FFFFF7CC).w			; unlock control
		rts
; -----------------------------------------------------------------------
loc_FAB0:
		tst.b	($FFFFF7CC).w		; are controls locked?
		bne.s	loc_FABC		; if yes, branch
		move.w	($FFFFF604).w,($FFFFF602).w	; copy new held buttons, to enable joypad

loc_FABC:
		btst	#0,($FFFFF7C8).w	; is Sonic interacting with another object that holds him in place or controls his movement somehow?
		bne.s	Obj01_ControlsLock	; if yes, branch to skip Sonic's control
		moveq	#0,d0
		move.b	$22(a0),d0
		andi.w	#6,d0
		move.w	Obj01_Modes(pc,d0.w),d1
		jsr	Obj01_Modes(pc,d1.w)	; run Sonic's movement control code

Obj01_ControlsLock:
		bsr.s	Sonic_Display
		bsr.w	Sonic_RecordPos
		bsr.w	Sonic_Water
		move.b	($FFFFF768).w,$36(a0)
		move.b	($FFFFF76A).w,$37(a0)
		tst.b	($FFFFF7C7).w
		beq.s	loc_FAFE
		tst.b	$1C(a0)
		bne.s	loc_FAFE
		move.b	$1D(a0),$1C(a0)

loc_FAFE:
		bsr.w	Sonic_Animate
		tst.b	($FFFFF7C8).w
		bmi.s	loc_FB0E
		jsr	TouchResponse

loc_FB0E:
		bra.w	LoadSonicDynPLC

; ===========================================================================
; secondary states under state Obj01_Control
Obj01_Modes:	dc.w Obj01_MdNormal-Obj01_Modes
		dc.w Obj01_MdAir-Obj01_Modes
		dc.w Obj01_MdRoll-Obj01_Modes
		dc.w Obj01_MdJump-Obj01_Modes

MusicList_Sonic:dc.b MusID_GHZ
		dc.b MusID_LZ
		dc.b MusID_CPZ
		dc.b MusID_EHZ
		dc.b MusID_HPZ
		dc.b MusID_HTZ

; ===========================================================================

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Sonic_Display:
		move.w	$30(a0),d0
		beq.s	Obj01_Display
		subq.w	#1,$30(a0)
		lsr.w	#3,d0
		bcc.s	Obj01_ChkInvin
; loc_FB2E:
Obj01_Display:
		jsr	(DisplaySprite).l
; loc_FB34:
Obj01_ChkInvin:		; Checks if invincibility has expired and (should) disables it if it has
		tst.b	($FFFFFE2D).w
		beq.s	Obj01_ChkShoes
		tst.w	$32(a0)
		beq.s	Obj01_ChkShoes
		bra.s	Obj01_ChkShoes
; ===========================================================================
; Strange that they disabled the invincibility timer for this build,
; a leftover debugging feature?
		subq.w	#1,$32(a0)
		bne.s	Obj01_ChkShoes
		tst.b	($FFFFF7AA).w
		bne.s	Obj01_RmvInvin
		cmpi.w	#$C,($FFFFFE14).w
		bcs.s	Obj01_RmvInvin
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		cmpi.w	#$103,(Current_ZoneAndAct).w
		bne.s	loc_FB66
		moveq	#5,d0

loc_FB66:
		lea	MusicList_Sonic(pc),a1
		move.b	(a1,d0.w),d0
		jsr	(PlaySound).l
; loc_FB74:
Obj01_RmvInvin:
		move.b	#0,($FFFFFE2D).w
; loc_FB7A:
Obj01_ChkShoes:	; Checks if Speed Shoes have expired and disables them if they have.
		tst.b	($FFFFFE2E).w
		beq.s	Obj01_ExitChk
		tst.w	$34(a0)
		beq.s	Obj01_ExitChk
		subq.w	#1,$34(a0)
		bne.s	Obj01_ExitChk
		move.w	#$600,(Sonic_top_speed).w
		move.w	#$C,(Sonic_acceleration).w
		move.w	#$80,(Sonic_deceleration).w
		move.b	#0,($FFFFFE2E).w
		move.w	#$E3,d0
		jmp	(PlaySound).l
; ---------------------------------------------------------------------------
; locret_FBAE:
Obj01_ExitChk:
		rts
; End of function Sonic_Display


; ---------------------------------------------------------------------------
; Subroutine to record Sonic's previous positions for invincibility stars
; and input/status flags for Tails' AI to follow
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_FBB2: CopySonicMovesForTails:
Sonic_RecordPos:
		move.w	(Sonic_Pos_Record_Index).w,d0
		lea	(Sonic_Pos_Record_Buf).w,a1
		lea	(a1,d0.w),a1
		move.w	8(a0),(a1)+
		move.w	$C(a0),(a1)+
		addq.b	#4,(Sonic_Pos_Record_Index+1).w

		lea	(Sonic_Stat_Record_Buf).w,a1
		move.w	($FFFFF604).w,(a1,d0.w)
		rts
; End of function Sonic_RecordPos

; ===========================================================================
; ---------------------------------------------------------------------------
; Seemingly an earlier subroutine to copy Sonic's status flags for Tails' AI
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Unused_RecordPos:
		move.w	($FFFFEEE0).w,d0
		subq.b	#4,d0
		lea	(Tails_Pos_Record_Buf).w,a1
		lea	(a1,d0.w),a2
		move.w	8(a0),d1
		swap	d1
		move.w	$C(a0),d1
		cmp.l	(a2),d1
		beq.s	locret_FC02
		addq.b	#4,d0
		lea	(a1,d0.w),a2
		move.w	8(a0),(a2)+
		move.w	$C(a0),(a2)
		addq.b	#4,($FFFFEEE1).w

locret_FC02:
		rts
; End of subroutine Unused_RecordPos


; ---------------------------------------------------------------------------
; Subroutine for Sonic when he's underwater
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_FC06:
Sonic_Water:
		tst.b	(Water_flag).w
		bne.s	Obj01_InWater

locret_FC0A:
		rts
; ---------------------------------------------------------------------------
; loc_FC0E: Obj01_InLevelWithWater:
Obj01_InWater:
		move.w	($FFFFF646).w,d0
		cmp.w	$C(a0),d0	; is Sonic above water?
		bge.s	Obj01_OutWater	; if yes, branch

		bset	#6,$22(a0)	; set underwater flag
		bne.s	locret_FC0A	; if already underwater, branch

		bsr.w	ResumeMusic
		move.b	#$A,($FFFFB340).w	; load Obj0A (sonic's breathing bubbles) at $FFFFB340
		move.b	#$81,($FFFFB368).w
		move.w	#$300,(Sonic_top_speed).w
		move.w	#6,(Sonic_acceleration).w
		move.w	#$40,(Sonic_deceleration).w
		asr	$10(a0)
		asr	$12(a0)	; memory oprands can only be shifted one at a time
		asr	$12(a0)
		beq.s	locret_FC0A
		move.b	#8,($FFFFB300).w	; splash animation
		move.w	#$AA,d0			; splash sound
		jmp	(PlaySound_Special).l

; ---------------------------------------------------------------------------
; Obj01_NotInWater:
Obj01_OutWater:
		bclr	#6,$22(a0)	; unset underwater flag
		beq.s	locret_FC0A	; if already unset, branch

		bsr.w	ResumeMusic
		move.w	#$600,(Sonic_top_speed).w
		move.w	#$C,(Sonic_acceleration).w
		move.w	#$80,(Sonic_deceleration).w
		asl	$12(a0)
		beq.w	locret_FC0A
		move.b	#8,($FFFFB300).w	; splash animation
		cmpi.w	#$F000,$12(a0)
		bgt.s	loc_FC98
		move.w	#$F000,$12(a0)	; limit upward y velocity exiting the water

loc_FC98:
		move.w	#$AA,d0		; splash sound
		jmp	(PlaySound_Special).l
; End of function Sonic_Water

; ===========================================================================
; ---------------------------------------------------------------------------
; Start of subroutine Obj01_MdNormal
; Called if Sonic is neither airborne nor rolling this frame
; ---------------------------------------------------------------------------

Obj01_MdNormal:
		bsr.w	Sonic_CheckSpindash
		bsr.w	Sonic_Jump
		bsr.w	Sonic_SlopeResist
		bsr.w	Sonic_Move
		bsr.w	Sonic_Roll
		bsr.w	Sonic_LevelBound
		jsr	(ObjectMove).l
		bsr.w	AnglePos
		bsr.w	Sonic_SlopeRepel
		rts
; End of subroutine Obj01_MdNormal

; ===========================================================================
; Start of subroutine Obj01_MdAir
; Called if Sonic is airborne, but not in a ball (thus, probably not jumping)
; Obj01_MdJump:
Obj01_MdAir:
		bsr.w	Sonic_JumpHeight
		bsr.w	Sonic_ChgJumpDir
		bsr.w	Sonic_LevelBound
		jsr	(ObjectMoveAndFall).l
		btst	#6,$22(a0)	; is Sonic underwater?
		beq.s	loc_FCEA	; if not, branch
		subi.w	#$28,$12(a0)	; reduce gravity by $28 ($38-$28=$10)

loc_FCEA:
		bsr.w	Sonic_JumpAngle
		bsr.w	Sonic_DoLevelCollision
		rts
; End of subroutine Obj01_MdAir

; ===========================================================================
; Start of subroutine Obj01_MdRoll
; Called if Sonic is in a ball, but not airborne (thus, probably rolling)

Obj01_MdRoll:
		bsr.w	Sonic_Jump
		bsr.w	Sonic_RollRepel
		bsr.w	Sonic_RollSpeed
		bsr.w	Sonic_LevelBound
		jsr	(ObjectMove).l
		bsr.w	AnglePos
		bsr.w	Sonic_SlopeRepel
		rts
; End of subroutine Obj01_MdRoll

; ===========================================================================
; Start of subroutine Obj01_MdJump
; Called if Sonic is in a ball and airborne (he could be jumping but not necessarily)
; Notes: This is identical to Obj01_MdAir, at least at this outer level.
;        Why they gave it a separate copy of the code, I don't know.
; Obj01_MdJump2:
Obj01_MdJump:
		bsr.w	Sonic_JumpHeight
		bsr.w	Sonic_ChgJumpDir
		bsr.w	Sonic_LevelBound
		jsr	(ObjectMoveAndFall).l
		btst	#6,$22(a0)	; is Sonic underwater?
		beq.s	loc_FD34	; if not, branch
		subi.w	#$28,$12(a0)	; reduce gravity by $28 ($38-$28=$10)

loc_FD34:
		bsr.w	Sonic_JumpAngle
		bsr.w	Sonic_DoLevelCollision
		rts
; End of subroutine Obj01_MdJump


; ---------------------------------------------------------------------------
; Subroutine to make Sonic walk/run
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Sonic_Move:
		move.w	(Sonic_top_speed).w,d6
		move.w	(Sonic_acceleration).w,d5
		move.w	(Sonic_deceleration).w,d4
		tst.b	($FFFFF7CA).w
		bne.w	Obj01_Traction
		tst.w	$2E(a0)
		bne.w	Obj01_UpdateSpeedOnGround
		btst	#2,($FFFFF602).w	; is left being pressed?
		beq.s	loc_FD66		; if not, branch
		bsr.w	Sonic_MoveLeft

loc_FD66:
		btst	#3,($FFFFF602).w	; is right being pressed?
		beq.s	loc_FD72		; if not, branch
		bsr.w	Sonic_MoveRight

loc_FD72:
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#$C0,d0				; is Sonic on a slope?
		bne.w	Obj01_UpdateSpeedOnGround	; if yes, branch
		tst.w	$14(a0)				; is Sonic moving?
		bne.w	Obj01_UpdateSpeedOnGround	; if yes, branch
		bclr	#5,$22(a0)
		cmpi.b	#$B,$1C(a0)	; use "standing" animation
		beq.s	loc_FD9E
		move.b	#5,$1C(a0)

loc_FD9E:
		btst	#3,$22(a0)
		beq.s	Sonic_Balance
		moveq	#0,d0
		move.b	$3D(a0),d0
		lsl.w	#6,d0
		lea	($FFFFB000).w,a1	; a1=character
		lea	(a1,d0.w),a1		; a1=object
		tst.b	$22(a1)
		bmi.s	Sonic_LookUp
		moveq	#0,d1
		move.b	$19(a1),d1
		move.w	d1,d2
		add.w	d2,d2
		subq.w	#4,d2
		add.w	8(a0),d1
		sub.w	8(a1),d1
		cmpi.w	#4,d1
		blt.s	loc_FE00
		cmp.w	d2,d1
		bge.s	loc_FDF0
		bra.s	Sonic_LookUp
; ---------------------------------------------------------------------------

Sonic_Balance:
		jsr	(ChkFloorEdge).l
		cmpi.w	#$C,d1
		blt.s	Sonic_LookUp
		cmpi.b	#3,$36(a0)
		bne.s	loc_FDF8

loc_FDF0:
		bclr	#0,$22(a0)
		bra.s	loc_FE06
; ---------------------------------------------------------------------------

loc_FDF8:
		cmpi.b	#3,$37(a0)
		bne.s	Sonic_LookUp

loc_FE00:
		bset	#0,$22(a0)

loc_FE06:
		move.b	#6,$1C(a0)
		bra.s	Obj01_UpdateSpeedOnGround
; ---------------------------------------------------------------------------

Sonic_LookUp:
		btst	#0,($FFFFF602).w	; is up being pressed?
		beq.s	Sonic_Duck		; if not, branch
		move.b	#7,$1C(a0)		; use "looking up" animation
		bra.s	Obj01_UpdateSpeedOnGround
; ---------------------------------------------------------------------------

Sonic_Duck:
		btst	#1,($FFFFF602).w		; is down being pressed?
		beq.s	Obj01_UpdateSpeedOnGround	; if not, branch
		move.b	#8,$1C(a0)			; use "ducking" animation

; ---------------------------------------------------------------------------
; updates Sonic's speed on the ground
; ---------------------------------------------------------------------------
; loc_FE2C:
Obj01_UpdateSpeedOnGround:
		move.b	($FFFFF602).w,d0
		andi.b	#$C,d0		; is left/right being pressed?
		bne.s	Obj01_Traction	; if yes, branch
		move.w	$14(a0),d0
		beq.s	Obj01_Traction
		bmi.s	Obj01_SettleLeft

; slow down when facing right and not pressing a direction
; Obj01_SettleRight:
		sub.w	d5,d0
		bcc.s	loc_FE46
		move.w	#0,d0

loc_FE46:
		move.w	d0,$14(a0)
		bra.s	Obj01_Traction
; ---------------------------------------------------------------------------
; slow down when facing left and not pressing a direction
; loc_FE4C:
Obj01_SettleLeft:
		add.w	d5,d0
		bcc.s	loc_FE54
		move.w	#0,d0

loc_FE54:
		move.w	d0,$14(a0)

; increase or decrease speed on the ground
; loc_FE58:
Obj01_Traction:
		move.b	$26(a0),d0
		jsr	(CalcSine).l
		muls.w	$14(a0),d1
		asr.l	#8,d1
		move.w	d1,$10(a0)
		muls.w	$14(a0),d0
		asr.l	#8,d0
		move.w	d0,$12(a0)

; stops Sonic from running through walls that meet the ground
; loc_FE76:
Obj01_CheckWallsOnGround:
		move.b	$26(a0),d0
		addi.b	#$40,d0
		bmi.s	locret_FEF6
		move.b	#$40,d1		; rotate 90 degress clockwise
		tst.w	$14(a0)		; check if Sonic's moving
		beq.s	locret_FEF6	; if not, branch
		bmi.s	loc_FE8E	; if negative, branch
		neg.w	d1		; rotate counterclockwise

loc_FE8E:
		move.b	$26(a0),d0
		add.b	d1,d0
		move.w	d0,-(sp)
		bsr.w	CalcRoomInFront
		move.w	(sp)+,d0
		tst.w	d1
		bpl.s	locret_FEF6
		asl.w	#8,d1
		addi.b	#$20,d0
		andi.b	#$C0,d0
		beq.s	loc_FEF2
		cmpi.b	#$40,d0
		beq.s	loc_FED8
		cmpi.b	#$80,d0
		beq.s	loc_FED2
		cmpi.w	#$600,$10(a0)		; is Sonic at max speed?
		bge.s	Sonic_WallRecoil	; if yes, branch
		add.w	d1,$10(a0)
		bset	#5,$22(a0)
		move.w	#0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_FED2:
		sub.w	d1,$12(a0)
		rts
; ---------------------------------------------------------------------------

loc_FED8:
		cmpi.w	#$FA00,$10(a0)		; is Sonic at max speed?
		ble.s	Sonic_WallRecoil	; if yes, branch
		sub.w	d1,$10(a0)
		bset	#5,$22(a0)
		move.w	#0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_FEF2:
		add.w	d1,$12(a0)

locret_FEF6:
		rts

; ---------------------------------------------------------------------------
; Subroutine to recoil Sonic off a wall if moving a top speed
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Sonic_WallRecoil:
		move.b	#4,routine(a0)
		bsr.w	Sonic_ResetOnFloor
		bset	#1,$22(a0)
		move.w	#-$200,d0
		tst.w	$10(a0)
		bpl.s	Sonic_WallRecoil_Right
		neg.w	d0

Sonic_WallRecoil_Right:
		move.w	d0,$10(a0)
		move.w	#-$400,$12(a0)
		move.w	#0,$14(a0)
		move.b	#$A,$1C(a0)
		move.b	#1,$25(a0)
		move.w	#$A3,d0
		jsr	(PlaySound_Special).l
		rts
; End of function Sonic_Move


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Sonic_MoveLeft:
		move.w	$14(a0),d0
		beq.s	loc_FF44
		bpl.s	Sonic_TurnLeft

loc_FF44:
		bset	#0,$22(a0)
		bne.s	loc_FF58
		bclr	#5,$22(a0)
		move.b	#1,$1D(a0)

loc_FF58:
		sub.w	d5,d0
		move.w	d6,d1
		neg.w	d1
		cmp.w	d1,d0
		bgt.s	loc_FF64
		move.w	d1,d0

loc_FF64:
		move.w	d0,$14(a0)
		move.b	#0,$1C(a0)
		rts
; ---------------------------------------------------------------------------
; loc_FF70:
Sonic_TurnLeft:
		sub.w	d4,d0
		bcc.s	loc_FF78
		move.w	#$FF80,d0

loc_FF78:
		move.w	d0,$14(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#$C0,d0
		bne.s	locret_FFA6
		cmpi.w	#$400,d0
		blt.s	locret_FFA6
		move.b	#$D,$1C(a0)
		bclr	#0,$22(a0)
		move.w	#$A4,d0
		jsr	(PlaySound_Special).l

locret_FFA6:
		rts
; End of function Sonic_MoveLeft


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Sonic_MoveRight:
		move.w	$14(a0),d0
		bmi.s	Sonic_TurnRight
		bclr	#0,$22(a0)
		beq.s	loc_FFC2
		bclr	#5,$22(a0)
		move.b	#1,$1D(a0)

loc_FFC2:
		add.w	d5,d0
		cmp.w	d6,d0
		blt.s	loc_FFCA
		move.w	d6,d0

loc_FFCA:
		move.w	d0,$14(a0)
		move.b	#0,$1C(a0)
		rts
; ---------------------------------------------------------------------------
; loc_FFD6:
Sonic_TurnRight:
		add.w	d4,d0
		bcc.s	loc_FFDE
		move.w	#$80,d0

loc_FFDE:
		move.w	d0,$14(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#$C0,d0
		bne.s	locret_1000C
		cmpi.w	#$FC00,d0
		bgt.s	locret_1000C
		move.b	#$D,$1C(a0)

loc_FFFC:
		bset	#0,$22(a0)
		move.w	#$A4,d0
		jsr	(PlaySound_Special).l

locret_1000C:
		rts
; End of function Sonic_MoveRight


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_RollSpeed:			; CODE XREF: ROM:0000FCFCp
		move.w	(Sonic_top_speed).w,d6
		asl.w	#1,d6
		move.w	(Sonic_acceleration).w,d5
		asr.w	#1,d5
		move.w	(Sonic_deceleration).w,d4
		asr.w	#2,d4
		tst.b	($FFFFF7CA).w
		bne.w	loc_1008A
		tst.w	$2E(a0)
		bne.s	loc_10046
		btst	#2,($FFFFF602).w
		beq.s	loc_1003A
		bsr.w	Sonic_RollLeft

loc_1003A:				; CODE XREF: Sonic_RollSpeed+26j
		btst	#3,($FFFFF602).w
		beq.s	loc_10046
		bsr.w	Sonic_RollRight

loc_10046:				; CODE XREF: Sonic_RollSpeed+1Ej
					; Sonic_RollSpeed+32j
		move.w	$14(a0),d0
		beq.s	loc_10068
		bmi.s	loc_1005C
		sub.w	d5,d0
		bcc.s	loc_10056
		move.w	#0,d0

loc_10056:				; CODE XREF: Sonic_RollSpeed+42j
		move.w	d0,$14(a0)
		bra.s	loc_10068
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1005C:				; CODE XREF: Sonic_RollSpeed+3Ej
		add.w	d5,d0
		bcc.s	loc_10064
		move.w	#0,d0

loc_10064:				; CODE XREF: Sonic_RollSpeed+50j
		move.w	d0,$14(a0)

loc_10068:				; CODE XREF: Sonic_RollSpeed+3Cj
					; Sonic_RollSpeed+4Cj
		tst.w	$14(a0)
		bne.s	loc_1008A
		bclr	#2,$22(a0)
		move.b	#$13,$16(a0)
		move.b	#9,$17(a0)
		move.b	#5,$1C(a0)
		subq.w	#5,$C(a0)

loc_1008A:				; CODE XREF: Sonic_RollSpeed+16j
					; Sonic_RollSpeed+5Ej
		move.b	$26(a0),d0
		jsr	(CalcSine).l
		muls.w	$14(a0),d0
		asr.l	#8,d0
		move.w	d0,$12(a0)
		muls.w	$14(a0),d1
		asr.l	#8,d1
		cmpi.w	#$1000,d1
		ble.s	loc_100AE
		move.w	#$1000,d1

loc_100AE:				; CODE XREF: Sonic_RollSpeed+9Aj
		cmpi.w	#$F000,d1
		bge.s	loc_100B8
		move.w	#$F000,d1

loc_100B8:				; CODE XREF: Sonic_RollSpeed+A4j
		move.w	d1,$10(a0)
		bra.w	Obj01_CheckWallsOnGround
; End of function Sonic_RollSpeed


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_RollLeft:				; CODE XREF: Sonic_RollSpeed+28p
		move.w	$14(a0),d0
		beq.s	loc_100C8
		bpl.s	loc_100D6

loc_100C8:				; CODE XREF: Sonic_RollLeft+4j
		bset	#0,$22(a0)
		move.b	#2,$1C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_100D6:				; CODE XREF: Sonic_RollLeft+6j
		sub.w	d4,d0
		bcc.s	loc_100DE
		move.w	#$FF80,d0

loc_100DE:				; CODE XREF: Sonic_RollLeft+18j
		move.w	d0,$14(a0)
		rts
; End of function Sonic_RollLeft


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_RollRight:			; CODE XREF: Sonic_RollSpeed+34p
		move.w	$14(a0),d0
		bmi.s	loc_100F8
		bclr	#0,$22(a0)
		move.b	#2,$1C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_100F8:				; CODE XREF: Sonic_RollRight+4j
		add.w	d4,d0
		bcc.s	loc_10100
		move.w	#$80,d0	; ''

loc_10100:				; CODE XREF: Sonic_RollRight+16j
		move.w	d0,$14(a0)
		rts
; End of function Sonic_RollRight


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_ChgJumpDir:			; CODE XREF: ROM:0000FCCEp
					; ROM:0000FD18p
		move.w	(Sonic_top_speed).w,d6
		move.w	(Sonic_acceleration).w,d5
		asl.w	#1,d5
		btst	#4,$22(a0)
		bne.s	loc_10150
		move.w	$10(a0),d0
		btst	#2,($FFFFF602).w
		beq.s	loc_10136
		bset	#0,$22(a0)
		sub.w	d5,d0
		move.w	d6,d1
		neg.w	d1
		cmp.w	d1,d0
		bgt.s	loc_10136
		move.w	d1,d0

loc_10136:				; CODE XREF: Sonic_ChgJumpDir+1Cj
					; Sonic_ChgJumpDir+2Cj
		btst	#3,($FFFFF602).w
		beq.s	loc_1014C
		bclr	#0,$22(a0)
		add.w	d5,d0
		cmp.w	d6,d0
		blt.s	loc_1014C
		move.w	d6,d0

loc_1014C:				; CODE XREF: Sonic_ChgJumpDir+36j
					; Sonic_ChgJumpDir+42j
		move.w	d0,$10(a0)

loc_10150:				; CODE XREF: Sonic_ChgJumpDir+10j
		cmpi.w	#$60,($FFFFEED8).w ; '`'
		beq.s	loc_10162
		bcc.s	loc_1015E
		addq.w	#4,($FFFFEED8).w

loc_1015E:				; CODE XREF: Sonic_ChgJumpDir+52j
		subq.w	#2,($FFFFEED8).w

loc_10162:				; CODE XREF: Sonic_ChgJumpDir+50j
		cmpi.w	#$FC00,$12(a0)
		bcs.s	locret_10190
		move.w	$10(a0),d0
		move.w	d0,d1
		asr.w	#5,d1
		beq.s	locret_10190
		bmi.s	loc_10184
		sub.w	d1,d0
		bcc.s	loc_1017E
		move.w	#0,d0

loc_1017E:				; CODE XREF: Sonic_ChgJumpDir+72j
		move.w	d0,$10(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10184:				; CODE XREF: Sonic_ChgJumpDir+6Ej
		sub.w	d1,d0
		bcs.s	loc_1018C
		move.w	#0,d0

loc_1018C:				; CODE XREF: Sonic_ChgJumpDir+80j
		move.w	d0,$10(a0)

locret_10190:				; CODE XREF: Sonic_ChgJumpDir+62j
					; Sonic_ChgJumpDir+6Cj
		rts
; End of function Sonic_ChgJumpDir


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Sonic_LevelBoundaries:
Sonic_LevelBound:
		move.l	8(a0),d1
		move.w	$10(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d1
		swap	d1
		move.w	($FFFFEEC8).w,d0
		addi.w	#$10,d0
		cmp.w	d1,d0
		bhi.s	loc_101FA
		move.w	($FFFFEECA).w,d0
		addi.w	#$128,d0
		tst.b	($FFFFF7AA).w
		bne.s	loc_101C0
		addi.w	#$40,d0	; '@'

loc_101C0:				; CODE XREF: Sonic_LevelBound+28j
		cmp.w	d1,d0
		bls.s	loc_101FA

loc_101C4:				; CODE XREF: Sonic_LevelBound+7Ej
		move.w	($FFFFEECE).w,d0
		addi.w	#$E0,d0	; 'à'
		cmp.w	$C(a0),d0
		blt.s	loc_101D4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_101D4:				; CODE XREF: Sonic_LevelBound+3Ej
		cmpi.w	#$501,(Current_ZoneAndAct).w
		bne.w	JmpTo_KillSonic
		cmpi.w	#$2000,($FFFFB008).w
		bcs.w	JmpTo_KillSonic
		clr.b	($FFFFFE30).w
		move.w	#1,($FFFFFE02).w
		move.w	#$103,(Current_ZoneAndAct).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_101FA:				; CODE XREF: Sonic_LevelBound+1Aj
					; Sonic_LevelBound+30j
		move.w	d0,8(a0)
		move.w	#0,$A(a0)
		move.w	#0,$10(a0)
		move.w	#0,$14(a0)
		bra.s	loc_101C4
; End of function Sonic_LevelBound


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_Roll:				; CODE XREF: ROM:0000FCB2p
		tst.b	($FFFFF7CA).w
		bne.s	Obj01_NoRoll
		move.w	$14(a0),d0
		bpl.s	loc_10220
		neg.w	d0

loc_10220:				; CODE XREF: Sonic_Roll+Aj
		cmpi.w	#$80,d0	; ''
		bcs.s	Obj01_NoRoll
		move.b	($FFFFF602).w,d0
		andi.b	#$C,d0
		bne.s	Obj01_NoRoll
		btst	#1,($FFFFF602).w
		bne.s	loc_1023A

Obj01_NoRoll:				; CODE XREF: Sonic_Roll+4j
					; Sonic_Roll+12j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1023A:				; CODE XREF: Sonic_Roll+24j
		btst	#2,$22(a0)
		beq.s	Obj01_DoRoll
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj01_DoRoll:				; CODE XREF: Sonic_Roll+2Ej
		bset	#2,$22(a0)
		move.b	#$E,$16(a0)
		move.b	#7,$17(a0)
		move.b	#2,$1C(a0)
		addq.w	#5,$C(a0)
		move.w	#$BE,d0	; '¾'
		jsr	(PlaySound_Special).l
		tst.w	$14(a0)
		bne.s	locret_10276
		move.w	#$200,$14(a0)

locret_10276:				; CODE XREF: Sonic_Roll+5Cj
		rts
; End of function Sonic_Roll


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_Jump:				; CODE XREF: ROM:0000FCA6p
					; ROM:Obj01_MdRollp
		move.b	($FFFFF603).w,d0
		andi.b	#$70,d0	; 'p'
		beq.w	locret_1031C
		moveq	#0,d0
		move.b	$26(a0),d0
		addi.b	#$80,d0
		bsr.w	sub_13102
		cmpi.w	#6,d1
		blt.w	locret_1031C
		move.w	#$680,d2
		btst	#6,$22(a0)
		beq.s	loc_102AA
		move.w	#$380,d2

loc_102AA:				; CODE XREF: Sonic_Jump+2Cj
		moveq	#0,d0
		move.b	$26(a0),d0
		subi.b	#$40,d0	; '@'
		jsr	(CalcSine).l
		muls.w	d2,d1
		asr.l	#8,d1
		add.w	d1,$10(a0)
		muls.w	d2,d0
		asr.l	#8,d0
		add.w	d0,$12(a0)
		bset	#1,$22(a0)
		bclr	#5,$22(a0)
		addq.l	#4,sp
		move.b	#1,$3C(a0)
		clr.b	$38(a0)
		move.w	#$A0,d0	; ' '
		jsr	(PlaySound_Special).l
		move.b	#$13,$16(a0)
		move.b	#9,$17(a0)
		btst	#2,$22(a0)
		bne.s	loc_1031E
		move.b	#$E,$16(a0)
		move.b	#7,$17(a0)
		move.b	#2,$1C(a0)
		bset	#2,$22(a0)
		addq.w	#5,$C(a0)

locret_1031C:				; CODE XREF: Sonic_Jump+8j
					; Sonic_Jump+1Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1031E:				; CODE XREF: Sonic_Jump+86j
		bset	#4,$22(a0)
		rts
; End of function Sonic_Jump


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_JumpHeight:			; CODE XREF: ROM:Obj01_MdJumpp
					; ROM:Obj01_MdJump2p
		tst.b	$3C(a0)
		beq.s	loc_10352
		move.w	#$FC00,d1
		btst	#6,$22(a0)
		beq.s	loc_1033C
		move.w	#$FE00,d1

loc_1033C:				; CODE XREF: Sonic_JumpHeight+10j
		cmp.w	$12(a0),d1
		ble.s	locret_10350
		move.b	($FFFFF602).w,d0
		andi.b	#$70,d0	; 'p'
		bne.s	locret_10350
		move.w	d1,$12(a0)

locret_10350:				; CODE XREF: Sonic_JumpHeight+1Aj
					; Sonic_JumpHeight+24j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10352:				; CODE XREF: Sonic_JumpHeight+4j
		cmpi.w	#$F040,$12(a0)
		bge.s	locret_10360
		move.w	#$F040,$12(a0)

locret_10360:				; CODE XREF: Sonic_JumpHeight+32j
		rts
; End of function Sonic_JumpHeight

; ---------------------------------------------------------------------------
; Subroutine to check for starting to charge a spindash
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; Sonic_Spindash:
Sonic_CheckSpindash:
		tst.b	$39(a0)
		bne.s	Sonic_UpdateSpindash
		cmpi.b	#8,$1C(a0)
		bne.s	locret_10394
		move.b	($FFFFF603).w,d0
		andi.b	#$70,d0
		beq.w	locret_10394
		move.b	#9,$1C(a0)
		move.w	#$BE,d0
		jsr	(PlaySound_Special).l
		addq.l	#4,sp
		move.b	#1,$39(a0)

locret_10394:
		rts
; ===========================================================================
; loc_10396:
Sonic_UpdateSpindash:
		move.b	($FFFFF602).w,d0
		btst	#1,d0
		bne.s	Sonic_ChargingSpindash

		; unleash the charged spindash and start rolling quickly:
		move.b	#$E,$16(a0)
		move.b	#7,$17(a0)
		move.b	#2,$1C(a0)
		addq.w	#5,$C(a0)	; add the difference between Sonic's rolling and standing heights
		move.b	#0,$39(a0)
		move.w	#$2000,($FFFFEED0).w
		move.w	#$800,$14(a0)
		btst	#0,$22(a0)
		beq.s	loc_103D4
		neg.w	$14(a0)

loc_103D4:
		bset	#2,$22(a0)
		rts
; ===========================================================================
; loc_103DC:
Sonic_ChargingSpindash:
		move.b	($FFFFF603).w,d0
		andi.b	#$70,d0	
		beq.w	loc_103EA
		nop

loc_103EA:
		addq.l	#4,sp
		rts
; End of function Sonic_CheckSpindash


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_SlopeResist:			; CODE XREF: ROM:0000FCAAp
		move.b	$26(a0),d0
		addi.b	#$60,d0	; '`'
		cmpi.b	#$C0,d0
		bcc.s	locret_10422
		move.b	$26(a0),d0

loc_10400:
		jsr	(CalcSine).l
		muls.w	#$20,d0	; ' '
		asr.l	#8,d0
		tst.w	$14(a0)
		beq.s	locret_10422
		bmi.s	loc_1041E
		tst.w	d0
		beq.s	locret_1041C
		add.w	d0,$14(a0)

locret_1041C:				; CODE XREF: Sonic_SlopeResist+28j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1041E:				; CODE XREF: Sonic_SlopeResist+24j
		add.w	d0,$14(a0)

locret_10422:				; CODE XREF: Sonic_SlopeResist+Cj
					; Sonic_SlopeResist+22j
		rts
; End of function Sonic_SlopeResist


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_RollRepel:			; CODE XREF: ROM:0000FCF8p
		move.b	$26(a0),d0
		addi.b	#$60,d0	; '`'
		cmpi.b	#$C0,d0
		bcc.s	locret_1045E
		move.b	$26(a0),d0
		jsr	(CalcSine).l
		muls.w	#$50,d0	; 'P'
		asr.l	#8,d0
		tst.w	$14(a0)
		bmi.s	loc_10454
		tst.w	d0
		bpl.s	loc_1044E
		asr.l	#2,d0

loc_1044E:				; CODE XREF: Sonic_RollRepel+26j
		add.w	d0,$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10454:				; CODE XREF: Sonic_RollRepel+22j
		tst.w	d0
		bmi.s	loc_1045A
		asr.l	#2,d0

loc_1045A:				; CODE XREF: Sonic_RollRepel+32j
		add.w	d0,$14(a0)

locret_1045E:				; CODE XREF: Sonic_RollRepel+Cj
		rts
; End of function Sonic_RollRepel


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_SlopeRepel:			; CODE XREF: ROM:0000FCC4p
					; ROM:0000FD0Ep
		nop
		tst.b	$38(a0)
		bne.s	locret_1049A
		tst.w	$2E(a0)
		bne.s	loc_1049C
		move.b	$26(a0),d0
		addi.b	#$20,d0	; ' '
		andi.b	#$C0,d0
		beq.s	locret_1049A
		move.w	$14(a0),d0
		bpl.s	loc_10484
		neg.w	d0

loc_10484:				; CODE XREF: Sonic_SlopeRepel+20j
		cmpi.w	#$280,d0
		bcc.s	locret_1049A
		clr.w	$14(a0)
		bset	#1,$22(a0)
		move.w	#$1E,$2E(a0)

locret_1049A:				; CODE XREF: Sonic_SlopeRepel+6j
					; Sonic_SlopeRepel+1Aj	...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1049C:				; CODE XREF: Sonic_SlopeRepel+Cj
		subq.w	#1,$2E(a0)
		rts
; End of function Sonic_SlopeRepel


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_JumpAngle:			; CODE XREF: ROM:loc_FCEAp
					; ROM:loc_FD34p
		move.b	$26(a0),d0
		beq.s	loc_104BC
		bpl.s	loc_104B2
		addq.b	#2,d0
		bcc.s	loc_104B0
		moveq	#0,d0

loc_104B0:				; CODE XREF: Sonic_JumpAngle+Aj
		bra.s	loc_104B8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_104B2:				; CODE XREF: Sonic_JumpAngle+6j
		subq.b	#2,d0
		bcc.s	loc_104B8
		moveq	#0,d0

loc_104B8:				; CODE XREF: Sonic_JumpAngle:loc_104B0j
					; Sonic_JumpAngle+12j
		move.b	d0,$26(a0)

loc_104BC:				; CODE XREF: Sonic_JumpAngle+4j
		move.b	$27(a0),d0
		beq.s	locret_104FA
		tst.w	$14(a0)
		bmi.s	loc_104E0
		move.b	$2D(a0),d1
		add.b	d1,d0
		bcc.s	loc_104DE
		subq.b	#1,$2C(a0)
		bcc.s	loc_104DE
		move.b	#0,$2C(a0)
		moveq	#0,d0

loc_104DE:				; CODE XREF: Sonic_JumpAngle+2Cj
					; Sonic_JumpAngle+32j
		bra.s	loc_104F6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_104E0:				; CODE XREF: Sonic_JumpAngle+24j
		move.b	$2D(a0),d1
		sub.b	d1,d0
		bcc.s	loc_104F6
		subq.b	#1,$2C(a0)
		bcc.s	loc_104F6
		move.b	#0,$2C(a0)
		moveq	#0,d0

loc_104F6:				; CODE XREF: Sonic_JumpAngle:loc_104DEj
					; Sonic_JumpAngle+44j ...
		move.b	d0,$27(a0)

locret_104FA:				; CODE XREF: Sonic_JumpAngle+1Ej
		rts
; End of function Sonic_JumpAngle


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Sonic_Floor:
Sonic_DoLevelCollision:
		move.l	#$FFFFD000,($FFFFF796).w
		cmpi.b	#$C,$3E(a0)
		beq.s	loc_10514
		move.l	#$FFFFD600,($FFFFF796).w

loc_10514:				; CODE XREF: Sonic_DoLevelCollision+Ej
		move.b	$3F(a0),d5
		move.w	$10(a0),d1
		move.w	$12(a0),d2
		jsr	(CalcAngle).l
		subi.b	#$20,d0	; ' '
		andi.b	#$C0,d0
		cmpi.b	#$40,d0	; '@'
		beq.w	loc_105E4
		cmpi.b	#$80,d0
		beq.w	loc_10646
		cmpi.b	#$C0,d0
		beq.w	loc_106A2
		bsr.w	Sonic_HitWall
		tst.w	d1
		bpl.s	loc_10558
		sub.w	d1,8(a0)
		move.w	#0,$10(a0)

loc_10558:				; CODE XREF: Sonic_DoLevelCollision+50j
		bsr.w	sub_132EE
		tst.w	d1
		bpl.s	loc_1056A
		add.w	d1,8(a0)
		move.w	#0,$10(a0)

loc_1056A:				; CODE XREF: Sonic_DoLevelCollision+62j
		bsr.w	loc_13146
		tst.w	d1
		bpl.s	locret_105E2
		move.b	$12(a0),d2
		addq.b	#8,d2
		neg.b	d2
		cmp.b	d2,d1
		bge.s	loc_10582
		cmp.b	d2,d0
		blt.s	locret_105E2

loc_10582:				; CODE XREF: Sonic_DoLevelCollision+80j
		add.w	d1,$C(a0)
		move.b	d3,$26(a0)
		bsr.w	Sonic_ResetOnFloor
		move.b	#0,$1C(a0)
		move.b	d3,d0
		addi.b	#$20,d0	; ' '
		andi.b	#$40,d0	; '@'
		bne.s	loc_105C0
		move.b	d3,d0
		addi.b	#$10,d0
		andi.b	#$20,d0	; ' '
		beq.s	loc_105B2
		asr	$12(a0)
		bra.s	loc_105D4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_105B2:				; CODE XREF: Sonic_DoLevelCollision+AEj
		move.w	#0,$12(a0)
		move.w	$10(a0),$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_105C0:				; CODE XREF: Sonic_DoLevelCollision+A2j
		move.w	#0,$10(a0)
		cmpi.w	#$FC0,$12(a0)
		ble.s	loc_105D4
		move.w	#$FC0,$12(a0)

loc_105D4:				; CODE XREF: Sonic_DoLevelCollision+B4j
					; Sonic_DoLevelCollision+D0j
		move.w	$12(a0),$14(a0)
		tst.b	d3
		bpl.s	locret_105E2
		neg.w	$14(a0)

locret_105E2:				; CODE XREF: Sonic_DoLevelCollision+74j
					; Sonic_DoLevelCollision+84j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_105E4:				; CODE XREF: Sonic_DoLevelCollision+36j
		bsr.w	Sonic_HitWall
		tst.w	d1
		bpl.s	loc_105FE
		sub.w	d1,8(a0)
		move.w	#0,$10(a0)
		move.w	$12(a0),$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_105FE:				; CODE XREF: Sonic_DoLevelCollision+EEj
		bsr.w	Sonic_DontRunOnWalls
		tst.w	d1
		bpl.s	loc_10618
		sub.w	d1,$C(a0)
		tst.w	$12(a0)
		bpl.s	locret_10616
		move.w	#0,$12(a0)

locret_10616:				; CODE XREF: Sonic_DoLevelCollision+112j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10618:				; CODE XREF: Sonic_DoLevelCollision+108j
		tst.w	$12(a0)
		bmi.s	locret_10644
		bsr.w	loc_13146
		tst.w	d1
		bpl.s	locret_10644
		add.w	d1,$C(a0)
		move.b	d3,$26(a0)
		bsr.w	Sonic_ResetOnFloor
		move.b	#0,$1C(a0)
		move.w	#0,$12(a0)
		move.w	$10(a0),$14(a0)

locret_10644:				; CODE XREF: Sonic_DoLevelCollision+120j
					; Sonic_DoLevelCollision+128j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10646:				; CODE XREF: Sonic_DoLevelCollision+3Ej
		bsr.w	Sonic_HitWall
		tst.w	d1
		bpl.s	loc_10658
		sub.w	d1,8(a0)
		move.w	#0,$10(a0)

loc_10658:				; CODE XREF: Sonic_DoLevelCollision+150j
		bsr.w	sub_132EE
		tst.w	d1
		bpl.s	loc_1066A
		add.w	d1,8(a0)
		move.w	#0,$10(a0)

loc_1066A:				; CODE XREF: Sonic_DoLevelCollision+162j
		bsr.w	Sonic_DontRunOnWalls
		tst.w	d1
		bpl.s	locret_106A0
		sub.w	d1,$C(a0)
		move.b	d3,d0
		addi.b	#$20,d0	; ' '
		andi.b	#$40,d0	; '@'
		bne.s	loc_1068A
		move.w	#0,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1068A:				; CODE XREF: Sonic_DoLevelCollision+184j
		move.b	d3,$26(a0)
		bsr.w	Sonic_ResetOnFloor
		move.w	$12(a0),$14(a0)
		tst.b	d3
		bpl.s	locret_106A0
		neg.w	$14(a0)

locret_106A0:				; CODE XREF: Sonic_DoLevelCollision+174j
					; Sonic_DoLevelCollision+19Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_106A2:				; CODE XREF: Sonic_DoLevelCollision+46j
		bsr.w	sub_132EE
		tst.w	d1
		bpl.s	loc_106BC
		add.w	d1,8(a0)
		move.w	#0,$10(a0)
		move.w	$12(a0),$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_106BC:				; CODE XREF: Sonic_DoLevelCollision+1ACj
		bsr.w	Sonic_DontRunOnWalls
		tst.w	d1
		bpl.s	loc_106D6
		sub.w	d1,$C(a0)
		tst.w	$12(a0)
		bpl.s	locret_106D4
		move.w	#0,$12(a0)

locret_106D4:				; CODE XREF: Sonic_DoLevelCollision+1D0j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_106D6:				; CODE XREF: Sonic_DoLevelCollision+1C6j
		tst.w	$12(a0)
		bmi.s	locret_10702
		bsr.w	loc_13146
		tst.w	d1
		bpl.s	locret_10702
		add.w	d1,$C(a0)
		move.b	d3,$26(a0)
		bsr.w	Sonic_ResetOnFloor
		move.b	#0,$1C(a0)
		move.w	#0,$12(a0)
		move.w	$10(a0),$14(a0)

locret_10702:				; CODE XREF: Sonic_DoLevelCollision+1DEj
					; Sonic_DoLevelCollision+1E6j
		rts
; End of function Sonic_DoLevelCollision


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_ResetOnFloor:			; CODE XREF: RideObject_SetRide+54p
					; Sonic_Move+1C0p ...
		btst	#4,$22(a0)
		beq.s	loc_10712
		nop
		nop
		nop

loc_10712:				; CODE XREF: Sonic_ResetOnFloor+6j
		bclr	#5,$22(a0)
		bclr	#1,$22(a0)
		bclr	#4,$22(a0)
		btst	#2,$22(a0)
		beq.s	loc_10748
		bclr	#2,$22(a0)
		move.b	#$13,$16(a0)
		move.b	#9,$17(a0)
		move.b	#0,$1C(a0)
		subq.w	#5,$C(a0)

loc_10748:				; CODE XREF: Sonic_ResetOnFloor+26j
		move.b	#0,$3C(a0)
		move.w	#0,($FFFFF7D0).w
		move.b	#0,$27(a0)
		rts
; End of function Sonic_ResetOnFloor

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj01_Hurt:				; DATA XREF: ROM:0000FA1Ao
		tst.b	$25(a0)
		bmi.w	loc_107E8
		jsr	ObjectMove
		addi.w	#$30,$12(a0) ; '0'
		btst	#6,$22(a0)
		beq.s	loc_1077E
		subi.w	#$20,$12(a0) ; ' '

loc_1077E:				; CODE XREF: ROM:00010776j
		bsr.w	Sonic_HurtStop
		bsr.w	Sonic_LevelBound
		bsr.w	Sonic_RecordPos
		bsr.w	Sonic_Animate
		bsr.w	LoadSonicDynPLC
		jmp	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_HurtStop:				; CODE XREF: ROM:loc_1077Ep
		move.w	($FFFFEECE).w,d0
		addi.w	#$E0,d0	; 'à'
		cmp.w	$C(a0),d0
		bcs.w	JmpTo_KillSonic
		bsr.w	Sonic_DoLevelCollision
		btst	#1,$22(a0)
		bne.s	locret_107E6
		moveq	#0,d0
		move.w	d0,$12(a0)
		move.w	d0,$10(a0)
		move.w	d0,$14(a0)
		tst.b	$25(a0)
		beq.s	loc_107D6
		move.b	#$FF,$25(a0)
		move.b	#$B,$1C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_107D6:				; CODE XREF: Sonic_HurtStop+2Ej
		move.b	#0,$1C(a0)
		subq.b	#2,routine(a0)
		move.w	#$78,$30(a0) ; 'x'

locret_107E6:				; CODE XREF: Sonic_HurtStop+1Aj
		rts
; End of function Sonic_HurtStop

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_107E8:				; CODE XREF: ROM:00010760j
		cmpi.b	#$B,$1C(a0)
		bne.s	loc_107FA
		move.b	($FFFFF605).w,d0
		andi.b	#$7F,d0	; ''
		beq.s	loc_10804

loc_107FA:				; CODE XREF: ROM:000107EEj
		subq.b	#2,routine(a0)
		move.b	#0,$25(a0)

loc_10804:				; CODE XREF: ROM:000107F8j
		bsr.w	Sonic_RecordPos
		bsr.w	Sonic_Animate
		bsr.w	LoadSonicDynPLC
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; Obj01_Death:
Obj01_Dead:				; DATA XREF: ROM:0000FA1Co
		bsr.w	Sonic_GameOver
		jsr	ObjectMoveAndFall
		bsr.w	Sonic_RecordPos
		bsr.w	Sonic_Animate
		bsr.w	LoadSonicDynPLC
		jmp	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_GameOver:				; CODE XREF: ROM:Obj01_Deadp
		move.w	($FFFFEECE).w,d0
		addi.w	#$100,d0
		cmp.w	$C(a0),d0
		bcc.w	locret_108B4
		move.w	#$FFC8,$12(a0)
		addq.b	#2,routine(a0)
		clr.b	($FFFFFE1E).w
		addq.b	#1,($FFFFFE1C).w
		subq.b	#1,($FFFFFE12).w
		bne.s	loc_10888
		move.w	#0,$3A(a0)
		move.b	#$39,($FFFFB080).w ; '9'
		move.b	#$39,($FFFFB0C0).w ; '9'
		move.b	#1,($FFFFB0DA).w
		clr.b	($FFFFFE1A).w

loc_10876:				; CODE XREF: Sonic_GameOver+80j
		move.w	#$8F,d0	; ''
		jsr	(PlaySound).l
		moveq	#3,d0
		jmp	(LoadPLC).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10888:				; CODE XREF: Sonic_GameOver+26j
		move.w	#$3C,$3A(a0) ; '<'
		tst.b	($FFFFFE1A).w
		beq.s	locret_108B4
		move.w	#0,$3A(a0)
		move.b	#$39,($FFFFB080).w ; '9'
		move.b	#$39,($FFFFB0C0).w ; '9'
		move.b	#2,($FFFFB09A).w
		move.b	#3,($FFFFB0DA).w
		bra.s	loc_10876
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_108B4:				; CODE XREF: Sonic_GameOver+Cj
					; Sonic_GameOver+60j
		rts
; End of function Sonic_GameOver

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj01_ResetLevel:			; DATA XREF: ROM:0000FA1Eo
		tst.w	$3A(a0)
		beq.s	locret_108C8
		subq.w	#1,$3A(a0)
		bne.s	locret_108C8
		move.w	#1,($FFFFFE02).w

locret_108C8:				; CODE XREF: ROM:000108BAj
					; ROM:000108C0j
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_Animate:				; CODE XREF: ROM:loc_FAFEp
					; ROM:0001078Ap ...

; FUNCTION CHUNK AT 0001095C SIZE 0000015E BYTES

		lea	(SonicAniData).l,a1
		moveq	#0,d0
		move.b	$1C(a0),d0
		cmp.b	$1D(a0),d0
		beq.s	loc_108EC
		move.b	d0,$1D(a0)
		move.b	#0,$1B(a0)
		move.b	#0,$1E(a0)

loc_108EC:				; CODE XREF: Sonic_Animate+10j
		add.w	d0,d0
		adda.w	(a1,d0.w),a1
		move.b	(a1),d0
		bmi.s	loc_1095C
		move.b	$22(a0),d1
		andi.b	#1,d1
		andi.b	#$FC,1(a0)
		or.b	d1,1(a0)
		subq.b	#1,$1E(a0)
		bpl.s	locret_1092A
		move.b	d0,$1E(a0)
; End of function Sonic_Animate


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_10912:				; CODE XREF: Sonic_Animate+116p
					; Sonic_Animate+1BAj ...
		moveq	#0,d1
		move.b	$1B(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#$F0,d0
		bcc.s	loc_1092C

loc_10922:				; CODE XREF: sub_10912+28j
					; sub_10912+3Cj
		move.b	d0,$1A(a0)
		addq.b	#1,$1B(a0)

locret_1092A:				; CODE XREF: Sonic_Animate+42j
					; Sonic_Animate+96j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1092C:				; CODE XREF: sub_10912+Ej
		addq.b	#1,d0
		bne.s	loc_1093C
		move.b	#0,$1B(a0)
		move.b	1(a1),d0
		bra.s	loc_10922
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1093C:				; CODE XREF: sub_10912+1Cj
		addq.b	#1,d0
		bne.s	loc_10950
		move.b	2(a1,d1.w),d0
		sub.b	d0,$1B(a0)
		sub.b	d0,d1
		move.b	1(a1,d1.w),d0
		bra.s	loc_10922
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10950:				; CODE XREF: sub_10912+2Cj
		addq.b	#1,d0
		bne.s	locret_1095A
		move.b	2(a1,d1.w),$1C(a0)

locret_1095A:				; CODE XREF: sub_10912+40j
		rts
; End of function sub_10912

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR Sonic_Animate

loc_1095C:				; CODE XREF: Sonic_Animate+2Aj
		subq.b	#1,$1E(a0)
		bpl.s	locret_1092A
		addq.b	#1,d0
		bne.w	loc_10A44
		moveq	#0,d0
		move.b	$27(a0),d0
		bne.w	loc_109EA
		moveq	#0,d1
		move.b	$26(a0),d0
		move.b	$22(a0),d2
		andi.b	#1,d2
		bne.s	loc_10984
		not.b	d0

loc_10984:				; CODE XREF: Sonic_Animate+B6j
		addi.b	#$10,d0
		bpl.s	loc_1098C
		moveq	#3,d1

loc_1098C:				; CODE XREF: Sonic_Animate+BEj
		andi.b	#$FC,1(a0)
		eor.b	d1,d2
		or.b	d2,1(a0)
		btst	#5,$22(a0)
		bne.w	loc_10A88
		lsr.b	#4,d0
		andi.b	#6,d0
		move.w	$14(a0),d2
		bpl.s	loc_109B0
		neg.w	d2

loc_109B0:				; CODE XREF: Sonic_Animate+E2j
		lea	(SonicAni_Run).l,a1
		cmpi.w	#$600,d2
		bcc.s	loc_109C2
		lea	(SonicAni_Walk).l,a1

loc_109C2:				; CODE XREF: Sonic_Animate+F0j
		move.b	d0,d1
		lsr.b	#1,d1
		add.b	d1,d0
		add.b	d0,d0
		add.b	d0,d0
		move.b	d0,d3
		neg.w	d2
		addi.w	#$800,d2
		bpl.s	loc_109D8
		moveq	#0,d2

loc_109D8:				; CODE XREF: Sonic_Animate+10Aj
		lsr.w	#8,d2
		lsr.w	#1,d2
		move.b	d2,$1E(a0)
		bsr.w	sub_10912
		add.b	d3,$1A(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_109EA:				; CODE XREF: Sonic_Animate+A4j
		move.b	$27(a0),d0
		moveq	#0,d1
		move.b	$22(a0),d2
		andi.b	#1,d2
		bne.s	loc_10A1E
		andi.b	#$FC,1(a0)
		moveq	#0,d2
		or.b	d2,1(a0)
		addi.b	#$B,d0
		divu.w	#$16,d0
		addi.b	#$9B,d0
		move.b	d0,$1A(a0)
		move.b	#0,$1E(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10A1E:				; CODE XREF: Sonic_Animate+12Ej
		moveq	#3,d2
		andi.b	#$FC,1(a0)
		or.b	d2,1(a0)
		neg.b	d0
		addi.b	#$8F,d0
		divu.w	#$16,d0
		addi.b	#$9B,d0
		move.b	d0,$1A(a0)
		move.b	#0,$1E(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10A44:				; CODE XREF: Sonic_Animate+9Aj
		addq.b	#1,d0
		bne.s	loc_10A88
		move.w	$14(a0),d2
		bpl.s	loc_10A50
		neg.w	d2

loc_10A50:				; CODE XREF: Sonic_Animate+182j
		lea	(SonicAni_Roll2).l,a1
		cmpi.w	#$600,d2
		bcc.s	loc_10A62
		lea	(SonicAni_Roll).l,a1

loc_10A62:				; CODE XREF: Sonic_Animate+190j
		neg.w	d2
		addi.w	#$400,d2
		bpl.s	loc_10A6C
		moveq	#0,d2

loc_10A6C:				; CODE XREF: Sonic_Animate+19Ej
		lsr.w	#8,d2
		move.b	d2,$1E(a0)
		move.b	$22(a0),d1
		andi.b	#1,d1
		andi.b	#$FC,1(a0)
		or.b	d1,1(a0)
		bra.w	sub_10912
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10A88:				; CODE XREF: Sonic_Animate+D4j
					; Sonic_Animate+17Cj
		move.w	$14(a0),d2
		bmi.s	loc_10A90
		neg.w	d2

loc_10A90:				; CODE XREF: Sonic_Animate+1C2j
		addi.w	#$800,d2
		bpl.s	loc_10A98
		moveq	#0,d2

loc_10A98:				; CODE XREF: Sonic_Animate+1CAj
		lsr.w	#6,d2
		move.b	d2,$1E(a0)
		lea	(SonicAni_Push).l,a1
		move.b	$22(a0),d1
		andi.b	#1,d1
		andi.b	#$FC,1(a0)
		or.b	d1,1(a0)
		bra.w	sub_10912
; End of function Sonic_Animate
; ===========================================================================
; ---------------------------------------------------------------------------
; Animation script - Sonic
; ---------------------------------------------------------------------------
SonicAniData:	dc.w SonicAni_Walk-SonicAniData
		dc.w SonicAni_Run-SonicAniData
		dc.w SonicAni_Roll-SonicAniData
		dc.w SonicAni_Roll2-SonicAniData
		dc.w SonicAni_Push-SonicAniData
		dc.w SonicAni_Wait-SonicAniData
		dc.w SonicAni_Balance-SonicAniData
		dc.w SonicAni_LookUp-SonicAniData
		dc.w SonicAni_Duck-SonicAniData
		dc.w SonicAni_Spindash-SonicAniData
		dc.w SonicAni_WallRecoil1-SonicAniData
		dc.w SonicAni_WallRecoil2-SonicAniData
		dc.w SonicAni_0C-SonicAniData
		dc.w SonicAni_Stop-SonicAniData
		dc.w SonicAni_Float1-SonicAniData
		dc.w SonicAni_Float2-SonicAniData
		dc.w SonicAni_10-SonicAniData
		dc.w SonicAni_S1LZHang-SonicAniData
		dc.w SonicAni_Unused12-SonicAniData
		dc.w SonicAni_Unused13-SonicAniData
		dc.w SonicAni_Unused14-SonicAniData
		dc.w SonicAni_Bubble-SonicAniData
		dc.w SonicAni_Death1-SonicAniData
		dc.w SonicAni_Drown-SonicAniData
		dc.w SonicAni_Death2-SonicAniData
		dc.w SonicAni_Unused19-SonicAniData
		dc.w SonicAni_Hurt-SonicAniData
		dc.w SonicAni_S1LZSlide-SonicAniData
		dc.w SonicAni_1C-SonicAniData
		dc.w SonicAni_Float3-SonicAniData
		dc.w SonicAni_1E-SonicAniData
SonicAni_Walk:		dc.b $FF,$10,$11,$12,$13,$14,$15,$16,$17, $C, $D, $E, $F,$FF
SonicAni_Run:		dc.b $FF,$3C,$3D,$3E,$3F,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
SonicAni_Roll:		dc.b $FE,$6C,$70,$6D,$70,$6E,$70,$6F,$70,$FF
SonicAni_Roll2:		dc.b $FE,$6C,$70,$6D,$70,$6E,$70,$6F,$70,$FF
SonicAni_Push:		dc.b $FD,$77,$78,$79,$7A,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
SonicAni_Wait:		dc.b   7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1
			dc.b   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2
			dc.b   3,  3,  3,  4,  4,  5,  5,$FE,  4
SonicAni_Balance:	dc.b	7,$89,$8A,$FF
SonicAni_LookUp:	dc.b   5,  6,  7,$FE,  1
SonicAni_Duck:		dc.b   5,$7F,$80,$FE,  1
SonicAni_Spindash:	dc.b	 0,$71,$72,$71,$73,$71,$74,$71,$75,$71,$76,$71,$FF
SonicAni_WallRecoil1:	dc.b $3F,$82,$FF
SonicAni_WallRecoil2:	dc.b   7, 8, 8, 9,$FD,	5
SonicAni_0C:		dc.b   7,  9,$FD,  5
SonicAni_Stop:		dc.b   3,$81,$82,$83,$84,$85,$86,$87,$88,$FE,  2
SonicAni_Float1:	dc.b   7,$94,$96,$FF
SonicAni_Float2:	dc.b   7,$91,$92,$93,$94,$95,$FF
SonicAni_10:		dc.b $2F,$7E,$FD,  0
SonicAni_S1LZHang:	dc.b	 5,$8F,$90,$FF
SonicAni_Unused12:	dc.b	$F,$43,$43,$43,$FE,  1
SonicAni_Unused13:	dc.b	$F,$43,$44,$FE,	 1
SonicAni_Unused14:	dc.b $3F,$49,$FF
SonicAni_Bubble:	dc.b  $B,$97,$97,$12,$13,$FD,  0
SonicAni_Death1:	dc.b $20,$9A,$FF
SonicAni_Drown:		dc.b $20,$99,$FF
SonicAni_Death2:	dc.b $20,$98,$FF
SonicAni_Unused19:	dc.b	 3,$4E,$4F,$50,$51,$52,	 0,$FE,	 1
SonicAni_Hurt:		dc.b $40,$8D,$FF
SonicAni_S1LZSlide:	dc.b	  9,$8D,$8E,$FF
SonicAni_1C:		dc.b $77,  0,$FD,  0
SonicAni_Float3:	dc.b   3,$91,$92,$93,$94,$95,$FF
SonicAni_1E:		dc.b   3,$3C,$FD,  0
	even

; ---------------------------------------------------------------------------
; Sonic pattern loading subroutine
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


LoadSonicDynPLC:
		moveq	#0,d0
		move.b	$1A(a0),d0
		cmp.b	(Sonic_LastLoadedDPLC).w,d0
		beq.s	locret_10C34
		move.b	d0,(Sonic_LastLoadedDPLC).w
		lea	(SonicDynPLC).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_10C34
		move.w	#$F000,d4
; loc_10C08:
SPLC_ReadEntry:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		addi.l	#Art_Sonic,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(QueueDMATransfer).l
		dbf	d5,SPLC_ReadEntry

locret_10C34:
		rts
; End of function LoadSonicDynPLC

; ===========================================================================
		nop

JmpTo_KillSonic:	; JmpTo
		jmp	(KillSonic).l

		align 4

; ===========================================================================
;----------------------------------------------------------------------------
; Object 02 - Tails
;----------------------------------------------------------------------------

Obj02:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj02_Index(pc,d0.w),d1
		jmp	Obj02_Index(pc,d1.w)
; ===========================================================================
Obj02_Index:	dc.w Obj02_Init-Obj02_Index		; 0
		dc.w Obj02_Control-Obj02_Index		; 2
		dc.w Obj02_Hurt-Obj02_Index		; 4
		dc.w Obj02_Dead-Obj02_Index		; 6
		dc.w Obj02_ResetLevel-Obj02_Index	; 8
; ===========================================================================
; Obj02_Main:
Obj02_Init:
		addq.b	#2,routine(a0)
		move.b	#$F,$16(a0)
		move.b	#9,$17(a0)
		move.l	#Map_Tails,4(a0)
		move.w	#$7A0,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#2,$18(a0)
		move.b	#$18,$19(a0)
		move.b	#$84,1(a0)
		move.w	#$600,(Sonic_top_speed).w
		move.w	#$C,(Sonic_acceleration).w
		move.w	#$80,(Sonic_deceleration).w
		move.b	#$C,$3E(a0)
		move.b	#$D,$3F(a0)
		move.b	#0,$2C(a0)
		move.b	#4,$2D(a0)
		move.b	#5,($FFFFB1C0).w	; load Tails' tails at $B1C0

; ---------------------------------------------------------------------------
; Normal state for Tails
; ---------------------------------------------------------------------------
Obj02_Control:
		bsr.w	Tails_Control
		btst	#0,($FFFFF7C8).w	; is Tails interacting with another object that holds him in place or controls his movement somehow?
		bne.s	Obj02_ControlsLock	; if yes, branch to skip Tails' control
		moveq	#0,d0
		move.b	$22(a0),d0
		andi.w	#6,d0
		move.w	Obj02_Modes(pc,d0.w),d1
		jsr	Obj02_Modes(pc,d1.w)	; run Tails' movement code

Obj02_ControlsLock:
		bsr.s	Tails_Display
		bsr.w	RecordTailsMoves
		move.b	($FFFFF768).w,$36(a0)
		move.b	($FFFFF76A).w,$37(a0)
		bsr.w	Tails_Animate
		tst.b	($FFFFF7C8).w
		bmi.s	loc_10CFC
		jsr	TouchResponse

loc_10CFC:
		bsr.w	LoadTailsDynPLC
		rts
; ===========================================================================
Obj02_Modes:	dc.w Obj02_MdNormal-Obj02_Modes
		dc.w Obj02_MdJump-Obj02_Modes
		dc.w Obj02_MdRoll-Obj02_Modes
		dc.w Obj02_MdJump2-Obj02_Modes
; ===========================================================================
; same as Sonic's...
MusicList_Tails:dc.b MusID_GHZ
		dc.b MusID_LZ
		dc.b MusID_CPZ
		dc.b MusID_EHZ
		dc.b MusID_HPZ
		dc.b MusID_HTZ
		even

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Tails_Display:
		move.w	$30(a0),d0
		beq.s	Obj02_Display
		subq.w	#1,$30(a0)
		lsr.w	#3,d0
		bcc.s	Obj02_ChkInvinc
; loc_10D1E:
Obj02_Display:
		jsr	(DisplaySprite).l
; loc_10D24:
Obj02_ChkInvinc:
		; checks if invincibility has expired and disables it if it has,
		; and unlike Sonic's version, functions normally...
		tst.b	($FFFFFE2D).w
		beq.s	Obj02_ChkShoes
		tst.w	$32(a0)
		beq.s	Obj02_ChkShoes
		subq.w	#1,$32(a0)
		bne.s	Obj02_ChkShoes
		tst.b	($FFFFF7AA).w
		bne.s	Obj02_RmvInvin
		cmpi.w	#$C,($FFFFFE14).w
		bcs.s	Obj02_RmvInvin
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		cmpi.w	#$103,(Current_ZoneAndAct).w
		bne.s	loc_10D54
		moveq	#5,d0

loc_10D54:
		lea	MusicList_Tails(pc),a1
		move.b	(a1,d0.w),d0
		jsr	(PlaySound).l
; loc_10D62:
Obj02_RmvInvin:
		move.b	#0,($FFFFFE2D).w
; loc_10D68:
Obj02_ChkShoes:
		; checks if Speed Shoes have expired and disables them if they have
		tst.b	($FFFFFE2E).w
		beq.s	Obj02_ExitChk
		tst.w	$34(a0)
		beq.s	Obj02_ExitChk
		subq.w	#1,$34(a0)
		bne.s	Obj02_ExitChk
		move.w	#$600,(Sonic_top_speed).w
		move.w	#$C,(Sonic_acceleration).w
		move.w	#$80,(Sonic_deceleration).w
; Obj02_RmvSpeed:
		move.b	#0,($FFFFFE2E).w
		move.w	#$E3,d0		; slow down tempo
		jmp	(PlaySound).l
; ===========================================================================
; locret_10D9C:
Obj02_ExitChk:
		rts
; End of function Tails_Display


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_Control:				; CODE XREF: ROM:Obj02_Controlp
		move.b	($FFFFF606).w,d0
		andi.b	#$7F,d0	; ''
		beq.s	TailsC_NoKeysPressed
		move.w	#0,($FFFFF700).w
		move.w	#$12C,($FFFFF702).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

TailsC_NoKeysPressed:			; CODE XREF: Tails_Control+8j
		tst.w	($FFFFF702).w
		beq.s	TailsC_DoControl
		subq.w	#1,($FFFFF702).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

TailsC_DoControl:			; CODE XREF: Tails_Control+1Cj
		move.w	($FFFFF708).w,d0
		move.w	TailsC_Index(pc,d0.w),d0
		jmp	TailsC_Index(pc,d0.w)
; End of function Tails_Control

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
TailsC_Index:	dc.w TailsC_00-TailsC_Index ; DATA XREF: ROM:TailsC_Indexo
					; ROM:00010DD0o ...
		dc.w TailsC_02-TailsC_Index
		dc.w TailsC_04-TailsC_Index
		dc.w TailsC_CopySonicMoves-TailsC_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

TailsC_00:				; DATA XREF: ROM:TailsC_Indexo
		move.w	#6,($FFFFF708).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

TailsC_02:				; DATA XREF: ROM:00010DD0o
		move.w	#6,($FFFFF708).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		move.w	#$40,($FFFFF706).w ; '@'
		move.w	#4,($FFFFF708).w

TailsC_04:				; DATA XREF: ROM:00010DD2o
		move.w	#6,($FFFFF708).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		move.w	($FFFFF706).w,d1
		subq.w	#1,d1
		cmpi.w	#$10,d1
		bne.s	loc_10E0C
		move.w	#6,($FFFFF708).w

loc_10E0C:				; CODE XREF: ROM:00010E04j
		move.w	d1,($FFFFF706).w
		lea	(Tails_Pos_Record_Buf).w,a1
		lsl.b	#2,d1
		addq.b	#4,d1
		move.w	($FFFFEEE0).w,d0
		sub.b	d1,d0
		move.w	(a1,d0.w),8(a0)
		move.w	2(a1,d0.w),$C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

TailsC_CopySonicMoves:			; DATA XREF: ROM:00010DD4o
		move.w	($FFFFB008).w,d0
		sub.w	8(a0),d0
		bpl.s	loc_10E38
		neg.w	d0

loc_10E38:				; CODE XREF: ROM:00010E34j
		cmpi.w	#$C0,d0	; 'À'
		bcs.s	loc_10E40
		nop

loc_10E40:				; CODE XREF: ROM:00010E3Cj
		lea	(Sonic_Pos_Record_Buf).w,a1
		move.w	#$10,d1
		lsl.b	#2,d1
		addq.b	#4,d1
		move.w	(Sonic_Pos_Record_Index).w,d0
		sub.b	d1,d0
		lea	(Sonic_Stat_Record_Buf).w,a1
		move.w	(a1,d0.w),($FFFFF606).w
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


RecordTailsMoves:			; CODE XREF: ROM:00010CDCp
		move.w	($FFFFEED6).w,d0
		lea	($FFFFE700).w,a1
		lea	(a1,d0.w),a1
		move.w	8(a0),(a1)+
		move.w	$C(a0),(a1)+
		addq.b	#4,($FFFFEED7).w
		rts
; End of function RecordTailsMoves

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj02_MdNormal:				; DATA XREF: ROM:Obj02_Modeso
		bsr.w	Tails_Spindash
		bsr.w	Tails_Jump
		bsr.w	Tails_SlopeResist
		bsr.w	Tails_Move
		bsr.w	Tails_Roll
		bsr.w	Tails_LevelBoundaries
		jsr	ObjectMove
		bsr.w	AnglePos
		bsr.w	Tails_SlopeRepel
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj02_MdJump:				; DATA XREF: ROM:00010D04o
		bsr.w	Tails_JumpHeight
		bsr.w	Tails_ChgJumpDir
		bsr.w	Tails_LevelBoundaries
		jsr	ObjectMoveAndFall
		btst	#6,$22(a0)
		beq.s	loc_10EC0
		subi.w	#$28,$12(a0) ; '('

loc_10EC0:				; CODE XREF: ROM:00010EB8j
		bsr.w	Tails_JumpAngle
		bsr.w	Tails_Floor
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj02_MdRoll:				; DATA XREF: ROM:00010D06o
		bsr.w	Tails_Jump
		bsr.w	Tails_RollRepel
		bsr.w	Tails_RollSpeed
		bsr.w	Tails_LevelBoundaries
		jsr	ObjectMove
		bsr.w	AnglePos
		bsr.w	Tails_SlopeRepel
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj02_MdJump2:				; DATA XREF: ROM:00010D08o
		bsr.w	Tails_JumpHeight
		bsr.w	Tails_ChgJumpDir
		bsr.w	Tails_LevelBoundaries
		jsr	ObjectMoveAndFall
		btst	#6,$22(a0)
		beq.s	loc_10F0A
		subi.w	#$28,$12(a0) ; '('

loc_10F0A:				; CODE XREF: ROM:00010F02j
		bsr.w	Tails_JumpAngle
		bsr.w	Tails_Floor
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_Move:				; CODE XREF: ROM:00010E84p
		move.w	(Sonic_top_speed).w,d6
		move.w	(Sonic_acceleration).w,d5
		move.w	(Sonic_deceleration).w,d4
		tst.b	($FFFFF7CA).w
		bne.w	loc_11026
		tst.w	$2E(a0)
		bne.w	loc_10FFA
		btst	#2,($FFFFF606).w
		beq.s	loc_10F3C
		bsr.w	Tails_MoveLeft

loc_10F3C:				; CODE XREF: Tails_Move+22j
		btst	#3,($FFFFF606).w
		beq.s	loc_10F48
		bsr.w	Tails_MoveRight

loc_10F48:				; CODE XREF: Tails_Move+2Ej
		move.b	$26(a0),d0
		addi.b	#$20,d0	; ' '
		andi.b	#$C0,d0
		bne.w	loc_10FFA
		tst.w	$14(a0)
		bne.w	loc_10FFA
		bclr	#5,$22(a0)
		move.b	#5,$1C(a0)
		btst	#3,$22(a0)
		beq.s	Tails_Balance
		moveq	#0,d0
		move.b	$3D(a0),d0
		lsl.w	#6,d0
		lea	($FFFFB000).w,a1
		lea	(a1,d0.w),a1
		tst.b	$22(a1)
		bmi.s	Tails_LookUp
		moveq	#0,d1
		move.b	$19(a1),d1
		move.w	d1,d2
		add.w	d2,d2
		subq.w	#4,d2
		add.w	8(a0),d1
		sub.w	8(a1),d1
		cmpi.w	#4,d1
		blt.s	loc_10FCE
		cmp.w	d2,d1
		bge.s	loc_10FBE
		bra.s	Tails_LookUp
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Tails_Balance:				; CODE XREF: Tails_Move+5Ej
		jsr	ObjHitFloor
		cmpi.w	#$C,d1
		blt.s	Tails_LookUp
		cmpi.b	#3,$36(a0)
		bne.s	loc_10FC6

loc_10FBE:				; CODE XREF: Tails_Move+92j
		bclr	#0,$22(a0)
		bra.s	loc_10FD4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_10FC6:				; CODE XREF: Tails_Move+A8j
		cmpi.b	#3,$37(a0)
		bne.s	Tails_LookUp

loc_10FCE:				; CODE XREF: Tails_Move+8Ej
		bset	#0,$22(a0)

loc_10FD4:				; CODE XREF: Tails_Move+B0j
		move.b	#6,$1C(a0)
		bra.s	loc_10FFA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Tails_LookUp:				; CODE XREF: Tails_Move+74j
					; Tails_Move+94j ...
		btst	#0,($FFFFF606).w
		beq.s	Tails_Duck
		move.b	#7,$1C(a0)
		bra.s	loc_10FFA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Tails_Duck:				; CODE XREF: Tails_Move+CEj
		btst	#1,($FFFFF606).w
		beq.s	loc_10FFA
		move.b	#8,$1C(a0)

loc_10FFA:				; CODE XREF: Tails_Move+18j
					; Tails_Move+40j ...
		move.b	($FFFFF606).w,d0

loc_10FFE:
		andi.b	#$C,d0
		bne.s	loc_11026
		move.w	$14(a0),d0
		beq.s	loc_11026
		bmi.s	loc_1101A
		sub.w	d5,d0
		bcc.s	loc_11014
		move.w	#0,d0

loc_11014:				; CODE XREF: Tails_Move+FAj
		move.w	d0,$14(a0)
		bra.s	loc_11026
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1101A:				; CODE XREF: Tails_Move+F6j
		add.w	d5,d0
		bcc.s	loc_11022
		move.w	#0,d0

loc_11022:				; CODE XREF: Tails_Move+108j
		move.w	d0,$14(a0)

loc_11026:				; CODE XREF: Tails_Move+10j
					; Tails_Move+EEj ...
		move.b	$26(a0),d0
		jsr	(CalcSine).l
		muls.w	$14(a0),d1
		asr.l	#8,d1
		move.w	d1,$10(a0)
		muls.w	$14(a0),d0
		asr.l	#8,d0
		move.w	d0,$12(a0)

loc_11044:				; CODE XREF: Tails_RollSpeed+AEj
		move.b	$26(a0),d0
		addi.b	#$40,d0	; '@'
		bmi.s	locret_110B4
		move.b	#$40,d1	; '@'
		tst.w	$14(a0)
		beq.s	locret_110B4
		bmi.s	loc_1105C
		neg.w	d1

loc_1105C:				; CODE XREF: Tails_Move+144j
		move.b	$26(a0),d0
		add.b	d1,d0
		move.w	d0,-(sp)
		bsr.w	CalcRoomInFront
		move.w	(sp)+,d0
		tst.w	d1
		bpl.s	locret_110B4
		asl.w	#8,d1
		addi.b	#$20,d0	; ' '
		andi.b	#$C0,d0
		beq.s	loc_110B0
		cmpi.b	#$40,d0	; '@'
		beq.s	loc_1109E
		cmpi.b	#$80,d0
		beq.s	loc_11098
		add.w	d1,$10(a0)
		bset	#5,$22(a0)
		move.w	#0,$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11098:				; CODE XREF: Tails_Move+170j
		sub.w	d1,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1109E:				; CODE XREF: Tails_Move+16Aj
		sub.w	d1,$10(a0)
		bset	#5,$22(a0)
		move.w	#0,$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_110B0:				; CODE XREF: Tails_Move+164j
		add.w	d1,$12(a0)

locret_110B4:				; CODE XREF: Tails_Move+138j
					; Tails_Move+142j ...
		rts
; End of function Tails_Move


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_MoveLeft:				; CODE XREF: Tails_Move+24p
		move.w	$14(a0),d0
		beq.s	loc_110BE
		bpl.s	loc_110EA

loc_110BE:				; CODE XREF: Tails_MoveLeft+4j
		bset	#0,$22(a0)
		bne.s	loc_110D2
		bclr	#5,$22(a0)
		move.b	#1,$1D(a0)

loc_110D2:				; CODE XREF: Tails_MoveLeft+Ej
		sub.w	d5,d0
		move.w	d6,d1
		neg.w	d1
		cmp.w	d1,d0
		bgt.s	loc_110DE
		move.w	d1,d0

loc_110DE:				; CODE XREF: Tails_MoveLeft+24j
		move.w	d0,$14(a0)
		move.b	#0,$1C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_110EA:				; CODE XREF: Tails_MoveLeft+6j
		sub.w	d4,d0
		bcc.s	loc_110F2
		move.w	#$FF80,d0

loc_110F2:				; CODE XREF: Tails_MoveLeft+36j
		move.w	d0,$14(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0	; ' '
		andi.b	#$C0,d0
		bne.s	locret_11120
		cmpi.w	#$400,d0
		blt.s	locret_11120
		move.b	#$D,$1C(a0)
		bclr	#0,$22(a0)
		move.w	#$A4,d0	; '¤'
		jsr	(PlaySound_Special).l

locret_11120:				; CODE XREF: Tails_MoveLeft+4Cj
					; Tails_MoveLeft+52j
		rts
; End of function Tails_MoveLeft


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_MoveRight:			; CODE XREF: Tails_Move+30p
		move.w	$14(a0),d0
		bmi.s	loc_11150
		bclr	#0,$22(a0)
		beq.s	loc_1113C
		bclr	#5,$22(a0)
		move.b	#1,$1D(a0)

loc_1113C:				; CODE XREF: Tails_MoveRight+Cj
		add.w	d5,d0
		cmp.w	d6,d0
		blt.s	loc_11144
		move.w	d6,d0

loc_11144:				; CODE XREF: Tails_MoveRight+1Ej
		move.w	d0,$14(a0)
		move.b	#0,$1C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11150:				; CODE XREF: Tails_MoveRight+4j
		add.w	d4,d0
		bcc.s	loc_11158
		move.w	#$80,d0	; ''

loc_11158:				; CODE XREF: Tails_MoveRight+30j
		move.w	d0,$14(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0	; ' '
		andi.b	#$C0,d0
		bne.s	locret_11186
		cmpi.w	#$FC00,d0
		bgt.s	locret_11186
		move.b	#$D,$1C(a0)
		bset	#0,$22(a0)
		move.w	#$A4,d0	; '¤'
		jsr	(PlaySound_Special).l

locret_11186:				; CODE XREF: Tails_MoveRight+46j
					; Tails_MoveRight+4Cj
		rts
; End of function Tails_MoveRight


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_RollSpeed:			; CODE XREF: ROM:00010ED2p
		move.w	(Sonic_top_speed).w,d6
		asl.w	#1,d6
		move.w	(Sonic_acceleration).w,d5
		asr.w	#1,d5
		move.w	(Sonic_deceleration).w,d4
		asr.w	#2,d4
		tst.b	($FFFFF7CA).w
		bne.w	loc_11204
		tst.w	$2E(a0)
		bne.s	loc_111C0
		btst	#2,($FFFFF606).w
		beq.s	loc_111B4
		bsr.w	Tails_RollLeft

loc_111B4:				; CODE XREF: Tails_RollSpeed+26j
		btst	#3,($FFFFF606).w
		beq.s	loc_111C0
		bsr.w	Tails_RollRight

loc_111C0:				; CODE XREF: Tails_RollSpeed+1Ej
					; Tails_RollSpeed+32j
		move.w	$14(a0),d0
		beq.s	loc_111E2
		bmi.s	loc_111D6
		sub.w	d5,d0
		bcc.s	loc_111D0
		move.w	#0,d0

loc_111D0:				; CODE XREF: Tails_RollSpeed+42j
		move.w	d0,$14(a0)
		bra.s	loc_111E2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_111D6:				; CODE XREF: Tails_RollSpeed+3Ej
		add.w	d5,d0
		bcc.s	loc_111DE
		move.w	#0,d0

loc_111DE:				; CODE XREF: Tails_RollSpeed+50j
		move.w	d0,$14(a0)

loc_111E2:				; CODE XREF: Tails_RollSpeed+3Cj
					; Tails_RollSpeed+4Cj
		tst.w	$14(a0)
		bne.s	loc_11204
		bclr	#2,$22(a0)
		move.b	#$F,$16(a0)
		move.b	#9,$17(a0)
		move.b	#5,$1C(a0)
		subq.w	#5,$C(a0)

loc_11204:				; CODE XREF: Tails_RollSpeed+16j
					; Tails_RollSpeed+5Ej
		move.b	$26(a0),d0
		jsr	(CalcSine).l
		muls.w	$14(a0),d0
		asr.l	#8,d0
		move.w	d0,$12(a0)
		muls.w	$14(a0),d1
		asr.l	#8,d1
		cmpi.w	#$1000,d1
		ble.s	loc_11228
		move.w	#$1000,d1

loc_11228:				; CODE XREF: Tails_RollSpeed+9Aj
		cmpi.w	#$F000,d1
		bge.s	loc_11232
		move.w	#$F000,d1

loc_11232:				; CODE XREF: Tails_RollSpeed+A4j
		move.w	d1,$10(a0)
		bra.w	loc_11044
; End of function Tails_RollSpeed


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_RollLeft:				; CODE XREF: Tails_RollSpeed+28p
		move.w	$14(a0),d0
		beq.s	loc_11242
		bpl.s	loc_11250

loc_11242:				; CODE XREF: Tails_RollLeft+4j
		bset	#0,$22(a0)
		move.b	#2,$1C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11250:				; CODE XREF: Tails_RollLeft+6j
		sub.w	d4,d0
		bcc.s	loc_11258
		move.w	#$FF80,d0

loc_11258:				; CODE XREF: Tails_RollLeft+18j
		move.w	d0,$14(a0)
		rts
; End of function Tails_RollLeft


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_RollRight:			; CODE XREF: Tails_RollSpeed+34p
		move.w	$14(a0),d0
		bmi.s	loc_11272
		bclr	#0,$22(a0)
		move.b	#2,$1C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11272:				; CODE XREF: Tails_RollRight+4j
		add.w	d4,d0
		bcc.s	loc_1127A
		move.w	#$80,d0	; ''

loc_1127A:				; CODE XREF: Tails_RollRight+16j
		move.w	d0,$14(a0)
		rts
; End of function Tails_RollRight


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_ChgJumpDir:			; CODE XREF: ROM:00010EA4p
					; ROM:00010EEEp
		move.w	(Sonic_top_speed).w,d6
		move.w	(Sonic_acceleration).w,d5
		asl.w	#1,d5
		btst	#4,$22(a0)
		bne.s	loc_112CA
		move.w	$10(a0),d0
		btst	#2,($FFFFF606).w
		beq.s	loc_112B0
		bset	#0,$22(a0)
		sub.w	d5,d0
		move.w	d6,d1
		neg.w	d1
		cmp.w	d1,d0
		bgt.s	loc_112B0
		move.w	d1,d0

loc_112B0:				; CODE XREF: Tails_ChgJumpDir+1Cj
					; Tails_ChgJumpDir+2Cj
		btst	#3,($FFFFF606).w
		beq.s	loc_112C6
		bclr	#0,$22(a0)
		add.w	d5,d0
		cmp.w	d6,d0
		blt.s	loc_112C6
		move.w	d6,d0

loc_112C6:				; CODE XREF: Tails_ChgJumpDir+36j
					; Tails_ChgJumpDir+42j
		move.w	d0,$10(a0)

loc_112CA:				; CODE XREF: Tails_ChgJumpDir+10j
		cmpi.w	#$60,($FFFFEED8).w ; '`'
		beq.s	loc_112DC
		bcc.s	loc_112D8
		addq.w	#4,($FFFFEED8).w

loc_112D8:				; CODE XREF: Tails_ChgJumpDir+52j
		subq.w	#2,($FFFFEED8).w

loc_112DC:				; CODE XREF: Tails_ChgJumpDir+50j
		cmpi.w	#$FC00,$12(a0)
		bcs.s	locret_1130A
		move.w	$10(a0),d0
		move.w	d0,d1
		asr.w	#5,d1
		beq.s	locret_1130A
		bmi.s	loc_112FE
		sub.w	d1,d0
		bcc.s	loc_112F8
		move.w	#0,d0

loc_112F8:				; CODE XREF: Tails_ChgJumpDir+72j
		move.w	d0,$10(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_112FE:				; CODE XREF: Tails_ChgJumpDir+6Ej
		sub.w	d1,d0
		bcs.s	loc_11306
		move.w	#0,d0

loc_11306:				; CODE XREF: Tails_ChgJumpDir+80j
		move.w	d0,$10(a0)

locret_1130A:				; CODE XREF: Tails_ChgJumpDir+62j
					; Tails_ChgJumpDir+6Cj
		rts
; End of function Tails_ChgJumpDir


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_LevelBoundaries:			; CODE XREF: ROM:00010E8Cp
					; ROM:00010EA8p ...

; FUNCTION CHUNK AT 00011E5C SIZE 00000006 BYTES

		move.l	8(a0),d1
		move.w	$10(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d1
		swap	d1
		move.w	($FFFFEEC8).w,d0
		addi.w	#$10,d0
		cmp.w	d1,d0
		bhi.s	loc_11374
		move.w	($FFFFEECA).w,d0
		addi.w	#$128,d0
		tst.b	($FFFFF7AA).w
		bne.s	loc_1133A
		addi.w	#$40,d0	; '@'

loc_1133A:				; CODE XREF: Tails_LevelBoundaries+28j
		cmp.w	d1,d0
		bls.s	loc_11374

loc_1133E:				; CODE XREF: Tails_LevelBoundaries+7Ej
		move.w	($FFFFEECE).w,d0
		addi.w	#$E0,d0	; 'à'
		cmp.w	$C(a0),d0
		blt.s	loc_1134E
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1134E:				; CODE XREF: Tails_LevelBoundaries+3Ej
		cmpi.w	#$501,(Current_ZoneAndAct).w
		bne.w	KillTails
		cmpi.w	#$2000,8(a0)
		bcs.w	KillTails
		clr.b	($FFFFFE30).w
		move.w	#1,($FFFFFE02).w
		move.w	#$103,(Current_ZoneAndAct).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11374:				; CODE XREF: Tails_LevelBoundaries+1Aj
					; Tails_LevelBoundaries+30j
		move.w	d0,8(a0)
		move.w	#0,$A(a0)
		move.w	#0,$10(a0)
		move.w	#0,$14(a0)
		bra.s	loc_1133E
; End of function Tails_LevelBoundaries


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_Roll:				; CODE XREF: ROM:00010E88p
		tst.b	($FFFFF7CA).w
		bne.s	locret_113B2
		move.w	$14(a0),d0
		bpl.s	loc_1139A
		neg.w	d0

loc_1139A:				; CODE XREF: Tails_Roll+Aj
		cmpi.w	#$80,d0	; ''
		bcs.s	locret_113B2
		move.b	($FFFFF606).w,d0
		andi.b	#$C,d0
		bne.s	locret_113B2
		btst	#1,($FFFFF606).w
		bne.s	loc_113B4

locret_113B2:				; CODE XREF: Tails_Roll+4j
					; Tails_Roll+12j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_113B4:				; CODE XREF: Tails_Roll+24j
		btst	#2,$22(a0)
		beq.s	loc_113BE
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_113BE:				; CODE XREF: Tails_Roll+2Ej
		bset	#2,$22(a0)
		move.b	#$E,$16(a0)
		move.b	#7,$17(a0)
		move.b	#2,$1C(a0)
		addq.w	#5,$C(a0)
		move.w	#$BE,d0	; '¾'
		jsr	(PlaySound_Special).l
		tst.w	$14(a0)
		bne.s	locret_113F0
		move.w	#$200,$14(a0)

locret_113F0:				; CODE XREF: Tails_Roll+5Cj
		rts
; End of function Tails_Roll


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_Jump:				; CODE XREF: ROM:00010E7Cp
					; ROM:Obj02_MdRollp
		move.b	($FFFFF607).w,d0
		andi.b	#$70,d0	; 'p'
		beq.w	locret_11496
		moveq	#0,d0
		move.b	$26(a0),d0

loc_11404:
		addi.b	#$80,d0

loc_11408:
		bsr.w	sub_13102
		cmpi.w	#6,d1
		blt.w	locret_11496
		move.w	#$680,d2
		btst	#6,$22(a0)
		beq.s	loc_11424
		move.w	#$380,d2

loc_11424:				; CODE XREF: Tails_Jump+2Cj
		moveq	#0,d0
		move.b	$26(a0),d0
		subi.b	#$40,d0	; '@'
		jsr	(CalcSine).l
		muls.w	d2,d1
		asr.l	#8,d1
		add.w	d1,$10(a0)
		muls.w	d2,d0
		asr.l	#8,d0
		add.w	d0,$12(a0)
		bset	#1,$22(a0)
		bclr	#5,$22(a0)
		addq.l	#4,sp
		move.b	#1,$3C(a0)
		clr.b	$38(a0)
		move.w	#$A0,d0	; ' '
		jsr	(PlaySound_Special).l
		move.b	#$F,$16(a0)
		move.b	#9,$17(a0)
		btst	#2,$22(a0)
		bne.s	loc_11498
		move.b	#$E,$16(a0)
		move.b	#7,$17(a0)
		move.b	#2,$1C(a0)
		bset	#2,$22(a0)
		addq.w	#5,$C(a0)

locret_11496:				; CODE XREF: Tails_Jump+8j
					; Tails_Jump+1Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11498:				; CODE XREF: Tails_Jump+86j
		bset	#4,$22(a0)
		rts
; End of function Tails_Jump


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_JumpHeight:			; CODE XREF: ROM:Obj02_MdJumpp
					; ROM:Obj02_MdJump2p
		tst.b	$3C(a0)
		beq.s	loc_114CC
		move.w	#$FC00,d1
		btst	#6,$22(a0)
		beq.s	loc_114B6
		move.w	#$FE00,d1

loc_114B6:				; CODE XREF: Tails_JumpHeight+10j
		cmp.w	$12(a0),d1
		ble.s	locret_114CA
		move.b	($FFFFF606).w,d0
		andi.b	#$70,d0	; 'p'
		bne.s	locret_114CA
		move.w	d1,$12(a0)

locret_114CA:				; CODE XREF: Tails_JumpHeight+1Aj
					; Tails_JumpHeight+24j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_114CC:				; CODE XREF: Tails_JumpHeight+4j
		cmpi.w	#$F040,$12(a0)
		bge.s	locret_114DA
		move.w	#$F040,$12(a0)

locret_114DA:				; CODE XREF: Tails_JumpHeight+32j
		rts
; End of function Tails_JumpHeight


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_Spindash:				; CODE XREF: ROM:Obj02_MdNormalp
		tst.b	$39(a0)
		bne.s	loc_11510
		cmpi.b	#8,$1C(a0)
		bne.s	locret_1150E
		move.b	($FFFFF607).w,d0
		andi.b	#$70,d0	; 'p'
		beq.w	locret_1150E
		move.b	#9,$1C(a0)
		move.w	#$BE,d0	; '¾'
		jsr	(PlaySound_Special).l
		addq.l	#4,sp
		move.b	#1,$39(a0)

locret_1150E:				; CODE XREF: Tails_Spindash+Cj
					; Tails_Spindash+16j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11510:				; CODE XREF: Tails_Spindash+4j
		move.b	($FFFFF606).w,d0
		btst	#1,d0
		bne.s	loc_11556
		move.b	#$E,$16(a0)
		move.b	#7,$17(a0)
		move.b	#2,$1C(a0)
		addq.w	#5,$C(a0)
		move.b	#0,$39(a0)
		move.w	#$2000,($FFFFEED0).w
		move.w	#$800,$14(a0)
		btst	#0,$22(a0)
		beq.s	loc_1154E
		neg.w	$14(a0)

loc_1154E:				; CODE XREF: Tails_Spindash+6Cj
		bset	#2,$22(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11556:				; CODE XREF: Tails_Spindash+3Cj
		move.b	($FFFFF607).w,d0
		andi.b	#$70,d0	; 'p'
		beq.w	loc_11564
		nop

loc_11564:				; CODE XREF: Tails_Spindash+82j
		addq.l	#4,sp
		rts
; End of function Tails_Spindash


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_SlopeResist:			; CODE XREF: ROM:00010E80p
		move.b	$26(a0),d0
		addi.b	#$60,d0	; '`'
		cmpi.b	#$C0,d0
		bcc.s	locret_1159C
		move.b	$26(a0),d0
		jsr	(CalcSine).l
		muls.w	#$20,d0	; ' '
		asr.l	#8,d0
		tst.w	$14(a0)
		beq.s	locret_1159C
		bmi.s	loc_11598
		tst.w	d0
		beq.s	locret_11596
		add.w	d0,$14(a0)

locret_11596:				; CODE XREF: Tails_SlopeResist+28j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11598:				; CODE XREF: Tails_SlopeResist+24j
		add.w	d0,$14(a0)

locret_1159C:				; CODE XREF: Tails_SlopeResist+Cj
					; Tails_SlopeResist+22j
		rts
; End of function Tails_SlopeResist


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_RollRepel:			; CODE XREF: ROM:00010ECEp
		move.b	$26(a0),d0
		addi.b	#$60,d0	; '`'
		cmpi.b	#$C0,d0
		bcc.s	locret_115D8
		move.b	$26(a0),d0
		jsr	(CalcSine).l
		muls.w	#$50,d0	; 'P'
		asr.l	#8,d0
		tst.w	$14(a0)
		bmi.s	loc_115CE
		tst.w	d0
		bpl.s	loc_115C8
		asr.l	#2,d0

loc_115C8:				; CODE XREF: Tails_RollRepel+26j
		add.w	d0,$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_115CE:				; CODE XREF: Tails_RollRepel+22j
		tst.w	d0
		bmi.s	loc_115D4
		asr.l	#2,d0

loc_115D4:				; CODE XREF: Tails_RollRepel+32j
		add.w	d0,$14(a0)

locret_115D8:				; CODE XREF: Tails_RollRepel+Cj
		rts
; End of function Tails_RollRepel


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_SlopeRepel:			; CODE XREF: ROM:00010E9Ap
					; ROM:00010EE4p
		nop
		tst.b	$38(a0)
		bne.s	locret_11614
		tst.w	$2E(a0)
		bne.s	loc_11616
		move.b	$26(a0),d0
		addi.b	#$20,d0	; ' '
		andi.b	#$C0,d0
		beq.s	locret_11614
		move.w	$14(a0),d0
		bpl.s	loc_115FE
		neg.w	d0

loc_115FE:				; CODE XREF: Tails_SlopeRepel+20j
		cmpi.w	#$280,d0
		bcc.s	locret_11614
		clr.w	$14(a0)
		bset	#1,$22(a0)
		move.w	#$1E,$2E(a0)

locret_11614:				; CODE XREF: Tails_SlopeRepel+6j
					; Tails_SlopeRepel+1Aj	...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11616:				; CODE XREF: Tails_SlopeRepel+Cj
		subq.w	#1,$2E(a0)
		rts
; End of function Tails_SlopeRepel


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_JumpAngle:			; CODE XREF: ROM:loc_10EC0p
					; ROM:loc_10F0Ap
		move.b	$26(a0),d0
		beq.s	loc_11636
		bpl.s	loc_1162C
		addq.b	#2,d0
		bcc.s	loc_1162A
		moveq	#0,d0

loc_1162A:				; CODE XREF: Tails_JumpAngle+Aj
		bra.s	loc_11632
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1162C:				; CODE XREF: Tails_JumpAngle+6j
		subq.b	#2,d0
		bcc.s	loc_11632
		moveq	#0,d0

loc_11632:				; CODE XREF: Tails_JumpAngle:loc_1162Aj
					; Tails_JumpAngle+12j
		move.b	d0,$26(a0)

loc_11636:				; CODE XREF: Tails_JumpAngle+4j
		move.b	$27(a0),d0
		beq.s	locret_11674
		tst.w	$14(a0)
		bmi.s	loc_1165A
		move.b	$2D(a0),d1
		add.b	d1,d0
		bcc.s	loc_11658
		subq.b	#1,$2C(a0)
		bcc.s	loc_11658
		move.b	#0,$2C(a0)
		moveq	#0,d0

loc_11658:				; CODE XREF: Tails_JumpAngle+2Cj
					; Tails_JumpAngle+32j
		bra.s	loc_11670
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1165A:				; CODE XREF: Tails_JumpAngle+24j
		move.b	$2D(a0),d1
		sub.b	d1,d0
		bcc.s	loc_11670
		subq.b	#1,$2C(a0)
		bcc.s	loc_11670
		move.b	#0,$2C(a0)
		moveq	#0,d0

loc_11670:				; CODE XREF: Tails_JumpAngle:loc_11658j
					; Tails_JumpAngle+44j ...
		move.b	d0,$27(a0)

locret_11674:				; CODE XREF: Tails_JumpAngle+1Ej
		rts
; End of function Tails_JumpAngle


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_Floor:				; CODE XREF: ROM:00010EC4p
					; ROM:00010F0Ep ...
		move.b	$3F(a0),d5
		move.w	$10(a0),d1
		move.w	$12(a0),d2
		jsr	(CalcAngle).l
		subi.b	#$20,d0	; ' '
		andi.b	#$C0,d0
		cmpi.b	#$40,d0	; '@'
		beq.w	loc_11746
		cmpi.b	#$80,d0
		beq.w	loc_117A8
		cmpi.b	#$C0,d0
		beq.w	loc_11804
		bsr.w	Sonic_HitWall
		tst.w	d1
		bpl.s	loc_116BA
		sub.w	d1,8(a0)
		move.w	#0,$10(a0)

loc_116BA:				; CODE XREF: Tails_Floor+38j
		bsr.w	sub_132EE
		tst.w	d1
		bpl.s	loc_116CC
		add.w	d1,8(a0)
		move.w	#0,$10(a0)

loc_116CC:				; CODE XREF: Tails_Floor+4Aj
		bsr.w	loc_13146
		tst.w	d1
		bpl.s	locret_11744
		move.b	$12(a0),d2
		addq.b	#8,d2
		neg.b	d2
		cmp.b	d2,d1
		bge.s	loc_116E4
		cmp.b	d2,d0
		blt.s	locret_11744

loc_116E4:				; CODE XREF: Tails_Floor+68j
		add.w	d1,$C(a0)
		move.b	d3,$26(a0)
		bsr.w	Tails_ResetTailsOnFloor
		move.b	#0,$1C(a0)
		move.b	d3,d0
		addi.b	#$20,d0	; ' '
		andi.b	#$40,d0	; '@'
		bne.s	loc_11722
		move.b	d3,d0
		addi.b	#$10,d0
		andi.b	#$20,d0	; ' '
		beq.s	loc_11714
		asr	$12(a0)
		bra.s	loc_11736
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11714:				; CODE XREF: Tails_Floor+96j
		move.w	#0,$12(a0)
		move.w	$10(a0),$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11722:				; CODE XREF: Tails_Floor+8Aj
		move.w	#0,$10(a0)
		cmpi.w	#$FC0,$12(a0)
		ble.s	loc_11736
		move.w	#$FC0,$12(a0)

loc_11736:				; CODE XREF: Tails_Floor+9Cj
					; Tails_Floor+B8j
		move.w	$12(a0),$14(a0)
		tst.b	d3
		bpl.s	locret_11744
		neg.w	$14(a0)

locret_11744:				; CODE XREF: Tails_Floor+5Cj
					; Tails_Floor+6Cj ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11746:				; CODE XREF: Tails_Floor+1Ej
		bsr.w	Sonic_HitWall
		tst.w	d1
		bpl.s	loc_11760
		sub.w	d1,8(a0)
		move.w	#0,$10(a0)
		move.w	$12(a0),$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11760:				; CODE XREF: Tails_Floor+D6j
		bsr.w	Sonic_DontRunOnWalls
		tst.w	d1
		bpl.s	loc_1177A
		sub.w	d1,$C(a0)
		tst.w	$12(a0)
		bpl.s	locret_11778
		move.w	#0,$12(a0)

locret_11778:				; CODE XREF: Tails_Floor+FAj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1177A:				; CODE XREF: Tails_Floor+F0j
		tst.w	$12(a0)
		bmi.s	locret_117A6
		bsr.w	loc_13146
		tst.w	d1
		bpl.s	locret_117A6
		add.w	d1,$C(a0)
		move.b	d3,$26(a0)
		bsr.w	Tails_ResetTailsOnFloor
		move.b	#0,$1C(a0)
		move.w	#0,$12(a0)
		move.w	$10(a0),$14(a0)

locret_117A6:				; CODE XREF: Tails_Floor+108j
					; Tails_Floor+110j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_117A8:				; CODE XREF: Tails_Floor+26j
		bsr.w	Sonic_HitWall
		tst.w	d1
		bpl.s	loc_117BA
		sub.w	d1,8(a0)
		move.w	#0,$10(a0)

loc_117BA:				; CODE XREF: Tails_Floor+138j
		bsr.w	sub_132EE
		tst.w	d1
		bpl.s	loc_117CC
		add.w	d1,8(a0)
		move.w	#0,$10(a0)

loc_117CC:				; CODE XREF: Tails_Floor+14Aj
		bsr.w	Sonic_DontRunOnWalls
		tst.w	d1
		bpl.s	locret_11802
		sub.w	d1,$C(a0)
		move.b	d3,d0
		addi.b	#$20,d0	; ' '
		andi.b	#$40,d0	; '@'
		bne.s	loc_117EC
		move.w	#0,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_117EC:				; CODE XREF: Tails_Floor+16Cj
		move.b	d3,$26(a0)
		bsr.w	Tails_ResetTailsOnFloor
		move.w	$12(a0),$14(a0)
		tst.b	d3
		bpl.s	locret_11802
		neg.w	$14(a0)

locret_11802:				; CODE XREF: Tails_Floor+15Cj
					; Tails_Floor+186j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11804:				; CODE XREF: Tails_Floor+2Ej
		bsr.w	sub_132EE
		tst.w	d1
		bpl.s	loc_1181E
		add.w	d1,8(a0)
		move.w	#0,$10(a0)
		move.w	$12(a0),$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1181E:				; CODE XREF: Tails_Floor+194j
		bsr.w	Sonic_DontRunOnWalls
		tst.w	d1
		bpl.s	loc_11838
		sub.w	d1,$C(a0)
		tst.w	$12(a0)
		bpl.s	locret_11836
		move.w	#0,$12(a0)

locret_11836:				; CODE XREF: Tails_Floor+1B8j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11838:				; CODE XREF: Tails_Floor+1AEj
		tst.w	$12(a0)
		bmi.s	locret_11864
		bsr.w	loc_13146
		tst.w	d1
		bpl.s	locret_11864
		add.w	d1,$C(a0)
		move.b	d3,$26(a0)
		bsr.w	Tails_ResetTailsOnFloor
		move.b	#0,$1C(a0)
		move.w	#0,$12(a0)
		move.w	$10(a0),$14(a0)

locret_11864:				; CODE XREF: Tails_Floor+1C6j
					; Tails_Floor+1CEj
		rts
; End of function Tails_Floor


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_ResetTailsOnFloor:		; CODE XREF: RideObject_SetRide:loc_F954p
					; Tails_Floor+76p ...
		btst	#4,$22(a0)
		beq.s	loc_11874
		nop
		nop
		nop

loc_11874:				; CODE XREF: Tails_ResetTailsOnFloor+6j
		bclr	#5,$22(a0)
		bclr	#1,$22(a0)
		bclr	#4,$22(a0)
		btst	#2,$22(a0)
		beq.s	loc_118AA
		bclr	#2,$22(a0)
		move.b	#$F,$16(a0)
		move.b	#9,$17(a0)
		move.b	#0,$1C(a0)
		subq.w	#1,$C(a0)

loc_118AA:				; CODE XREF: Tails_ResetTailsOnFloor+26j
		move.b	#0,$3C(a0)
		move.w	#0,($FFFFF7D0).w
		move.b	#0,$27(a0)
		rts
; End of function Tails_ResetTailsOnFloor

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj02_Hurt:				; DATA XREF: ROM:Obj02_Indexo
		jsr	ObjectMove
		addi.w	#$30,$12(a0) ; '0'
		btst	#6,$22(a0)
		beq.s	loc_118D8
		subi.w	#$20,$12(a0) ; ' '

loc_118D8:				; CODE XREF: ROM:000118D0j
		bsr.w	Tails_HurtStop
		bsr.w	Tails_LevelBoundaries
		bsr.w	Tails_Animate
		bsr.w	LoadTailsDynPLC
		jmp	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_HurtStop:				; CODE XREF: ROM:loc_118D8p
		move.w	($FFFFEECE).w,d0
		addi.w	#$E0,d0	; 'à'
		cmp.w	$C(a0),d0
		bcs.w	KillTails
		bsr.w	Tails_Floor
		btst	#1,$22(a0)
		bne.s	locret_1192A
		moveq	#0,d0
		move.w	d0,$12(a0)
		move.w	d0,$10(a0)
		move.w	d0,$14(a0)
		move.b	#0,$1C(a0)
		move.b	#2,routine(a0)
		move.w	#$78,$30(a0) ; 'x'

locret_1192A:				; CODE XREF: Tails_HurtStop+1Aj
		rts
; End of function Tails_HurtStop

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj02_Dead:				; DATA XREF: ROM:Obj02_Indexo
		bsr.w	Tails_GameOver
		jsr	ObjectMoveAndFall
		bsr.w	Tails_Animate
		bsr.w	LoadTailsDynPLC
		jmp	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_GameOver:				; CODE XREF: ROM:Obj02_Deadp
		move.w	($FFFFEECE).w,d0
		addi.w	#$100,d0
		cmp.w	$C(a0),d0
		bcc.w	locret_11986
		move.w	($FFFFB008).w,d0
		subi.w	#$40,d0	; '@'
		move.w	d0,8(a0)
		move.w	($FFFFB00C).w,d0
		subi.w	#$80,d0	; ''
		move.w	d0,$C(a0)
		move.b	#2,routine(a0)
		andi.w	#$7FFF,2(a0)
		move.b	#$C,$3E(a0)
		move.b	#$D,$3F(a0)
		nop

locret_11986:				; CODE XREF: Tails_GameOver+Cj
		rts
; End of function Tails_GameOver

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj02_ResetLevel:			; DATA XREF: ROM:Obj02_Indexo
		tst.w	$3A(a0)
		beq.s	locret_1199A
		subq.w	#1,$3A(a0)
		bne.s	locret_1199A
		move.w	#1,($FFFFFE02).w

locret_1199A:				; CODE XREF: ROM:0001198Cj
					; ROM:00011992j
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Tails_Animate:				; CODE XREF: ROM:00010CECp
					; ROM:000118E0p ...

; FUNCTION CHUNK AT 00011A2E SIZE 000001AE BYTES

		lea	(TailsAniData).l,a1

Tails_Animate2:				; CODE XREF: ROM:00011DECp
		moveq	#0,d0
		move.b	$1C(a0),d0
		cmp.b	$1D(a0),d0
		beq.s	loc_119BE
		move.b	d0,$1D(a0)
		move.b	#0,$1B(a0)
		move.b	#0,$1E(a0)

loc_119BE:				; CODE XREF: Tails_Animate+10j
		add.w	d0,d0
		adda.w	(a1,d0.w),a1
		move.b	(a1),d0
		bmi.s	loc_11A2E
		move.b	$22(a0),d1
		andi.b	#1,d1
		andi.b	#$FC,1(a0)
		or.b	d1,1(a0)
		subq.b	#1,$1E(a0)
		bpl.s	locret_119FC
		move.b	d0,$1E(a0)
; End of function Tails_Animate


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_119E4:				; CODE XREF: Tails_Animate+10Ep
					; Tails_Animate+1B2j ...
		moveq	#0,d1
		move.b	$1B(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#$F0,d0
		bcc.s	loc_119FE

loc_119F4:				; CODE XREF: sub_119E4+28j
					; sub_119E4+3Cj
		move.b	d0,$1A(a0)
		addq.b	#1,$1B(a0)

locret_119FC:				; CODE XREF: Tails_Animate+42j
					; Tails_Animate+96j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_119FE:				; CODE XREF: sub_119E4+Ej
		addq.b	#1,d0
		bne.s	loc_11A0E
		move.b	#0,$1B(a0)
		move.b	1(a1),d0
		bra.s	loc_119F4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11A0E:				; CODE XREF: sub_119E4+1Cj
		addq.b	#1,d0
		bne.s	loc_11A22
		move.b	2(a1,d1.w),d0
		sub.b	d0,$1B(a0)
		sub.b	d0,d1
		move.b	1(a1,d1.w),d0
		bra.s	loc_119F4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11A22:				; CODE XREF: sub_119E4+2Cj
		addq.b	#1,d0
		bne.s	locret_11A2C
		move.b	2(a1,d1.w),$1C(a0)

locret_11A2C:				; CODE XREF: sub_119E4+40j
		rts
; End of function sub_119E4

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR Tails_Animate

loc_11A2E:				; CODE XREF: Tails_Animate+2Aj
		subq.b	#1,$1E(a0)
		bpl.s	locret_119FC
		addq.b	#1,d0
		bne.w	loc_11B0E
		moveq	#0,d0
		move.b	$27(a0),d0
		bne.w	loc_11AB4
		moveq	#0,d1
		move.b	$26(a0),d0
		move.b	$22(a0),d2
		andi.b	#1,d2
		bne.s	loc_11A56
		not.b	d0

loc_11A56:				; CODE XREF: Tails_Animate+B6j
		addi.b	#$10,d0
		bpl.s	loc_11A5E
		moveq	#3,d1

loc_11A5E:				; CODE XREF: Tails_Animate+BEj
		andi.b	#$FC,1(a0)
		eor.b	d1,d2
		or.b	d2,1(a0)
		lsr.b	#4,d0
		andi.b	#6,d0
		move.w	$14(a0),d2
		bpl.s	loc_11A78
		neg.w	d2

loc_11A78:				; CODE XREF: Tails_Animate+D8j
		move.b	d0,d3
		add.b	d3,d3
		add.b	d3,d3
		lea	(TailsAni_Walk).l,a1
		cmpi.w	#$600,d2
		bcs.s	loc_11A9A
		lea	(TailsAni_Run).l,a1
		move.b	d0,d1
		lsr.b	#1,d1
		add.b	d1,d0
		add.b	d0,d0
		move.b	d0,d3

loc_11A9A:				; CODE XREF: Tails_Animate+ECj
		neg.w	d2
		addi.w	#$800,d2
		bpl.s	loc_11AA4
		moveq	#0,d2

loc_11AA4:				; CODE XREF: Tails_Animate+104j
		lsr.w	#8,d2
		move.b	d2,$1E(a0)
		bsr.w	sub_119E4
		add.b	d3,$1A(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11AB4:				; CODE XREF: Tails_Animate+A4j
		move.b	$27(a0),d0
		moveq	#0,d1
		move.b	$22(a0),d2
		andi.b	#1,d2
		bne.s	loc_11AE8
		andi.b	#$FC,1(a0)
		moveq	#0,d2
		or.b	d2,1(a0)
		addi.b	#$B,d0
		divu.w	#$16,d0
		addi.b	#$75,d0	; 'u'
		move.b	d0,$1A(a0)
		move.b	#0,$1E(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11AE8:				; CODE XREF: Tails_Animate+126j
		moveq	#3,d2
		andi.b	#$FC,1(a0)
		or.b	d2,1(a0)
		neg.b	d0
		addi.b	#$8F,d0
		divu.w	#$16,d0
		addi.b	#$75,d0	; 'u'
		move.b	d0,$1A(a0)
		move.b	#0,$1E(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11B0E:				; CODE XREF: Tails_Animate+9Aj
		addq.b	#1,d0
		bne.s	loc_11B52
		move.w	$14(a0),d2
		bpl.s	loc_11B1A
		neg.w	d2

loc_11B1A:				; CODE XREF: Tails_Animate+17Aj
		lea	(TailsAni_Roll2).l,a1
		cmpi.w	#$600,d2
		bcc.s	loc_11B2C
		lea	(TailsAni_Roll).l,a1

loc_11B2C:				; CODE XREF: Tails_Animate+188j
		neg.w	d2
		addi.w	#$400,d2
		bpl.s	loc_11B36
		moveq	#0,d2

loc_11B36:				; CODE XREF: Tails_Animate+196j
		lsr.w	#8,d2
		move.b	d2,$1E(a0)
		move.b	$22(a0),d1
		andi.b	#1,d1
		andi.b	#$FC,1(a0)
		or.b	d1,1(a0)
		bra.w	sub_119E4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11B52:				; CODE XREF: Tails_Animate+174j
		addq.b	#1,d0
		bne.s	loc_11B88
		move.w	$14(a0),d2
		bmi.s	loc_11B5E
		neg.w	d2

loc_11B5E:				; CODE XREF: Tails_Animate+1BEj
		addi.w	#$800,d2
		bpl.s	loc_11B66
		moveq	#0,d2

loc_11B66:				; CODE XREF: Tails_Animate+1C6j
		lsr.w	#6,d2
		move.b	d2,$1E(a0)
		lea	(TailsAni_Push_NoArt).l,a1
		move.b	$22(a0),d1
		andi.b	#1,d1
		andi.b	#$FC,1(a0)
		or.b	d1,1(a0)
		bra.w	sub_119E4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11B88:				; CODE XREF: Tails_Animate+1B8j
		move.w	($FFFFB050).w,d1
		move.w	($FFFFB052).w,d2
		jsr	(CalcAngle).l
		moveq	#0,d1
		move.b	$22(a0),d2
		andi.b	#1,d2
		bne.s	loc_11BA6
		not.b	d0
		bra.s	loc_11BAA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11BA6:				; CODE XREF: Tails_Animate+204j
		addi.b	#$80,d0

loc_11BAA:				; CODE XREF: Tails_Animate+208j
		addi.b	#$10,d0
		bpl.s	loc_11BB2
		moveq	#3,d1

loc_11BB2:				; CODE XREF: Tails_Animate+212j
		andi.b	#$FC,1(a0)
		eor.b	d1,d2
		or.b	d2,1(a0)
		lsr.b	#3,d0
		andi.b	#$C,d0
		move.b	d0,d3
		lea	(byte_11E3C).l,a1
		move.b	#3,$1E(a0)
		bsr.w	sub_119E4
		add.b	d3,$1A(a0)
		rts
; END OF FUNCTION CHUNK	FOR Tails_Animate
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
TailsAniData:	dc.w TailsAni_Walk-TailsAniData,TailsAni_Run-TailsAniData; 0
					; DATA XREF: Tails_Animateo
					; ROM:TailsAniDatao ...
		dc.w TailsAni_Roll-TailsAniData,TailsAni_Roll2-TailsAniData; 2
		dc.w TailsAni_Push_NoArt-TailsAniData,TailsAni_Wait-TailsAniData; 4
		dc.w TailsAni_Balance_NoArt-TailsAniData,TailsAni_LookUp-TailsAniData; 6
		dc.w TailsAni_Duck-TailsAniData,TailsAni_Spindash-TailsAniData;	8
		dc.w TailsAni_0A-TailsAniData,TailsAni_0B-TailsAniData;	10
		dc.w TailsAni_0C-TailsAniData,TailsAni_Stop-TailsAniData; 12
		dc.w TailsAni_Fly-TailsAniData,TailsAni_0F-TailsAniData; 14
		dc.w TailsAni_Jump-TailsAniData,TailsAni_11-TailsAniData; 16
		dc.w TailsAni_12-TailsAniData,TailsAni_13-TailsAniData;	18
		dc.w TailsAni_14-TailsAniData,TailsAni_15-TailsAniData;	20
		dc.w TailsAni_Death1-TailsAniData,TailsAni_UnusedDrown-TailsAniData; 22
		dc.w TailsAni_Death2-TailsAniData,TailsAni_19-TailsAniData; 24
		dc.w TailsAni_1A-TailsAniData,TailsAni_1B-TailsAniData;	26
		dc.w TailsAni_1C-TailsAniData,TailsAni_1D-TailsAniData;	28
		dc.w TailsAni_1E-TailsAniData; 30
TailsAni_Walk:	dc.b $FF,$10,$11,$12,$13,$14,$15, $E, $F,$FF; 0
					; DATA XREF: Tails_Animate+E2o
					; ROM:TailsAniDatao
TailsAni_Run:	dc.b $FF,$2E,$2F,$30,$31,$FF,$FF,$FF,$FF,$FF; 0
					; DATA XREF: Tails_Animate+EEo
					; ROM:TailsAniDatao
TailsAni_Roll:	dc.b   1,$48,$47,$46,$FF; 0 ; DATA XREF: Tails_Animate+18Ao
					; ROM:TailsAniDatao
TailsAni_Roll2:	dc.b   1,$48,$47,$46,$FF; 0 ; DATA XREF: Tails_Animate:loc_11B1Ao
					; ROM:TailsAniDatao
TailsAni_Push_NoArt:dc.b $FD,  9, $A, $B, $C, $D, $E,$FF; 0 ; DATA XREF: Tails_Animate+1D0o
					; ROM:TailsAniDatao
TailsAni_Wait:	dc.b   7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  3,  2,  1,  1,  1; 0
					; DATA XREF: ROM:TailsAniDatao
		dc.b   1,  1,  1,  1,  1,  3,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1; 16
		dc.b   5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5; 32
		dc.b   6,  7,  8,  7,  8,  7,  8,  7,  8,  7,  8,  6,$FE,$1C; 48
TailsAni_Balance_NoArt:dc.b $1F,  1,  2,  3,  4,  5,  6,  7,  8,$FF; 0
					; DATA XREF: ROM:TailsAniDatao
TailsAni_LookUp:dc.b $3F,  4,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_Duck:	dc.b $3F,$5B,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_Spindash:dc.b	 0,$60,$61,$62,$FF; 0 ;	DATA XREF: ROM:TailsAniDatao
TailsAni_0A:	dc.b $3F,$82,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_0B:	dc.b   7,  8,  8,  9,$FD,  5; 0	; DATA XREF: ROM:TailsAniDatao
TailsAni_0C:	dc.b   7,  9,$FD,  5	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_Stop:	dc.b   7,  1,  2,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_Fly:	dc.b   7,$5E,$5F,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_0F:	dc.b   7,  1,  2,  3,  4,  5,$FF; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_Jump:	dc.b   3,$59,$5A,$59,$5A,$59,$5A,$59,$5A,$59,$5A,$59,$5A,$FD,  0; 0
					; DATA XREF: ROM:TailsAniDatao
TailsAni_11:	dc.b   4,  1,  2,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_12:	dc.b  $F,  1,  2,  3,$FE,  1; 0	; DATA XREF: ROM:TailsAniDatao
TailsAni_13:	dc.b  $F,  1,  2,$FE,  1; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_14:	dc.b $3F,  1,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_15:	dc.b  $B,  1,  2,  3,  4,$FD,  0; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_Death1:dc.b $20,$5D,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_UnusedDrown:dc.b $2F,$5D,$FF	     ; 0 ; DATA	XREF: ROM:TailsAniDatao
TailsAni_Death2:dc.b   3,$5D,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_19:	dc.b   3,$5D,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_1A:	dc.b   3,$5C,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_1B:	dc.b   7,  1,  1,$FF	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_1C:	dc.b $77,  0,$FD,  0	; 0 ; DATA XREF: ROM:TailsAniDatao
TailsAni_1D:	dc.b   3,  1,  2,  3,  4,  5,  6,  7,  8,$FF; 0
					; DATA XREF: ROM:TailsAniDatao
TailsAni_1E:	dc.b   3,  1,  2,  3,  4,  5,  6,  7,  8,$FF

; ===========================================================================
; ---------------------------------------------------------------------------
; Tails' Tails pattern loading subroutine
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; LoadTailsDynPLC_F600:
LoadTailsTailsDynPLC:
		moveq	#0,d0
		move.b	$1A(a0),d0
		cmp.b	(TailsTails_LastLoadedDPLC).w,d0
		beq.s	locret_11D7C
		move.b	d0,(TailsTails_LastLoadedDPLC).w
		lea	(TailsDynPLC).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_11D7C
		move.w	#$F600,d4
		bra.s	TPLC_ReadEntry
; End of function LoadTailsTailsDynPLC

; ---------------------------------------------------------------------------
; Tails pattern loading subroutine
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


LoadTailsDynPLC:
		moveq	#0,d0
		move.b	$1A(a0),d0
		cmp.b	(Tails_LastLoadedDPLC).w,d0
		beq.s	locret_11D7C
		move.b	d0,(Tails_LastLoadedDPLC).w
		lea	(TailsDynPLC).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_11D7C
		move.w	#$F400,d4
; loc_11D50:
TPLC_ReadEntry:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		addi.l	#Art_Tails,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(QueueDMATransfer).l
		dbf	d5,TPLC_ReadEntry

locret_11D7C:
		rts
; End of function LoadTailsDynPLC

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 05 - Tails' tails
; ---------------------------------------------------------------------------

Obj05:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj05_Index(pc,d0.w),d1
		jmp	Obj05_Index(pc,d1.w)
; ===========================================================================
Obj05_Index:	dc.w Obj05_Init-Obj05_Index
		dc.w Obj05_Main-Obj05_Index
; ===========================================================================

Obj05_Init:
		addq.b	#2,routine(a0)
		move.l	#Map_Tails,4(a0)
		move.w	#$7B0,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#2,$18(a0)
		move.b	#$18,$19(a0)
		move.b	#4,1(a0)

Obj05_Main:
		move.b	($FFFFB066).w,$26(a0)
		move.b	($FFFFB062).w,$22(a0)
		move.w	($FFFFB048).w,8(a0)
		move.w	($FFFFB04C).w,$C(a0)
		moveq	#0,d0
		move.b	($FFFFB05C).w,d0
		cmp.b	$30(a0),d0
		beq.s	loc_11DE6
		move.b	d0,$30(a0)
		move.b	Obj05_Animations(pc,d0.w),$1C(a0)

loc_11DE6:
		lea	(Obj05_AniData).l,a1
		bsr.w	Tails_Animate2
		bsr.w	LoadTailsTailsDynPLC
		jsr	DisplaySprite
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj05_Animations:dc.b	0,  0		 ; 0
		dc.b   3,  3		; 2
		dc.b   0,  1		; 4
		dc.b   0,  2		; 6
		dc.b   1,  7		; 8
		dc.b   0,  0		; 10
		dc.b   0,  0		; 12
		dc.b   0,  0		; 14
		dc.b   0,  0		; 16
		dc.b   0,  0		; 18
		dc.b   0,  0		; 20
		dc.b   0,  0		; 22
		dc.b   0,  0		; 24
		dc.b   0,  0		; 26
		dc.b   0,  0		; 28
Obj05_AniData:	dc.w byte_11E2A-Obj05_AniData ;	DATA XREF: ROM:loc_11DE6o
					; ROM:Obj05_AniDatao ...
		dc.w byte_11E2D-Obj05_AniData
		dc.w byte_11E34-Obj05_AniData
		dc.w byte_11E3C-Obj05_AniData
		dc.w byte_11E42-Obj05_AniData
		dc.w byte_11E48-Obj05_AniData
		dc.w byte_11E4E-Obj05_AniData
		dc.w byte_11E54-Obj05_AniData
byte_11E2A:	dc.b $20,  0,$FF	; 0 ; DATA XREF: ROM:Obj05_AniDatao
byte_11E2D:	dc.b   7,  9, $A, $B, $C, $D,$FF; 0 ; DATA XREF: ROM:00011E1Co
byte_11E34:	dc.b   3,  9, $A, $B, $C, $D,$FD,  1; 0	; DATA XREF: ROM:00011E1Eo
byte_11E3C:	dc.b $FC,$49,$4A,$4B,$4C,$FF; 0	; DATA XREF: Tails_Animate+22Ao
					; ROM:00011E20o
byte_11E42:	dc.b   3,$4D,$4E,$4F,$50,$FF; 0	; DATA XREF: ROM:00011E22o
byte_11E48:	dc.b   3,$51,$52,$53,$54,$FF; 0	; DATA XREF: ROM:00011E24o
byte_11E4E:	dc.b   3,$55,$56,$57,$58,$FF; 0	; DATA XREF: ROM:00011E26o
byte_11E54:	dc.b   2,$81,$82,$83,$84,$FF; 0	; DATA XREF: ROM:00011E28o
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop
; START	OF FUNCTION CHUNK FOR Tails_LevelBoundaries

KillTails:				; CODE XREF: Tails_LevelBoundaries+48j
					; Tails_LevelBoundaries+52j ...
		jmp	KillSonic
; END OF FUNCTION CHUNK	FOR Tails_LevelBoundaries
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
;----------------------------------------------------
; Object 0A - drowning bubbles and countdown numbers
;----------------------------------------------------

Obj0A:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj0A_Index(pc,d0.w),d1
		jmp	Obj0A_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj0A_Index:	dc.w Obj0A_Init-Obj0A_Index ; DATA XREF: ROM:Obj0A_Indexo
					; ROM:00011E74o ...
		dc.w Obj0A_Animate-Obj0A_Index
		dc.w Obj0A_ChkWater-Obj0A_Index
		dc.w Obj0A_Display-Obj0A_Index
		dc.w Obj0A_Delete-Obj0A_Index
		dc.w Obj0A_Countdown-Obj0A_Index
		dc.w Obj0A_AirLeft-Obj0A_Index
		dc.w Obj0A_Display-Obj0A_Index
		dc.w Obj0A_Delete-Obj0A_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj0A_Init:				; DATA XREF: ROM:Obj0A_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj0A_Bubbles,4(a0)
		move.w	#$8348,2(a0)
		move.b	#$84,1(a0)
		move.b	#$10,$19(a0)
		move.b	#1,$18(a0)
		move.b	$28(a0),d0
		bpl.s	loc_11ECC
		addq.b	#8,routine(a0)
		move.l	#Map_Obj0A_Countdown,4(a0)
		move.w	#$440,2(a0)
		andi.w	#$7F,d0	; ''
		move.b	d0,$33(a0)
		bra.w	Obj0A_Countdown
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11ECC:				; CODE XREF: ROM:00011EACj
		move.b	d0,$1C(a0)
		bsr.w	Adjust2PArtPointer
		move.w	8(a0),$30(a0)
		move.w	#$FF78,$12(a0)

Obj0A_Animate:				; DATA XREF: ROM:00011E74o
		lea	(Ani_Obj0A).l,a1
		jsr	AnimateSprite

Obj0A_ChkWater:				; DATA XREF: ROM:00011E76o
		move.w	($FFFFF646).w,d0
		cmp.w	$C(a0),d0
		bcs.s	loc_11F0A
		move.b	#6,routine(a0)
		addq.b	#7,$1C(a0)
		cmpi.b	#$D,$1C(a0)
		beq.s	Obj0A_Display
		bra.s	Obj0A_Display
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11F0A:				; CODE XREF: ROM:00011EF4j
		tst.b	($FFFFF7C7).w
		beq.s	loc_11F14
		addq.w	#4,$30(a0)

loc_11F14:				; CODE XREF: ROM:00011F0Ej
		move.b	$26(a0),d0
		addq.b	#1,$26(a0)
		andi.w	#$7F,d0	; ''
		lea	(Obj0A_WobbleData).l,a1
		move.b	(a1,d0.w),d0
		ext.w	d0
		add.w	$30(a0),d0
		move.w	d0,8(a0)
		bsr.s	Obj0A_ShowNumber
		jsr	ObjectMove
		tst.b	1(a0)
		bpl.s	loc_11F48
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11F48:				; CODE XREF: ROM:00011F40j
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj0A_Display:				; CODE XREF: ROM:00011F06j
					; ROM:00011F08j ...
		bsr.s	Obj0A_ShowNumber
		lea	(Ani_Obj0A).l,a1
		jsr	AnimateSprite
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj0A_Delete:				; DATA XREF: ROM:00011E7Ao
					; ROM:00011E82o
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj0A_AirLeft:				; DATA XREF: ROM:00011E7Eo
		cmpi.w	#$C,($FFFFFE14).w
		bhi.s	loc_11F9A
		subq.w	#1,$38(a0)
		bne.s	loc_11F82
		move.b	#$E,routine(a0)
		addq.b	#7,$1C(a0)
		bra.s	Obj0A_Display
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11F82:				; CODE XREF: ROM:00011F74j
		lea	(Ani_Obj0A).l,a1
		jsr	AnimateSprite
		tst.b	1(a0)
		bpl.s	loc_11F9A
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_11F9A:				; CODE XREF: ROM:00011F6Ej
					; ROM:00011F92j
		jmp	DeleteObject

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Obj0A_ShowNumber:			; CODE XREF: ROM:00011F34p
					; ROM:Obj0A_Displayp
		tst.w	$38(a0)
		beq.s	locret_11FEA
		subq.w	#1,$38(a0)
		bne.s	locret_11FEA
		cmpi.b	#7,$1C(a0)
		bcc.s	locret_11FEA
		move.w	#$F,$38(a0)
		clr.w	$12(a0)
		move.b	#$80,1(a0)
		move.w	8(a0),d0
		sub.w	($FFFFEE00).w,d0
		addi.w	#$80,d0	; ''
		move.w	d0,8(a0)
		move.w	$C(a0),d0
		sub.w	($FFFFEE04).w,d0
		addi.w	#$80,d0	; ''
		move.w	d0,$A(a0)
		move.b	#$C,routine(a0)

locret_11FEA:				; CODE XREF: Obj0A_ShowNumber+4j
					; Obj0A_ShowNumber+Aj ...
		rts
; End of function Obj0A_ShowNumber

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj0A_WobbleData:dc.b	 0,   0,   0,	0,   0,	  0,   1,   1,	 1,   1,   1,	2,   2,	  2,   2,   2; 0
					; DATA XREF: ROM:00005E84o
					; ROM:00011F20o ...
		dc.b	2,   2,	  3,   3,   3,	 3,   3,   3,	3,   3,	  3,   3,   3,	 3,   3,   3; 16
		dc.b	3,   3,	  3,   3,   3,	 3,   3,   3,	3,   3,	  3,   3,   3,	 3,   3,   2; 32
		dc.b	2,   2,	  2,   2,   2,	 2,   1,   1,	1,   1,	  1,   0,   0,	 0,   0,   0; 48
		dc.b	0,  -1,	 -1,  -1,  -1,	-1,  -2,  -2,  -2,  -2,	 -2,  -3,  -3,	-3,  -3,  -3; 64
		dc.b   -3,  -3,	 -4,  -4,  -4,	-4,  -4,  -4,  -4,  -4,	 -4,  -4,  -4,	-4,  -4,  -4; 80
		dc.b   -4,  -4,	 -4,  -4,  -4,	-4,  -4,  -4,  -4,  -4,	 -4,  -4,  -4,	-4,  -4,  -3; 96
		dc.b   -3,  -3,	 -3,  -3,  -3,	-3,  -2,  -2,  -2,  -2,	 -2,  -1,  -1,	-1,  -1,  -1; 112
		dc.b	0,   0,	  0,   0,   0,	 0,   1,   1,	1,   1,	  1,   2,   2,	 2,   2,   2; 128
		dc.b	2,   2,	  3,   3,   3,	 3,   3,   3,	3,   3,	  3,   3,   3,	 3,   3,   3; 144
		dc.b	3,   3,	  3,   3,   3,	 3,   3,   3,	3,   3,	  3,   3,   3,	 3,   3,   2; 160
		dc.b	2,   2,	  2,   2,   2,	 2,   1,   1,	1,   1,	  1,   0,   0,	 0,   0,   0; 176
		dc.b	0,  -1,	 -1,  -1,  -1,	-1,  -2,  -2,  -2,  -2,	 -2,  -3,  -3,	-3,  -3,  -3; 192
		dc.b   -3,  -3,	 -4,  -4,  -4,	-4,  -4,  -4,  -4,  -4,	 -4,  -4,  -4,	-4,  -4,  -4; 208
		dc.b   -4,  -4,	 -4,  -4,  -4,	-4,  -4,  -4,  -4,  -4,	 -4,  -4,  -4,	-4,  -4,  -3; 224
		dc.b   -3,  -3,	 -3,  -3,  -3,	-3,  -2,  -2,  -2,  -2,	 -2,  -1,  -1,	-1,  -1,  -1; 240
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj0A_Countdown:			; CODE XREF: ROM:00011EC8j
					; DATA XREF: ROM:00011E7Co
		tst.w	$2C(a0)
		bne.w	loc_121D6
		cmpi.b	#6,($FFFFB000+routine).w
		bcc.w	locret_122DC
		btst	#6,($FFFFB022).w
		beq.w	locret_122DC
		subq.w	#1,$38(a0)
		bpl.w	loc_121FC
		move.w	#$3B,$38(a0) ; ';'
		move.w	#1,$36(a0)
		jsr	(RandomNumber).l
		andi.w	#1,d0
		move.b	d0,$34(a0)
		move.w	($FFFFFE14).w,d0
		cmpi.w	#$19,d0
		beq.s	loc_12166
		cmpi.w	#$14,d0
		beq.s	loc_12166
		cmpi.w	#$F,d0
		beq.s	loc_12166
		cmpi.w	#$C,d0
		bhi.s	loc_12170
		bne.s	loc_12152
		move.w	#$92,d0	; ''
		jsr	(PlaySound).l

loc_12152:				; CODE XREF: ROM:00012146j
		subq.b	#1,$32(a0)
		bpl.s	loc_12170
		move.b	$33(a0),$32(a0)
		bset	#7,$36(a0)
		bra.s	loc_12170
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12166:				; CODE XREF: ROM:00012132j
					; ROM:00012138j ...
		move.w	#$C2,d0	; 'Â'
		jsr	(PlaySound_Special).l

loc_12170:				; CODE XREF: ROM:00012144j
					; ROM:00012156j ...
		subq.w	#1,($FFFFFE14).w
		bcc.w	loc_121FA
		bsr.w	ResumeMusic
		move.b	#$81,($FFFFF7C8).w
		move.w	#$B2,d0	; '²'
		jsr	(PlaySound_Special).l
		move.b	#$A,$34(a0)
		move.w	#1,$36(a0)
		move.w	#$78,$2C(a0) ; 'x'
		move.l	a0,-(sp)
		lea	($FFFFB000).w,a0
		bsr.w	Sonic_ResetOnFloor
		move.b	#$17,$1C(a0)
		bset	#1,$22(a0)
		bset	#7,2(a0)
		move.w	#0,$12(a0)
		move.w	#0,$10(a0)
		move.w	#0,$14(a0)
		move.b	#1,($FFFFEEDC).w
		movea.l	(sp)+,a0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_121D6:				; CODE XREF: ROM:000120F0j
		subq.w	#1,$2C(a0)
		bne.s	loc_121E4
		move.b	#6,($FFFFB000+routine).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_121E4:				; CODE XREF: ROM:000121DAj
		move.l	a0,-(sp)
		lea	($FFFFB000).w,a0
		jsr	ObjectMove
		addi.w	#$10,$12(a0)
		movea.l	(sp)+,a0
		bra.s	loc_121FC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_121FA:				; CODE XREF: ROM:00012174j
		bra.s	loc_1220C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_121FC:				; CODE XREF: ROM:0001210Cj
					; ROM:000121F8j
		tst.w	$36(a0)
		beq.w	locret_122DC
		subq.w	#1,$3A(a0)
		bpl.w	locret_122DC

loc_1220C:				; CODE XREF: ROM:loc_121FAj
		jsr	(RandomNumber).l
		andi.w	#$F,d0
		move.w	d0,$3A(a0)
		jsr	SingleObjLoad
		bne.w	locret_122DC
		move.b	#$A,0(a1)
		move.w	($FFFFB008).w,8(a1)
		moveq	#6,d0
		btst	#0,($FFFFB022).w
		beq.s	loc_12242
		neg.w	d0
		move.b	#$40,$26(a1) ; '@'

loc_12242:				; CODE XREF: ROM:00012238j
		add.w	d0,8(a1)
		move.w	($FFFFB00C).w,$C(a1)
		move.b	#6,$28(a1)
		tst.w	$2C(a0)
		beq.w	loc_1228E
		andi.w	#7,$3A(a0)
		addi.w	#0,$3A(a0)
		move.w	($FFFFB00C).w,d0
		subi.w	#$C,d0
		move.w	d0,$C(a1)
		jsr	(RandomNumber).l
		move.b	d0,$26(a1)
		move.w	($FFFFFE04).w,d0
		andi.b	#3,d0
		bne.s	loc_122D2
		move.b	#$E,$28(a1)
		bra.s	loc_122D2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1228E:				; CODE XREF: ROM:00012256j
		btst	#7,$36(a0)
		beq.s	loc_122D2
		move.w	($FFFFFE14).w,d2
		lsr.w	#1,d2
		jsr	(RandomNumber).l
		andi.w	#3,d0
		bne.s	loc_122BA
		bset	#6,$36(a0)
		bne.s	loc_122D2
		move.b	d2,$28(a1)
		move.w	#$1C,$38(a1)

loc_122BA:				; CODE XREF: ROM:000122A6j
		tst.b	$34(a0)
		bne.s	loc_122D2
		bset	#6,$36(a0)
		bne.s	loc_122D2
		move.b	d2,$28(a1)
		move.w	#$1C,$38(a1)

loc_122D2:				; CODE XREF: ROM:00012284j
					; ROM:0001228Cj ...
		subq.b	#1,$34(a0)
		bpl.s	locret_122DC
		clr.w	$36(a0)

locret_122DC:				; CODE XREF: ROM:000120FAj
					; ROM:00012104j ...
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ResumeMusic:				; CODE XREF: Sonic_Water+1Ap
					; Sonic_Water+62p ...
		cmpi.w	#$C,($FFFFFE14).w
		bhi.s	loc_12310
		move.w	#MusID_LZ,d0
		cmpi.w	#$103,(Current_ZoneAndAct).w
		bne.s	loc_122F6
		move.w	#MusID_HTZ,d0

loc_122F6:				; CODE XREF: ResumeMusic+12j
		tst.b	($FFFFFE2D).w
		beq.s	loc_12300
		move.w	#MusID_Invincible,d0

loc_12300:				; CODE XREF: ResumeMusic+1Cj
		tst.b	($FFFFF7AA).w
		beq.s	loc_1230A
		move.w	#MusID_Boss,d0

loc_1230A:				; CODE XREF: ResumeMusic+26j
		jsr	(PlaySound).l

loc_12310:				; CODE XREF: ResumeMusic+6j
		move.w	#$1E,($FFFFFE14).w
		clr.b	($FFFFB372).w
		rts
; End of function ResumeMusic

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj0A:	dc.w byte_1233A-Ani_Obj0A,byte_12343-Ani_Obj0A;	0
					; DATA XREF: ROM:Obj0A_Animateo
					; ROM:00011F50o ...
		dc.w byte_1234C-Ani_Obj0A,byte_12355-Ani_Obj0A;	2
		dc.w byte_1235E-Ani_Obj0A,byte_12367-Ani_Obj0A;	4
		dc.w byte_12370-Ani_Obj0A,byte_12375-Ani_Obj0A;	6
		dc.w byte_1237D-Ani_Obj0A,byte_12385-Ani_Obj0A;	8
		dc.w byte_1238D-Ani_Obj0A,byte_12395-Ani_Obj0A;	10
		dc.w byte_1239D-Ani_Obj0A,byte_123A5-Ani_Obj0A;	12
		dc.w byte_123A7-Ani_Obj0A; 14
byte_1233A:	dc.b   5,  0,  1,  2,  3,  4,  9, $D,$FC; 0 ; DATA XREF: ROM:Ani_Obj0Ao
byte_12343:	dc.b   5,  0,  1,  2,  3,  4, $C,$12,$FC; 0 ; DATA XREF: ROM:Ani_Obj0Ao
byte_1234C:	dc.b   5,  0,  1,  2,  3,  4, $C,$11,$FC; 0 ; DATA XREF: ROM:Ani_Obj0Ao
byte_12355:	dc.b   5,  0,  1,  2,  3,  4, $B,$10,$FC; 0 ; DATA XREF: ROM:Ani_Obj0Ao
byte_1235E:	dc.b   5,  0,  1,  2,  3,  4,  9, $F,$FC; 0 ; DATA XREF: ROM:Ani_Obj0Ao
byte_12367:	dc.b   5,  0,  1,  2,  3,  4, $A, $E,$FC; 0 ; DATA XREF: ROM:Ani_Obj0Ao
byte_12370:	dc.b  $E,  0,  1,  2,$FC; 0 ; DATA XREF: ROM:Ani_Obj0Ao
byte_12375:	dc.b   7,$16, $D,$16, $D,$16, $D,$FC; 0	; DATA XREF: ROM:Ani_Obj0Ao
byte_1237D:	dc.b   7,$16,$12,$16,$12,$16,$12,$FC; 0	; DATA XREF: ROM:Ani_Obj0Ao
byte_12385:	dc.b   7,$16,$11,$16,$11,$16,$11,$FC; 0	; DATA XREF: ROM:Ani_Obj0Ao
byte_1238D:	dc.b   7,$16,$10,$16,$10,$16,$10,$FC; 0	; DATA XREF: ROM:Ani_Obj0Ao
byte_12395:	dc.b   7,$16, $F,$16, $F,$16, $F,$FC; 0	; DATA XREF: ROM:Ani_Obj0Ao
byte_1239D:	dc.b   7,$16, $E,$16, $E,$16, $E,$FC; 0	; DATA XREF: ROM:Ani_Obj0Ao
byte_123A5:	dc.b  $E,$FC		; 0 ; DATA XREF: ROM:Ani_Obj0Ao
byte_123A7:	dc.b  $E,  1,  2,  3,  4,$FC,  0; 0 ; DATA XREF: ROM:Ani_Obj0Ao
Map_Obj0A_Countdown:dc.w word_123B0-Map_Obj0A_Countdown	; DATA XREF: ROM:00011EB2o
					; ROM:Map_Obj0A_Countdowno
word_123B0:	dc.w 1			; DATA XREF: ROM:Map_Obj0A_Countdowno
		dc.w $E80E,    0,    0,$FFF2; 0

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 38 - shield and invincibility stars
; ---------------------------------------------------------------------------

Obj38:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj38_Index(pc,d0.w),d1
		jmp	Obj38_Index(pc,d1.w)
; ===========================================================================
Obj38_Index:	dc.w Obj38_Init-Obj38_Index
		dc.w Obj38_Shield-Obj38_Index
		dc.w Obj38_Stars-Obj38_Index
; ===========================================================================

Obj38_Init:
		addq.b	#2,routine(a0)
		move.l	#Map_obj38,4(a0)
		move.b	#4,1(a0)
		move.b	#1,$18(a0)
		move.b	#$18,$19(a0)
		tst.b	$1C(a0)		; is this the shield?
		bne.s	loc_1240C	; if not, branch
		move.w	#$4BE,2(a0)
		cmpi.b	#3,(Current_Zone).w	; is this Emerald Hill Zone?
		bne.s	loc_12406		; if not, branch
		move.w	#$560,2(a0)

loc_12406:
		bsr.w	Adjust2PArtPointer
		rts
; ===========================================================================

loc_1240C:
		addq.b	#2,routine(a0)
		move.l	#Map_Sonic,4(a0)
		move.w	#$4DE,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#2,$18(a0)
		rts
; ===========================================================================

Obj38_Shield:
		tst.b	($FFFFFE2D).w	; is Sonic invincible?
		bne.s	locret_1245A	; if yes, branch
		tst.b	($FFFFFE2C).w	; does Sonic have a shield?
		beq.s	Obj38_Delete	; if not, branch
		move.w	($FFFFB008).w,8(a0)
		move.w	($FFFFB00C).w,$C(a0)
		move.b	($FFFFB022).w,$22(a0)
		lea	(Ani_obj38).l,a1
		jsr	(AnimateSprite).l
		jmp	(DisplaySprite).l
; ---------------------------------------------------------------------------

locret_1245A:
		rts
; ===========================================================================
; loc_1245C:
Obj38_Delete:
		jmp	(DeleteObject).l
; ===========================================================================

Obj38_Stars:
		tst.b	($FFFFFE2D).w	; is Sonic invincible?
		beq.s	Obj38_Delete2	; if not, branch
		move.w	($FFFFEEE0).w,d0
		move.b	$1C(a0),d1
		subq.b	#1,d1
		move.b	#$3F,d1
		lsl.b	#2,d1
		addi.b	#4,d1
		sub.b	d1,d0
		lea	(Tails_Pos_Record_Buf).w,a1	; should actually be using Sonic's...
		lea	(a1,d0.w),a1
		move.w	(a1)+,d0
		andi.w	#$3FFF,d0
		move.w	d0,8(a0)
		move.w	(a1)+,d0
		andi.w	#$7FF,d0
		move.w	d0,$C(a0)
		move.b	($FFFFB022).w,$22(a0)
		move.b	($FFFFB01A).w,$1A(a0)
		move.b	($FFFFB001).w,1(a0)
		jmp	(DisplaySprite).l
; ===========================================================================
; loc_124B2:
Obj38_Delete2:
		jmp	(DeleteObject).l
; ===========================================================================
; ---------------------------------------------------------------------------
; Sonic	1 Object 4A - giant ring entry effect from prototype
; ---------------------------------------------------------------------------
; OST:
obj4A_vanishtime:	equ $30	; time for Sonic to vanish for
; ---------------------------------------------------------------------------

S1Obj4A:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	S1Obj4A_Index(pc,d0.w),d1
		jmp	S1Obj4A_Index(pc,d1.w)
; ===========================================================================
S1Obj4A_Index:	dc.w S1Obj4A_Init-S1Obj4A_Index
		dc.w S1Obj4A_RmvSonic-S1Obj4A_Index
		dc.w S1Obj4A_LoadSonic-S1Obj4A_Index
; ===========================================================================

S1Obj4A_Init:
		tst.l	(Plc_Buffer).w	; are the pattern load cues empty?
		beq.s	loc_124D4	; if yes, branch
		rts
; ---------------------------------------------------------------------------

loc_124D4:
		addq.b	#2,routine(a0)
		move.l	#Map_S1obj4A,4(a0)
		move.b	#4,1(a0)
		move.b	#1,$18(a0)
		move.b	#$38,$19(a0)
		move.w	#$541,2(a0)
		bsr.w	Adjust2PArtPointer
		move.w	#60*2,obj4A_vanishtime(a0)	; set vanishing time to 2 seconds

S1Obj4A_RmvSonic:
		move.w	($FFFFB008).w,8(a0)
		move.w	($FFFFB00C).w,$C(a0)
		move.b	($FFFFB022).w,$22(a0)
		lea	(Ani_S1obj4A).l,a1
		jsr	(AnimateSprite).l
		cmpi.b	#2,$1A(a0)
		bne.s	loc_1253E
		tst.b	($FFFFB000).w		; is this Sonic?
		beq.s	loc_1253E		; if not, branch
		move.b	#0,($FFFFB000).w	; set Sonic's object ID to 0
		move.w	#$A8,d0
		jsr	(PlaySound_Special).l	; play Special Stage entry sound effect

loc_1253E:
		jmp	(DisplaySprite).l
; ===========================================================================

S1Obj4A_LoadSonic:
		subq.w	#1,obj4A_vanishtime(a0)	; subtract 1 from vanishing time
		bne.s	locret_12556		; if there's any time left, branch
		move.b	#1,($FFFFB000).w	; set Sonic's object ID to 1
		jmp	(DeleteObject).l
; ---------------------------------------------------------------------------

locret_12556:
		rts
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 08 - water splash
; ---------------------------------------------------------------------------

Obj08:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj08_Index(pc,d0.w),d1
		jmp	Obj08_Index(pc,d1.w)
; ===========================================================================
Obj08_Index:	dc.w Obj08_Init-Obj08_Index
		dc.w Obj08_Display-Obj08_Index
		dc.w Obj08_Delete-Obj08_Index
; ===========================================================================

Obj08_Init:
		addq.b	#2,routine(a0)
		move.l	#Map_obj08,4(a0)
		ori.b	#4,1(a0)
		move.b	#1,$18(a0)
		move.b	#$10,$19(a0)
		move.w	#$4259,2(a0)
		bsr.w	Adjust2PArtPointer
		move.w	($FFFFB008).w,8(a0)

Obj08_Display:
		move.w	($FFFFF646).w,$C(a0)
		lea	(Ani_obj08).l,a1
		jsr	(AnimateSprite).l
		jmp	(DisplaySprite).l
; ===========================================================================

Obj08_Delete:
		jmp	(DeleteObject).l
; ===========================================================================
; animation script
Ani_obj38:	dc.w byte_125C2-Ani_obj38
		dc.w byte_125CE-Ani_obj38
		dc.w byte_125D4-Ani_obj38
		dc.w byte_125EE-Ani_obj38
		dc.w byte_12608-Ani_obj38
byte_125C2:	dc.b   0,  5,  0,  5,  1,  5,  2,  5,  3,  5,  4,$FF
byte_125CE:	dc.b   5,  4,  5,  6,  7,$FF
byte_125D4:	dc.b   0,  4,  4,  0,  4,  4,  0,  5,  5,  0,  5,  5,  0,  6,  6,  0
		dc.b   6,  6,  0,  7,  7,  0,  7,  7,  0,$FF
byte_125EE:	dc.b   0,  4,  4,  0,  4,  0,  0,  5,  5,  0,  5,  0,  0,  6,  6,  0
		dc.b   6,  0,  0,  7,  7,  0,  7,  0,  0,$FF
byte_12608:	dc.b   0,  4,  0,  0,  4,  0,  0,  5,  0,  0,  5,  0,  0,  6,  0,  0
		dc.b   6,  0,  0,  7,  0,  0,  7,  0,  0,$FF

; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Map_obj38:	incbin	"mappings/sprite/obj38.bin"

; animation script
Ani_S1obj4A:	dc.w byte_1278C-Ani_S1obj4A
byte_1278C:	dc.b   5,  0,  1,  0,  1,  0,  7,  1,  7,  2,  7,  3,  7,  4,  7,  5
		dc.b   7,  6,  7,$FC

; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Map_S1obj4A:	incbin	"mappings/sprite/obj4A_S1.bin"

; animation script
Ani_obj08:	dc.w byte_129C2-Ani_obj08
byte_129C2:	dc.b   4,  0,  1,  2,$FC,  0

; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Map_obj08:	incbin	"mappings/sprite/obj08.bin"

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Sonic_AnglePos:
AnglePos:
		move.l	#$FFFFD000,($FFFFF796).w
		cmpi.b	#$C,$3E(a0)
		beq.s	loc_12A14
		move.l	#$FFFFD600,($FFFFF796).w

loc_12A14:				; CODE XREF: AnglePos+Ej
		move.b	$3E(a0),d5
		btst	#3,$22(a0)
		beq.s	loc_12A2C
		moveq	#0,d0
		move.b	d0,($FFFFF768).w
		move.b	d0,($FFFFF76A).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12A2C:				; CODE XREF: AnglePos+22j
		moveq	#3,d0
		move.b	d0,($FFFFF768).w
		move.b	d0,($FFFFF76A).w
		move.b	$26(a0),d0
		addi.b	#$20,d0	; ' '
		bpl.s	loc_12A4E
		move.b	$26(a0),d0
		bpl.s	loc_12A48
		subq.b	#1,d0

loc_12A48:				; CODE XREF: AnglePos+48j
		addi.b	#$20,d0	; ' '
		bra.s	loc_12A5A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12A4E:				; CODE XREF: AnglePos+42j
		move.b	$26(a0),d0
		bpl.s	loc_12A56
		addq.b	#1,d0

loc_12A56:				; CODE XREF: AnglePos+56j
		addi.b	#$1F,d0

loc_12A5A:				; CODE XREF: AnglePos+50j
		andi.b	#$C0,d0
		cmpi.b	#$40,d0	; '@'
		beq.w	Sonic_WalkVertL
		cmpi.b	#$80,d0
		beq.w	Sonic_WalkCeiling
		cmpi.b	#$C0,d0
		beq.w	Sonic_WalkVertR
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$17(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	($FFFFF768).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.w	d1,-(sp)
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$17(a0),d0
		ext.w	d0
		neg.w	d0
		add.w	d0,d3
		lea	($FFFFF76A).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.w	(sp)+,d0
		bsr.w	Sonic_Angle
		tst.w	d1
		beq.s	locret_12AE4
		bpl.s	loc_12AE6
		cmpi.w	#$FFF2,d1
		blt.s	locret_12B0C
		add.w	d1,$C(a0)

locret_12AE4:				; CODE XREF: AnglePos+DAj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12AE6:				; CODE XREF: AnglePos+DCj
		cmpi.w	#$E,d1
		bgt.s	loc_12AF2

loc_12AEC:				; CODE XREF: AnglePos+FAj
		add.w	d1,$C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12AF2:				; CODE XREF: AnglePos+EEj
		tst.b	$38(a0)
		bne.s	loc_12AEC
		bset	#1,$22(a0)
		bclr	#5,$22(a0)
		move.b	#1,$1D(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_12B0C:				; CODE XREF: AnglePos+E2j
					; AnglePos+2ACj
		rts
; End of function AnglePos

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		move.l	8(a0),d2
		move.w	$10(a0),d0
		ext.l	d0
		asl.l	#8,d0
		sub.l	d0,d2
		move.l	d2,8(a0)
		move.w	#$38,d0	; '8'
		ext.l	d0
		asl.l	#8,d0
		sub.l	d0,d3
		move.l	d3,$C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR AnglePos

locret_12B30:				; CODE XREF: AnglePos+20Ej
					; AnglePos+34Aj
		rts
; END OF FUNCTION CHUNK	FOR AnglePos
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		move.l	$C(a0),d3
		move.w	$12(a0),d0
		subi.w	#$38,d0	; '8'
		move.w	d0,$12(a0)
		ext.l	d0
		asl.l	#8,d0
		sub.l	d0,d3
		move.l	d3,$C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		move.l	8(a0),d2
		move.l	$C(a0),d3
		move.w	$10(a0),d0
		ext.l	d0
		asl.l	#8,d0
		sub.l	d0,d2
		move.w	$12(a0),d0
		ext.l	d0
		asl.l	#8,d0
		sub.l	d0,d3
		move.l	d2,8(a0)
		move.l	d3,$C(a0)
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_Angle:				; CODE XREF: AnglePos+D4p
					; AnglePos+200p ...
		move.b	($FFFFF76A).w,d2
		cmp.w	d0,d1
		ble.s	loc_12B84
		move.b	($FFFFF768).w,d2
		move.w	d0,d1

loc_12B84:				; CODE XREF: Sonic_Angle+6j
		btst	#0,d2
		bne.s	loc_12B90
		move.b	d2,$26(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12B90:				; CODE XREF: Sonic_Angle+12j
		move.b	$26(a0),d2
		addi.b	#$20,d2	; ' '
		andi.b	#$C0,d2
		move.b	d2,$26(a0)
		rts
; End of function Sonic_Angle

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR AnglePos

Sonic_WalkVertR:			; CODE XREF: AnglePos+76j
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$17(a0),d0
		ext.w	d0
		neg.w	d0
		add.w	d0,d2
		move.b	$16(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	($FFFFF768).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.w	d1,-(sp)
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$17(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$16(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	($FFFFF76A).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.w	(sp)+,d0
		bsr.w	Sonic_Angle
		tst.w	d1
		beq.s	locret_12C12
		bpl.s	loc_12C14
		cmpi.w	#$FFF2,d1
		blt.w	locret_12B30
		add.w	d1,8(a0)

locret_12C12:				; CODE XREF: AnglePos+206j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12C14:				; CODE XREF: AnglePos+208j
		cmpi.w	#$E,d1
		bgt.s	loc_12C20

loc_12C1A:				; CODE XREF: AnglePos+228j
		add.w	d1,8(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12C20:				; CODE XREF: AnglePos+21Cj
		tst.b	$38(a0)
		bne.s	loc_12C1A
		bset	#1,$22(a0)
		bclr	#5,$22(a0)
		move.b	#1,$1D(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Sonic_WalkCeiling:			; CODE XREF: AnglePos+6Ej
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		move.b	$17(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	($FFFFF768).w,a4
		movea.w	#$FFF0,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.w	d1,-(sp)
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		move.b	$17(a0),d0
		ext.w	d0
		sub.w	d0,d3
		lea	($FFFFF76A).w,a4
		movea.w	#$FFF0,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.w	(sp)+,d0
		bsr.w	Sonic_Angle
		tst.w	d1
		beq.s	locret_12CB0
		bpl.s	loc_12CB2
		cmpi.w	#$FFF2,d1
		blt.w	locret_12B0C
		sub.w	d1,$C(a0)

locret_12CB0:				; CODE XREF: AnglePos+2A4j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12CB2:				; CODE XREF: AnglePos+2A6j
		cmpi.w	#$E,d1
		bgt.s	loc_12CBE

loc_12CB8:				; CODE XREF: AnglePos+2C6j
		sub.w	d1,$C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12CBE:				; CODE XREF: AnglePos+2BAj
		tst.b	$38(a0)
		bne.s	loc_12CB8
		bset	#1,$22(a0)
		bclr	#5,$22(a0)
		move.b	#1,$1D(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Sonic_WalkVertL:			; CODE XREF: AnglePos+66j
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$17(a0),d0
		ext.w	d0
		sub.w	d0,d2
		move.b	$16(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	($FFFFF768).w,a4
		movea.w	#$FFF0,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.w	d1,-(sp)
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$17(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$16(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	($FFFFF76A).w,a4
		movea.w	#$FFF0,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.w	(sp)+,d0
		bsr.w	Sonic_Angle
		tst.w	d1
		beq.s	locret_12D4E
		bpl.s	loc_12D50
		cmpi.w	#$FFF2,d1
		blt.w	locret_12B30
		sub.w	d1,8(a0)

locret_12D4E:				; CODE XREF: AnglePos+342j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12D50:				; CODE XREF: AnglePos+344j
		cmpi.w	#$E,d1
		bgt.s	loc_12D5C

loc_12D56:				; CODE XREF: AnglePos+364j
		sub.w	d1,8(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12D5C:				; CODE XREF: AnglePos+358j
		tst.b	$38(a0)
		bne.s	loc_12D56
		bset	#1,$22(a0)
		bclr	#5,$22(a0)
		move.b	#1,$1D(a0)
		rts
; END OF FUNCTION CHUNK	FOR AnglePos

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Floor_ChkTile:				; CODE XREF: FindFloorp FindFloor2p ...
		move.w	d2,d0
		add.w	d0,d0
		andi.w	#$F00,d0
		move.w	d3,d1
		lsr.w	#7,d1
		andi.w	#$7F,d1	; ''
		add.w	d1,d0
		moveq	#$FFFFFFFF,d1
		lea	($FFFF8000).w,a1
		move.b	(a1,d0.w),d1
		andi.w	#$FF,d1
		lsl.w	#7,d1
		move.w	d2,d0
		andi.w	#$70,d0	; 'p'
		add.w	d0,d1
		move.w	d3,d0
		lsr.w	#3,d0
		andi.w	#$E,d0
		add.w	d0,d1
		movea.l	d1,a1
		rts
; End of function Floor_ChkTile


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


FindFloor:				; CODE XREF: AnglePos+A0p
					; AnglePos+CEp ...
		bsr.s	Floor_ChkTile
		move.w	(a1),d0
		move.w	d0,d4
		andi.w	#$3FF,d0
		beq.s	loc_12DBE
		btst	d5,d4
		bne.s	loc_12DCC

loc_12DBE:				; CODE XREF: FindFloor+Aj
					; FindFloor+28j ...
		add.w	a3,d2
		bsr.w	FindFloor2
		sub.w	a3,d2
		addi.w	#$10,d1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12DCC:				; CODE XREF: FindFloor+Ej
		movea.l	($FFFFF796).w,a2
		add.w	d0,d0
		move.w	(a2,d0.w),d0
		beq.s	loc_12DBE
		lea	(AngleMap).l,a2
		move.b	(a2,d0.w),(a4)
		lsl.w	#4,d0
		move.w	d3,d1
		btst	#$A,d4
		beq.s	loc_12DF0
		not.w	d1
		neg.b	(a4)

loc_12DF0:				; CODE XREF: FindFloor+3Cj
		btst	#$B,d4
		beq.s	loc_12E00
		addi.b	#$40,(a4) ; '@'
		neg.b	(a4)
		subi.b	#$40,(a4) ; '@'

loc_12E00:				; CODE XREF: FindFloor+46j
		andi.w	#$F,d1
		add.w	d0,d1
		lea	(ColArray1).l,a2
		move.b	(a2,d1.w),d0
		ext.w	d0
		eor.w	d6,d4
		btst	#$B,d4
		beq.s	loc_12E1C
		neg.w	d0

loc_12E1C:				; CODE XREF: FindFloor+6Aj
		tst.w	d0
		beq.s	loc_12DBE
		bmi.s	loc_12E38
		cmpi.b	#$10,d0
		beq.s	loc_12E44
		move.w	d2,d1
		andi.w	#$F,d1
		add.w	d1,d0
		move.w	#$F,d1
		sub.w	d0,d1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12E38:				; CODE XREF: FindFloor+72j
		move.w	d2,d1
		andi.w	#$F,d1
		add.w	d1,d0
		bpl.w	loc_12DBE

loc_12E44:				; CODE XREF: FindFloor+78j
		sub.w	a3,d2
		bsr.w	FindFloor2
		add.w	a3,d2
		subi.w	#$10,d1
		rts
; End of function FindFloor


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


FindFloor2:				; CODE XREF: FindFloor+12p
					; FindFloor+98p
		bsr.w	Floor_ChkTile
		move.w	(a1),d0
		move.w	d0,d4
		andi.w	#$3FF,d0
		beq.s	loc_12E64
		btst	d5,d4
		bne.s	loc_12E72

loc_12E64:				; CODE XREF: FindFloor2+Cj
					; FindFloor2+2Aj ...
		move.w	#$F,d1
		move.w	d2,d0
		andi.w	#$F,d0
		sub.w	d0,d1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12E72:				; CODE XREF: FindFloor2+10j
		movea.l	($FFFFF796).w,a2
		add.w	d0,d0
		move.w	(a2,d0.w),d0
		beq.s	loc_12E64
		lea	(AngleMap).l,a2
		move.b	(a2,d0.w),(a4)
		lsl.w	#4,d0
		move.w	d3,d1
		btst	#$A,d4
		beq.s	loc_12E96
		not.w	d1
		neg.b	(a4)

loc_12E96:				; CODE XREF: FindFloor2+3Ej
		btst	#$B,d4
		beq.s	loc_12EA6
		addi.b	#$40,(a4) ; '@'
		neg.b	(a4)
		subi.b	#$40,(a4) ; '@'

loc_12EA6:				; CODE XREF: FindFloor2+48j
		andi.w	#$F,d1
		add.w	d0,d1
		lea	(ColArray1).l,a2
		move.b	(a2,d1.w),d0
		ext.w	d0
		eor.w	d6,d4
		btst	#$B,d4
		beq.s	loc_12EC2
		neg.w	d0

loc_12EC2:				; CODE XREF: FindFloor2+6Cj
		tst.w	d0
		beq.s	loc_12E64
		bmi.s	loc_12ED8
		move.w	d2,d1
		andi.w	#$F,d1
		add.w	d1,d0
		move.w	#$F,d1
		sub.w	d0,d1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12ED8:				; CODE XREF: FindFloor2+74j
		move.w	d2,d1
		andi.w	#$F,d1
		add.w	d1,d0
		bpl.w	loc_12E64
		not.w	d1
		rts
; End of function FindFloor2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


FindWall:				; CODE XREF: AnglePos+1CEp
					; AnglePos+1FAp ...
		bsr.w	Floor_ChkTile
		move.w	(a1),d0
		move.w	d0,d4
		andi.w	#$3FF,d0
		beq.s	loc_12EFA
		btst	d5,d4
		bne.s	loc_12F08

loc_12EFA:				; CODE XREF: FindWall+Cj FindWall+2Aj	...
		add.w	a3,d3
		bsr.w	FindWall2
		sub.w	a3,d3
		addi.w	#$10,d1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12F08:				; CODE XREF: FindWall+10j
		movea.l	($FFFFF796).w,a2
		add.w	d0,d0
		move.w	(a2,d0.w),d0
		beq.s	loc_12EFA
		lea	(AngleMap).l,a2
		move.b	(a2,d0.w),(a4)
		lsl.w	#4,d0
		move.w	d2,d1
		btst	#$B,d4
		beq.s	loc_12F34
		not.w	d1
		addi.b	#$40,(a4) ; '@'
		neg.b	(a4)
		subi.b	#$40,(a4) ; '@'

loc_12F34:				; CODE XREF: FindWall+3Ej
		btst	#$A,d4
		beq.s	loc_12F3C
		neg.b	(a4)

loc_12F3C:				; CODE XREF: FindWall+50j
		andi.w	#$F,d1
		add.w	d0,d1
		lea	(ColArray2).l,a2
		move.b	(a2,d1.w),d0
		ext.w	d0
		eor.w	d6,d4
		btst	#$A,d4
		beq.s	loc_12F58
		neg.w	d0

loc_12F58:				; CODE XREF: FindWall+6Cj
		tst.w	d0
		beq.s	loc_12EFA
		bmi.s	loc_12F74
		cmpi.b	#$10,d0
		beq.s	loc_12F80
		move.w	d3,d1
		andi.w	#$F,d1
		add.w	d1,d0
		move.w	#$F,d1
		sub.w	d0,d1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12F74:				; CODE XREF: FindWall+74j
		move.w	d3,d1
		andi.w	#$F,d1
		add.w	d1,d0
		bpl.w	loc_12EFA

loc_12F80:				; CODE XREF: FindWall+7Aj
		sub.w	a3,d3
		bsr.w	FindWall2
		add.w	a3,d3
		subi.w	#$10,d1
		rts
; End of function FindWall


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


FindWall2:				; CODE XREF: FindWall+14p FindWall+9Ap
		bsr.w	Floor_ChkTile
		move.w	(a1),d0
		move.w	d0,d4
		andi.w	#$3FF,d0
		beq.s	loc_12FA0
		btst	d5,d4
		bne.s	loc_12FAE

loc_12FA0:				; CODE XREF: FindWall2+Cj
					; FindWall2+2Aj ...
		move.w	#$F,d1
		move.w	d3,d0
		andi.w	#$F,d0
		sub.w	d0,d1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_12FAE:				; CODE XREF: FindWall2+10j
		movea.l	($FFFFF796).w,a2
		add.w	d0,d0
		move.w	(a2,d0.w),d0
		beq.s	loc_12FA0
		lea	(AngleMap).l,a2
		move.b	(a2,d0.w),(a4)
		lsl.w	#4,d0
		move.w	d2,d1
		btst	#$B,d4
		beq.s	loc_12FDA
		not.w	d1
		addi.b	#$40,(a4) ; '@'
		neg.b	(a4)
		subi.b	#$40,(a4) ; '@'

loc_12FDA:				; CODE XREF: FindWall2+3Ej
		btst	#$A,d4
		beq.s	loc_12FE2
		neg.b	(a4)

loc_12FE2:				; CODE XREF: FindWall2+50j
		andi.w	#$F,d1
		add.w	d0,d1
		lea	(ColArray2).l,a2
		move.b	(a2,d1.w),d0
		ext.w	d0
		eor.w	d6,d4
		btst	#$A,d4
		beq.s	loc_12FFE
		neg.w	d0

loc_12FFE:				; CODE XREF: FindWall2+6Cj
		tst.w	d0
		beq.s	loc_12FA0
		bmi.s	loc_13014
		move.w	d3,d1
		andi.w	#$F,d1
		add.w	d1,d0
		move.w	#$F,d1
		sub.w	d0,d1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13014:				; CODE XREF: FindWall2+74j
		move.w	d3,d1
		andi.w	#$F,d1
		add.w	d1,d0
		bpl.w	loc_12FA0
		not.w	d1
		rts
; End of function FindWall2

; ---------------------------------------------------------------------------
; This dummied out subroutine takes Green Hill Zone/the Sonic 1 collision
; format and converts it to the format used in-game - UNLIKE Sonic 1/2 Final,
; where this instead converts the collision from a bitmap-like format to the
; one used in game (though both of these would require a cartridge that could
; write data to itself, not standard carts).
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; FloorLog_Unk:
ConvertCollisionArray:
		rts
; ---------------------------------------------------------------------------
		lea	(ColArray1_GHZ).l,a1
		tst.b	(Current_Zone).w
		beq.s	loc_13038
		lea	(ColArray1).l,a1

loc_13038:
		lea	(ColArray1).l,a2
		move.w	#$7FF,d1

loc_13042:
		move.w	(a1)+,(a2)+
		dbf	d1,loc_13042
		lea	(ColArray2).l,a2
		move.w	#$7FF,d1

loc_13052:
		move.w	(a1)+,(a2)+
		dbf	d1,loc_13052
		lea	(AngleMap_GHZ).l,a1
		tst.b	(Current_Zone).w
		beq.s	loc_1306A
		lea	(AngleMap).l,a1

loc_1306A:
		lea	(AngleMap).l,a2
		move.w	#$7F,d1

loc_13074:
		move.w	(a1)+,(a2)+
		dbf	d1,loc_13074
		rts
; End of function ConvertCollisionArray


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Sonic_WalkSpeed:
CalcRoomInFront:
		move.l	#$FFFFD000,($FFFFF796).w
		cmpi.b	#$C,$3E(a0)
		beq.s	loc_13094
		move.l	#$FFFFD600,($FFFFF796).w

loc_13094:				; CODE XREF: CalcRoomInFront+Ej
		move.b	$3F(a0),d5
		move.l	8(a0),d3
		move.l	$C(a0),d2
		move.w	$10(a0),d1
		ext.l	d1
		asl.l	#8,d1
		add.l	d1,d3
		move.w	$12(a0),d1
		ext.l	d1
		asl.l	#8,d1
		add.l	d1,d2
		swap	d2
		swap	d3
		move.b	d0,($FFFFF768).w
		move.b	d0,($FFFFF76A).w
		move.b	d0,d1
		addi.b	#$20,d0	; ' '
		bpl.s	loc_130D4
		move.b	d1,d0
		bpl.s	loc_130CE
		subq.b	#1,d0

loc_130CE:				; CODE XREF: CalcRoomInFront+4Ej
		addi.b	#$20,d0	; ' '
		bra.s	loc_130DE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_130D4:				; CODE XREF: CalcRoomInFront+4Aj
		move.b	d1,d0
		bpl.s	loc_130DA
		addq.b	#1,d0

loc_130DA:				; CODE XREF: CalcRoomInFront+5Aj
		addi.b	#$1F,d0

loc_130DE:				; CODE XREF: CalcRoomInFront+56j
		andi.b	#$C0,d0
		beq.w	loc_131DE
		cmpi.b	#$80,d0
		beq.w	loc_133B0
		andi.b	#$38,d1	; '8'
		bne.s	loc_130F6
		addq.w	#8,d2

loc_130F6:				; CODE XREF: CalcRoomInFront+76j
		cmpi.b	#$40,d0	; '@'
		beq.w	loc_13478
		bra.w	loc_132F6
; End of function CalcRoomInFront


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_13102:				; CODE XREF: Sonic_Jump+16p
					; Tails_Jump:loc_11408p

; FUNCTION CHUNK AT 0001328E SIZE 00000060 BYTES
; FUNCTION CHUNK AT 00013408 SIZE 00000068 BYTES

		move.l	#$FFFFD000,($FFFFF796).w
		cmpi.b	#$C,$3E(a0)
		beq.s	loc_1311A
		move.l	#$FFFFD600,($FFFFF796).w

loc_1311A:				; CODE XREF: sub_13102+Ej
		move.b	$3F(a0),d5
		move.b	d0,($FFFFF768).w
		move.b	d0,($FFFFF76A).w
		addi.b	#$20,d0	; ' '
		andi.b	#$C0,d0
		cmpi.b	#$40,d0	; '@'
		beq.w	loc_13408
		cmpi.b	#$80,d0
		beq.w	Sonic_DontRunOnWalls
		cmpi.b	#$C0,d0
		beq.w	loc_1328E

loc_13146:				; CODE XREF: Sonic_DoLevelCollision:loc_1056Ap
					; Sonic_DoLevelCollision+122p ...
		move.l	#$FFFFD000,($FFFFF796).w
		cmpi.b	#$C,$3E(a0)
		beq.s	loc_1315E
		move.l	#$FFFFD600,($FFFFF796).w

loc_1315E:				; CODE XREF: sub_13102+52j
		move.b	$3E(a0),d5
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$17(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	($FFFFF768).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.w	d1,-(sp)
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$17(a0),d0
		ext.w	d0
		sub.w	d0,d3
		lea	($FFFFF76A).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.w	(sp)+,d0
		move.b	#0,d2

loc_131BE:				; CODE XREF: sub_13102+1E8j
					; Sonic_DontRunOnWalls+64j ...
		move.b	($FFFFF76A).w,d3
		cmp.w	d0,d1
		ble.s	loc_131CC
		move.b	($FFFFF768).w,d3
		exg	d0,d1

loc_131CC:				; CODE XREF: sub_13102+C2j
		btst	#0,d3
		beq.s	locret_131D4
		move.b	d2,d3

locret_131D4:				; CODE XREF: sub_13102+CEj
		rts
; End of function sub_13102

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		move.w	$C(a0),d2
		move.w	8(a0),d3
; START	OF FUNCTION CHUNK FOR CalcRoomInFront

loc_131DE:				; CODE XREF: CalcRoomInFront+66j
		addi.w	#$A,d2
		lea	($FFFFF768).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.b	#0,d2

loc_131F6:				; CODE XREF: CalcRoomInFront+292j
					; CalcRoomInFront+350j	...
		move.b	($FFFFF768).w,d3
		btst	#0,d3
		beq.s	locret_13202
		move.b	d2,d3

locret_13202:				; CODE XREF: CalcRoomInFront+182j
		rts
; END OF FUNCTION CHUNK	FOR CalcRoomInFront

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Sonic_HitFloor:
ChkFloorEdge:
		move.w	8(a0),d3
		move.w	$C(a0),d2
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.l	#$FFFFD000,($FFFFF796).w
		cmpi.b	#$C,$3E(a0)
		beq.s	loc_1322E
		move.l	#$FFFFD600,($FFFFF796).w

loc_1322E:				; CODE XREF: ChkFloorEdge+20j
		lea	($FFFFF768).w,a4
		move.b	#0,(a4)
		movea.w	#$10,a3
		move.w	#0,d6
		move.b	$3E(a0),d5
		bsr.w	FindFloor
		move.b	($FFFFF768).w,d3
		btst	#0,d3
		beq.s	locret_13254
		move.b	#0,d3

locret_13254:				; CODE XREF: ChkFloorEdge+4Aj
		rts
; End of function ChkFloorEdge


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ObjHitFloor:				; CODE XREF: ROM:000096A8p
					; ROM:00009796p ...
		move.w	8(a0),d3

ObjHitFloor2:				; CODE XREF: ROM:loc_A224p
		move.w	$C(a0),d2
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		add.w	d0,d2
		lea	($FFFFF768).w,a4
		move.b	#0,(a4)
		movea.w	#$10,a3
		move.w	#0,d6
		moveq	#$C,d5
		bsr.w	FindFloor
		move.b	($FFFFF768).w,d3
		btst	#0,d3
		beq.s	locret_1328C
		move.b	#0,d3

locret_1328C:				; CODE XREF: ObjHitFloor+30j
		rts
; End of function ObjHitFloor

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR sub_13102

loc_1328E:				; CODE XREF: sub_13102+40j
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$17(a0),d0
		ext.w	d0
		sub.w	d0,d2
		move.b	$16(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	($FFFFF768).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.w	d1,-(sp)
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$17(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$16(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	($FFFFF76A).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.w	(sp)+,d0
		move.b	#$C0,d2
		bra.w	loc_131BE
; END OF FUNCTION CHUNK	FOR sub_13102

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_132EE:				; CODE XREF: Sonic_DoLevelCollision:loc_10558p
					; Sonic_DoLevelCollision:loc_10658p ...
		move.w	$C(a0),d2
		move.w	8(a0),d3
; End of function sub_132EE

; START	OF FUNCTION CHUNK FOR CalcRoomInFront

loc_132F6:				; CODE XREF: CalcRoomInFront+82j
		addi.w	#$A,d3
		lea	($FFFFF768).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.b	#$C0,d2
		bra.w	loc_131F6
; END OF FUNCTION CHUNK	FOR CalcRoomInFront

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


ObjHitWallRight:			; CODE XREF: ROM:000153B2p
					; ROM:000153D2p
		add.w	8(a0),d3
		move.w	$C(a0),d2
		lea	($FFFFF768).w,a4
		move.b	#0,(a4)
		movea.w	#$10,a3
		move.w	#0,d6
		moveq	#$D,d5
		bsr.w	FindWall
		move.b	($FFFFF768).w,d3
		btst	#0,d3
		beq.s	locret_1333E
		move.b	#$C0,d3

locret_1333E:				; CODE XREF: ObjHitWallRight+26j
		rts
; End of function ObjHitWallRight


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_DontRunOnWalls:			; CODE XREF: Sonic_DoLevelCollision:loc_105FEp
					; Sonic_DoLevelCollision:loc_1066Ap ...
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		move.b	$17(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	($FFFFF768).w,a4
		movea.w	#$FFF0,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.w	d1,-(sp)
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		move.b	$17(a0),d0
		ext.w	d0
		sub.w	d0,d3
		lea	($FFFFF76A).w,a4
		movea.w	#$FFF0,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.w	(sp)+,d0
		move.b	#$80,d2
		bra.w	loc_131BE
; End of function Sonic_DontRunOnWalls

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		move.w	$C(a0),d2
		move.w	8(a0),d3
; START	OF FUNCTION CHUNK FOR CalcRoomInFront

loc_133B0:				; CODE XREF: CalcRoomInFront+6Ej
		subi.w	#$A,d2
		eori.w	#$F,d2
		lea	($FFFFF768).w,a4
		movea.w	#$FFF0,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.b	#$80,d2
		bra.w	loc_131F6
; END OF FUNCTION CHUNK	FOR CalcRoomInFront
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ObjHitCeiling:
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$16(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		lea	($FFFFF768).w,a4
		movea.w	#$FFF0,a3
		move.w	#$800,d6
		moveq	#$D,d5
		bsr.w	FindFloor
		move.b	($FFFFF768).w,d3
		btst	#0,d3
		beq.s	locret_13406
		move.b	#$80,d3

locret_13406:				; CODE XREF: ROM:00013400j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR sub_13102

loc_13408:				; CODE XREF: sub_13102+30j
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$17(a0),d0
		ext.w	d0
		sub.w	d0,d2
		move.b	$16(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	($FFFFF768).w,a4
		movea.w	#$FFF0,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.w	d1,-(sp)
		move.w	$C(a0),d2
		move.w	8(a0),d3
		moveq	#0,d0
		move.b	$17(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$16(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	($FFFFF76A).w,a4
		movea.w	#$FFF0,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.w	(sp)+,d0
		move.b	#$40,d2	; '@'
		bra.w	loc_131BE
; END OF FUNCTION CHUNK	FOR sub_13102

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Sonic_HitWall:				; CODE XREF: Sonic_DoLevelCollision+4Ap
					; Sonic_DoLevelCollision:loc_105E4p ...
		move.w	$C(a0),d2
		move.w	8(a0),d3
; End of function Sonic_HitWall

; START	OF FUNCTION CHUNK FOR CalcRoomInFront

loc_13478:				; CODE XREF: CalcRoomInFront+7Ej
		subi.w	#$A,d3
		eori.w	#$F,d3
		lea	($FFFFF768).w,a4
		movea.w	#$FFF0,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.b	#$40,d2	; '@'
		bra.w	loc_131F6
; END OF FUNCTION CHUNK	FOR CalcRoomInFront
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ObjHitWallLeft:
		add.w	8(a0),d3
		move.w	$C(a0),d2
		lea	($FFFFF768).w,a4
		move.b	#0,(a4)
		movea.w	#$FFF0,a3
		move.w	#$400,d6
		moveq	#$D,d5
		bsr.w	FindWall
		move.b	($FFFFF768).w,d3
		btst	#0,d3
		beq.s	locret_134C4
		move.b	#$40,d3	; '@'

locret_134C4:				; CODE XREF: ROM:000134BEj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop
;----------------------------------------------------
; Object 79 - lamppost
;----------------------------------------------------

Obj79:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj79_Index(pc,d0.w),d1
		jsr	Obj79_Index(pc,d1.w)
		jmp	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj79_Index:	dc.w Obj79_Init-Obj79_Index ; DATA XREF: ROM:Obj79_Indexo
					; ROM:000134DEo ...
		dc.w Obj79_Main-Obj79_Index
		dc.w Obj79_AfterHit-Obj79_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj79_Init:				; DATA XREF: ROM:Obj79_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj79,4(a0)
		move.w	#$47C,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#8,$19(a0)
		move.b	#5,$18(a0)
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		bclr	#7,2(a2,d0.w)
		btst	#0,2(a2,d0.w)
		bne.s	loc_13536
		move.b	($FFFFFE30).w,d1
		andi.b	#$7F,d1	; ''
		move.b	$28(a0),d2
		andi.b	#$7F,d2	; ''
		cmp.b	d2,d1
		bcs.s	Obj79_Main

loc_13536:				; CODE XREF: ROM:00013520j
		bset	#0,2(a2,d0.w)
		move.b	#4,routine(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj79_Main:				; CODE XREF: ROM:00013534j
					; DATA XREF: ROM:000134DEo
		tst.w	(Debug_placement_mode).w
		bne.w	locret_135CA
		tst.b	($FFFFF7C8).w
		bmi.w	locret_135CA
		move.b	($FFFFFE30).w,d1
		andi.b	#$7F,d1	; ''
		move.b	$28(a0),d2
		andi.b	#$7F,d2	; ''
		cmp.b	d2,d1
		bcs.s	Obj79_HitLamp
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		bset	#0,2(a2,d0.w)
		move.b	#4,routine(a0)
		bra.w	locret_135CA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj79_HitLamp:				; CODE XREF: ROM:00013566j
		move.w	($FFFFB008).w,d0
		sub.w	8(a0),d0
		addi.w	#8,d0
		cmpi.w	#$10,d0
		bcc.w	locret_135CA
		move.w	($FFFFB00C).w,d0
		sub.w	$C(a0),d0
		addi.w	#$40,d0	; '@'
		cmpi.w	#$68,d0	; 'h'
		bcc.s	locret_135CA
		move.w	#$A1,d0	; '¡'
		jsr	(PlaySound_Special).l
		addq.b	#2,routine(a0)
		bsr.w	Lamppost_StoreInfo
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		bset	#0,2(a2,d0.w)

locret_135CA:				; CODE XREF: ROM:00013548j
					; ROM:00013550j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj79_AfterHit:				; DATA XREF: ROM:000134E0o
		move.b	($FFFFFE0F).w,d0
		andi.b	#2,d0
		lsr.b	#1,d0
		addq.b	#1,d0
		move.b	d0,$1A(a0)
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Lamppost_StoreInfo:			; CODE XREF: ROM:000135B6p
		move.b	$28(a0),($FFFFFE30).w
		move.b	($FFFFFE30).w,($FFFFFE31).w
		move.w	8(a0),($FFFFFE32).w
		move.w	$C(a0),($FFFFFE34).w
		move.w	($FFFFFE20).w,($FFFFFE36).w
		move.b	($FFFFFE1B).w,($FFFFFE54).w
		move.l	($FFFFFE22).w,($FFFFFE38).w
		move.b	($FFFFEEDF).w,($FFFFFE3C).w
		move.w	($FFFFEECE).w,($FFFFFE3E).w
		move.w	($FFFFEE00).w,($FFFFFE40).w
		move.w	($FFFFEE04).w,($FFFFFE42).w
		move.w	($FFFFEE08).w,($FFFFFE44).w
		move.w	($FFFFEE0C).w,($FFFFFE46).w
		move.w	($FFFFEE10).w,($FFFFFE48).w
		move.w	($FFFFEE14).w,($FFFFFE4A).w
		move.w	($FFFFEE18).w,($FFFFFE4C).w
		move.w	($FFFFEE1C).w,($FFFFFE4E).w
		move.w	($FFFFF648).w,($FFFFFE50).w
		move.b	($FFFFF64D).w,($FFFFFE52).w
		move.b	(Water_fullscreen_flag).w,($FFFFFE53).w
		rts
; End of function Lamppost_StoreInfo


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Lamppost_LoadInfo:			; CODE XREF: LevelSizeLoad+180p
		move.b	($FFFFFE31).w,($FFFFFE30).w
		move.w	($FFFFFE32).w,($FFFFB008).w
		move.w	($FFFFFE34).w,($FFFFB00C).w
		move.w	($FFFFFE36).w,($FFFFFE20).w
		move.b	($FFFFFE54).w,($FFFFFE1B).w
		clr.w	($FFFFFE20).w
		clr.b	($FFFFFE1B).w
		move.l	($FFFFFE38).w,($FFFFFE22).w
		move.b	#$3B,($FFFFFE25).w ; ';'
		subq.b	#1,($FFFFFE24).w
		move.b	($FFFFFE3C).w,($FFFFEEDF).w
		move.b	($FFFFFE52).w,($FFFFF64D).w
		move.w	($FFFFFE3E).w,($FFFFEECE).w
		move.w	($FFFFFE3E).w,($FFFFEEC6).w
		move.w	($FFFFFE40).w,($FFFFEE00).w
		move.w	($FFFFFE42).w,($FFFFEE04).w
		move.w	($FFFFFE44).w,($FFFFEE08).w
		move.w	($FFFFFE46).w,($FFFFEE0C).w
		move.w	($FFFFFE48).w,($FFFFEE10).w
		move.w	($FFFFFE4A).w,($FFFFEE14).w
		move.w	($FFFFFE4C).w,($FFFFEE18).w
		move.w	($FFFFFE4E).w,($FFFFEE1C).w
		cmpi.b	#1,(Current_Zone).w
		bne.s	loc_136F0
		move.w	($FFFFFE50).w,($FFFFF648).w
		move.b	($FFFFFE52).w,($FFFFF64D).w
		move.b	($FFFFFE53).w,(Water_fullscreen_flag).w

loc_136F0:				; CODE XREF: Lamppost_LoadInfo+84j
		tst.b	($FFFFFE30).w
		bpl.s	locret_13702
		move.w	($FFFFFE32).w,d0
		subi.w	#$A0,d0	; ' '
		move.w	d0,($FFFFEEC8).w

locret_13702:				; CODE XREF: Lamppost_LoadInfo+9Cj
		rts
; End of function Lamppost_LoadInfo

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj79:	dc.w word_1370A-Map_Obj79 ; DATA XREF: ROM:000134E6o
					; ROM:Map_Obj79o ...
		dc.w word_1372C-Map_Obj79
		dc.w word_1374E-Map_Obj79
word_1370A:	dc.w 4			; DATA XREF: ROM:Map_Obj79o
		dc.w $E801,$2000,$2000,$FFF8; 0
		dc.w $E801,$2800,$2800,	   0; 4
		dc.w $F803,    6,    3,$FFF8; 8
		dc.w $F803, $806, $803,	   0; 12
word_1372C:	dc.w 4			; DATA XREF: ROM:00013706o
		dc.w $E801,    2,    1,$FFF8; 0
		dc.w $E801, $802, $801,	   0; 4
		dc.w $F803,    6,    3,$FFF8; 8
		dc.w $F803, $806, $803,	   0; 12
word_1374E:	dc.w 4			; DATA XREF: ROM:00013708o
		dc.w $E801,$2004,$2002,$FFF8; 0
		dc.w $E801,$2804,$2802,	   0; 4
		dc.w $F803,    6,    3,$FFF8; 8
		dc.w $F803, $806, $803,	   0; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 7D - hidden points at the end of a level
;----------------------------------------------------

Obj7D:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj7D_Index(pc,d0.w),d1
		jmp	Obj7D_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj7D_Index:	dc.w Obj7D_Main-Obj7D_Index ; DATA XREF: ROM:Obj7D_Indexo
					; ROM:00013780o
		dc.w Obj7D_DelayDelete-Obj7D_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj7D_Main:				; DATA XREF: ROM:Obj7D_Indexo
		moveq	#$10,d2
		move.w	d2,d3
		add.w	d3,d3
		lea	($FFFFB000).w,a1
		move.w	8(a1),d0
		sub.w	8(a0),d0
		add.w	d2,d0
		cmp.w	d3,d0
		bcc.s	loc_13804
		move.w	$C(a1),d1
		sub.w	$C(a0),d1
		add.w	d2,d1
		cmp.w	d3,d1
		bcc.s	loc_13804
		tst.w	(Debug_placement_mode).w
		bne.s	loc_13804
		tst.b	($FFFFF7CD).w
		bne.s	loc_13804
		addq.b	#2,routine(a0)
		move.l	#Map_Obj7D,4(a0)
		move.w	#$84B6,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#0,$18(a0)
		move.b	#$10,$19(a0)
		move.b	$28(a0),$1A(a0)
		move.w	#$77,$30(a0) ; 'w'
		move.w	#$C9,d0	; 'É'
		jsr	(PlaySound_Special).l
		moveq	#0,d0
		move.b	$28(a0),d0
		add.w	d0,d0
		move.w	Obj7D_Points(pc,d0.w),d0
		jsr	AddPoints

loc_13804:				; CODE XREF: ROM:00013798j
					; ROM:000137A6j ...
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_13818
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13818:				; CODE XREF: ROM:00013814j
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj7D_Points:	dc.w	 0, 1000,  100,	   1; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj7D_DelayDelete:			; DATA XREF: ROM:00013780o
		subq.w	#1,$30(a0)
		bmi.s	loc_13844
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_13844
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13844:				; CODE XREF: ROM:0001382Aj
					; ROM:0001383Cj
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj7D:	dc.w word_13852-Map_Obj7D ; DATA XREF: ROM:000137B8o
					; ROM:Map_Obj7Do ...
		dc.w word_13854-Map_Obj7D
		dc.w word_1385E-Map_Obj7D
		dc.w word_13868-Map_Obj7D
word_13852:	dc.w 0			; DATA XREF: ROM:Map_Obj7Do
word_13854:	dc.w 1			; DATA XREF: ROM:0001384Co
		dc.w $F40E,    0,    0,$FFF0; 0
word_1385E:	dc.w 1			; DATA XREF: ROM:0001384Eo
		dc.w $F40E,   $C,    6,$FFF0; 0
word_13868:	dc.w 1			; DATA XREF: ROM:00013850o
		dc.w $F40E,  $18,   $C,$FFF0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

S1Obj47:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	S1Obj47_Index(pc,d0.w),d1
		jmp	S1Obj47_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1Obj47_Index:	dc.w S1Obj47_Init-S1Obj47_Index	; DATA XREF: ROM:S1Obj47_Indexo
					; ROM:00013884o
		dc.w S1Obj47_Main-S1Obj47_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1Obj47_Init:				; DATA XREF: ROM:S1Obj47_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_S1Obj47,4(a0)
		move.w	#$380,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$10,$19(a0)
		move.b	#1,$18(a0)
		move.b	#$D7,$20(a0)

S1Obj47_Main:				; DATA XREF: ROM:00013884o
		move.b	$21(a0),d0
		beq.w	loc_13976
		lea	($FFFFB000).w,a1
		bclr	#0,$21(a0)
		beq.s	loc_138CA
		bsr.s	S1Obj47_Bump

loc_138CA:				; CODE XREF: ROM:000138C6j
		lea	($FFFFB040).w,a1
		bclr	#1,$21(a0)
		beq.s	loc_138D8
		bsr.s	S1Obj47_Bump

loc_138D8:				; CODE XREF: ROM:000138D4j
		clr.b	$21(a0)
		bra.w	loc_13976

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


S1Obj47_Bump:				; CODE XREF: ROM:000138C8p
					; ROM:000138D6p
		move.w	8(a0),d1
		move.w	$C(a0),d2
		sub.w	8(a1),d1
		sub.w	$C(a1),d2
		jsr	(CalcAngle).l
		jsr	(CalcSine).l
		muls.w	#$F900,d1
		asr.l	#8,d1
		move.w	d1,$10(a1)
		muls.w	#$F900,d0
		asr.l	#8,d0
		move.w	d0,$12(a1)
		bset	#1,$22(a1)
		bclr	#4,$22(a1)
		bclr	#5,$22(a1)
		clr.b	$3C(a1)
		move.b	#1,$1C(a0)
		move.w	#$B4,d0	; '´'
		jsr	(PlaySound_Special).l
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		beq.s	loc_1394E
		cmpi.b	#$8A,2(a2,d0.w)
		bcc.s	locret_13974
		addq.b	#1,2(a2,d0.w)

loc_1394E:				; CODE XREF: S1Obj47_Bump+60j
		moveq	#1,d0
		jsr	AddPoints
		bsr.w	SingleObjLoad
		bne.s	locret_13974
		move.b	#$29,0(a1) ; ')'
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	#4,$1A(a1)

locret_13974:				; CODE XREF: S1Obj47_Bump+68j
					; S1Obj47_Bump+7Aj
		rts
; End of function S1Obj47_Bump

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13976:				; CODE XREF: ROM:000138B8j
					; ROM:000138DCj
		lea	(Ani_S1Obj47).l,a1
		bsr.w	AnimateSprite
		bra.w	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_S1Obj47:	dc.w byte_13988-Ani_S1Obj47 ; DATA XREF: ROM:loc_13976o
					; ROM:Ani_S1Obj47o ...
		dc.w byte_1398B-Ani_S1Obj47
byte_13988:	dc.b  $F,  0,$FF	; 0 ; DATA XREF: ROM:Ani_S1Obj47o
byte_1398B:	dc.b   3,  1,  2,  1,  2,$FD,  0; 0 ; DATA XREF: ROM:00013986o
Map_S1Obj47:	dc.w word_13998-Map_S1Obj47 ; DATA XREF: ROM:0001388Ao
					; ROM:Map_S1Obj47o ...
		dc.w word_139AA-Map_S1Obj47
		dc.w word_139BC-Map_S1Obj47
word_13998:	dc.w 2			; DATA XREF: ROM:Map_S1Obj47o
		dc.w $F007,    0,    0,$FFF0; 0
		dc.w $F007, $800, $800,	   0; 4
word_139AA:	dc.w 2			; DATA XREF: ROM:00013994o
		dc.w $F406,    8,    4,$FFF4; 0
		dc.w $F402, $808, $804,	   4; 4
word_139BC:	dc.w 2			; DATA XREF: ROM:00013996o
		dc.w $F007,   $E,    7,$FFF0; 0
		dc.w $F007, $80E, $807,	   0; 4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

S1Obj64:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	S1Obj64_Index(pc,d0.w),d1
		jmp	S1Obj64_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1Obj64_Index:	dc.w S1Obj64_Init-S1Obj64_Index	; DATA XREF: ROM:S1Obj64_Indexo
					; ROM:000139E0o ...
		dc.w S1Obj64_Animate-S1Obj64_Index
		dc.w S1Obj64_ChkWater-S1Obj64_Index
		dc.w S1Obj64_Display-S1Obj64_Index
		dc.w S1Obj64_Delete-S1Obj64_Index
		dc.w S1Obj64_BblMaker-S1Obj64_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1Obj64_Init:				; DATA XREF: ROM:S1Obj64_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj0A_Bubbles,4(a0)
		move.w	#$8348,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#$84,1(a0)
		move.b	#$10,$19(a0)
		move.b	#1,$18(a0)
		move.b	$28(a0),d0
		bpl.s	loc_13A32
		addq.b	#8,routine(a0)
		andi.w	#$7F,d0	; ''
		move.b	d0,$32(a0)
		move.b	d0,$33(a0)
		move.b	#6,$1C(a0)
		bra.w	S1Obj64_BblMaker
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13A32:				; CODE XREF: ROM:00013A16j
		move.b	d0,$1C(a0)
		move.w	8(a0),$30(a0)
		move.w	#$FF78,$12(a0)
		jsr	(RandomNumber).l
		move.b	d0,$26(a0)

S1Obj64_Animate:			; DATA XREF: ROM:000139E0o
		lea	(Ani_S1Obj64).l,a1
		jsr	AnimateSprite
		cmpi.b	#6,$1A(a0)
		bne.s	S1Obj64_ChkWater
		move.b	#1,$2E(a0)

S1Obj64_ChkWater:			; CODE XREF: ROM:00013A5Ej
					; DATA XREF: ROM:000139E2o
		move.w	($FFFFF646).w,d0
		cmp.w	$C(a0),d0
		bcs.s	loc_13A7E

loc_13A70:				; CODE XREF: ROM:00013AECj
					; ROM:00013B06j
		move.b	#6,routine(a0)
		addq.b	#3,$1C(a0)
		bra.w	S1Obj64_Display
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13A7E:				; CODE XREF: ROM:00013A6Ej
		move.b	$26(a0),d0
		addq.b	#1,$26(a0)
		andi.w	#$7F,d0	; ''
		lea	(Obj0A_WobbleData).l,a1
		move.b	(a1,d0.w),d0
		ext.w	d0
		add.w	$30(a0),d0
		move.w	d0,8(a0)
		tst.b	$2E(a0)
		beq.s	loc_13B0A
		bsr.w	S1Obj64_ChkSonic
		beq.s	loc_13B0A
		bsr.w	ResumeMusic
		move.w	#$AD,d0	; '­'
		jsr	(PlaySound_Special).l
		lea	($FFFFB000).w,a1
		clr.w	$10(a1)
		clr.w	$12(a1)
		clr.w	$14(a1)
		move.b	#$15,$1C(a1)
		move.w	#$23,$2E(a1) ; '#'
		move.b	#0,$3C(a1)
		bclr	#5,$22(a1)
		bclr	#4,$22(a1)
		btst	#2,$22(a1)
		beq.w	loc_13A70
		bclr	#2,$22(a1)
		move.b	#$13,$16(a1)
		move.b	#9,$17(a1)
		subq.w	#5,$C(a1)
		bra.w	loc_13A70
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13B0A:				; CODE XREF: ROM:00013AA2j
					; ROM:00013AA8j
		bsr.w	ObjectMove
		tst.b	1(a0)
		bpl.s	loc_13B1A
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13B1A:				; CODE XREF: ROM:00013B12j
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1Obj64_Display:			; CODE XREF: ROM:00013A7Aj
					; DATA XREF: ROM:000139E4o
		lea	(Ani_S1Obj64).l,a1
		jsr	AnimateSprite
		tst.b	1(a0)
		bpl.s	loc_13B38
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13B38:				; CODE XREF: ROM:00013B30j
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1Obj64_Delete:				; DATA XREF: ROM:000139E6o
		bra.w	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

S1Obj64_BblMaker:			; CODE XREF: ROM:00013A2Ej
					; DATA XREF: ROM:000139E8o
		tst.w	$36(a0)
		bne.s	loc_13BA4
		move.w	($FFFFF646).w,d0
		cmp.w	$C(a0),d0
		bcc.w	loc_13C50
		tst.b	1(a0)
		bpl.w	loc_13C50
		subq.w	#1,$38(a0)
		bpl.w	loc_13C44
		move.w	#1,$36(a0)

loc_13B6A:				; CODE XREF: ROM:00013B7Aj
		jsr	(RandomNumber).l
		move.w	d0,d1
		andi.w	#7,d0
		cmpi.w	#6,d0
		bcc.s	loc_13B6A
		move.b	d0,$34(a0)
		andi.w	#$C,d1
		lea	(S1Obj64_BblTypes).l,a1
		adda.w	d1,a1
		move.l	a1,$3C(a0)
		subq.b	#1,$32(a0)
		bpl.s	loc_13BA2
		move.b	$33(a0),$32(a0)
		bset	#7,$36(a0)

loc_13BA2:				; CODE XREF: ROM:00013B94j
		bra.s	loc_13BAC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13BA4:				; CODE XREF: ROM:00013B46j
		subq.w	#1,$38(a0)
		bpl.w	loc_13C44

loc_13BAC:				; CODE XREF: ROM:loc_13BA2j
		jsr	(RandomNumber).l
		andi.w	#$1F,d0
		move.w	d0,$38(a0)
		bsr.w	SingleObjLoad
		bne.s	loc_13C28
		move.b	#$64,0(a1) ; 'd'
		move.w	8(a0),8(a1)
		jsr	(RandomNumber).l
		andi.w	#$F,d0
		subq.w	#8,d0
		add.w	d0,8(a1)
		move.w	$C(a0),$C(a1)
		moveq	#0,d0
		move.b	$34(a0),d0
		movea.l	$3C(a0),a2
		move.b	(a2,d0.w),$28(a1)
		btst	#7,$36(a0)
		beq.s	loc_13C28
		jsr	(RandomNumber).l
		andi.w	#3,d0
		bne.s	loc_13C14
		bset	#6,$36(a0)
		bne.s	loc_13C28
		move.b	#2,$28(a1)

loc_13C14:				; CODE XREF: ROM:00013C04j
		tst.b	$34(a0)
		bne.s	loc_13C28
		bset	#6,$36(a0)
		bne.s	loc_13C28
		move.b	#2,$28(a1)

loc_13C28:				; CODE XREF: ROM:00013BBEj
					; ROM:00013BF8j ...
		subq.b	#1,$34(a0)
		bpl.s	loc_13C44
		jsr	(RandomNumber).l
		andi.w	#$7F,d0	; ''
		addi.w	#$80,d0	; ''
		add.w	d0,$38(a0)
		clr.w	$36(a0)

loc_13C44:				; CODE XREF: ROM:00013B60j
					; ROM:00013BA8j ...
		lea	(Ani_S1Obj64).l,a1
		jsr	AnimateSprite

loc_13C50:				; CODE XREF: ROM:00013B50j
					; ROM:00013B58j
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		move.w	($FFFFF646).w,d0
		cmp.w	$C(a0),d0
		bcs.w	DisplaySprite
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1Obj64_BblTypes:dc.b	0,  1,	0,  0,	0,  0,	1,  0,	0; 0 ; DATA XREF: ROM:00013B84o
		dc.b   0,  0,  1,  0,  1,  0,  0,  1,  0; 9

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


S1Obj64_ChkSonic:			; CODE XREF: ROM:00013AA4p
		tst.b	($FFFFF7C8).w
		bmi.s	loc_13CBE
		lea	($FFFFB000).w,a1
		move.w	8(a1),d0
		move.w	8(a0),d1
		subi.w	#$10,d1
		cmp.w	d0,d1
		bcc.s	loc_13CBE
		addi.w	#$20,d1	; ' '
		cmp.w	d0,d1
		bcs.s	loc_13CBE
		move.w	$C(a1),d0
		move.w	$C(a0),d1
		cmp.w	d0,d1
		bcc.s	loc_13CBE
		addi.w	#$10,d1
		cmp.w	d0,d1
		bcs.s	loc_13CBE
		moveq	#1,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13CBE:				; CODE XREF: S1Obj64_ChkSonic+4j
					; S1Obj64_ChkSonic+18j	...
		moveq	#0,d0
		rts
; End of function S1Obj64_ChkSonic

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_S1Obj64:	dc.w byte_13CD0-Ani_S1Obj64 ; DATA XREF: ROM:S1Obj64_Animateo
					; ROM:S1Obj64_Displayo	...
		dc.w byte_13CD5-Ani_S1Obj64
		dc.w byte_13CDB-Ani_S1Obj64
		dc.w byte_13CE2-Ani_S1Obj64
		dc.w byte_13CE2-Ani_S1Obj64
		dc.w byte_13CE4-Ani_S1Obj64
		dc.w byte_13CE9-Ani_S1Obj64
byte_13CD0:	dc.b  $E,  0,  1,  2,$FC; 0 ; DATA XREF: ROM:Ani_S1Obj64o
byte_13CD5:	dc.b  $E,  1,  2,  3,  4,$FC; 0	; DATA XREF: ROM:00013CC4o
byte_13CDB:	dc.b  $E,  2,  3,  4,  5,  6,$FC; 0 ; DATA XREF: ROM:00013CC6o
byte_13CE2:	dc.b   4,$FC		; 0 ; DATA XREF: ROM:00013CC8o
					; ROM:00013CCAo
byte_13CE4:	dc.b   4,  6,  7,  8,$FC; 0 ; DATA XREF: ROM:00013CCCo
byte_13CE9:	dc.b  $F,$13,$14,$15,$FF; 0 ; DATA XREF: ROM:00013CCEo
Map_Obj0A_Bubbles:dc.w word_13D1C-Map_Obj0A_Bubbles ; DATA XREF: ROM:00011E88o
					; ROM:000139EEo ...
		dc.w word_13D26-Map_Obj0A_Bubbles
		dc.w word_13D30-Map_Obj0A_Bubbles
		dc.w word_13D3A-Map_Obj0A_Bubbles
		dc.w word_13D44-Map_Obj0A_Bubbles
		dc.w word_13D4E-Map_Obj0A_Bubbles
		dc.w word_13D58-Map_Obj0A_Bubbles
		dc.w word_13D62-Map_Obj0A_Bubbles
		dc.w word_13D84-Map_Obj0A_Bubbles
		dc.w word_13DA6-Map_Obj0A_Bubbles
		dc.w word_13DB0-Map_Obj0A_Bubbles
		dc.w word_13DBA-Map_Obj0A_Bubbles
		dc.w word_13DC4-Map_Obj0A_Bubbles
		dc.w word_13DCE-Map_Obj0A_Bubbles
		dc.w word_13DD8-Map_Obj0A_Bubbles
		dc.w word_13DE2-Map_Obj0A_Bubbles
		dc.w word_13DEC-Map_Obj0A_Bubbles
		dc.w word_13DF6-Map_Obj0A_Bubbles
		dc.w word_13E00-Map_Obj0A_Bubbles
		dc.w word_13E0A-Map_Obj0A_Bubbles
		dc.w word_13E14-Map_Obj0A_Bubbles
		dc.w word_13E1E-Map_Obj0A_Bubbles
		dc.w word_13E28-Map_Obj0A_Bubbles
word_13D1C:	dc.w 1			; DATA XREF: ROM:Map_Obj0A_Bubbleso
		dc.w $FC00,    0,    0,$FFFC; 0
word_13D26:	dc.w 1			; DATA XREF: ROM:00013CF0o
		dc.w $FC00,    1,    0,$FFFC; 0
word_13D30:	dc.w 1			; DATA XREF: ROM:00013CF2o
		dc.w $FC00,    2,    1,$FFFC; 0
word_13D3A:	dc.w 1			; DATA XREF: ROM:00013CF4o
		dc.w $F805,    3,    1,$FFF8; 0
word_13D44:	dc.w 1			; DATA XREF: ROM:00013CF6o
		dc.w $F805,    7,    3,$FFF8; 0
word_13D4E:	dc.w 1			; DATA XREF: ROM:00013CF8o
		dc.w $F40A,   $B,    5,$FFF4; 0
word_13D58:	dc.w 1			; DATA XREF: ROM:00013CFAo
		dc.w $F00F,  $14,   $A,$FFF0; 0
word_13D62:	dc.w 4			; DATA XREF: ROM:00013CFCo
		dc.w $F005,  $24,  $12,$FFF0; 0
		dc.w $F005, $824, $812,	   0; 4
		dc.w	 5,$1024,$1012,$FFF0; 8
		dc.w	 5,$1824,$1812,	   0; 12
word_13D84:	dc.w 4			; DATA XREF: ROM:00013CFEo
		dc.w $F005,  $28,  $14,$FFF0; 0
		dc.w $F005, $828, $814,	   0; 4
		dc.w	 5,$1028,$1014,$FFF0; 8
		dc.w	 5,$1828,$1814,	   0; 12
word_13DA6:	dc.w 1			; DATA XREF: ROM:00013D00o
		dc.w $F406,  $2C,  $16,$FFF8; 0
word_13DB0:	dc.w 1			; DATA XREF: ROM:00013D02o
		dc.w $F406,  $32,  $19,$FFF8; 0
word_13DBA:	dc.w 1			; DATA XREF: ROM:00013D04o
		dc.w $F406,  $38,  $1C,$FFF8; 0
word_13DC4:	dc.w 1			; DATA XREF: ROM:00013D06o
		dc.w $F406,  $3E,  $1F,$FFF8; 0
word_13DCE:	dc.w 1			; DATA XREF: ROM:00013D08o
		dc.w $F406,$2044,$2022,$FFF8; 0
word_13DD8:	dc.w 1			; DATA XREF: ROM:00013D0Ao
		dc.w $F406,$204A,$2025,$FFF8; 0
word_13DE2:	dc.w 1			; DATA XREF: ROM:00013D0Co
		dc.w $F406,$2050,$2028,$FFF8; 0
word_13DEC:	dc.w 1			; DATA XREF: ROM:00013D0Eo
		dc.w $F406,$2056,$202B,$FFF8; 0
word_13DF6:	dc.w 1			; DATA XREF: ROM:00013D10o
		dc.w $F406,$205C,$202E,$FFF8; 0
word_13E00:	dc.w 1			; DATA XREF: ROM:00013D12o
		dc.w $F406,$2062,$2031,$FFF8; 0
word_13E0A:	dc.w 1			; DATA XREF: ROM:00013D14o
		dc.w $F805,  $68,  $34,$FFF8; 0
word_13E14:	dc.w 1			; DATA XREF: ROM:00013D16o
		dc.w $F805,  $6C,  $36,$FFF8; 0
word_13E1E:	dc.w 1			; DATA XREF: ROM:00013D18o
		dc.w $F805,  $70,  $38,$FFF8; 0
word_13E28:	dc.w 0			; DATA XREF: ROM:00013D1Ao
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop
;----------------------------------------------------
; Object 03 - collision	index switcher (in loops)
;----------------------------------------------------

Obj03:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj03_Index(pc,d0.w),d1
		jsr	Obj03_Index(pc,d1.w)
		tst.w	(Debug_mode_flag).w
		beq.w	MarkObjGone2
		jmp	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj03_Index:	dc.w Obj03_Init-Obj03_Index ; DATA XREF: ROM:Obj03_Indexo
					; ROM:00013E4Ao ...
		dc.w loc_13EB4-Obj03_Index
		dc.w loc_13FB6-Obj03_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj03_Init:				; DATA XREF: ROM:Obj03_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj03,4(a0)
		move.w	#$26BC,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$10,$19(a0)
		move.b	#5,$18(a0)
		move.b	$28(a0),d0
		btst	#2,d0
		beq.s	loc_13EA4
		addq.b	#2,routine(a0)
		andi.w	#7,d0
		move.b	d0,$1A(a0)
		andi.w	#3,d0
		add.w	d0,d0
		move.w	Obj03_Data(pc,d0.w),$32(a0)
		bra.w	loc_13FB6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj03_Data:	dc.w   $20,  $40,  $80,	$100; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13EA4:				; CODE XREF: ROM:00013E7Ej
		andi.w	#3,d0
		move.b	d0,$1A(a0)
		add.w	d0,d0
		move.w	Obj03_Data(pc,d0.w),$32(a0)

loc_13EB4:				; DATA XREF: ROM:00013E4Ao
		tst.w	(Debug_placement_mode).w
		bne.w	locret_13FB4
		move.w	$30(a0),d5
		move.w	8(a0),d0
		move.w	d0,d1
		subq.w	#8,d0
		addq.w	#8,d1
		move.w	$C(a0),d2
		move.w	d2,d3
		move.w	$32(a0),d4
		sub.w	d4,d2
		add.w	d4,d3
		lea	(dword_140B8).l,a2
		moveq	#7,d6

loc_13EE0:				; CODE XREF: ROM:00013FAAj
		move.l	(a2)+,d4
		beq.w	loc_13FA8
		movea.l	d4,a1
		move.w	8(a1),d4
		cmp.w	d0,d4
		bcs.w	loc_13F10
		cmp.w	d1,d4
		bcc.w	loc_13F10
		move.w	$C(a1),d4
		cmp.w	d2,d4
		bcs.w	loc_13F10
		cmp.w	d3,d4
		bcc.w	loc_13F10
		ori.w	#$8000,d5
		bra.w	loc_13FA8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13F10:				; CODE XREF: ROM:00013EEEj
					; ROM:00013EF4j ...
		tst.w	d5
		bpl.w	loc_13FA8
		swap	d0
		move.b	$28(a0),d0
		bpl.s	loc_13F26
		btst	#1,$22(a1)
		bne.s	loc_13FA2

loc_13F26:				; CODE XREF: ROM:00013F1Cj
		move.w	8(a1),d4
		cmp.w	8(a0),d4
		bcs.s	loc_13F62
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)
		btst	#3,d0
		beq.s	loc_13F4E
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_13F4E:				; CODE XREF: ROM:00013F40j
		bclr	#7,2(a1)
		btst	#5,d0
		beq.s	loc_13F92
		bset	#7,2(a1)
		bra.s	loc_13F92
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13F62:				; CODE XREF: ROM:00013F2Ej
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)
		btst	#4,d0
		beq.s	loc_13F80
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_13F80:				; CODE XREF: ROM:00013F72j
		bclr	#7,2(a1)
		btst	#6,d0
		beq.s	loc_13F92
		bset	#7,2(a1)

loc_13F92:				; CODE XREF: ROM:00013F58j
					; ROM:00013F60j ...
		tst.w	(Debug_mode_flag).w
		beq.s	loc_13FA2
		move.w	#$A1,d0	; '¡'
		jsr	(PlaySound_Special).l

loc_13FA2:				; CODE XREF: ROM:00013F24j
					; ROM:00013F96j
		swap	d0
		andi.w	#$7FFF,d5

loc_13FA8:				; CODE XREF: ROM:00013EE2j
					; ROM:00013F0Cj ...
		add.l	d5,d5
		dbf	d6,loc_13EE0
		swap	d5
		move.b	d5,$30(a0)

locret_13FB4:				; CODE XREF: ROM:00013EB8j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_13FB6:				; CODE XREF: ROM:00013E98j
					; DATA XREF: ROM:00013E4Co
		tst.w	(Debug_placement_mode).w
		bne.w	locret_140B6
		move.w	$30(a0),d5
		move.w	8(a0),d0
		move.w	d0,d1
		move.w	$32(a0),d4
		sub.w	d4,d0
		add.w	d4,d1
		move.w	$C(a0),d2
		move.w	d2,d3
		subq.w	#8,d2
		addq.w	#8,d3
		lea	(dword_140B8).l,a2
		moveq	#7,d6

loc_13FE2:				; CODE XREF: ROM:000140ACj
		move.l	(a2)+,d4
		beq.w	loc_140AA
		movea.l	d4,a1
		move.w	8(a1),d4
		cmp.w	d0,d4
		bcs.w	loc_14012
		cmp.w	d1,d4
		bcc.w	loc_14012
		move.w	$C(a1),d4
		cmp.w	d2,d4
		bcs.w	loc_14012
		cmp.w	d3,d4
		bcc.w	loc_14012
		ori.w	#$8000,d5
		bra.w	loc_140AA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14012:				; CODE XREF: ROM:00013FF0j
					; ROM:00013FF6j ...
		tst.w	d5
		bpl.w	loc_140AA
		swap	d0
		move.b	$28(a0),d0
		bpl.s	loc_14028
		btst	#1,$22(a1)
		bne.s	loc_140A4

loc_14028:				; CODE XREF: ROM:0001401Ej
		move.w	$C(a1),d4
		cmp.w	$C(a0),d4
		bcs.s	loc_14064
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)
		btst	#3,d0
		beq.s	loc_14050
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_14050:				; CODE XREF: ROM:00014042j
		bclr	#7,2(a1)
		btst	#5,d0
		beq.s	loc_14094
		bset	#7,2(a1)
		bra.s	loc_14094
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14064:				; CODE XREF: ROM:00014030j
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)
		btst	#4,d0
		beq.s	loc_14082
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_14082:				; CODE XREF: ROM:00014074j
		bclr	#7,2(a1)
		btst	#6,d0
		beq.s	loc_14094
		bset	#7,2(a1)

loc_14094:				; CODE XREF: ROM:0001405Aj
					; ROM:00014062j ...
		tst.w	(Debug_mode_flag).w
		beq.s	loc_140A4
		move.w	#$A1,d0	; '¡'
		jsr	(PlaySound_Special).l

loc_140A4:				; CODE XREF: ROM:00014026j
					; ROM:00014098j
		swap	d0
		andi.w	#$7FFF,d5

loc_140AA:				; CODE XREF: ROM:00013FE4j
					; ROM:0001400Ej ...
		add.l	d5,d5
		dbf	d6,loc_13FE2
		swap	d5
		move.b	d5,$30(a0)

locret_140B6:				; CODE XREF: ROM:00013FBAj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
dword_140B8:	dc.l $FFFFB000		; DATA XREF: ROM:00013ED8o
					; ROM:00013FDAo
		dc.l $FFFFB040
		dc.l 0
		dc.l 0
		dc.l 0
		dc.l 0
		dc.l 0
		dc.l 0
; ===========================================================================
; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Map_Obj03:	incbin	"mappings/sprite/obj03.bin"

; ===========================================================================

Obj0B:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj0B_Index(pc,d0.w),d1
		jmp	Obj0B_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj0B_Index:	dc.w loc_141C8-Obj0B_Index ; DATA XREF:	ROM:Obj0B_Indexo
					; ROM:000141C4o ...
		dc.w loc_1421C-Obj0B_Index
		dc.w loc_1422A-Obj0B_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_141C8:				; DATA XREF: ROM:Obj0B_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj0B,4(a0)
		move.w	#$E000,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#$10,$19(a0)
		move.b	#4,$18(a0)
		moveq	#0,d0
		move.b	$28(a0),d0
		andi.w	#$F0,d0	; 'ğ'
		addi.w	#$10,d0
		move.w	d0,d1
		subq.w	#1,d0
		move.w	d0,$30(a0)
		move.w	d0,$32(a0)
		moveq	#0,d0
		move.b	$28(a0),d0
		andi.w	#$F,d0
		addq.w	#1,d0
		lsl.w	#4,d0
		move.b	d0,$36(a0)

loc_1421C:				; DATA XREF: ROM:000141C4o
		move.b	($FFFFFE0F).w,d0
		add.b	$36(a0),d0
		bne.s	loc_14254
		addq.b	#2,routine(a0)

loc_1422A:				; DATA XREF: ROM:000141C6o
		subq.w	#1,$30(a0)
		bpl.s	loc_14248
		move.w	#$7F,$30(a0) ; ''
		tst.b	$1C(a0)
		beq.s	loc_14242
		move.w	$32(a0),$30(a0)

loc_14242:				; CODE XREF: ROM:0001423Aj
		bchg	#0,$1C(a0)

loc_14248:				; CODE XREF: ROM:0001422Ej
		lea	(off_1428A).l,a1
		jsr	AnimateSprite

loc_14254:				; CODE XREF: ROM:00014224j
		tst.b	$1A(a0)
		bne.s	loc_1426E
		moveq	#0,d1
		move.b	$19(a0),d1
		moveq	#$11,d3
		move.w	8(a0),d4
		bsr.w	sub_F78A
		bra.w	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1426E:				; CODE XREF: ROM:00014258j
		btst	#3,$22(a0)
		beq.s	loc_14286
		lea	($FFFFB000).w,a1
		bclr	#3,$22(a1)
		bclr	#3,$22(a0)

loc_14286:				; CODE XREF: ROM:00014274j
		bra.w	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_1428A:	dc.w byte_1428E-off_1428A ; DATA XREF: ROM:loc_14248o
					; ROM:off_1428Ao ...
		dc.w byte_14296-off_1428A
byte_1428E:	dc.b   7,  0,  1,  2,  3,  4,$FE,  1; 0	; DATA XREF: ROM:off_1428Ao
byte_14296:	dc.b   7,  4,  3,  2,  1,  0,$FE,  1; 0	; DATA XREF: ROM:0001428Co
Map_Obj0B:	dc.w word_142A8-Map_Obj0B ; DATA XREF: ROM:000141CCo
					; ROM:Map_Obj0Bo ...
		dc.w word_142B2-Map_Obj0B
		dc.w word_142BC-Map_Obj0B
		dc.w word_142C6-Map_Obj0B
		dc.w word_142D0-Map_Obj0B
word_142A8:	dc.w 1			; DATA XREF: ROM:Map_Obj0Bo
		dc.w $F00C,  $11,    8,$FFF0; 0
word_142B2:	dc.w 1			; DATA XREF: ROM:000142A0o
		dc.w $E80F,  $15,   $A,$FFF0; 0
word_142BC:	dc.w 1			; DATA XREF: ROM:000142A2o
		dc.w $F40F,  $25,  $12,$FFF0; 0
word_142C6:	dc.w 1			; DATA XREF: ROM:000142A4o
		dc.w	$F,$1015,$100A,$FFF0; 0
word_142D0:	dc.w 1			; DATA XREF: ROM:000142A6o
		dc.w $100C,$1011,$1008,$FFF0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

Obj0C:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj0C_Index(pc,d0.w),d1
		jmp	Obj0C_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj0C_Index:	dc.w Obj0C_Init-Obj0C_Index ; DATA XREF: ROM:Obj0C_Indexo
					; ROM:000142ECo
		dc.w Obj0C_Main-Obj0C_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj0C_Init:				; DATA XREF: ROM:Obj0C_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj0C,4(a0)
		move.w	#$E418,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#$10,$19(a0)
		move.b	#4,$18(a0)
		move.w	$C(a0),d0
		subi.w	#$10,d0
		move.w	d0,$3A(a0)
		moveq	#0,d0
		move.b	$28(a0),d0
		andi.w	#$F0,d0	; 'ğ'
		addi.w	#$10,d0
		move.w	d0,d1
		subq.w	#1,d0
		move.w	d0,$30(a0)
		move.w	d0,$32(a0)
		moveq	#0,d0
		move.b	$28(a0),d0
		andi.w	#$F,d0
		move.b	d0,$3E(a0)
		move.b	d0,$3F(a0)

Obj0C_Main:				; DATA XREF: ROM:000142ECo
		move.b	$3C(a0),d0
		beq.s	loc_1438C
		cmpi.b	#$80,d0
		bne.s	loc_1439C
		move.b	$3D(a0),d1
		bne.s	loc_1436E
		subq.b	#1,$3E(a0)
		bpl.s	loc_1436E
		move.b	$3F(a0),$3E(a0)
		bra.s	loc_1439C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1436E:				; CODE XREF: ROM:0001435Ej
					; ROM:00014364j
		addq.b	#1,$3D(a0)
		move.b	d1,d0
		bsr.w	j_CalcSine
		addi.w	#8,d0
		asr.w	#6,d0
		subi.w	#$10,d0
		add.w	$3A(a0),d0
		move.w	d0,$C(a0)
		bra.s	loc_143B2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1438C:				; CODE XREF: ROM:00014352j
		move.w	($FFFFFE0E).w,d1
		andi.w	#$3FF,d1
		bne.s	loc_143A0
		move.b	#1,$3D(a0)

loc_1439C:				; CODE XREF: ROM:00014358j
					; ROM:0001436Cj
		addq.b	#1,$3C(a0)

loc_143A0:				; CODE XREF: ROM:00014394j
		bsr.w	j_CalcSine
		addi.w	#8,d1
		asr.w	#4,d1
		add.w	$3A(a0),d1
		move.w	d1,$C(a0)

loc_143B2:				; CODE XREF: ROM:0001438Aj
		moveq	#0,d1
		move.b	$19(a0),d1
		moveq	#9,d3
		move.w	8(a0),d4
		bsr.w	sub_F78A
		bra.w	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj0C:	dc.w word_143C8-Map_Obj0C ; DATA XREF: ROM:000142F2o
					; ROM:Map_Obj0Co ...
word_143C8:	dc.w 1			; DATA XREF: ROM:Map_Obj0Co
		dc.w $F80D,    0,    0,$FFF0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

j_CalcSine:				; CODE XREF: ROM:00014374p
					; ROM:loc_143A0p
		jmp	(CalcSine).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
;----------------------------------------------------
; Object 12 - Master Emerald from HPZ
;----------------------------------------------------

Obj12:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj12_Index(pc,d0.w),d1
		jmp	Obj12_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj12_Index:	dc.w Obj12_Init-Obj12_Index ; DATA XREF: ROM:Obj12_Indexo
					; ROM:000143ECo
		dc.w Obj12_Display-Obj12_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj12_Init:				; DATA XREF: ROM:Obj12_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj12,4(a0)
		move.w	#$6392,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$20,$19(a0) ; ' '
		move.b	#4,$18(a0)

Obj12_Display:				; DATA XREF: ROM:000143ECo
		move.w	#$20,d1	; ' '
		move.w	#$10,d2
		move.w	#$10,d3
		move.w	8(a0),d4
		bsr.w	SolidObject
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj12:	dc.w word_14444-Map_Obj12 ; DATA XREF: ROM:000143F2o
					; ROM:Map_Obj12o
word_14444:	dc.w 2			; DATA XREF: ROM:Map_Obj12o
		dc.w $F00F,    0,    0,$FFE0; 0
		dc.w $F00F,  $10,    8,	   0; 4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop
;----------------------------------------------------
; Object 13 - HPZ waterfall
;----------------------------------------------------

Obj13:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj13_Index(pc,d0.w),d1
		jmp	Obj13_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj13_Index:	dc.w loc_1446C-Obj13_Index ; DATA XREF:	ROM:Obj13_Indexo
					; ROM:00014468o ...
		dc.w loc_14532-Obj13_Index
		dc.w loc_145BC-Obj13_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1446C:				; DATA XREF: ROM:Obj13_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj13,4(a0)
		move.w	#$E315,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$10,$19(a0)
		move.b	#1,$18(a0)
		move.b	#$12,$1A(a0)
		bsr.s	sub_144D4
		move.b	#$A0,$16(a1)
		bset	#4,1(a1)
		move.l	a1,$38(a0)
		move.w	$C(a0),$34(a0)
		move.w	$C(a0),$36(a0)
		cmpi.b	#$10,$28(a0)
		bcs.s	loc_14518
		bsr.s	sub_144D4
		move.l	a1,$3C(a0)
		move.w	$C(a0),$C(a1)
		addi.w	#$98,$C(a1) ; ''
		bra.s	loc_14518

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_144D4:				; CODE XREF: ROM:0001449Ap
					; ROM:000144C0p
		jsr	SingleObjLoad2
		bne.s	locret_14516
		move.b	#$13,0(a1)
		addq.b	#4,routine(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.l	#Map_Obj13,4(a1)
		move.w	#$E315,2(a1)
		bsr.w	Adjust2PArtPointer2
		move.b	#4,1(a1)
		move.b	#$10,$19(a1)
		move.b	#1,$18(a1)

locret_14516:				; CODE XREF: sub_144D4+6j
		rts
; End of function sub_144D4

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14518:				; CODE XREF: ROM:000144BEj
					; ROM:000144D2j
		moveq	#0,d1
		move.b	$28(a0),d1
		move.w	$34(a0),d0
		subi.w	#$78,d0	; 'x'
		lsl.w	#4,d1
		add.w	d1,d0
		move.w	d0,$C(a0)
		move.w	d0,$34(a0)

loc_14532:				; DATA XREF: ROM:00014468o
		movea.l	$38(a0),a1
		move.b	#$12,$1A(a0)
		move.w	$34(a0),d0
		move.w	($FFFFF646).w,d1
		cmp.w	d0,d1
		bcc.s	loc_1454A
		move.w	d1,d0

loc_1454A:				; CODE XREF: ROM:00014546j
		move.w	d0,$C(a0)
		sub.w	$36(a0),d0
		addi.w	#$80,d0	; ''
		bmi.s	loc_1459C
		lsr.w	#4,d0
		move.w	d0,d1
		cmpi.w	#$F,d0
		bcs.s	loc_14564
		moveq	#$F,d0

loc_14564:				; CODE XREF: ROM:00014560j
		move.b	d0,$1A(a1)
		cmpi.b	#$10,$28(a0)
		bcs.s	loc_14584
		movea.l	$3C(a0),a1
		subi.w	#$F,d1
		bcc.s	loc_1457C
		moveq	#0,d1

loc_1457C:				; CODE XREF: ROM:00014578j
		addi.w	#$13,d1
		move.b	d1,$1A(a1)

loc_14584:				; CODE XREF: ROM:0001456Ej
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1459C:				; CODE XREF: ROM:00014556j
		moveq	#$13,d0
		move.b	d0,$1A(a0)
		move.b	d0,$1A(a1)
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_145BC:				; DATA XREF: ROM:0001446Ao
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj13:	dc.w word_1460E-Map_Obj13 ; DATA XREF: ROM:00014470o
					; sub_144D4+1Eo ...
		dc.w word_14618-Map_Obj13
		dc.w word_1462A-Map_Obj13
		dc.w word_1463C-Map_Obj13
		dc.w word_14656-Map_Obj13
		dc.w word_14670-Map_Obj13
		dc.w word_14692-Map_Obj13
		dc.w word_146B4-Map_Obj13
		dc.w word_146DE-Map_Obj13
		dc.w word_14708-Map_Obj13
		dc.w word_1473A-Map_Obj13
		dc.w word_1476C-Map_Obj13
		dc.w word_147A6-Map_Obj13
		dc.w word_147E0-Map_Obj13
		dc.w word_14822-Map_Obj13
		dc.w word_14864-Map_Obj13
		dc.w word_148AE-Map_Obj13
		dc.w word_148AE-Map_Obj13
		dc.w word_148AE-Map_Obj13
		dc.w word_1460C-Map_Obj13
		dc.w word_148C0-Map_Obj13
		dc.w word_148CA-Map_Obj13
		dc.w word_148D4-Map_Obj13
		dc.w word_148E6-Map_Obj13
		dc.w word_148F8-Map_Obj13
		dc.w word_14912-Map_Obj13
		dc.w word_1492C-Map_Obj13
		dc.w word_1494E-Map_Obj13
word_1460C:	dc.w 0			; DATA XREF: ROM:000145FAo
word_1460E:	dc.w 1			; DATA XREF: ROM:Map_Obj13o
		dc.w $800C,  $10,    8,$FFF0; 0
word_14618:	dc.w 2			; DATA XREF: ROM:000145D6o
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880D,  $2D,  $16,$FFF0; 4
word_1462A:	dc.w 2			; DATA XREF: ROM:000145D8o
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
word_1463C:	dc.w 3			; DATA XREF: ROM:000145DAo
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80D,  $2D,  $16,$FFF0; 8
word_14656:	dc.w 3			; DATA XREF: ROM:000145DCo
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
word_14670:	dc.w 4			; DATA XREF: ROM:000145DEo
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80D,  $2D,  $16,$FFF0; 12
word_14692:	dc.w 4			; DATA XREF: ROM:000145E0o
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80F,    0,    0,$FFF0; 12
word_146B4:	dc.w 5			; DATA XREF: ROM:000145E2o
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80F,    0,    0,$FFF0; 12
		dc.w $E80D,  $2D,  $16,$FFF0; 16
word_146DE:	dc.w 5			; DATA XREF: ROM:000145E4o
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80F,    0,    0,$FFF0; 12
		dc.w $E80F,    0,    0,$FFF0; 16
word_14708:	dc.w 6			; DATA XREF: ROM:000145E6o
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80F,    0,    0,$FFF0; 12
		dc.w $E80F,    0,    0,$FFF0; 16
		dc.w  $80D,  $2D,  $16,$FFF0; 20
word_1473A:	dc.w 6			; DATA XREF: ROM:000145E8o
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80F,    0,    0,$FFF0; 12
		dc.w $E80F,    0,    0,$FFF0; 16
		dc.w  $80F,    0,    0,$FFF0; 20
word_1476C:	dc.w 7			; DATA XREF: ROM:000145EAo
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80F,    0,    0,$FFF0; 12
		dc.w $E80F,    0,    0,$FFF0; 16
		dc.w  $80F,    0,    0,$FFF0; 20
		dc.w $280D,  $2D,  $16,$FFF0; 24
word_147A6:	dc.w 7			; DATA XREF: ROM:000145ECo
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80F,    0,    0,$FFF0; 12
		dc.w $E80F,    0,    0,$FFF0; 16
		dc.w  $80F,    0,    0,$FFF0; 20
		dc.w $280F,    0,    0,$FFF0; 24
word_147E0:	dc.w 8			; DATA XREF: ROM:000145EEo
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80F,    0,    0,$FFF0; 12
		dc.w $E80F,    0,    0,$FFF0; 16
		dc.w  $80F,    0,    0,$FFF0; 20
		dc.w $280F,    0,    0,$FFF0; 24
		dc.w $480D,  $2D,  $16,$FFF0; 28
word_14822:	dc.w 8			; DATA XREF: ROM:000145F0o
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80F,    0,    0,$FFF0; 12
		dc.w $E80F,    0,    0,$FFF0; 16
		dc.w  $80F,    0,    0,$FFF0; 20
		dc.w $280F,    0,    0,$FFF0; 24
		dc.w $480F,    0,    0,$FFF0; 28
word_14864:	dc.w 9			; DATA XREF: ROM:000145F2o
		dc.w $800C,  $10,    8,$FFF0; 0
		dc.w $880F,    0,    0,$FFF0; 4
		dc.w $A80F,    0,    0,$FFF0; 8
		dc.w $C80F,    0,    0,$FFF0; 12
		dc.w $E80F,    0,    0,$FFF0; 16
		dc.w  $80F,    0,    0,$FFF0; 20
		dc.w $280F,    0,    0,$FFF0; 24
		dc.w $480F,    0,    0,$FFF0; 28
		dc.w $680D,  $2D,  $16,$FFF0; 32
word_148AE:	dc.w 2			; DATA XREF: ROM:000145F4o
					; ROM:000145F6o ...
		dc.w $F00A,  $18,   $C,$FFE8; 0
		dc.w $F00A, $818, $80C,	   0; 4
word_148C0:	dc.w 1			; DATA XREF: ROM:000145FCo
		dc.w $E00D,  $2D,  $16,$FFF0; 0
word_148CA:	dc.w 1			; DATA XREF: ROM:000145FEo
		dc.w $E00F,    0,    0,$FFF0; 0
word_148D4:	dc.w 2			; DATA XREF: ROM:00014600o
		dc.w $E00F,    0,    0,$FFF0; 0
		dc.w	$D,  $2D,  $16,$FFF0; 4
word_148E6:	dc.w 2			; DATA XREF: ROM:00014602o
		dc.w $E00F,    0,    0,$FFF0; 0
		dc.w	$F,    0,    0,$FFF0; 4
word_148F8:	dc.w 3			; DATA XREF: ROM:00014604o
		dc.w $E00F,    0,    0,$FFF0; 0
		dc.w	$F,    0,    0,$FFF0; 4
		dc.w $200D,  $2D,  $16,$FFF0; 8
word_14912:	dc.w 3			; DATA XREF: ROM:00014606o
		dc.w $E00F,    0,    0,$FFF0; 0
		dc.w	$F,    0,    0,$FFF0; 4
		dc.w $200F,    0,    0,$FFF0; 8
word_1492C:	dc.w 4			; DATA XREF: ROM:00014608o
		dc.w $E00F,    0,    0,$FFF0; 0
		dc.w	$F,    0,    0,$FFF0; 4
		dc.w $200F,    0,    0,$FFF0; 8
		dc.w $400D,  $2D,  $16,$FFF0; 12
word_1494E:	dc.w 4			; DATA XREF: ROM:0001460Ao
		dc.w $E00F,    0,    0,$FFF0; 0
		dc.w	$F,    0,    0,$FFF0; 4
		dc.w $200F,    0,    0,$FFF0; 8
		dc.w $400F,    0,    0,$FFF0; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 06 - spiral loop in EHZ
;----------------------------------------------------

Obj06:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj06_Index(pc,d0.w),d1
		jsr	Obj06_Index(pc,d1.w)
		tst.w	(Two_player_mode).w
		beq.s	loc_14986
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14986:				; CODE XREF: ROM:00014982j
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_1499A
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1499A:				; CODE XREF: ROM:00014996j
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj06_Index:	dc.w Obj06_Init-Obj06_Index ; DATA XREF: ROM:Obj06_Indexo
					; ROM:000149A2o
		dc.w Obj06_Main-Obj06_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj06_Init:				; DATA XREF: ROM:Obj06_Indexo
		addq.b	#2,routine(a0)
		move.b	#$D0,$19(a0)

Obj06_Main:				; DATA XREF: ROM:000149A2o
		lea	($FFFFB000).w,a1
		moveq	#3,d6
		bsr.s	sub_149BC
		lea	($FFFFB040).w,a1
		addq.b	#1,d6

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_149BC:				; CODE XREF: ROM:000149B4p
		btst	d6,$22(a0)
		bne.w	loc_14A56
		btst	#1,$22(a1)
		bne.w	locret_14A54
		btst	#3,$22(a1)
		bne.s	loc_14A16
		move.w	8(a1),d0
		sub.w	8(a0),d0
		tst.w	$10(a1)
		bmi.s	loc_149F2
		cmpi.w	#$FF40,d0
		bgt.s	locret_14A54
		cmpi.w	#$FF30,d0
		blt.s	locret_14A54
		bra.s	loc_149FE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_149F2:				; CODE XREF: sub_149BC+26j
		cmpi.w	#$C0,d0	; 'À'
		blt.s	locret_14A54
		cmpi.w	#$D0,d0	; 'Ğ'
		bgt.s	locret_14A54

loc_149FE:				; CODE XREF: sub_149BC+34j
		move.w	$C(a1),d1
		sub.w	$C(a0),d1
		subi.w	#$10,d1
		cmpi.w	#$30,d1	; '0'
		bcc.s	locret_14A54
		bsr.w	RideObject_SetRide
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14A16:				; CODE XREF: sub_149BC+18j
		move.w	8(a1),d0
		sub.w	8(a0),d0
		tst.w	$10(a1)
		bmi.s	loc_14A32
		cmpi.w	#$FF50,d0
		bgt.s	locret_14A54
		cmpi.w	#$FF40,d0
		blt.s	locret_14A54
		bra.s	loc_14A3E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14A32:				; CODE XREF: sub_149BC+66j
		cmpi.w	#$B0,d0	; '°'
		blt.s	locret_14A54
		cmpi.w	#$C0,d0	; 'À'
		bgt.s	locret_14A54

loc_14A3E:				; CODE XREF: sub_149BC+74j
		move.w	$C(a1),d1
		sub.w	$C(a0),d1
		subi.w	#$10,d1
		cmpi.w	#$30,d1	; '0'
		bcc.s	locret_14A54
		bsr.w	RideObject_SetRide

locret_14A54:				; CODE XREF: sub_149BC+Ej
					; sub_149BC+2Cj ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14A56:				; CODE XREF: sub_149BC+4j
		move.w	$14(a1),d0
		bpl.s	loc_14A5E
		neg.w	d0

loc_14A5E:				; CODE XREF: sub_149BC+9Ej
		cmpi.w	#$600,d0
		bcs.s	loc_14A80
		btst	#1,$22(a1)
		bne.s	loc_14A80
		move.w	8(a1),d0
		sub.w	8(a0),d0
		addi.w	#$D0,d0	; 'Ğ'
		bmi.s	loc_14A80
		cmpi.w	#$1A0,d0
		bcs.s	loc_14A98

loc_14A80:				; CODE XREF: sub_149BC+A6j
					; sub_149BC+AEj ...
		bclr	#3,$22(a1)
		bclr	d6,$22(a0)
		move.b	#0,$2C(a1)
		move.b	#4,$2D(a1)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14A98:				; CODE XREF: sub_149BC+C2j
		btst	#3,$22(a1)
		beq.s	locret_14A54
		move.b	Obj06_PlayerDeltaYArray(pc,d0.w),d1
		ext.w	d1
		move.w	$C(a0),d2
		add.w	d1,d2
		moveq	#0,d1
		move.b	$16(a1),d1
		subi.w	#$13,d1
		sub.w	d1,d2
		move.w	d2,$C(a1)
		lsr.w	#3,d0
		andi.w	#$3F,d0	; '?'
		move.b	Obj06_PlayerAngleArray(pc,d0.w),$27(a1)
		rts
; End of function sub_149BC

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj06_PlayerAngleArray:dc.b   0,  0,  1,  1    ; 0
		dc.b $16,$16,$16,$16	; 4
		dc.b $2C,$2C,$2C,$2C	; 8
		dc.b $42,$42,$42,$42	; 12
		dc.b $58,$58,$58,$58	; 16
		dc.b $6E,$6E,$6E,$6E	; 20
		dc.b $84,$84,$84,$84	; 24
		dc.b $9A,$9A,$9A,$9A	; 28
		dc.b $B0,$B0,$B0,$B0	; 32
		dc.b $C6,$C6,$C6,$C6	; 36
		dc.b $DC,$DC,$DC,$DC	; 40
		dc.b $F2,$F2,$F2,$F2	; 44
		dc.b   1,  1,  0,  0	; 48
Obj06_PlayerDeltaYArray:dc.b  $20, $20,	$20, $20, $20, $20, $20, $20, $20, $20,	$20, $20, $20, $20, $20, $20; 0
		dc.b  $20, $20,	$20, $20, $20, $20, $20, $20, $20, $20,	$20, $20, $20, $20, $1F, $1F; 16
		dc.b  $1F, $1F,	$1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F,	$1F, $1F, $1F, $1E, $1E, $1E; 32
		dc.b  $1E, $1E,	$1E, $1E, $1E, $1E, $1D, $1D, $1D, $1D,	$1D, $1C, $1C, $1C, $1C, $1B; 48
		dc.b  $1B, $1B,	$1B, $1A, $1A, $1A, $19, $19, $19, $18,	$18, $18, $17, $17, $16, $16; 64
		dc.b  $15, $15,	$14, $14, $13, $12, $12, $11, $10, $10,	 $F,  $E,  $E,	$D,  $C,  $C; 80
		dc.b   $B,  $A,	 $A,   9,   8,	 8,   7,   6,	6,   5,	  4,   4,   3,	 2,   2,   1; 96
		dc.b	0,  -1,	 -2,  -2,  -3,	-4,  -4,  -5,  -6,  -7,	 -7,  -8,  -9,	-9, -$A, -$A; 112
		dc.b  -$B, -$B,	-$C, -$C, -$D, -$E, -$E, -$F, -$F,-$10,-$10,-$11,-$11,-$12,-$12,-$13; 128
		dc.b -$13,-$13,-$14,-$15,-$15,-$16,-$16,-$17,-$17,-$18,-$18,-$19,-$19,-$1A,-$1A,-$1B; 144
		dc.b -$1B,-$1C,-$1C,-$1C,-$1D,-$1D,-$1E,-$1E,-$1E,-$1F,-$1F,-$1F,-$20,-$20,-$20,-$21; 160
		dc.b -$21,-$21,-$21,-$22,-$22,-$22,-$23,-$23,-$23,-$23,-$23,-$23,-$23,-$23,-$24,-$24; 176
		dc.b -$24,-$24,-$24,-$24,-$24,-$24,-$24,-$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25; 192
		dc.b -$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25,-$25; 208
		dc.b -$25,-$25,-$25,-$25,-$24,-$24,-$24,-$24,-$24,-$24,-$24,-$23,-$23,-$23,-$23,-$23; 224
		dc.b -$23,-$23,-$23,-$22,-$22,-$22,-$21,-$21,-$21,-$21,-$20,-$20,-$20,-$1F,-$1F,-$1F; 240
		dc.b -$1E,-$1E,-$1E,-$1D,-$1D,-$1C,-$1C,-$1C,-$1B,-$1B,-$1A,-$1A,-$19,-$19,-$18,-$18; 256
		dc.b -$17,-$17,-$16,-$16,-$15,-$15,-$14,-$13,-$13,-$12,-$12,-$11,-$10,-$10, -$F, -$E; 272
		dc.b  -$E, -$D,	-$C, -$B, -$B, -$A,  -9,  -8,  -7,  -7,	 -6,  -5,  -4,	-3,  -2,  -1; 288
		dc.b	0,   1,	  2,   3,   4,	 5,   6,   7,	8,   8,	  9,  $A,  $A,	$B,  $C,  $D; 304
		dc.b   $D,  $E,	 $E,  $F,  $F, $10, $10, $11, $11, $12,	$12, $13, $13, $14, $14, $15; 320
		dc.b  $15, $16,	$16, $17, $17, $18, $18, $18, $19, $19,	$19, $19, $1A, $1A, $1A, $1A; 336
		dc.b  $1B, $1B,	$1B, $1B, $1C, $1C, $1C, $1C, $1C, $1C,	$1D, $1D, $1D, $1D, $1D, $1D; 352
		dc.b  $1D, $1E,	$1E, $1E, $1E, $1E, $1E, $1E, $1F, $1F,	$1F, $1F, $1F, $1F, $1F, $1F; 368
		dc.b  $1F, $1F,	$20, $20, $20, $20, $20, $20, $20, $20,	$20, $20, $20, $20, $20, $20; 384
		dc.b  $20, $20,	$20, $20, $20, $20, $20, $20, $20, $20,	$20, $20, $20, $20, $20, $20; 400
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop
;----------------------------------------------------
; Object 14 - HTZ see-saw
;----------------------------------------------------

Obj14:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj14_Index(pc,d0.w),d1
		jsr	Obj14_Index(pc,d1.w)
		move.w	$30(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj14_Index:	dc.w loc_14CD2-Obj14_Index ; DATA XREF:	ROM:Obj14_Indexo
					; ROM:00014CC8o ...
		dc.w loc_14D40-Obj14_Index
		dc.w locret_14DF2-Obj14_Index
		dc.w loc_14E3C-Obj14_Index
		dc.w loc_14E9C-Obj14_Index
		dc.w loc_14F30-Obj14_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14CD2:				; DATA XREF: ROM:Obj14_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_obj14,4(a0)
		move.w	#$3CE,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#$30,$19(a0) ; '0'
		move.w	8(a0),$30(a0)
		tst.b	$28(a0)
		bne.s	loc_14D2C
		bsr.w	SingleObjLoad2
		bne.s	loc_14D2C
		move.b	#$14,0(a1)
		addq.b	#6,routine(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	$22(a0),$22(a1)
		move.l	a0,$3C(a1)

loc_14D2C:				; CODE XREF: ROM:00014D04j
					; ROM:00014D0Aj
		btst	#0,$22(a0)
		beq.s	loc_14D3A
		move.b	#2,$1A(a0)

loc_14D3A:				; CODE XREF: ROM:00014D32j
		move.b	$1A(a0),$3A(a0)

loc_14D40:				; DATA XREF: ROM:00014CC8o
		move.b	$3A(a0),d1
		btst	#3,$22(a0)
		beq.s	loc_14D9A
		moveq	#2,d1
		lea	($FFFFB000).w,a1
		move.w	8(a0),d0
		sub.w	8(a1),d0
		bcc.s	loc_14D60
		neg.w	d0
		moveq	#0,d1

loc_14D60:				; CODE XREF: ROM:00014D5Aj
		cmpi.w	#8,d0
		bcc.s	loc_14D68
		moveq	#1,d1

loc_14D68:				; CODE XREF: ROM:00014D64j
		btst	#4,$22(a0)
		beq.s	loc_14DBE
		moveq	#2,d2
		lea	($FFFFB040).w,a1
		move.w	8(a0),d0
		sub.w	8(a1),d0
		bcc.s	loc_14D84
		neg.w	d0
		moveq	#0,d2

loc_14D84:				; CODE XREF: ROM:00014D7Ej
		cmpi.w	#8,d0
		bcc.s	loc_14D8C
		moveq	#1,d2

loc_14D8C:				; CODE XREF: ROM:00014D88j
		add.w	d2,d1
		cmpi.w	#3,d1
		bne.s	loc_14D96
		addq.w	#1,d1

loc_14D96:				; CODE XREF: ROM:00014D92j
		lsr.w	#1,d1
		bra.s	loc_14DBE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14D9A:				; CODE XREF: ROM:00014D4Aj
		btst	#4,$22(a0)
		beq.s	loc_14DBE
		moveq	#2,d1
		lea	($FFFFB040).w,a1
		move.w	8(a0),d0
		sub.w	8(a1),d0
		bcc.s	loc_14DB6
		neg.w	d0
		moveq	#0,d1

loc_14DB6:				; CODE XREF: ROM:00014DB0j
		cmpi.w	#8,d0
		bcc.s	loc_14DBE
		moveq	#1,d1

loc_14DBE:				; CODE XREF: ROM:00014D6Ej
					; ROM:00014D98j ...
		bsr.w	sub_14E10
		lea	(byte_14FFE).l,a2
		btst	#0,$1A(a0)
		beq.s	loc_14DD6
		lea	(byte_1502F).l,a2

loc_14DD6:				; CODE XREF: ROM:00014DCEj
		lea	($FFFFB000).w,a1
		move.w	$12(a1),$38(a0)
		move.w	8(a0),-(sp)
		moveq	#0,d1
		move.b	$19(a0),d1
		moveq	#8,d3
		move.w	(sp)+,d4
		bra.w	sub_F7DC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_14DF2:				; DATA XREF: ROM:00014CCAo
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		moveq	#2,d1
		lea	($FFFFB000).w,a1
		move.w	8(a0),d0
		sub.w	8(a1),d0
		bcc.s	loc_14E08
		neg.w	d0
		moveq	#0,d1

loc_14E08:				; CODE XREF: ROM:00014E02j
		cmpi.w	#8,d0
		bcc.s	sub_14E10
		moveq	#1,d1

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_14E10:				; CODE XREF: ROM:loc_14DBEp
					; ROM:00014E0Cj
		move.b	$1A(a0),d0
		cmp.b	d1,d0
		beq.s	locret_14E3A
		bcc.s	loc_14E1C
		addq.b	#2,d0

loc_14E1C:				; CODE XREF: sub_14E10+8j
		subq.b	#1,d0
		move.b	d0,$1A(a0)
		move.b	d1,$3A(a0)
		bclr	#0,1(a0)
		btst	#1,$1A(a0)
		beq.s	locret_14E3A
		bset	#0,1(a0)

locret_14E3A:				; CODE XREF: sub_14E10+6j
					; sub_14E10+22j
		rts
; End of function sub_14E10

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14E3C:				; DATA XREF: ROM:00014CCCo
		addq.b	#2,routine(a0)
		move.l	#Map_obj14b,4(a0)
		move.w	#$3CE,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#$8B,$20(a0)
		move.b	#$C,$19(a0)
		move.w	8(a0),$30(a0)
		addi.w	#$28,8(a0) ; '('
		addi.w	#$10,$C(a0)
		move.w	$C(a0),$34(a0)
		move.b	#1,$1A(a0)
		btst	#0,$22(a0)
		beq.s	loc_14E9C
		subi.w	#$50,8(a0) ; 'P'
		move.b	#2,$3A(a0)

loc_14E9C:				; CODE XREF: ROM:00014E8Ej
					; DATA XREF: ROM:00014CCEo
		movea.l	$3C(a0),a1
		moveq	#0,d0
		move.b	$3A(a0),d0
		sub.b	$3A(a1),d0
		beq.s	loc_14EF2
		bcc.s	loc_14EB0
		neg.b	d0

loc_14EB0:				; CODE XREF: ROM:00014EACj
		move.w	#$F7E8,d1
		move.w	#$FEEC,d2
		cmpi.b	#1,d0
		beq.s	loc_14ED6
		move.w	#$F510,d1
		move.w	#$FF34,d2
		cmpi.w	#$A00,$38(a1)
		blt.s	loc_14ED6
		move.w	#$F200,d1
		move.w	#$FF60,d2

loc_14ED6:				; CODE XREF: ROM:00014EBCj
					; ROM:00014ECCj
		move.w	d1,$12(a0)
		move.w	d2,$10(a0)
		move.w	8(a0),d0
		sub.w	$30(a0),d0
		bcc.s	loc_14EEC
		neg.w	$10(a0)

loc_14EEC:				; CODE XREF: ROM:00014EE6j
		addq.b	#2,routine(a0)
		bra.s	loc_14F30
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14EF2:				; CODE XREF: ROM:00014EAAj
		lea	(word_14FF4).l,a2
		moveq	#0,d0
		move.b	$1A(a1),d0
		move.w	#$28,d2	; '('
		move.w	8(a0),d1
		sub.w	$30(a0),d1
		bcc.s	loc_14F10
		neg.w	d2
		addq.w	#2,d0

loc_14F10:				; CODE XREF: ROM:00014F0Aj
		add.w	d0,d0
		move.w	$34(a0),d1
		add.w	(a2,d0.w),d1
		move.w	d1,$C(a0)
		add.w	$30(a0),d2
		move.w	d2,8(a0)
		clr.w	$E(a0)
		clr.w	$A(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14F30:				; CODE XREF: ROM:00014EF0j
					; DATA XREF: ROM:00014CD0o
		tst.w	$12(a0)
		bpl.s	loc_14F4E
		bsr.w	j_ObjectMoveAndFall
		move.w	$34(a0),d0
		subi.w	#$2F,d0	; '/'
		cmp.w	$C(a0),d0
		bgt.s	locret_14F4C
		bsr.w	j_ObjectMoveAndFall

locret_14F4C:				; CODE XREF: ROM:00014F46j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_14F4E:				; CODE XREF: ROM:00014F34j
		bsr.w	j_ObjectMoveAndFall
		movea.l	$3C(a0),a1
		lea	(word_14FF4).l,a2
		moveq	#0,d0
		move.b	$1A(a1),d0
		move.w	8(a0),d1
		sub.w	$30(a0),d1
		bcc.s	loc_14F6E
		addq.w	#2,d0

loc_14F6E:				; CODE XREF: ROM:00014F6Aj
		add.w	d0,d0
		move.w	$34(a0),d1
		add.w	(a2,d0.w),d1
		cmp.w	$C(a0),d1
		bgt.s	locret_14FC2
		movea.l	$3C(a0),a1
		moveq	#2,d1
		tst.w	$10(a0)
		bmi.s	loc_14F8C
		moveq	#0,d1

loc_14F8C:				; CODE XREF: ROM:00014F88j
		move.b	d1,$3A(a1)
		move.b	d1,$3A(a0)
		cmp.b	$1A(a1),d1
		beq.s	loc_14FB6
		lea	($FFFFB000).w,a2
		bclr	#3,$22(a1)
		beq.s	loc_14FA8
		bsr.s	sub_14FC4

loc_14FA8:				; CODE XREF: ROM:00014FA4j
		lea	($FFFFB040).w,a2
		bclr	#4,$22(a1)
		beq.s	loc_14FB6
		bsr.s	sub_14FC4

loc_14FB6:				; CODE XREF: ROM:00014F98j
					; ROM:00014FB2j
		clr.w	$10(a0)
		clr.w	$12(a0)
		subq.b	#2,routine(a0)

locret_14FC2:				; CODE XREF: ROM:00014F7Cj
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_14FC4:				; CODE XREF: ROM:00014FA6p
					; ROM:00014FB4p
		move.w	$12(a0),$12(a2)
		neg.w	$12(a2)
		bset	#1,$22(a2)
		bclr	#3,$22(a2)
		clr.b	$3C(a2)
		move.b	#$10,$1C(a2)
		move.b	#2,routine(a2)
		move.w	#$CC,d0	; 'Ì'
		jmp	(PlaySound_Special).l
; End of function sub_14FC4

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
word_14FF4:	dc.w	 -8,  -$1C,  -$2F,  -$1C,    -8; 0 ; DATA XREF:	ROM:loc_14EF2o
					; ROM:00014F56o
byte_14FFE:	dc.b  $14, $14,	$16, $18, $1A, $1C, $1A; 0 ; DATA XREF:	ROM:00014DC2o
		dc.b  $18, $16,	$14, $13, $12, $11, $10; 7
		dc.b   $F,  $E,	 $D,  $C,  $B,	$A,   9; 14
		dc.b	8,   7,	  6,   5,   4,	 3,   2; 21
		dc.b	1,   0,	 -1,  -2,  -3,	-4,  -5; 28
		dc.b   -6,  -7,	 -8,  -9, -$A, -$B, -$C; 35
		dc.b  -$D, -$E,	-$E, -$E, -$E, -$E, -$E; 42
byte_1502F:	dc.b	5,   5,	  5,   5,   5,	 5,   5; 0 ; DATA XREF:	ROM:00014DD0o
		dc.b	5,   5,	  5,   5,   5,	 5,   5; 7
		dc.b	5,   5,	  5,   5,   5,	 5,   5; 14
		dc.b	5,   5,	  5,   5,   5,	 5,   5; 21
		dc.b	5,   5,	  5,   5,   5,	 5,   5; 28
		dc.b	5,   5,	  5,   5,   5,	 5,   5; 35
		dc.b	5,   5,	  5,   5,   5,	 5,   0; 42
; -------------------------------------------------------------------------------
; sprite mappings
; -------------------------------------------------------------------------------
Map_obj14:	incbin	"mappings/sprite/obj14_a.bin"
; -------------------------------------------------------------------------------
; sprite mappings
; -------------------------------------------------------------------------------
Map_obj14b:	incbin	"mappings/sprite/obj14_b.bin"

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

j_ObjectMoveAndFall:				; CODE XREF: ROM:00014F36p
					; ROM:00014F48p ...
		jmp	ObjectMoveAndFall
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
;----------------------------------------------------
; Object 16 - the HTZ platform that goes down diagonally
;	      and stops	after a	while (in final, it falls)
;----------------------------------------------------

Obj16:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0

loc_15106:
		move.b	routine(a0),d0
		move.w	Obj16_Index(pc,d0.w),d1
		jmp	Obj16_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj16_Index:	dc.w Obj16_Init-Obj16_Index ; DATA XREF: ROM:Obj16_Indexo
					; ROM:00015114o
		dc.w Obj16_Main-Obj16_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj16_Init:				; DATA XREF: ROM:Obj16_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj16,4(a0)
		move.w	#$43E6,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$20,$19(a0) ; ' '
		move.b	#0,$1A(a0)
		move.b	#1,$18(a0)
		move.w	8(a0),$30(a0)
		move.w	$C(a0),$32(a0)

Obj16_Main:				; DATA XREF: ROM:00015114o
		move.w	8(a0),-(sp)
		bsr.w	sub_15184
		moveq	#0,d1
		move.b	$19(a0),d1
		move.w	#$FFD8,d3
		move.w	(sp)+,d4
		bsr.w	sub_F78A
		move.w	$30(a0),d0
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_152AA
		bra.w	loc_152A4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_15184:				; CODE XREF: ROM:00015154p
		moveq	#0,d0
		move.b	$28(a0),d0
		andi.w	#$F,d0
		add.w	d0,d0
		move.w	Obj16_SubIndex(pc,d0.w),d1
		jmp	Obj16_SubIndex(pc,d1.w)
; End of function sub_15184

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj16_SubIndex:	dc.w Obj16_InitMove-Obj16_SubIndex ; DATA XREF:	ROM:Obj16_SubIndexo
					; ROM:0001519Ao ...
		dc.w Obj16_Move-Obj16_SubIndex
		dc.w Obj16_NoMove-Obj16_SubIndex
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj16_InitMove:				; DATA XREF: ROM:Obj16_SubIndexo
		move.b	$22(a0),d0
		andi.b	#$18,d0
		beq.s	locret_151BE
		addq.b	#1,$28(a0)
		move.w	#$200,$10(a0)
		move.w	#$100,$12(a0)
		move.w	#$A0,$34(a0) ; ' '

locret_151BE:				; CODE XREF: ROM:000151A6j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj16_Move:				; DATA XREF: ROM:0001519Ao
		bsr.w	j_ObjectMove_0
		subq.w	#1,$34(a0)
		bne.s	locret_151CE
		addq.b	#1,$28(a0)

locret_151CE:				; CODE XREF: ROM:000151C8j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj16_NoMove:				; DATA XREF: ROM:0001519Co
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj16:	dc.w word_151DA-Map_Obj16 ; DATA XREF: ROM:000093E0o
					; ROM:000093EAo ...
		dc.w word_1522C-Map_Obj16
		dc.w word_15246-Map_Obj16
		dc.w word_15260-Map_Obj16
word_151DA:	dc.w $A			; DATA XREF: ROM:Map_Obj16o
		dc.w $C105,    0,    0,$FFE4; 0
		dc.w $D003,    4,    2,$FFE6; 4
		dc.w $F003,    4,    2,$FFE6; 8
		dc.w $1001,    8,    4,$FFE7; 12
		dc.w $D505,   $A,    5,	  $C; 16
		dc.w $E003,   $E,    7,	 $11; 20
		dc.w $1001,  $12,    9,	 $11; 24
		dc.w	 3,   $E,    7,	 $11; 28
		dc.w $200D,  $14,   $A,$FFE0; 32
		dc.w $200D, $814, $80A,	   0; 36
word_1522C:	dc.w 3			; DATA XREF: ROM:000151D4o
		dc.w $D805,  $1C,   $E,$FFF8; 0
		dc.w $E807,  $20,  $10,$FFF8; 4
		dc.w  $807,  $20,  $10,$FFF8; 8
word_15246:	dc.w 3			; DATA XREF: ROM:000151D6o
		dc.w $D805,  $28,  $14,$FFF8; 0
		dc.w $E807, $820, $810,$FFF8; 4
		dc.w  $807, $820, $810,$FFF8; 8
word_15260:	dc.w 8			; DATA XREF: ROM:000151D8o
		dc.w $C905,    0,    0,$FFE4; 0
		dc.w $D803,    4,    2,$FFE6; 4
		dc.w $F803,    4,    2,$FFE6; 8
		dc.w $1801,  $2C,  $16,$FFE6; 12
		dc.w $DD05,   $A,    5,	  $C; 16
		dc.w $E803,   $E,    7,	 $11; 20
		dc.w $2001,  $2E,  $17,	 $11; 24
		dc.w  $803,   $E,    7,	 $11; 28
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

loc_152A4:				; CODE XREF: ROM:00015180j
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_152AA:				; CODE XREF: ROM:0001517Cj
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMove_0:				; CODE XREF: ROM:Obj16_Movep
		jmp	ObjectMove
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
;----------------------------------------------------
; Object 19 - CPZ platforms moving side	to side
;----------------------------------------------------

Obj19:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj19_Index(pc,d0.w),d1
		jmp	Obj19_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj19_Index:	dc.w Obj19_Init-Obj19_Index ; DATA XREF: ROM:Obj19_Indexo
					; ROM:000152C8o
		dc.w Obj19_Main-Obj19_Index
Obj19_WidthArray:dc.w $2000		 ; 0
		dc.w $2001		; 1
		dc.w $2002		; 2
		dc.w $4003		; 3
		dc.w $3004		; 4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj19_Init:				; DATA XREF: ROM:Obj19_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj19,4(a0)
		move.w	#$6400,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		moveq	#0,d0
		move.b	$28(a0),d0
		lsr.w	#3,d0
		andi.w	#$1E,d0
		lea	Obj19_WidthArray(pc,d0.w),a2
		move.b	(a2)+,$19(a0)
		move.b	(a2)+,$1A(a0)
		move.b	#4,$18(a0)
		move.w	8(a0),$30(a0)
		move.w	$C(a0),$32(a0)
		andi.b	#$F,$28(a0)

Obj19_Main:				; DATA XREF: ROM:000152C8o
		move.w	8(a0),-(sp)
		bsr.w	Obj19_Modes
		moveq	#0,d1
		move.b	$19(a0),d1
		move.w	#$10,d3
		move.w	(sp)+,d4
		bsr.w	sub_F78A
		move.w	$30(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_154C6
		bra.w	loc_154C0

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Obj19_Modes:				; CODE XREF: ROM:00015324p
		moveq	#0,d0
		move.b	$28(a0),d0
		andi.w	#$F,d0
		add.w	d0,d0
		move.w	Obj19_SubIndex(pc,d0.w),d1
		jmp	Obj19_SubIndex(pc,d1.w)
; End of function Obj19_Modes

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj19_SubIndex:	dc.w locret_1537A-Obj19_SubIndex ; DATA	XREF: ROM:Obj19_SubIndexo
					; ROM:00015366o ...
		dc.w loc_1537C-Obj19_SubIndex
		dc.w loc_1539C-Obj19_SubIndex
		dc.w loc_153AC-Obj19_SubIndex
		dc.w loc_1539C-Obj19_SubIndex
		dc.w loc_153CC-Obj19_SubIndex
		dc.w loc_153EC-Obj19_SubIndex
		dc.w loc_1540E-Obj19_SubIndex
		dc.w loc_15430-Obj19_SubIndex
		dc.w loc_1539C-Obj19_SubIndex
		dc.w loc_15450-Obj19_SubIndex
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_1537A:				; DATA XREF: ROM:Obj19_SubIndexo
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1537C:				; DATA XREF: ROM:00015366o
		move.b	($FFFFFE6C).w,d0
		move.w	#$60,d1	; '`'
		btst	#0,$22(a0)
		beq.s	loc_15390
		neg.w	d0
		add.w	d1,d0

loc_15390:				; CODE XREF: ROM:0001538Aj
		move.w	$30(a0),d1
		sub.w	d0,d1
		move.w	d1,8(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1539C:				; DATA XREF: ROM:00015368o
					; ROM:0001536Co ...
		move.b	$22(a0),d0
		andi.b	#$18,d0
		beq.s	locret_153AA
		addq.b	#1,$28(a0)

locret_153AA:				; CODE XREF: ROM:000153A4j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_153AC:				; DATA XREF: ROM:0001536Ao
		moveq	#0,d3
		move.b	$19(a0),d3
		bsr.w	ObjHitWallRight
		tst.w	d1
		bmi.s	loc_153C6
		addq.w	#1,8(a0)
		move.w	8(a0),$30(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_153C6:				; CODE XREF: ROM:000153B8j
		clr.b	$28(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_153CC:				; DATA XREF: ROM:0001536Eo
		moveq	#0,d3
		move.b	$19(a0),d3
		bsr.w	ObjHitWallRight
		tst.w	d1
		bmi.s	loc_153E6
		addq.w	#1,8(a0)
		move.w	8(a0),$30(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_153E6:				; CODE XREF: ROM:000153D8j
		addq.b	#1,$28(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_153EC:				; DATA XREF: ROM:00015370o
		bsr.w	j_ObjectMove_1
		addi.w	#$18,$12(a0)
		bsr.w	ObjHitFloor
		tst.w	d1
		bpl.w	locret_1540C
		add.w	d1,$C(a0)
		clr.w	$12(a0)
		clr.b	$28(a0)

locret_1540C:				; CODE XREF: ROM:000153FCj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1540E:				; DATA XREF: ROM:00015372o
		tst.b	($FFFFF7E2).w
		beq.s	loc_15418
		subq.b	#3,$28(a0)

loc_15418:				; CODE XREF: ROM:00015412j
		addq.l	#6,sp
		move.w	$30(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_154C6
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15430:				; DATA XREF: ROM:00015374o
		move.b	($FFFFFE7C).w,d0
		move.w	#$80,d1	; ''
		btst	#0,$22(a0)
		beq.s	loc_15444
		neg.w	d0
		add.w	d1,d0

loc_15444:				; CODE XREF: ROM:0001543Ej
		move.w	$32(a0),d1
		sub.w	d0,d1
		move.w	d1,$C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15450:				; DATA XREF: ROM:00015378o
		moveq	#0,d3
		move.b	$19(a0),d3
		add.w	d3,d3
		moveq	#8,d1
		btst	#0,$22(a0)
		beq.s	loc_15466
		neg.w	d1
		neg.w	d3

loc_15466:				; CODE XREF: ROM:00015460j
		tst.w	$36(a0)
		bne.s	loc_15492
		move.w	8(a0),d0
		sub.w	$30(a0),d0
		cmp.w	d3,d0
		beq.s	loc_15484
		add.w	d1,8(a0)
		move.w	#$12C,$34(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15484:				; CODE XREF: ROM:00015476j
		subq.w	#1,$34(a0)
		bne.s	locret_15490
		move.w	#1,$36(a0)

locret_15490:				; CODE XREF: ROM:00015488j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15492:				; CODE XREF: ROM:0001546Aj
		move.w	8(a0),d0
		sub.w	$30(a0),d0
		beq.s	loc_154A2
		sub.w	d1,8(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_154A2:				; CODE XREF: ROM:0001549Aj
		clr.w	$36(a0)
		subq.b	#1,$28(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj19:	dc.w word_154AE-Map_Obj19 ; DATA XREF: ROM:000152D8o
					; ROM:Map_Obj19o ...
word_154AE:	dc.w 2			; DATA XREF: ROM:Map_Obj19o
		dc.w $F00F,    0,    0,$FFE0; 0
		dc.w $F00F, $800, $800,	   0; 4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_154C0:				; CODE XREF: ROM:0001534Cj
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_154C6:				; CODE XREF: ROM:00015348j
					; ROM:0001542Aj
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMove_1:				; CODE XREF: ROM:loc_153ECp
		jmp	ObjectMove
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
;----------------------------------------------------
; Object 04 - water surface
;----------------------------------------------------

Obj04:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj04_Index(pc,d0.w),d1
		jmp	Obj04_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj04_Index:	dc.w Obj04_Init-Obj04_Index ; DATA XREF: ROM:Obj04_Indexo
					; ROM:000154E4o
		dc.w Obj04_Main-Obj04_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj04_Init:				; DATA XREF: ROM:Obj04_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj04,4(a0)
		move.w	#$8400,2(a0)
		bsr.w	j_Adjust2PArtPointer_0
		move.b	#4,1(a0)
		move.b	#$80,$19(a0)
		move.w	8(a0),$30(a0)

Obj04_Main:				; DATA XREF: ROM:000154E4o
		move.w	($FFFFF646).w,d1
		move.w	d1,$C(a0)
		tst.b	$32(a0)
		bne.s	loc_15530
		btst	#7,($FFFFF605).w
		beq.s	loc_15540
		addq.b	#3,$1A(a0)
		move.b	#1,$32(a0)
		bra.s	loc_15540
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15530:				; CODE XREF: ROM:0001551Aj
		tst.w	($FFFFF63A).w
		bne.s	loc_15540
		move.b	#0,$32(a0)
		subq.b	#3,$1A(a0)

loc_15540:				; CODE XREF: ROM:00015522j
					; ROM:0001552Ej ...
		lea	(Obj04_FrameData).l,a1
		moveq	#0,d1
		move.b	$1B(a0),d1
		move.b	(a1,d1.w),$1A(a0)
		addq.b	#1,$1B(a0)
		andi.b	#$3F,$1B(a0) ; '?'
		bra.w	loc_15868
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj04_FrameData:dc.b   0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1; 0
					; DATA XREF: ROM:loc_15540o
		dc.b   1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2; 16
		dc.b   2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1; 32
		dc.b   1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0; 48
Map_Obj04:	dc.w word_155AC-Map_Obj04 ; DATA XREF: ROM:000154EAo
					; ROM:Map_Obj04o ...
		dc.w word_155C6-Map_Obj04
		dc.w word_155E0-Map_Obj04
		dc.w word_155FA-Map_Obj04
		dc.w word_1562C-Map_Obj04
		dc.w word_1565E-Map_Obj04
word_155AC:	dc.w 3			; DATA XREF: ROM:Map_Obj04o
		dc.w $F80D,    0,    0,$FFA0; 0
		dc.w $F80D,    0,    0,$FFE0; 4
		dc.w $F80D,    0,    0,	 $20; 8
word_155C6:	dc.w 3			; DATA XREF: ROM:000155A2o
		dc.w $F80D,    8,    4,$FFA0; 0
		dc.w $F80D,    8,    4,$FFE0; 4
		dc.w $F80D,    8,    4,	 $20; 8
word_155E0:	dc.w 3			; DATA XREF: ROM:000155A4o
		dc.w $F80D,  $10,    8,$FFA0; 0
		dc.w $F80D,  $10,    8,$FFE0; 4
		dc.w $F80D,  $10,    8,	 $20; 8
word_155FA:	dc.w 6			; DATA XREF: ROM:000155A6o
		dc.w $F80D,    0,    0,$FFA0; 0
		dc.w $F80D,    8,    4,$FFC0; 4
		dc.w $F80D,    0,    0,$FFE0; 8
		dc.w $F80D,    8,    4,	   0; 12
		dc.w $F80D,    0,    0,	 $20; 16
		dc.w $F80D,    8,    4,	 $40; 20
word_1562C:	dc.w 6			; DATA XREF: ROM:000155A8o
		dc.w $F80D,    8,    4,$FFA0; 0
		dc.w $F80D,  $10,    8,$FFC0; 4
		dc.w $F80D,    8,    4,$FFE0; 8
		dc.w $F80D,  $10,    8,	   0; 12
		dc.w $F80D,    8,    4,	 $20; 16
		dc.w $F80D,  $10,    8,	 $40; 20
word_1565E:	dc.w 6			; DATA XREF: ROM:000155AAo
		dc.w $F80D,  $10,    8,$FFA0; 0
		dc.w $F80D,    8,    4,$FFC0; 4
		dc.w $F80D,  $10,    8,$FFE0; 8
		dc.w $F80D,    8,    4,	   0; 12
		dc.w $F80D,  $10,    8,	 $20; 16
		dc.w $F80D,    8,    4,	 $40; 20
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 49 - EHZ waterfalls
;----------------------------------------------------

Obj49:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj49_Index(pc,d0.w),d1
		jmp	Obj49_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj49_Index:	dc.w Obj49_Init-Obj49_Index ; DATA XREF: ROM:Obj49_Indexo
					; ROM:000156A0o
		dc.w Obj49_Main-Obj49_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj49_Init:				; DATA XREF: ROM:Obj49_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj49,4(a0)
		move.w	#$23AE,2(a0)
		bsr.w	j_Adjust2PArtPointer_0
		move.b	#4,1(a0)
		move.b	#$20,$19(a0) ; ' '
		move.w	8(a0),$30(a0)
		move.b	#0,$18(a0)
		move.b	#$80,$16(a0)
		bset	#4,1(a0)

Obj49_Main:				; DATA XREF: ROM:000156A0o
		tst.w	(Two_player_mode).w
		bne.s	loc_156F6
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_1586E

loc_156F6:				; CODE XREF: ROM:000156E0j
		move.w	8(a0),d1
		move.w	d1,d2
		subi.w	#$40,d1	; '@'
		addi.w	#$40,d2	; '@'
		move.b	$28(a0),d3
		move.b	#0,$1A(a0)
		move.w	($FFFFB008).w,d0
		cmp.w	d1,d0
		bcs.s	loc_15728
		cmp.w	d2,d0
		bcc.s	loc_15728
		move.b	#1,$1A(a0)
		add.b	d3,$1A(a0)
		bra.w	loc_15868
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15728:				; CODE XREF: ROM:00015714j
					; ROM:00015718j
		move.w	($FFFFB048).w,d0
		cmp.w	d1,d0
		bcs.s	loc_1573A
		cmp.w	d2,d0
		bcc.s	loc_1573A
		move.b	#1,$1A(a0)

loc_1573A:				; CODE XREF: ROM:0001572Ej
					; ROM:00015732j
		add.b	d3,$1A(a0)
		bra.w	loc_15868
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj49:	dc.w word_1574E-Map_Obj49 ; DATA XREF: ROM:000156A6o
					; ROM:Map_Obj49o ...
		dc.w word_15760-Map_Obj49
		dc.w word_157F2-Map_Obj49
		dc.w word_157F4-Map_Obj49
		dc.w word_157F2-Map_Obj49
		dc.w word_15816-Map_Obj49
word_1574E:	dc.w 2			; DATA XREF: ROM:Map_Obj49o
		dc.w $800D,    0,    0,$FFE0; 0
		dc.w $800D,    0,    0,	   0; 4
word_15760:	dc.w $12		; DATA XREF: ROM:00015744o
		dc.w $800D,    0,    0,$FFE0; 0
		dc.w $800D,    0,    0,	   0; 4
		dc.w $800F,    8,    4,$FFE0; 8
		dc.w $800F,    8,    4,	   0; 12
		dc.w $A00F,    8,    4,$FFE0; 16
		dc.w $A00F,    8,    4,	   0; 20
		dc.w $C00F,    8,    4,$FFE0; 24
		dc.w $C00F,    8,    4,	   0; 28
		dc.w $E00F,    8,    4,$FFE0; 32
		dc.w $E00F,    8,    4,	   0; 36
		dc.w	$F,    8,    4,$FFE0; 40
		dc.w	$F,    8,    4,	   0; 44
		dc.w $200F,    8,    4,$FFE0; 48
		dc.w $200F,    8,    4,	   0; 52
		dc.w $400F,    8,    4,$FFE0; 56
		dc.w $400F,    8,    4,	   0; 60
		dc.w $600F,    8,    4,$FFE0; 64
		dc.w $600F,    8,    4,	   0; 68
word_157F2:	dc.w 0			; DATA XREF: ROM:00015746o
					; ROM:0001574Ao
word_157F4:	dc.w 4			; DATA XREF: ROM:00015748o
		dc.w $E00F,    8,    4,$FFE0; 0
		dc.w $E00F,    8,    4,	   0; 4
		dc.w	$F,    8,    4,$FFE0; 8
		dc.w	$F,    8,    4,	   0; 12
word_15816:	dc.w $A			; DATA XREF: ROM:0001574Co
		dc.w $C00F,    8,    4,$FFE0; 0
		dc.w $C00F,    8,    4,	   0; 4
		dc.w $E00F,    8,    4,$FFE0; 8
		dc.w $E00F,    8,    4,	   0; 12
		dc.w	$F,    8,    4,$FFE0; 16
		dc.w	$F,    8,    4,	   0; 20
		dc.w $200F,    8,    4,$FFE0; 24
		dc.w $200F,    8,    4,	   0; 28
		dc.w $400F,    8,    4,$FFE0; 32
		dc.w $400F,    8,    4,	   0; 36
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15868:				; CODE XREF: ROM:0001555Cj
					; ROM:00015724j ...
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1586E:				; CODE XREF: ROM:000156F2j
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_Adjust2PArtPointer_0:		; CODE XREF: ROM:000154F8p
					; ROM:000156B4p
		jmp	Adjust2PArtPointer
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
;----------------------------------------------------
; Object 4D - Rhinobot badnik
;----------------------------------------------------

Obj4D:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj4D_Index(pc,d0.w),d1
		jmp	Obj4D_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj4D_Index:	dc.w Obj4D_Init-Obj4D_Index ; DATA XREF: ROM:Obj4D_Indexo
					; ROM:0001588Co
		dc.w Obj4D_Main-Obj4D_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj4D_Init:				; DATA XREF: ROM:Obj4D_Indexo
		move.l	#Map_Obj4D,4(a0)
		move.w	#$23C4,2(a0)
		ori.b	#4,1(a0)
		move.b	#$A,$20(a0)
		move.b	#4,$18(a0)
		move.b	#$18,$19(a0)
		move.b	#$10,$16(a0)
		move.b	#$18,$17(a0)
		bsr.w	j_ObjectMoveAndFall_0
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	locret_158DC
		add.w	d1,$C(a0)
		move.w	#0,$12(a0)
		addq.b	#2,routine(a0)

locret_158DC:				; CODE XREF: ROM:000158CCj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj4D_Main:				; DATA XREF: ROM:0001588Co
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj4D_SubIndex(pc,d0.w),d1
		jsr	Obj4D_SubIndex(pc,d1.w)
		lea	(Ani_Obj4D).l,a1
		bsr.w	j_AnimateSprite_0
		bra.w	loc_15B38
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj4D_SubIndex:	dc.w loc_158FE-Obj4D_SubIndex ;	DATA XREF: ROM:Obj4D_SubIndexo
					; ROM:000158FCo
		dc.w loc_15922-Obj4D_SubIndex
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_158FE:				; DATA XREF: ROM:Obj4D_SubIndexo
		subq.w	#1,$30(a0)
		bpl.s	locret_15920
		addq.b	#2,$25(a0)
		move.w	#$FF80,$10(a0)
		move.b	#0,$1C(a0)
		bchg	#0,$22(a0)
		bne.s	locret_15920
		neg.w	$10(a0)

locret_15920:				; CODE XREF: ROM:00015902j
					; ROM:0001591Aj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15922:				; DATA XREF: ROM:000158FCo
		bsr.w	sub_1596C
		bsr.w	j_ObjectMoveAndFall_0
		jsr	ObjHitFloor
		cmpi.w	#$FFF8,d1
		blt.s	loc_15948
		cmpi.w	#$C,d1
		bge.s	locret_15946
		move.w	#0,$12(a0)
		add.w	d1,$C(a0)

locret_15946:				; CODE XREF: ROM:0001593Aj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15948:				; CODE XREF: ROM:00015934j
		subq.b	#2,$25(a0)
		move.w	#$3B,$30(a0) ; ';'
		move.w	$10(a0),d0
		ext.l	d0
		asl.l	#8,d0
		sub.l	d0,8(a0)
		move.w	#0,$10(a0)
		move.b	#1,$1C(a0)
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_1596C:				; CODE XREF: ROM:loc_15922p
		move.w	8(a0),d0
		sub.w	($FFFFB008).w,d0
		bmi.s	loc_159A0
		cmpi.w	#$60,d0	; '`'
		bgt.s	locret_15990
		btst	#0,$22(a0)
		bne.s	loc_15992
		move.b	#2,$1C(a0)
		move.w	#$FE00,$10(a0)

locret_15990:				; CODE XREF: sub_1596C+Ej
					; sub_1596C+38j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15992:				; CODE XREF: sub_1596C+16j
		move.b	#0,$1C(a0)
		move.w	#$80,$10(a0) ; ''
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_159A0:				; CODE XREF: sub_1596C+8j
		cmpi.w	#$FFA0,d0
		blt.s	locret_15990
		btst	#0,$22(a0)
		beq.s	loc_159BC
		move.b	#2,$1C(a0)
		move.w	#$200,$10(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_159BC:				; CODE XREF: sub_1596C+40j
		move.b	#0,$1C(a0)
		move.w	#$FF80,$10(a0)
		rts
; End of function sub_1596C

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj4D:	dc.w byte_159D0-Ani_Obj4D ; DATA XREF: ROM:000158ECo
					; ROM:Ani_Obj4Do ...
		dc.w byte_159DE-Ani_Obj4D
		dc.w byte_159E1-Ani_Obj4D
byte_159D0:	dc.b   2,  0,  0,  0,  3,  3,  4,  1,  1,  2,  5,  5,  5,$FF; 0
					; DATA XREF: ROM:Ani_Obj4Do
byte_159DE:	dc.b  $F,  0,$FF	; 0 ; DATA XREF: ROM:000159CCo
byte_159E1:	dc.b   2,  6,  7,$FF,  0; 0 ; DATA XREF: ROM:000159CEo
Map_Obj4D:	dc.w word_159F6-Map_Obj4D ; DATA XREF: ROM:Obj4D_Inito
					; ROM:Map_Obj4Do ...
		dc.w word_15A20-Map_Obj4D
		dc.w word_15A4A-Map_Obj4D
		dc.w word_15A74-Map_Obj4D
		dc.w word_15A9E-Map_Obj4D
		dc.w word_15AC8-Map_Obj4D
		dc.w word_15AF2-Map_Obj4D
		dc.w word_15B14-Map_Obj4D
word_159F6:	dc.w 5			; DATA XREF: ROM:Map_Obj4Do
		dc.w $F005,    0,    0,$FFF0; 0
		dc.w $F005,    4,    2,	   0; 4
		dc.w $F801,    8,    4,$FFE8; 8
		dc.w	 5,   $A,    5,$FFF0; 12
		dc.w	 9,  $22,  $11,	   0; 16
word_15A20:	dc.w 5			; DATA XREF: ROM:000159E8o
		dc.w $F005,    0,    0,$FFF0; 0
		dc.w $F005,    4,    2,	   0; 4
		dc.w $F801,    8,    4,$FFE8; 8
		dc.w	 5,   $E,    7,$FFF0; 12
		dc.w	 9,  $22,  $11,	   0; 16
word_15A4A:	dc.w 5			; DATA XREF: ROM:000159EAo
		dc.w $F005,    0,    0,$FFF0; 0
		dc.w $F005,    4,    2,	   0; 4
		dc.w $F801,    8,    4,$FFE8; 8
		dc.w	 5,  $12,    9,$FFF0; 12
		dc.w	 9,  $22,  $11,	   0; 16
word_15A74:	dc.w 5			; DATA XREF: ROM:000159ECo
		dc.w $F005,    0,    0,$FFF0; 0
		dc.w $F005,    4,    2,	   0; 4
		dc.w $F801,    8,    4,$FFE8; 8
		dc.w	 5,   $A,    5,$FFF0; 12
		dc.w	 9,  $28,  $14,	   0; 16
word_15A9E:	dc.w 5			; DATA XREF: ROM:000159EEo
		dc.w $F005,    0,    0,$FFF0; 0
		dc.w $F005,    4,    2,	   0; 4
		dc.w $F801,    8,    4,$FFE8; 8
		dc.w	 5,   $E,    7,$FFF0; 12
		dc.w	 9,  $28,  $14,	   0; 16
word_15AC8:	dc.w 5			; DATA XREF: ROM:000159F0o
		dc.w $F005,    0,    0,$FFF0; 0
		dc.w $F005,    4,    2,	   0; 4
		dc.w $F801,    8,    4,$FFE8; 8
		dc.w	 5,  $12,    9,$FFF0; 12
		dc.w	 9,  $28,  $14,	   0; 16
word_15AF2:	dc.w 4			; DATA XREF: ROM:000159F2o
		dc.w $F00B,  $16,   $B,$FFE8; 0
		dc.w $F005,    4,    2,	   0; 4
		dc.w	 9,  $22,  $11,	   0; 8
		dc.w $FB01,  $2E,  $17,	 $1A; 12
word_15B14:	dc.w 4			; DATA XREF: ROM:000159F4o
		dc.w $F00B,  $16,   $B,$FFE8; 0
		dc.w $F005,    4,    2,	   0; 4
		dc.w	 9,  $28,  $14,	   0; 8
		dc.w $FB01,  $30,  $18,	 $1A; 12
		align 4

loc_15B38:				; CODE XREF: ROM:000158F6j
		jmp	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_AnimateSprite_0:			; CODE XREF: ROM:000158F2p
		jmp	AnimateSprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMoveAndFall_0:				; CODE XREF: ROM:000158C0p
					; ROM:00015926p
		jmp	ObjectMoveAndFall
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
;----------------------------------------------------
; Object 52 - Piranha badnik
;----------------------------------------------------

Obj52:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj52_Index(pc,d0.w),d1
		jmp	Obj52_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj52_Index:	dc.w Obj52_Init-Obj52_Index ; DATA XREF: ROM:Obj52_Indexo
					; ROM:00015B5Co ...
		dc.w Obj52_Main-Obj52_Index
		dc.w loc_15C48-Obj52_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj52_Init:				; DATA XREF: ROM:Obj52_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj52,4(a0)
		move.w	#$2530,2(a0)
		ori.b	#4,1(a0)
		move.b	#$A,$20(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		moveq	#0,d0
		move.b	$28(a0),d0
		move.b	d0,d1
		andi.w	#$F0,d1	; 'ğ'
		add.w	d1,d1
		add.w	d1,d1
		move.w	d1,$3A(a0)
		move.w	d1,$3C(a0)
		andi.w	#$F,d0
		lsl.w	#6,d0
		subq.w	#1,d0
		move.w	d0,$30(a0)
		move.w	d0,$32(a0)
		move.w	#$FF80,$10(a0)
		move.l	#$FFFB8000,$36(a0)
		move.w	$C(a0),$34(a0)
		bset	#6,$22(a0)
		btst	#0,$22(a0)
		beq.s	Obj52_Main
		neg.w	$10(a0)

Obj52_Main:				; CODE XREF: ROM:00015BD2j
					; DATA XREF: ROM:00015B5Co
		cmpi.w	#$FFFF,$3A(a0)
		beq.s	loc_15BE4
		subq.w	#1,$3A(a0)

loc_15BE4:				; CODE XREF: ROM:00015BDEj
		subq.w	#1,$30(a0)
		bpl.s	NemDec_WriteIter_Part26
		move.w	$32(a0),$30(a0)
		neg.w	$10(a0)
		bchg	#0,$22(a0)
		move.b	#1,$1D(a0)
		move.w	$3C(a0),$3A(a0)

NemDec_WriteIter_Part26:				; CODE XREF: ROM:00015BE8j
		lea	(Ani_Obj52).l,a1
		bsr.w	j_AnimateSprite_1
		bsr.w	j_ObjectMove_2
		tst.w	$3A(a0)
		bgt.w	loc_15D90
		cmpi.w	#$FFFF,$3A(a0)
		beq.w	loc_15D90
		move.l	#$FFFB8000,$36(a0)
		addq.b	#2,routine(a0)
		move.w	#$FFFF,$3A(a0)
		move.b	#2,$1C(a0)
		move.w	#1,$3E(a0)
		bra.w	loc_15D90
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15C48:				; DATA XREF: ROM:00015B5Eo
		move.w	#$390,($FFFFF646).w
		lea	(Ani_Obj52).l,a1
		bsr.w	j_AnimateSprite_1
		move.w	$3E(a0),d0
		sub.w	d0,$30(a0)
		bsr.w	sub_15CF8
		tst.l	$36(a0)
		bpl.s	loc_15CA0
		move.w	$C(a0),d0
		cmp.w	($FFFFF646).w,d0
		bgt.w	loc_15D90
		move.b	#3,$1C(a0)
		bclr	#6,$22(a0)
		tst.b	$2A(a0)
		bne.w	loc_15D90
		move.w	$10(a0),d0
		asl.w	#1,d0
		move.w	d0,$10(a0)
		addq.w	#1,$3E(a0)
		st	$2A(a0)
		bra.w	loc_15D90
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15CA0:				; CODE XREF: ROM:00015C68j
		move.w	$C(a0),d0
		cmp.w	($FFFFF646).w,d0
		bgt.s	loc_15CB4
		move.b	#1,$1C(a0)
		bra.w	loc_15D90
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_15CB4:				; CODE XREF: ROM:00015CA8j
		move.b	#0,$1C(a0)
		bset	#6,$22(a0)
		bne.s	loc_15CCE
		move.l	$36(a0),d0
		asr.l	#1,d0
		move.l	d0,$36(a0)
		nop

loc_15CCE:				; CODE XREF: ROM:00015CC0j
		move.w	$34(a0),d0
		cmp.w	$C(a0),d0
		bgt.w	loc_15D90
		subq.b	#2,routine(a0)
		tst.b	$2A(a0)
		beq.w	loc_15D90
		move.w	$10(a0),d0
		asr.w	#1,d0
		move.w	d0,$10(a0)
		sf	$2A(a0)
		bra.w	loc_15D90

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_15CF8:				; CODE XREF: ROM:00015C60p
		move.l	8(a0),d2
		move.l	$C(a0),d3
		move.w	$10(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d2
		add.l	$36(a0),d3
		btst	#6,$22(a0)
		beq.s	loc_15D34
		tst.l	$36(a0)
		bpl.s	loc_15D2C
		addi.l	#$1000,$36(a0)
		addi.l	#$1000,$36(a0)

loc_15D2C:				; CODE XREF: sub_15CF8+22j
		subi.l	#$1000,$36(a0)

loc_15D34:				; CODE XREF: sub_15CF8+1Cj
		addi.l	#$1800,$36(a0)
		move.l	d2,8(a0)
		move.l	d3,$C(a0)
		rts
; End of function sub_15CF8

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj52:	dc.w byte_15D4E-Ani_Obj52 ; DATA XREF: ROM:NemDec_WriteIter_Part26o
					; ROM:00015C4Eo ...
		dc.w byte_15D52-Ani_Obj52
		dc.w byte_15D56-Ani_Obj52
		dc.w byte_15D5A-Ani_Obj52
byte_15D4E:	dc.b  $E,  0,  1,$FF	; 0 ; DATA XREF: ROM:Ani_Obj52o
byte_15D52:	dc.b   3,  0,  1,$FF	; 0 ; DATA XREF: ROM:00015D48o
byte_15D56:	dc.b  $E,  2,  3,$FF	; 0 ; DATA XREF: ROM:00015D4Ao
byte_15D5A:	dc.b   3,  2,  3,$FF	; 0 ; DATA XREF: ROM:00015D4Co
Map_Obj52:	dc.w word_15D66-Map_Obj52 ; DATA XREF: ROM:00015B64o
					; ROM:Map_Obj52o ...
		dc.w word_15D70-Map_Obj52
		dc.w word_15D7A-Map_Obj52
		dc.w word_15D84-Map_Obj52
word_15D66:	dc.w 1			; DATA XREF: ROM:Map_Obj52o
		dc.w $F00F,    0,    0,$FFF0; 0
word_15D70:	dc.w 1			; DATA XREF: ROM:00015D60o
		dc.w $F00F,  $10,    8,$FFF0; 0
word_15D7A:	dc.w 1			; DATA XREF: ROM:00015D62o
		dc.w $F00F,  $20,  $10,$FFF0; 0
word_15D84:	dc.w 1			; DATA XREF: ROM:00015D64o
		dc.w $F00F,  $30,  $18,$FFF0; 0
		align 4

loc_15D90:				; CODE XREF: ROM:00015C18j
					; ROM:00015C22j ...
		jmp	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_AnimateSprite_1:			; CODE XREF: ROM:00015C0Cp
					; ROM:00015C54p
		jmp	AnimateSprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMove_2:				; CODE XREF: ROM:00015C10p
		jmp	ObjectMove
		align 4

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 4F - Redz (dinosaur badnik) from HPZ
; ---------------------------------------------------------------------------

Obj4F:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj4F_Index(pc,d0.w),d1
		jmp	Obj4F_Index(pc,d1.w)
; ===========================================================================
Obj4F_Index:	dc.w Obj4F_Init-Obj4F_Index
		dc.w Obj4F_Main-Obj4F_Index
		dc.w Obj4F_Delete-Obj4F_Index
; ===========================================================================

Obj4F_Init:
		move.l	#Map_obj4F,4(a0)
		move.w	#$500,2(a0)
		move.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		move.b	#$10,$16(a0)
		move.b	#6,$17(a0)
		move.b	#$C,$20(a0)
		bsr.w	j_ObjectMoveAndFall_1
		jsr	(ObjHitFloor).l
		tst.w	d1
		bpl.s	locret_15E0C
		add.w	d1,$C(a0)

loc_15DFC:
		move.w	#0,$12(a0)
		addq.b	#2,routine(a0)
		bchg	#0,$22(a0)

locret_15E0C:
		rts
; ===========================================================================

Obj4F_Main:
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj4F_SubIndex(pc,d0.w),d1
		jsr	Obj4F_SubIndex(pc,d1.w)
		lea	(Ani_obj4F).l,a1
		bsr.w	j_AnimateSprite_2
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_15E3E
		bra.w	loc_15EE8
; ---------------------------------------------------------------------------

loc_15E3E:
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		beq.s	loc_15E50
		bclr	#7,2(a2,d0.w)

loc_15E50:
		bra.w	JmpTo_DeleteObject
; ===========================================================================
Obj4F_SubIndex:	dc.w Obj4F_MoveLeft-Obj4F_SubIndex
		dc.w Obj4F_ChkFloor-Obj4F_SubIndex
; ===========================================================================
; loc_15E58:
Obj4F_MoveLeft:
		subq.w	#1,$30(a0)	; is Redz not moving?
		bpl.s	locret_15E7A	; if not, branch
		addq.b	#2,$25(a0)
		move.w	#$FF80,$10(a0)
		move.b	#1,$1C(a0)
		bchg	#0,$22(a0)
		bne.s	locret_15E7A
		neg.w	$10(a0)

locret_15E7A:
		rts
; ===========================================================================
; loc_15E7C:
Obj4F_ChkFloor:
		bsr.w	j_ObjectMove_3
		jsr	(ObjHitFloor).l
		cmpi.w	#$FFF8,d1
		blt.s	Obj4F_StopMoving
		cmpi.w	#$C,d1
		bge.s	Obj4F_StopMoving
		add.w	d1,$C(a0)
		rts
; ---------------------------------------------------------------------------
; loc_15E98:
Obj4F_StopMoving:
		subq.b	#2,$25(a0)
		move.w	#1*60,$30(a0)	; pause for 1 second
		move.w	#0,$10(a0)
		move.b	#0,$1C(a0)
		rts
; ===========================================================================

Obj4F_Delete:
		bra.w	JmpTo_DeleteObject
; ===========================================================================
; animation script
Ani_obj4F:	dc.w byte_15EB8-Ani_obj4F
		dc.w byte_15EBB-Ani_obj4F
byte_15EB8:	dc.b   9,  1,$FF
byte_15EBB:	dc.b   9,  0,  1,  2,  1,$FF,  0
; ---------------------------------------------------------------------------
; Sprite mappings - Redz (dinosaur badnik) from HPZ
; ---------------------------------------------------------------------------
Map_obj4F:	incbin	"mappings/sprite/obj4F.bin"
		align 4

loc_15EE8:				; CODE XREF: ROM:00015E3Aj
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

JmpTo_DeleteObject:
		jmp	(DeleteObject).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_AnimateSprite_2:			; CODE XREF: ROM:00015E22p
		jmp	AnimateSprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMoveAndFall_1:				; CODE XREF: ROM:00015DEAp
		jmp	ObjectMoveAndFall
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMove_3:				; CODE XREF: ROM:loc_15E7Cp
		jmp	ObjectMove
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
;----------------------------------------------------
; Object 50 - unused Seahorse badnik from HPZ
;----------------------------------------------------

Obj50:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj50_Index(pc,d0.w),d1
		jmp	Obj50_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj50_Index:	dc.w Obj50_Init-Obj50_Index ; DATA XREF: ROM:Obj50_Indexo
					; ROM:00015F18o ...
		dc.w loc_15FDA-Obj50_Index
		dc.w loc_16006-Obj50_Index
		dc.w loc_16030-Obj50_Index
		dc.w Obj50_Routine08-Obj50_Index
		dc.w Obj50_Routine0A-Obj50_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj50_Init:				; DATA XREF: ROM:Obj50_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj50,4(a0)
		move.w	#$2570,2(a0)
		ori.b	#4,1(a0)
		move.b	#$A,$20(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		move.w	#$FF00,$10(a0)
		move.b	$28(a0),d0
		move.b	d0,d1
		andi.w	#$F0,d1	; 'ğ'
		lsl.w	#4,d1
		move.w	d1,$2E(a0)
		move.w	d1,$30(a0)
		andi.w	#$F,d0
		lsl.w	#4,d0
		subq.w	#1,d0
		move.w	d0,$32(a0)
		move.w	d0,$34(a0)
		move.w	$C(a0),$2A(a0)
		bsr.w	j_SingleObjLoad
		bne.s	loc_15FDA
		move.b	#$50,0(a1) ; 'P'
		move.b	#4,routine(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		addi.w	#$A,8(a1)
		addi.w	#$FFFA,$C(a1)
		move.l	#Map_Obj50,4(a1)
		move.w	#$24E0,2(a1)
		ori.b	#4,1(a1)
		move.b	#3,$18(a1)
		move.b	$22(a0),$22(a1)
		move.b	#3,$1C(a1)
		move.l	a1,$36(a0)
		move.l	a0,$36(a1)
		bset	#6,$22(a0)

loc_15FDA:				; CODE XREF: ROM:00015F80j
					; DATA XREF: ROM:00015F18o
		lea	(Ani_Obj50).l,a1
		bsr.w	j_AnimateSprite_3
		move.w	#$39C,($FFFFF646).w
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj50_SubIndex(pc,d0.w),d1
		jsr	Obj50_SubIndex(pc,d1.w)
		bsr.w	sub_161D8
		bra.w	loc_1677A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj50_SubIndex:	dc.w loc_16046-Obj50_SubIndex ;	DATA XREF: ROM:Obj50_SubIndexo
					; ROM:00016002o ...
		dc.w loc_16058-Obj50_SubIndex
		dc.w loc_16066-Obj50_SubIndex
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16006:				; DATA XREF: ROM:00015F1Ao
		movea.l	$36(a0),a1
		tst.b	(a1)
		beq.w	loc_1676E
		cmpi.b	#$50,(a1) ; 'P'
		bne.w	loc_1676E
		btst	#7,$22(a1)
		bne.w	loc_1676E
		lea	(Ani_Obj50).l,a1
		bsr.w	j_AnimateSprite_3
		bra.w	loc_16768
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16030:				; DATA XREF: ROM:00015F1Co
		bsr.w	loc_162FC
		bsr.w	j_ObjectMove_4
		lea	(Ani_Obj50).l,a1
		bsr.w	j_AnimateSprite_3
		bra.w	loc_1677A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16046:				; DATA XREF: ROM:Obj50_SubIndexo
		bsr.w	j_ObjectMove_4
		bsr.w	sub_162DE
		bsr.w	sub_16184
		bsr.w	sub_1611C
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16058:				; DATA XREF: ROM:00016002o
		bsr.w	j_ObjectMove_4
		bsr.w	sub_162DE
		bsr.w	sub_161A6
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16066:				; DATA XREF: ROM:00016004o
		bsr.w	j_ObjectMoveAndFall_2
		bsr.w	sub_162DE
		bsr.w	sub_16078
		bsr.w	sub_160F4
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_16078:				; CODE XREF: ROM:0001606Ep
		tst.b	$2D(a0)
		bne.s	locret_16084
		tst.w	$12(a0)
		bpl.s	loc_16086

locret_16084:				; CODE XREF: sub_16078+4j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16086:				; CODE XREF: sub_16078+Aj
		st	$2D(a0)
		bsr.w	j_SingleObjLoad
		bne.s	locret_160F2
		move.b	#$50,0(a1) ; 'P'
		move.b	#6,routine(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.l	#Map_Obj50,4(a1)
		move.w	#$24E0,2(a1)
		ori.b	#4,1(a1)
		move.b	#3,$18(a1)
		move.b	#$E5,$20(a1)
		move.b	#2,$1C(a1)
		move.w	#$C,d0
		move.w	#$10,d1
		move.w	#$FD00,d2
		btst	#0,$22(a0)
		beq.s	loc_160E6
		neg.w	d1
		neg.w	d2

loc_160E6:				; CODE XREF: sub_16078+68j
		sub.w	d0,$C(a1)
		sub.w	d1,8(a1)
		move.w	d2,$10(a1)

locret_160F2:				; CODE XREF: sub_16078+16j
		rts
; End of function sub_16078


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_160F4:				; CODE XREF: ROM:00016072p
		move.w	$C(a0),d0
		cmp.w	($FFFFF646).w,d0
		blt.s	locret_1611A
		move.b	#2,$25(a0)
		move.b	#0,$1C(a0)
		move.w	$30(a0),$2E(a0)
		move.w	#$40,$12(a0) ; '@'
		sf	$2D(a0)

locret_1611A:				; CODE XREF: sub_160F4+8j
		rts
; End of function sub_160F4


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_1611C:				; CODE XREF: ROM:00016052p
		tst.b	$2C(a0)
		beq.s	locret_16182
		move.w	($FFFFB008).w,d0
		move.w	($FFFFB00C).w,d1
		sub.w	$C(a0),d1
		bpl.s	locret_16182
		cmpi.w	#$FFD0,d1
		blt.s	locret_16182
		sub.w	8(a0),d0
		cmpi.w	#$48,d0	; 'H'
		bgt.s	locret_16182
		cmpi.w	#$FFB8,d0
		blt.s	locret_16182
		tst.w	d0
		bpl.s	loc_1615A
		cmpi.w	#$FFD8,d0
		bgt.s	locret_16182
		btst	#0,$22(a0)
		bne.s	locret_16182
		bra.s	loc_16168
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1615A:				; CODE XREF: sub_1611C+2Cj
		cmpi.w	#$28,d0	; '('
		blt.s	locret_16182
		btst	#0,$22(a0)
		beq.s	locret_16182

loc_16168:				; CODE XREF: sub_1611C+3Cj
		moveq	#$20,d0	; ' '
		cmp.w	$32(a0),d0
		bgt.s	locret_16182
		move.b	#4,$25(a0)
		move.b	#1,$1C(a0)
		move.w	#$FC00,$12(a0)

locret_16182:				; CODE XREF: sub_1611C+4j
					; sub_1611C+12j ...
		rts
; End of function sub_1611C


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_16184:				; CODE XREF: ROM:0001604Ep
		subq.w	#1,$2E(a0)
		bne.s	locret_161A4
		move.w	$30(a0),$2E(a0)
		addq.b	#2,$25(a0)
		move.w	#$FFC0,d0
		tst.b	$2C(a0)
		beq.s	loc_161A0
		neg.w	d0

loc_161A0:				; CODE XREF: sub_16184+18j
		move.w	d0,$12(a0)

locret_161A4:				; CODE XREF: sub_16184+4j
		rts
; End of function sub_16184


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_161A6:				; CODE XREF: ROM:00016060p
		move.w	$C(a0),d0
		tst.b	$2C(a0)
		bne.s	loc_161C4
		cmp.w	($FFFFF646).w,d0
		bgt.s	locret_161C2
		subq.b	#2,$25(a0)
		st	$2C(a0)
		clr.w	$12(a0)

locret_161C2:				; CODE XREF: sub_161A6+Ej
					; sub_161A6+22j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_161C4:				; CODE XREF: sub_161A6+8j
		cmp.w	$2A(a0),d0
		blt.s	locret_161C2
		subq.b	#2,$25(a0)
		sf	$2C(a0)
		clr.w	$12(a0)
		rts
; End of function sub_161A6


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_161D8:				; CODE XREF: ROM:00015FF8p
		moveq	#$A,d0
		moveq	#$FFFFFFFA,d1
		movea.l	$36(a0),a1
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	$22(a0),$22(a1)
		move.b	$23(a0),$23(a1)
		move.b	1(a0),1(a1)
		btst	#0,$22(a1)
		beq.s	loc_16208
		neg.w	d0

loc_16208:				; CODE XREF: sub_161D8+2Cj
		add.w	d0,8(a1)
		add.w	d1,$C(a1)
		rts
; End of function sub_161D8

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj50_Routine08:			; DATA XREF: ROM:00015F1Eo
					; ROM:0001653At
		bsr.w	j_ObjectMoveAndFall_2
		bsr.w	sub_16228
		lea	(Ani_Obj50).l,a1
		bsr.w	j_AnimateSprite_3
		bra.w	loc_1677A

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_16228:				; CODE XREF: ROM:00016216p
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_16242
		add.w	d1,$C(a0)
		move.w	$12(a0),d0
		asr.w	#1,d0
		neg.w	d0
		move.w	d0,$12(a0)

loc_16242:				; CODE XREF: sub_16228+8j
		subi.b	#1,$21(a0)
		beq.w	loc_1676E
		rts
; End of function sub_16228

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj50_Routine0A:			; DATA XREF: ROM:00015F20o
					; ROM:0001653Ct
		bsr.w	sub_1629E
		tst.b	$25(a0)
		beq.s	locret_1628E
		subi.w	#1,$2C(a0)
		beq.w	loc_1676E
		move.w	($FFFFB008).w,8(a0)
		move.w	($FFFFB00C).w,$C(a0)
		addi.w	#$C,$C(a0)
		subi.b	#1,$2A(a0)
		bne.s	loc_16290
		move.b	#3,$2A(a0)
		bchg	#0,$22(a0)
		bchg	#0,1(a0)

locret_1628E:				; CODE XREF: ROM:00016256j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16290:				; CODE XREF: ROM:0001627Aj
		lea	(Ani_Obj50).l,a1
		bsr.w	j_AnimateSprite_3
		bra.w	loc_16768

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_1629E:				; CODE XREF: ROM:Obj50_Routine0Ap
		tst.b	$25(a0)
		bne.s	locret_162DC
		move.b	($FFFFB000+routine).w,d0
		cmpi.b	#2,d0
		bne.s	locret_162DC
		move.w	($FFFFB008).w,8(a0)
		move.w	($FFFFB00C).w,$C(a0)
		ori.b	#4,1(a0)
		move.b	#1,$18(a0)
		move.b	#5,$1C(a0)
		st	$25(a0)
		move.w	#$12C,$2C(a0)
		move.b	#3,$2A(a0)

locret_162DC:				; CODE XREF: sub_1629E+4j sub_1629E+Ej
		rts
; End of function sub_1629E


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_162DE:				; CODE XREF: ROM:0001604Ap
					; ROM:0001605Cp ...
		subq.w	#1,$32(a0)
		bpl.s	locret_162FA
		move.w	$34(a0),$32(a0)
		neg.w	$10(a0)
		bchg	#0,$22(a0)
		move.b	#1,$1D(a0)

locret_162FA:				; CODE XREF: sub_162DE+4j
		rts
; End of function sub_162DE

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_162FC:				; CODE XREF: ROM:loc_16030p
					; ROM:loc_165C0p
		tst.b	$21(a0)
		beq.w	locret_1639E
		moveq	#2,d3

loc_16306:				; CODE XREF: ROM:loc_16378j
		bsr.w	j_SingleObjLoad
		bne.s	loc_16378
		move.b	0(a0),0(a1)
		move.b	#8,routine(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.l	4(a0),4(a1)
		move.w	#$24E0,2(a1)
		ori.b	#4,1(a1)
		move.b	#3,$18(a1)
		move.w	#$FF00,$12(a1)
		move.b	#4,$1C(a1)
		move.b	#$78,$21(a1) ; 'x'
		cmpi.w	#1,d3
		beq.s	loc_16372
		blt.s	loc_16364
		move.w	#$C0,$10(a1) ; 'À'
		addi.w	#$FF40,$12(a1)
		bra.s	loc_16378
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16364:				; CODE XREF: ROM:00016354j
		move.w	#$FF00,$10(a1)
		addi.w	#$FFC0,$12(a1)
		bra.s	loc_16378
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16372:				; CODE XREF: ROM:00016352j
		move.w	#$40,$10(a1) ; '@'

loc_16378:				; CODE XREF: ROM:0001630Aj
					; ROM:00016362j ...
		dbf	d3,loc_16306
		bsr.w	j_SingleObjLoad
		bne.s	loc_1639A
		move.b	0(a0),0(a1)
		move.b	#$A,routine(a1)
		move.l	4(a0),4(a1)
		move.w	#$24E0,2(a1)

loc_1639A:				; CODE XREF: ROM:00016380j
		bra.w	loc_1676E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_1639E:				; CODE XREF: ROM:00016300j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj50:	dc.w byte_163B0-Ani_Obj50 ; DATA XREF: ROM:loc_15FDAo
					; ROM:00016022o ...
		dc.w byte_163B3-Ani_Obj50
		dc.w byte_163BB-Ani_Obj50
		dc.w byte_163C1-Ani_Obj50
		dc.w byte_163C5-Ani_Obj50
		dc.w byte_163C8-Ani_Obj50
		dc.w byte_163CB-Ani_Obj50
		dc.w byte_163CF-Ani_Obj50
byte_163B0:	dc.b  $E,  0,$FF	; 0 ; DATA XREF: ROM:Ani_Obj50o
byte_163B3:	dc.b   5,  3,  4,  3,  4,  3,  4,$FF; 0	; DATA XREF: ROM:000163A2o
byte_163BB:	dc.b   3,  5,  6,  7,  6,$FF; 0	; DATA XREF: ROM:000163A4o
byte_163C1:	dc.b   3,  1,  2,$FF	; 0 ; DATA XREF: ROM:000163A6o
byte_163C5:	dc.b   1,  5,$FF	; 0 ; DATA XREF: ROM:000163A8o
byte_163C8:	dc.b  $E,  8,$FF	; 0 ; DATA XREF: ROM:000163AAo
byte_163CB:	dc.b   1,  9, $A,$FF	; 0 ; DATA XREF: ROM:000163ACo
byte_163CF:	dc.b   5, $B, $C, $B, $C, $B, $C,$FF,  0; 0 ; DATA XREF: ROM:000163AEo
Map_Obj50:	dc.w word_163F2-Map_Obj50 ; DATA XREF: ROM:00015F26o
					; ROM:00015FA6o ...
		dc.w word_1640C-Map_Obj50
		dc.w word_16416-Map_Obj50
		dc.w word_16420-Map_Obj50
		dc.w word_16442-Map_Obj50
		dc.w word_16464-Map_Obj50
		dc.w word_1646E-Map_Obj50
		dc.w word_16478-Map_Obj50
		dc.w word_16482-Map_Obj50
		dc.w word_1648C-Map_Obj50
		dc.w word_164AE-Map_Obj50
		dc.w word_164D0-Map_Obj50
		dc.w word_164FA-Map_Obj50
word_163F2:	dc.w 3			; DATA XREF: ROM:Map_Obj50o
		dc.w $E80D,    0,    0,$FFF0; 0
		dc.w $F809,  $16,   $B,$FFF8; 4
		dc.w  $805,  $24,  $12,$FFF8; 8
word_1640C:	dc.w 1			; DATA XREF: ROM:000163DAo
		dc.w $F805,  $28,  $14,$FFF8; 0
word_16416:	dc.w 1			; DATA XREF: ROM:000163DCo
		dc.w $F805,  $2C,  $16,$FFF8; 0
word_16420:	dc.w 4			; DATA XREF: ROM:000163DEo
		dc.w $E809,    8,    4,$FFF0; 0
		dc.w $E801,   $E,    7,	   8; 4
		dc.w $F809,  $16,   $B,$FFF8; 8
		dc.w  $805,  $24,  $12,$FFF8; 12
word_16442:	dc.w 4			; DATA XREF: ROM:000163E0o
		dc.w $E809,  $10,    8,$FFF0; 0
		dc.w $E801,   $E,    7,	   8; 4
		dc.w $F809,  $16,   $B,$FFF8; 8
		dc.w  $805,  $24,  $12,$FFF8; 12
word_16464:	dc.w 1			; DATA XREF: ROM:000163E2o
		dc.w $F801,  $30,  $18,$FFFC; 0
word_1646E:	dc.w 1			; DATA XREF: ROM:000163E4o
		dc.w $F801,  $32,  $19,$FFFC; 0
word_16478:	dc.w 1			; DATA XREF: ROM:000163E6o
		dc.w $F801,  $34,  $1A,$FFFC; 0
word_16482:	dc.w 1			; DATA XREF: ROM:000163E8o
		dc.w $F80D,  $36,  $1B,$FFF0; 0
word_1648C:	dc.w 4			; DATA XREF: ROM:000163EAo
		dc.w $E80D,    0,    0,$FFF0; 0
		dc.w $F805,  $1C,   $E,$FFF8; 4
		dc.w $F801,  $20,  $10,	   8; 8
		dc.w  $805,  $24,  $12,$FFF8; 12
word_164AE:	dc.w 4			; DATA XREF: ROM:000163ECo
		dc.w $E80D,    0,    0,$FFF0; 0
		dc.w $F805,  $1C,   $E,$FFF8; 4
		dc.w $F801,  $22,  $11,	   8; 8
		dc.w  $805,  $24,  $12,$FFF8; 12
word_164D0:	dc.w 5			; DATA XREF: ROM:000163EEo
		dc.w $E809,    8,    4,$FFF0; 0
		dc.w $E801,   $E,    7,	   8; 4
		dc.w $F805,  $1C,   $E,$FFF8; 8
		dc.w $F801,  $20,  $10,	   8; 12
		dc.w  $805,  $24,  $12,$FFF8; 16
word_164FA:	dc.w 5			; DATA XREF: ROM:000163F0o
		dc.w $E809,  $10,    8,$FFF0; 0
		dc.w $E801,   $E,    7,	   8; 4
		dc.w $F805,  $1C,   $E,$FFF8; 8
		dc.w $F801,  $22,  $11,	   8; 12
		dc.w  $805,  $24,  $12,$FFF8; 16
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 51 - unused Skyhorse badnik from HPZ
;----------------------------------------------------

Obj51:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	off_16532(pc,d0.w),d1
		jmp	off_16532(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_16532:	dc.w loc_1653E-off_16532 ; DATA	XREF: ROM:off_16532o
					; ROM:00016534o ...
		dc.w loc_1659C-off_16532
		dc.w loc_165C0-off_16532
		dc.w 0
		dc.w Obj50_Routine08-off_16532
		dc.w Obj50_Routine0A-off_16532
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1653E:				; DATA XREF: ROM:off_16532o
		addq.b	#2,routine(a0)
		move.l	#Map_Obj50,4(a0)
		move.w	#$2570,2(a0)
		ori.b	#4,1(a0)
		move.b	#$A,$20(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		move.b	#6,$1C(a0)
		move.b	$28(a0),d0
		andi.w	#$F,d0
		move.w	d0,d1
		lsl.w	#5,d1
		subq.w	#1,d1
		move.w	d1,$32(a0)
		move.w	d1,$34(a0)
		move.w	$C(a0),$2A(a0)
		move.w	$C(a0),$2E(a0)
		addi.w	#$60,$2E(a0) ; '`'
		move.w	#$FF00,$10(a0)

loc_1659C:				; DATA XREF: ROM:00016534o
		lea	Ani_Obj50(pc),a1
		bsr.w	j_AnimateSprite_3
		move.w	#$39C,($FFFFF646).w
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	off_165BC(pc,d0.w),d1
		jsr	off_165BC(pc,d1.w)
		bra.w	loc_1677A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_165BC:	dc.w loc_165D4-off_165BC ; DATA	XREF: ROM:off_165BCo
					; ROM:000165BEo
		dc.w loc_165EA-off_165BC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_165C0:				; DATA XREF: ROM:00016536o
		bsr.w	loc_162FC
		bsr.w	j_ObjectMove_4
		lea	Ani_Obj50(pc),a1
		bsr.w	j_AnimateSprite_3
		bra.w	loc_1677A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_165D4:				; DATA XREF: ROM:off_165BCo
		bsr.w	j_ObjectMove_4
		bsr.w	sub_162DE
		bsr.w	loc_16626
		bsr.w	loc_16708
		bsr.w	loc_16678
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_165EA:				; DATA XREF: ROM:000165BEo
		bsr.w	j_ObjectMove_4
		bsr.w	sub_162DE
		bsr.w	loc_16626
		bsr.w	loc_16708
		bsr.w	loc_16600
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16600:				; CODE XREF: ROM:000165FAp
		subq.w	#1,$30(a0)
		beq.s	loc_16614
		move.w	$30(a0),d0
		cmpi.w	#$12,d0
		beq.w	loc_1669E
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16614:				; CODE XREF: ROM:00016604j
		subq.b	#2,$25(a0)
		move.b	#6,$1C(a0)
		move.w	#$B4,$30(a0) ; '´'
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16626:				; CODE XREF: ROM:000165DCp
					; ROM:000165F2p
		sf	$2D(a0)
		sf	$2C(a0)
		sf	$36(a0)
		move.w	($FFFFB008).w,d0
		sub.w	8(a0),d0
		bpl.s	loc_16646
		btst	#0,$22(a0)
		bne.s	loc_1664E
		bra.s	loc_16652
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16646:				; CODE XREF: ROM:0001663Aj
		btst	#0,$22(a0)
		bne.s	loc_16652

loc_1664E:				; CODE XREF: ROM:00016642j
		st	$2C(a0)

loc_16652:				; CODE XREF: ROM:00016644j
					; ROM:0001664Cj
		move.w	($FFFFB00C).w,d0
		sub.w	$C(a0),d0
		cmpi.w	#$FFFC,d0
		blt.s	locret_16676
		cmpi.w	#4,d0
		bgt.s	loc_16672
		st	$2D(a0)
		move.w	#0,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16672:				; CODE XREF: ROM:00016664j
		st	$36(a0)

locret_16676:				; CODE XREF: ROM:0001665Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16678:				; CODE XREF: ROM:000165E4p
		tst.b	$2C(a0)
		bne.s	locret_1669C
		subq.w	#1,$30(a0)
		bgt.s	locret_1669C
		tst.b	$2D(a0)
		beq.s	locret_1669C
		move.b	#7,$1C(a0)
		move.w	#$24,$30(a0) ; '$'
		addi.b	#2,$25(a0)

locret_1669C:				; CODE XREF: ROM:0001667Cj
					; ROM:00016682j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1669E:				; CODE XREF: ROM:0001660Ej
		bsr.w	j_SingleObjLoad
		bne.s	locret_16706
		move.b	#$51,0(a1) ; 'Q'
		move.b	#4,routine(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.l	#Map_Obj50,4(a1)
		move.w	#$24E0,2(a1)
		ori.b	#4,1(a1)
		move.b	#3,$18(a1)
		move.b	#2,$1C(a1)
		move.b	#$E5,$20(a1)
		move.w	#$C,d0
		move.w	#$10,d1
		move.w	#$FD00,d2
		btst	#0,$22(a0)
		beq.s	loc_166FA
		neg.w	d1
		neg.w	d2

loc_166FA:				; CODE XREF: ROM:000166F4j
		sub.w	d0,$C(a1)
		sub.w	d1,8(a1)
		move.w	d2,$10(a1)

locret_16706:				; CODE XREF: ROM:000166A2j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16708:				; CODE XREF: ROM:000165E0p
					; ROM:000165F6p
		tst.b	$2D(a0)
		bne.s	locret_16766
		tst.b	$36(a0)
		beq.s	loc_16738
		move.w	$2E(a0),d0
		cmp.w	$C(a0),d0
		ble.s	loc_1675C
		tst.b	$2C(a0)
		beq.s	loc_16730
		move.w	$2A(a0),d0
		cmp.w	$C(a0),d0
		bge.s	loc_1675C
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16730:				; CODE XREF: ROM:00016722j
		move.w	#$180,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16738:				; CODE XREF: ROM:00016712j
		move.w	$2A(a0),d0
		cmp.w	$C(a0),d0
		bge.s	loc_1675C
		tst.b	$2C(a0)
		beq.s	loc_16754
		move.w	$2E(a0),d0
		cmp.w	$C(a0),d0
		ble.s	loc_1675C
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16754:				; CODE XREF: ROM:00016746j
		move.w	#$FE80,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1675C:				; CODE XREF: ROM:0001671Cj
					; ROM:0001672Cj ...
		move.w	d0,$C(a0)
		move.w	#0,$12(a0)

locret_16766:				; CODE XREF: ROM:0001670Cj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16768:				; CODE XREF: ROM:0001602Cj
					; ROM:0001629Aj
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1676E:				; CODE XREF: ROM:0001600Cj
					; ROM:00016014j ...
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_SingleObjLoad:			; CODE XREF: ROM:00015F7Cp
					; sub_16078+12p ...
		jmp	SingleObjLoad
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1677A:				; CODE XREF: ROM:00015FFCj
					; ROM:00016042j ...
		jmp	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_AnimateSprite_3:			; CODE XREF: ROM:00015FE0p
					; ROM:00016028p ...
		jmp	AnimateSprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMoveAndFall_2:				; CODE XREF: ROM:loc_16066p
					; ROM:Obj50_Routine08p
		jmp	ObjectMoveAndFall
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMove_4:
		jmp	(ObjectMove).l

		align 4

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 4B - Buzzer from EHZ
; ---------------------------------------------------------------------------

Obj4B:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj4B_Index(pc,d0.w),d1
		jmp	Obj4B_Index(pc,d1.w)
; ===========================================================================
Obj4B_Index:	dc.w Obj4B_Init-Obj4B_Index
		dc.w Obj4B_Main-Obj4B_Index
		dc.w Obj4B_Flame-Obj4B_Index
		dc.w Obj4B_Projectile-Obj4B_Index
; ===========================================================================
; loc_167AA:
Obj4B_Projectile:
		bsr.w	j_ObjectMove_5
		lea	(Ani_obj4B).l,a1
		bsr.w	j_AnimateSprite_4
		bra.w	loc_16A8C
; ===========================================================================
; loc_167BC:
Obj4B_Flame:
		movea.l	$2A(a0),a1
		tst.b	(a1)
		beq.w	loc_16A74
		tst.w	$30(a1)
		bmi.s	loc_167CE
		rts
; ---------------------------------------------------------------------------

loc_167CE:
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		move.b	$22(a1),$22(a0)
		move.b	1(a1),1(a0)
		lea	(Ani_obj4B).l,a1
		bsr.w	j_AnimateSprite_4
		bra.w	loc_16A8C
; ===========================================================================

Obj4B_Init:
		move.l	#Map_obj4B,4(a0)
		move.w	#$3E6,2(a0)
		bsr.w	j_Adjust2PArtPointer_2
		ori.b	#4,1(a0)
		move.b	#$A,$20(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		move.b	#$10,$16(a0)
		move.b	#$18,$17(a0)
		move.b	#3,$18(a0)
		addq.b	#2,routine(a0)	; => Obj4B_Main

		; load exhaust flame object
		bsr.w	j_SingleObjLoad2_0
		bne.s	locret_1689E

		move.b	#$4B,0(a1)	; load obj4B
		move.b	#4,routine(a1)	; => Obj4B_Flame
		move.l	#Map_obj4B,4(a1)
		move.w	#$3E6,2(a1)
		bsr.w	j_Adjust2PArtPointer2
		move.b	#4,$18(a1)
		move.b	#$10,$19(a1)
		move.b	$22(a0),$22(a1)
		move.b	1(a0),1(a1)
		move.b	#1,$1C(a1)
		move.l	a0,$2A(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.w	#$100,$2E(a0)
		move.w	#-$100,$10(a0)
		btst	#0,1(a0)
		beq.s	locret_1689E
		neg.w	$10(a0)

locret_1689E:
		rts
; ===========================================================================

Obj4B_Main:
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj4B_Main_Index(pc,d0.w),d1
		jsr	Obj4B_Main_Index(pc,d1.w)
		lea	(Ani_obj4B).l,a1
		bsr.w	j_AnimateSprite_4
		bra.w	loc_16A8C
; ===========================================================================
Obj4B_Main_Index:	dc.w Obj4B_Roaming-Obj4B_Main_Index
			dc.w Obj4B_Shooting-Obj4B_Main_Index
; ===========================================================================
; loc_168C0:
Obj4B_Roaming:
		bsr.w	Obj4B_ChkPlayers
		subq.w	#1,$30(a0)
		move.w	$30(a0),d0
		cmpi.w	#$F,d0
		beq.s	Obj4B_TurnAround
		tst.w	d0
		bpl.s	locret_168E4
		subq.w	#1,$2E(a0)
		bgt.w	j_ObjectMove_5
		move.w	#$1E,$30(a0)

locret_168E4:
		rts
; ---------------------------------------------------------------------------
; loc_168E6:
Obj4B_TurnAround:
		sf	$32(a0)	; reenable shooting
		neg.w	$10(a0)	; reverse movement direction
		bchg	#0,1(a0)
		bchg	#0,$22(a0)
		move.w	#$100,$2E(a0)
		rts

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_16902:
Obj4B_ChkPlayers:
		tst.b	$32(a0)
		bne.w	locret_1694E	; branch, if shooting is disabled
		move.w	8(a0),d0
		sub.w	($FFFFB008).w,d0	; a1=character
		move.w	d0,d1
		bpl.s	loc_16918
		neg.w	d0

loc_16918:
		; test if player is inside an 8 pixel wide strip
		cmpi.w	#$28,d0
		blt.s	locret_1694E
		cmpi.w	#$30,d0
		bgt.s	locret_1694E

		tst.w	d1			; test sign of distance
		bpl.s	Obj4B_PlayerIsLeft	; branch, if player is left from object
		btst	#0,1(a0)
		beq.s	locret_1694E		; branch, if object is facing right
		bra.s	Obj4B_ReadyToShoot
; ---------------------------------------------------------------------------
; loc_16932:
Obj4B_PlayerIsLeft:
		btst	#0,1(a0)
		bne.s	locret_1694E	; branch, if object is facing left
; loc_1693A:
Obj4B_ReadyToShoot:
		st	$32(a0)		; disable shooting
		addq.b	#2,$25(a0)	; => Obj4B_Shooting
		move.b	#3,$1C(a0)	; play shooting animation
		move.w	#$32,$34(a0)

locret_1694E:
		rts
; End of function Obj4B_ChkPlayers

; ===========================================================================
; loc_16950:
Obj4B_Shooting:
		move.w	$34(a0),d0		; get timer value
		subq.w	#1,d0			; decrement
		blt.s	Obj4B_DoneShooting	; branch, if timer has expired
		move.w	d0,$34(a0)		; update timer value
		cmpi.w	#$14,d0			; has timer reached a certain value?
		beq.s	Obj4B_ShootProjectile	; if yes, branch
		rts
; ===========================================================================
; loc_16964:
Obj4B_DoneShooting:
		subq.b	#2,$25(a0)	; => Obj4B_Roaming
		rts
; ===========================================================================
; loc_1696A:
Obj4B_ShootProjectile:
		jsr	(SingleObjLoad2).l
		bne.s	locret_169D8

		move.b	#$4B,0(a1) ; load obj4B
		move.b	#6,routine(a1)	; => Obj4B_Projectile
		move.l	#Map_obj4B,4(a1)
		move.w	#$3E6,2(a1)
		bsr.w	j_Adjust2PArtPointer2
		move.b	#4,$18(a1)
		move.b	#$98,$20(a1)
		move.b	#$10,$19(a1)
		move.b	$22(a0),$22(a1)
		move.b	1(a0),1(a1)
		move.b	#2,$1C(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.w	#$180,$12(a1)
		move.w	#-$180,$10(a1)
		btst	#0,1(a1)	; is object facing left?
		beq.s	locret_169D8	; if not, branch
		neg.w	$10(a1)		; move in other direction

locret_169D8:
		rts
; ===========================================================================
; animation script
; off_169DA:
Ani_obj4B:	dc.w byte_169E2-Ani_obj4B
		dc.w byte_169E5-Ani_obj4B
		dc.w byte_169E9-Ani_obj4B
		dc.w byte_169ED-Ani_obj4B
byte_169E2:	dc.b  $F,  0,$FF
byte_169E5:	dc.b   2,  3,  4,$FF
byte_169E9:	dc.b   3,  5,  6,$FF
byte_169ED:	dc.b   9,  1,  1,  1,  1,  1,$FD,  0,  0
; ---------------------------------------------------------------------------
; Sprite mappings
; ---------------------------------------------------------------------------
Map_obj4B:	incbin	"mappings/sprite/obj4B.bin"




		align 4
loc_16A74:
		jmp	(DeleteObject).l

j_SingleObjLoad2_0:
		jmp	(SingleObjLoad2).l

j_AnimateSprite_4:
		jmp	(AnimateSprite).l

j_Adjust2PArtPointer2:
		jmp	(Adjust2PArtPointer2).l

loc_16A8C:
		jmp	(MarkObjGone_P1).l

j_Adjust2PArtPointer_2:
		jmp	(Adjust2PArtPointer).l

j_ObjectMove_5:
		jmp	(ObjectMove).l
		align 4

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 4A - Octopus badnik
; ---------------------------------------------------------------------------

Obj4A:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj4A_Index(pc,d0.w),d1
		jmp	Obj4A_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj4A_Index:	dc.w loc_16ADE-Obj4A_Index ; DATA XREF:	ROM:Obj4A_Indexo
					; ROM:00016AB0o ...
		dc.w loc_16B44-Obj4A_Index
		dc.w loc_16AD2-Obj4A_Index
		dc.w loc_16AB6-Obj4A_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16AB6:				; DATA XREF: ROM:00016AB4o
		subi.w	#1,$2C(a0)
		bmi.s	loc_16AC0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16AC0:				; CODE XREF: ROM:00016ABCj
		bsr.w	j_ObjectMoveAndFall_3
		lea	(Ani_Obj4A).l,a1
		bsr.w	j_AnimateSprite_5
		bra.w	loc_16D3C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16AD2:				; DATA XREF: ROM:00016AB2o
		subq.w	#1,$2C(a0)
		beq.w	loc_16D36
		bra.w	loc_16D30
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16ADE:				; DATA XREF: ROM:Obj4A_Indexo
		move.l	#Map_Obj4A,4(a0)
		move.w	#$238A,2(a0)
		ori.b	#4,1(a0)
		move.b	#$A,$20(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		move.b	#$10,$16(a0)
		move.b	#8,$17(a0)
		bsr.w	j_ObjectMoveAndFall_3
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_16B3C
		add.w	d1,$C(a0)
		move.w	#0,$12(a0)
		addq.b	#2,routine(a0)
		move.w	8(a0),d0
		sub.w	($FFFFB008).w,d0
		bpl.s	loc_16B3C
		bchg	#0,$22(a0)

loc_16B3C:				; CODE XREF: ROM:00016B1Cj
					; ROM:00016B34j
		move.w	$C(a0),$2A(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16B44:				; DATA XREF: ROM:00016AB0o
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj4A_SubIndex(pc,d0.w),d1
		jsr	Obj4A_SubIndex(pc,d1.w)
		lea	(Ani_Obj4A).l,a1
		bsr.w	j_AnimateSprite_5
		bra.w	loc_16D3C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj4A_SubIndex:	dc.w Obj4A_Init-Obj4A_SubIndex ; DATA XREF: ROM:Obj4A_SubIndexo
					; ROM:00016B62o ...
		dc.w Obj4A_Main-Obj4A_SubIndex
		dc.w loc_16BAA-Obj4A_SubIndex
		dc.w loc_16C7C-Obj4A_SubIndex
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj4A_Init:				; DATA XREF: ROM:Obj4A_SubIndexo
		move.w	8(a0),d0
		sub.w	($FFFFB008).w,d0
		cmpi.w	#$80,d0	; ''
		bgt.s	locret_16B86
		cmpi.w	#$FF80,d0
		blt.s	locret_16B86
		addq.b	#2,$25(a0)
		move.b	#1,$1C(a0)

locret_16B86:				; CODE XREF: ROM:00016B74j
					; ROM:00016B7Aj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj4A_Main:				; DATA XREF: ROM:00016B62o
		subi.l	#$18000,$C(a0)
		move.w	$2A(a0),d0
		sub.w	$C(a0),d0
		cmpi.w	#$20,d0	; ' '
		ble.s	locret_16BA8
		addq.b	#2,$25(a0)
		move.w	#0,$2C(a0)

locret_16BA8:				; CODE XREF: ROM:00016B9Cj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16BAA:				; DATA XREF: ROM:00016B64o
		subi.w	#1,$2C(a0)
		beq.w	loc_16C76
		bpl.w	locret_16C74
		move.w	#$1E,$2C(a0)
		jsr	SingleObjLoad
		bne.s	loc_16C10
		move.b	#$4A,0(a1) ; 'J'
		move.b	#4,routine(a1)
		move.l	#Map_Obj4A,4(a1)
		move.b	#4,$1A(a1)
		move.w	#$24C6,2(a1)
		move.b	#3,$18(a1)
		move.b	#$10,$19(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.w	#$1E,$2C(a1)
		move.b	1(a0),1(a1)
		move.b	$22(a0),$22(a1)

loc_16C10:				; CODE XREF: ROM:00016BC4j
		jsr	SingleObjLoad
		bne.s	locret_16C74
		move.b	#$4A,0(a1) ; 'J'
		move.b	#6,routine(a1)
		move.l	#Map_Obj4A,4(a1)
		move.w	#$24C6,2(a1)
		move.b	#4,$18(a1)
		move.b	#$10,$19(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.w	#$F,$2C(a1)
		move.b	1(a0),1(a1)
		move.b	$22(a0),$22(a1)
		move.b	#2,$1C(a1)
		move.w	#$FA80,$10(a1)
		btst	#0,1(a1)
		beq.s	locret_16C74
		neg.w	$10(a1)

locret_16C74:				; CODE XREF: ROM:00016BB4j
					; ROM:00016C16j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16C76:				; CODE XREF: ROM:00016BB0j
		addq.b	#2,$25(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16C7C:				; DATA XREF: ROM:00016B66o
		move.w	#$FFFA,d0
		btst	#0,1(a0)
		beq.s	loc_16C8A
		neg.w	d0

loc_16C8A:				; CODE XREF: ROM:00016C86j
		add.w	d0,8(a0)
		bra.w	loc_16D3C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj4A:	dc.w byte_16C98-Ani_Obj4A ; DATA XREF: ROM:00016AC4o
					; ROM:00016B52o ...
		dc.w byte_16C9B-Ani_Obj4A
		dc.w byte_16CA0-Ani_Obj4A
byte_16C98:	dc.b  $F,  0,$FF	; 0 ; DATA XREF: ROM:Ani_Obj4Ao
byte_16C9B:	dc.b   3,  1,  2,  3,$FF; 0 ; DATA XREF: ROM:00016C94o
byte_16CA0:	dc.b   2,  5,  6,$FF	; 0 ; DATA XREF: ROM:00016C96o
Map_Obj4A:	dc.w word_16CB2-Map_Obj4A ; DATA XREF: ROM:loc_16ADEo
					; ROM:00016BD2o ...
		dc.w word_16CC4-Map_Obj4A
		dc.w word_16CDE-Map_Obj4A
		dc.w word_16CF8-Map_Obj4A
		dc.w word_16D12-Map_Obj4A
		dc.w word_16D1C-Map_Obj4A
		dc.w word_16D26-Map_Obj4A
word_16CB2:	dc.w 2			; DATA XREF: ROM:Map_Obj4Ao
		dc.w $F00D,    0,    0,$FFF0; 0
		dc.w	$D,    8,    4,$FFF0; 4
word_16CC4:	dc.w 3			; DATA XREF: ROM:00016CA6o
		dc.w $F00D,    0,    0,$FFF0; 0
		dc.w	 9,  $10,    8,$FFE8; 4
		dc.w	 9,  $16,   $B,	   0; 8
word_16CDE:	dc.w 3			; DATA XREF: ROM:00016CA8o
		dc.w $F00D,    0,    0,$FFF0; 0
		dc.w	 9,  $1C,   $E,$FFE8; 4
		dc.w	 9,  $22,  $11,	   0; 8
word_16CF8:	dc.w 3			; DATA XREF: ROM:00016CAAo
		dc.w $F00D,    0,    0,$FFF0; 0
		dc.w	 9,  $28,  $14,$FFE8; 4
		dc.w	 9,  $2E,  $17,	   0; 8
word_16D12:	dc.w 1			; DATA XREF: ROM:00016CACo
		dc.w $F001,  $34,  $1A,$FFF7; 0
word_16D1C:	dc.w 1			; DATA XREF: ROM:00016CAEo
		dc.w $F201,  $36,  $1B,$FFF0; 0
word_16D26:	dc.w 1			; DATA XREF: ROM:00016CB0o
		dc.w $F201,  $38,  $1C,$FFF0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16D30:				; CODE XREF: ROM:00016ADAj
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16D36:				; CODE XREF: ROM:00016AD6j
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16D3C:				; CODE XREF: ROM:00016ACEj
					; ROM:00016B5Cj ...
		jmp	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_AnimateSprite_5:			; CODE XREF: ROM:00016ACAp
					; ROM:00016B58p
		jmp	AnimateSprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMoveAndFall_3:				; CODE XREF: ROM:loc_16AC0p
					; ROM:00016B10p
		jmp	ObjectMoveAndFall
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
;----------------------------------------------------
; Object 4C - Bat badnik from HPZ
;----------------------------------------------------

Obj4C:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj4C_Index(pc,d0.w),d1
		jmp	Obj4C_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj4C_Index:	dc.w Obj4C_Init-Obj4C_Index ; DATA XREF: ROM:Obj4C_Indexo
					; ROM:00016D60o ...
		dc.w loc_16DA2-Obj4C_Index
		dc.w loc_16E10-Obj4C_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj4C_Init:				; DATA XREF: ROM:Obj4C_Indexo
		move.l	#Map_Obj4C,4(a0)
		move.w	#$2530,2(a0)
		ori.b	#4,1(a0)
		move.b	#$A,$20(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		move.b	#$10,$16(a0)
		move.b	#8,$17(a0)
		addq.b	#2,routine(a0)
		move.w	$C(a0),$2E(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16DA2:				; DATA XREF: ROM:00016D60o
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj4C_SubIndex(pc,d0.w),d1
		jsr	Obj4C_SubIndex(pc,d1.w)
		bsr.w	sub_16DC8
		lea	(Ani_Obj4C).l,a1
		bsr.w	j_AnimateSprite_6
		bra.w	loc_171C4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj4C_SubIndex:	dc.w loc_16F2E-Obj4C_SubIndex ;	DATA XREF: ROM:Obj4C_SubIndexo
					; ROM:00016DC4o ...
		dc.w loc_16F66-Obj4C_SubIndex
		dc.w loc_16F72-Obj4C_SubIndex

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_16DC8:				; CODE XREF: ROM:00016DB0p
		move.b	$3F(a0),d0
		jsr	(CalcSine).l
		asr.w	#6,d0
		add.w	$2E(a0),d0
		move.w	d0,$C(a0)
		addq.b	#4,$3F(a0)
		rts
; End of function sub_16DC8


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_16DE2:				; CODE XREF: ROM:00016F36p
		move.w	8(a0),d0
		sub.w	($FFFFB008).w,d0
		cmpi.w	#$80,d0	; ''
		bgt.s	locret_16E0E
		cmpi.w	#$FF80,d0
		blt.s	locret_16E0E
		move.b	#4,$25(a0)
		move.b	#2,$1C(a0)
		move.w	#8,$2A(a0)
		move.b	#0,$3E(a0)

locret_16E0E:				; CODE XREF: sub_16DE2+Cj
					; sub_16DE2+12j
		rts
; End of function sub_16DE2

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16E10:				; DATA XREF: ROM:00016D62o
		bsr.w	sub_16F0E
		bsr.w	sub_16EB0
		bsr.w	sub_16E30
		bsr.w	j_ObjectMove_8
		lea	(Ani_Obj4C).l,a1
		bsr.w	j_AnimateSprite_6
		bra.w	loc_171C4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_16E30:				; CODE XREF: ROM:00016E18p
		tst.b	$3D(a0)
		beq.s	locret_16E42
		bset	#0,1(a0)
		bset	#0,$22(a0)

locret_16E42:				; CODE XREF: sub_16E30+4j
		rts
; End of function sub_16E30


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_16E44:				; CODE XREF: ROM:loc_16F72p
		subi.w	#1,$2C(a0)
		bpl.s	locret_16E8E
		move.w	8(a0),d0
		sub.w	($FFFFB008).w,d0
		cmpi.w	#$60,d0	; '`'
		bgt.s	loc_16E90
		cmpi.w	#$FFA0,d0
		blt.s	loc_16E90
		tst.w	d0
		bpl.s	loc_16E68
		st	$3D(a0)

loc_16E68:				; CODE XREF: sub_16E44+1Ej
		move.b	#$40,$3F(a0) ; '@'
		move.w	#$400,$14(a0)
		move.b	#4,routine(a0)
		move.b	#3,$1C(a0)
		move.w	#$C,$2A(a0)
		move.b	#1,$3E(a0)
		moveq	#0,d0

locret_16E8E:				; CODE XREF: sub_16E44+6j
					; sub_16E44+56j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16E90:				; CODE XREF: sub_16E44+14j
					; sub_16E44+1Aj
		cmpi.w	#$80,d0	; ''
		bgt.s	loc_16E9C
		cmpi.w	#$FF80,d0
		bgt.s	locret_16E8E

loc_16E9C:				; CODE XREF: sub_16E44+50j
		move.b	#1,$1C(a0)
		move.b	#0,$25(a0)
		move.w	#$18,$2A(a0)
		rts
; End of function sub_16E44


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_16EB0:				; CODE XREF: ROM:00016E14p
		tst.b	$3D(a0)
		bne.s	loc_16ECA
		moveq	#0,d0
		move.b	$3F(a0),d0
		cmpi.w	#$C0,d0	; 'À'
		bge.s	loc_16EDE
		addq.b	#2,d0
		move.b	d0,$3F(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16ECA:				; CODE XREF: sub_16EB0+4j
		moveq	#0,d0
		move.b	$3F(a0),d0
		cmpi.w	#$C0,d0	; 'À'
		beq.s	loc_16EDE
		subq.b	#2,d0
		move.b	d0,$3F(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16EDE:				; CODE XREF: sub_16EB0+10j
					; sub_16EB0+24j
		sf	$3D(a0)
		move.b	#0,$1C(a0)
		move.b	#2,routine(a0)
		move.b	#0,$25(a0)
		move.w	#$18,$2A(a0)
		move.b	#1,$1C(a0)
		bclr	#0,1(a0)
		bclr	#0,$22(a0)
		rts
; End of function sub_16EB0


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_16F0E:				; CODE XREF: ROM:loc_16E10p
		move.b	$3F(a0),d0
		jsr	(CalcSine).l
		muls.w	$14(a0),d1
		asr.l	#8,d1
		move.w	d1,$10(a0)
		muls.w	$14(a0),d0
		asr.l	#8,d0
		move.w	d0,$12(a0)
		rts
; End of function sub_16F0E

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16F2E:				; DATA XREF: ROM:Obj4C_SubIndexo
		subi.w	#1,$2A(a0)
		bpl.s	locret_16F64
		bsr.w	sub_16DE2
		beq.s	locret_16F64
		jsr	(RandomNumber).l
		andi.b	#$FF,d0
		bne.s	locret_16F64
		move.w	#$18,$2A(a0)
		move.w	#$1E,$2C(a0)
		addq.b	#2,$25(a0)
		move.b	#1,$1C(a0)
		move.b	#0,$3E(a0)

locret_16F64:				; CODE XREF: ROM:00016F34j
					; ROM:00016F3Aj ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16F66:				; DATA XREF: ROM:00016DC4o
		subq.b	#1,$2A(a0)
		bpl.s	locret_16F70
		subq.b	#2,$25(a0)

locret_16F70:				; CODE XREF: ROM:00016F6Aj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16F72:				; DATA XREF: ROM:00016DC6o
		bsr.w	sub_16E44
		beq.s	locret_16FB8
		subi.w	#1,$2A(a0)
		bne.s	locret_16FB8
		move.b	$3E(a0),d0
		beq.s	loc_16FA0
		move.b	#0,$3E(a0)
		move.w	#8,$2A(a0)
		bset	#0,1(a0)
		bset	#0,$22(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_16FA0:				; CODE XREF: ROM:00016F84j
		move.b	#1,$3E(a0)
		move.w	#$C,$2A(a0)
		bclr	#0,1(a0)
		bclr	#0,$22(a0)

locret_16FB8:				; CODE XREF: ROM:00016F76j
					; ROM:00016F7Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj4C:	dc.w byte_16FC2-Ani_Obj4C ; DATA XREF: ROM:00016DB4o
					; ROM:00016E20o ...
		dc.w byte_16FC6-Ani_Obj4C
		dc.w byte_16FD5-Ani_Obj4C
		dc.w byte_16FE6-Ani_Obj4C
byte_16FC2:	dc.b   1,  0,  5,$FF	; 0 ; DATA XREF: ROM:Ani_Obj4Co
byte_16FC6:	dc.b   1,  1,  6,  1,  6,  2,  7,  2,  7,  1,  6,  1,  6,$FD,  0; 0
					; DATA XREF: ROM:00016FBCo
byte_16FD5:	dc.b   1,  1,  6,  1,  6,  2,  7,  3,  8,  4,  9,  4,  9,  3,  8,$FE; 0
					; DATA XREF: ROM:00016FBEo
		dc.b  $A		; 16
byte_16FE6:	dc.b   3, $A, $B, $C, $D, $E,$FF,  0; 0	; DATA XREF: ROM:00016FC0o
Map_Obj4C:	dc.w word_1700C-Map_Obj4C ; DATA XREF: ROM:Obj4C_Inito
					; ROM:Map_Obj4Co ...
		dc.w word_1702E-Map_Obj4C
		dc.w word_17050-Map_Obj4C
		dc.w word_17072-Map_Obj4C
		dc.w word_17094-Map_Obj4C
		dc.w word_170AE-Map_Obj4C
		dc.w word_170D0-Map_Obj4C
		dc.w word_170F2-Map_Obj4C
		dc.w word_17114-Map_Obj4C
		dc.w word_17136-Map_Obj4C
		dc.w word_17150-Map_Obj4C
		dc.w word_1716A-Map_Obj4C
		dc.w word_17184-Map_Obj4C
		dc.w word_17196-Map_Obj4C
		dc.w word_171A8-Map_Obj4C
word_1700C:	dc.w 4			; DATA XREF: ROM:Map_Obj4Co
		dc.w $F005,    0,    0,$FFF8; 0
		dc.w	 5,    4,    2,$FFF8; 4
		dc.w $F00B,    8,    4,	   5; 8
		dc.w $F00B, $808, $804,$FFE3; 12
word_1702E:	dc.w 4			; DATA XREF: ROM:00016FF0o
		dc.w $F005,    0,    0,$FFF8; 0
		dc.w	 5,    4,    2,$FFF8; 4
		dc.w $F60D,  $14,   $A,	   5; 8
		dc.w $F60D, $814, $80A,$FFDB; 12
word_17050:	dc.w 4			; DATA XREF: ROM:00016FF2o
		dc.w $F005,    0,    0,$FFF8; 0
		dc.w	 5,    4,    2,$FFF8; 4
		dc.w $F80D,  $1C,   $E,	   4; 8
		dc.w $F80D, $81C, $80E,$FFDC; 12
word_17072:	dc.w 4			; DATA XREF: ROM:00016FF4o
		dc.w $F005,    0,    0,$FFF8; 0
		dc.w	 5,    4,    2,$FFF8; 4
		dc.w $F805,  $24,  $12,$FFEC; 8
		dc.w $F805,  $28,  $14,	   4; 12
word_17094:	dc.w 3			; DATA XREF: ROM:00016FF6o
		dc.w $F801,  $2C,  $16,	   0; 0
		dc.w $F005,    0,    0,$FFF8; 4
		dc.w	 5,    4,    2,$FFF8; 8
word_170AE:	dc.w 4			; DATA XREF: ROM:00016FF8o
		dc.w $F005,    0,    0,$FFF8; 0
		dc.w	 5,  $2E,  $17,$FFF8; 4
		dc.w $F00B,    8,    4,	   5; 8
		dc.w $F00B, $808, $804,$FFE3; 12
word_170D0:	dc.w 4			; DATA XREF: ROM:00016FFAo
		dc.w $F005,    0,    0,$FFF8; 0
		dc.w	 5,  $2E,  $17,$FFF8; 4
		dc.w $F60D,  $14,   $A,	   5; 8
		dc.w $F60D, $814, $80A,$FFDB; 12
word_170F2:	dc.w 4			; DATA XREF: ROM:00016FFCo
		dc.w $F005,    0,    0,$FFF8; 0
		dc.w	 5,  $2E,  $17,$FFF8; 4
		dc.w $F80D,  $1C,   $E,	   4; 8
		dc.w $F80D, $81C, $80E,$FFDC; 12
word_17114:	dc.w 4			; DATA XREF: ROM:00016FFEo
		dc.w $F005,    0,    0,$FFF8; 0
		dc.w	 5,  $2E,  $17,$FFF8; 4
		dc.w $F805,  $28,  $14,	   4; 8
		dc.w $F805,  $24,  $12,$FFEC; 12
word_17136:	dc.w 3			; DATA XREF: ROM:00017000o
		dc.w $F801,  $2C,  $16,	   0; 0
		dc.w $F005,    0,    0,$FFF8; 4
		dc.w	 5,  $2E,  $17,$FFF8; 8
word_17150:	dc.w 3			; DATA XREF: ROM:00017002o
		dc.w $F007,  $32,  $19,$FFF8; 0
		dc.w $F80D,  $1C,   $E,	   4; 4
		dc.w $F80D, $81C, $80E,$FFDC; 8
word_1716A:	dc.w 3			; DATA XREF: ROM:00017004o
		dc.w $F007,  $32,  $19,$FFF8; 0
		dc.w $F805,  $28,  $14,	   4; 4
		dc.w $F805,  $24,  $12,$FFEC; 8
word_17184:	dc.w 2			; DATA XREF: ROM:00017006o
		dc.w $F801,  $2C,  $16,	   0; 0
		dc.w $F007,  $32,  $19,$FFF8; 4
word_17196:	dc.w 2			; DATA XREF: ROM:00017008o
		dc.w $F801, $82C, $816,$FFF8; 0
		dc.w $F007,  $32,  $19,$FFF8; 4
word_171A8:	dc.w 3			; DATA XREF: ROM:0001700Ao
		dc.w $F007,  $32,  $19,$FFF8; 0
		dc.w $F805, $828, $814,$FFEC; 4
		dc.w $F805, $824, $812,	   4; 8
		align 4

loc_171C4:				; CODE XREF: ROM:00016DBEj
					; ROM:00016E2Aj
		jmp	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_AnimateSprite_6:			; CODE XREF: ROM:00016DBAp
					; ROM:00016E26p
		jmp	AnimateSprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMove_8:				; CODE XREF: ROM:00016E1Cp
		jmp	ObjectMove
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
;----------------------------------------------------
; Object 4E - Aligator badnik from HPZ
;----------------------------------------------------

Obj4E:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj4E_Index(pc,d0.w),d1
		jmp	Obj4E_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj4E_Index:	dc.w Obj4E_Init-Obj4E_Index ; DATA XREF: ROM:Obj4E_Indexo
					; ROM:000171E8o
		dc.w Obj4E_Main-Obj4E_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj4E_Init:				; DATA XREF: ROM:Obj4E_Indexo
		move.l	#Map_Obj4E,4(a0)
		move.w	#$2300,2(a0)
		ori.b	#4,1(a0)
		move.b	#$A,$20(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		move.b	#$10,$16(a0)
		move.b	#8,$17(a0)
		bsr.w	j_ObjectMoveAndFall_4
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	locret_17238
		add.w	d1,$C(a0)
		move.w	#0,$12(a0)
		addq.b	#2,routine(a0)

locret_17238:				; CODE XREF: ROM:00017228j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj4E_Main:				; DATA XREF: ROM:000171E8o
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj4E_SubIndex(pc,d0.w),d1
		jsr	Obj4E_SubIndex(pc,d1.w)
		lea	(Ani_Obj4E).l,a1
		bsr.w	j_AnimateSprite_7
		bra.w	loc_174B8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj4E_SubIndex:	dc.w loc_1725A-Obj4E_SubIndex ;	DATA XREF: ROM:Obj4E_SubIndexo
					; ROM:00017258o
		dc.w loc_1727E-Obj4E_SubIndex
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1725A:				; DATA XREF: ROM:Obj4E_SubIndexo
		subq.w	#1,$30(a0)
		bpl.s	locret_1727C
		addq.b	#2,$25(a0)
		move.w	#$FF40,$10(a0)
		move.b	#0,$1C(a0)
		bchg	#0,$22(a0)
		bne.s	locret_1727C
		neg.w	$10(a0)

locret_1727C:				; CODE XREF: ROM:0001725Ej
					; ROM:00017276j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1727E:				; DATA XREF: ROM:00017258o
		bsr.w	sub_172B6
		bsr.w	j_ObjectMove_6
		jsr	ObjHitFloor
		cmpi.w	#$FFF8,d1
		blt.s	loc_1729E
		cmpi.w	#$C,d1
		bge.s	loc_1729E
		add.w	d1,$C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1729E:				; CODE XREF: ROM:00017290j
					; ROM:00017296j
		subq.b	#2,$25(a0)
		move.w	#$3B,$30(a0) ; ';'
		move.w	#0,$10(a0)
		move.b	#1,$1C(a0)
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_172B6:				; CODE XREF: ROM:loc_1727Ep
		move.w	8(a0),d0
		sub.w	($FFFFB008).w,d0
		bmi.s	loc_172D0
		cmpi.w	#$40,d0	; '@'
		bgt.s	loc_172E6
		btst	#0,$22(a0)
		beq.s	loc_172DE
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_172D0:				; CODE XREF: sub_172B6+8j
		cmpi.w	#$FFC0,d0
		blt.s	loc_172E6
		btst	#0,$22(a0)
		beq.s	loc_172E6

loc_172DE:				; CODE XREF: sub_172B6+16j
		move.b	#2,$1C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_172E6:				; CODE XREF: sub_172B6+Ej
					; sub_172B6+1Ej ...
		move.b	#0,$1C(a0)
		rts
; End of function sub_172B6

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj4E:	dc.w byte_172F4-Ani_Obj4E ; DATA XREF: ROM:00017248o
					; ROM:Ani_Obj4Eo ...
		dc.w byte_172FC-Ani_Obj4E
		dc.w byte_172FF-Ani_Obj4E
byte_172F4:	dc.b   3,  0,  4,  2,  3,  1,  5,$FF; 0	; DATA XREF: ROM:Ani_Obj4Eo
byte_172FC:	dc.b  $F,  0,$FF	; 0 ; DATA XREF: ROM:000172F0o
byte_172FF:	dc.b   3,  6, $A,  8,  9,  7, $B,$FF,  0; 0 ; DATA XREF: ROM:000172F2o
Map_Obj4E:	dc.w word_17320-Map_Obj4E ; DATA XREF: ROM:Obj4E_Inito
					; ROM:Map_Obj4Eo ...
		dc.w word_17342-Map_Obj4E
		dc.w word_17364-Map_Obj4E
		dc.w word_17386-Map_Obj4E
		dc.w word_173A8-Map_Obj4E
		dc.w word_173CA-Map_Obj4E
		dc.w word_173EC-Map_Obj4E
		dc.w word_1740E-Map_Obj4E
		dc.w word_17430-Map_Obj4E
		dc.w word_17452-Map_Obj4E
		dc.w word_17474-Map_Obj4E
		dc.w word_17496-Map_Obj4E
word_17320:	dc.w 4			; DATA XREF: ROM:Map_Obj4Eo
		dc.w $F80E,    0,    0,$FFE4; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1C,   $E,	   4; 8
		dc.w	 5,  $20,  $10,	  $C; 12
word_17342:	dc.w 4			; DATA XREF: ROM:0001730Ao
		dc.w $F80E,    0,    0,$FFE4; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1C,   $E,	   4; 8
		dc.w	 5,  $24,  $12,	  $C; 12
word_17364:	dc.w 4			; DATA XREF: ROM:0001730Co
		dc.w $F80E,    0,    0,$FFE4; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1C,   $E,	   4; 8
		dc.w	 5,  $28,  $14,	  $C; 12
word_17386:	dc.w 4			; DATA XREF: ROM:0001730Eo
		dc.w $F80E,    0,    0,$FFE4; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1E,   $F,	   4; 8
		dc.w	 5,  $20,  $10,	  $C; 12
word_173A8:	dc.w 4			; DATA XREF: ROM:00017310o
		dc.w $F80E,    0,    0,$FFE4; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1E,   $F,	   4; 8
		dc.w	 5,  $24,  $12,	  $C; 12
word_173CA:	dc.w 4			; DATA XREF: ROM:00017312o
		dc.w $F80E,    0,    0,$FFE4; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1E,   $F,	   4; 8
		dc.w	 5,  $28,  $14,	  $C; 12
word_173EC:	dc.w 4			; DATA XREF: ROM:00017314o
		dc.w $F00B,   $C,    6,$FFEC; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1C,   $E,	   4; 8
		dc.w	 5,  $20,  $10,	  $C; 12
word_1740E:	dc.w 4			; DATA XREF: ROM:00017316o
		dc.w $F00B,   $C,    6,$FFEC; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1C,   $E,	   4; 8
		dc.w	 5,  $24,  $12,	  $C; 12
word_17430:	dc.w 4			; DATA XREF: ROM:00017318o
		dc.w $F00B,   $C,    6,$FFEC; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1C,   $E,	   4; 8
		dc.w	 5,  $28,  $14,	  $C; 12
word_17452:	dc.w 4			; DATA XREF: ROM:0001731Ao
		dc.w $F00B,   $C,    6,$FFEC; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1E,   $F,	   4; 8
		dc.w	 5,  $20,  $10,	  $C; 12
word_17474:	dc.w 4			; DATA XREF: ROM:0001731Co
		dc.w $F00B,   $C,    6,$FFEC; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1E,   $F,	   4; 8
		dc.w	 5,  $24,  $12,	  $C; 12
word_17496:	dc.w 4			; DATA XREF: ROM:0001731Eo
		dc.w $F00B,   $C,    6,$FFEC; 0
		dc.w $F805,  $18,   $C,	   4; 4
		dc.w	 1,  $1E,   $F,	   4; 8
		dc.w	 5,  $28,  $14,	  $C; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_174B8:				; CODE XREF: ROM:00017252j
		jmp	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_AnimateSprite_7:			; CODE XREF: ROM:0001724Ep
		jmp	AnimateSprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMoveAndFall_4:				; CODE XREF: ROM:0001721Cp
		jmp	ObjectMoveAndFall
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMove_6:				; CODE XREF: ROM:00017282p
		jmp	ObjectMove

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 53 - Masher from EHZ
; ---------------------------------------------------------------------------

Obj53:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj53_Index(pc,d0.w),d1
		jsr	Obj53_Index(pc,d1.w)
		bra.w	loc_175B8
; ===========================================================================
Obj53_Index:	dc.w Obj53_Init-Obj53_Index
		dc.w Obj53_Main-Obj53_Index
; ===========================================================================

Obj53_Init:
		addq.b	#2,routine(a0)
		move.l	#Map_obj53,4(a0)
		move.w	#$41C,2(a0)
		bsr.w	j_Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#9,$20(a0)
		move.b	#$10,$19(a0)
		move.w	#$FC00,$12(a0)
		move.w	$C(a0),$30(a0)

Obj53_Main:
		lea	(Ani_obj53).l,a1
		bsr.w	j_AnimateSprite
		bsr.w	j_ObjectMove
		addi.w	#$18,$12(a0)
		move.w	$30(a0),d0
		cmp.w	$C(a0),d0
		bcc.s	loc_17548
		move.w	d0,$C(a0)
		move.w	#$FB00,$12(a0)

loc_17548:
		move.b	#1,$1C(a0)
		subi.w	#$C0,d0
		cmp.w	$C(a0),d0
		bcc.s	locret_1756A
		move.b	#0,$1C(a0)
		tst.w	$12(a0)
		bmi.s	locret_1756A
		move.b	#2,$1C(a0)

locret_1756A:
		rts
; ===========================================================================
; animation script
Ani_obj53:	dc.w byte_17572-Ani_obj53
		dc.w byte_17576-Ani_obj53
		dc.w byte_1757A-Ani_obj53
byte_17572:	dc.b   7,  0,  1,$FF
byte_17576:	dc.b   3,  0,  1,$FF
byte_1757A:	dc.b   7,  0,$FF,  0
		even
; ---------------------------------------------------------------------------
; Sprite mappings
; ---------------------------------------------------------------------------
Map_obj53:	incbin	"mappings/sprite/obj53.bin"

; ===========================================================================

loc_175B8:
		jmp	(MarkObjGone).l

j_AnimateSprite:
		jmp	(AnimateSprite).l

j_Adjust2PArtPointer:
		jmp	(Adjust2PArtPointer).l

j_ObjectMove:
		jmp	(ObjectMove).l

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 54 - Snail badnik from	EHZ
; ---------------------------------------------------------------------------

Obj54:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj54_Index(pc,d0.w),d1
		jmp	Obj54_Index(pc,d1.w)
; ===========================================================================
Obj54_Index:	dc.w Obj54_Init-Obj54_Index
		dc.w Obj54_Move-Obj54_Index
		dc.w loc_177B4-Obj54_Index
		dc.w loc_177EC-Obj54_Index
		dc.w loc_17772-Obj54_Index
; ===========================================================================

Obj54_Init:
		move.l	#Map_obj54,4(a0)
		move.w	#$402,2(a0)
		bsr.w	j_Adjust2PArtPointer_3
		ori.b	#4,1(a0)
		move.b	#$A,$20(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		move.b	#$10,$16(a0)
		move.b	#$E,$17(a0)
		bsr.w	j_SingleObjLoad2_1
		bne.s	loc_17670
		move.b	#$54,0(a1)
		move.b	#6,routine(a1)
		move.l	#Map_obj54,4(a1)
		move.w	#$2402,2(a1)
		bsr.w	j_Adjust2PArtPointer2_0
		move.b	#3,$18(a1)
		move.b	#$10,$19(a1)
		move.b	$22(a0),$22(a1)
		move.b	1(a0),1(a1)
		move.l	a0,$2A(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	#2,$1A(a1)

loc_17670:
		addq.b	#2,routine(a0)
		move.w	#$FF80,d0
		btst	#0,$22(a0)
		beq.s	loc_17682
		neg.w	d0

loc_17682:
		move.w	d0,$10(a0)
		rts
; ===========================================================================
; loc_17688:
Obj54_Move:
		bsr.w	sub_176D0
		bsr.w	j_ObjectMove_7
		jsr	(ObjHitFloor).l
		cmpi.w	#-8,d1
		blt.s	Obj54_Display
		cmpi.w	#$C,d1
		bge.s	Obj54_Display
		add.w	d1,$C(a0)
		lea	(Ani_Obj54).l,a1
		bsr.w	j_AnimateSprite_8
		bra.w	loc_1786C
; ===========================================================================
; loc_176B4:
Obj54_Display:
		addq.b	#2,routine(a0)
		move.w	#$14,$30(a0)
		st	$34(a0)
		lea	(Ani_Obj54).l,a1
		bsr.w	j_AnimateSprite_8
		bra.w	loc_1786C

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_176D0:				; CODE XREF: ROM:loc_17688p
		tst.b	$35(a0)
		bne.s	locret_17712
		move.w	($FFFFB008).w,d0
		sub.w	8(a0),d0
		cmpi.w	#$64,d0	; 'd'
		bgt.s	locret_17712
		cmpi.w	#$FF9C,d0
		blt.s	locret_17712
		tst.w	d0
		bmi.s	loc_176F8
		btst	#0,$22(a0)
		beq.s	locret_17712
		bra.s	loc_17700
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_176F8:				; CODE XREF: sub_176D0+1Cj
		btst	#0,$22(a0)
		bne.s	locret_17712

loc_17700:				; CODE XREF: sub_176D0+26j
		move.w	$10(a0),d0
		asl.w	#2,d0
		move.w	d0,$10(a0)
		st	$35(a0)
		bsr.w	sub_17714

locret_17712:				; CODE XREF: sub_176D0+4j
					; sub_176D0+12j ...
		rts
; End of function sub_176D0


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_17714:				; CODE XREF: sub_176D0+3Ep
		bsr.w	j_SingleObjLoad2_1
		bne.s	locret_17770
		move.b	#$54,0(a1) ; 'T'
		move.b	#8,routine(a1)
		move.l	#Map_obj4B,4(a1)
		move.w	#$3E6,2(a1)
		bsr.w	j_Adjust2PArtPointer2_0
		move.b	#4,$18(a1)
		move.b	#$10,$19(a1)
		move.b	$22(a0),$22(a1)
		move.b	1(a0),1(a1)
		move.l	a0,$2A(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		addq.w	#7,$C(a1)
		addi.w	#$D,8(a1)
		move.b	#1,$1C(a1)

locret_17770:				; CODE XREF: sub_17714+4j
		rts
; End of function sub_17714

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17772:
		movea.l	$2A(a0),a1
		cmpi.b	#$54,(a1) ; 'T'
		bne.w	loc_17854
		tst.b	$34(a1)
		bne.w	loc_17854
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		addq.w	#7,$C(a0)
		moveq	#$D,d0
		btst	#0,$22(a0)
		beq.s	loc_177A2
		neg.w	d0

loc_177A2:
		add.w	d0,8(a0)
		lea	(Ani_obj4B).l,a1
		bsr.w	j_AnimateSprite_8
		bra.w	loc_1786C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_177B4:				; DATA XREF: ROM:000175E2o
		subi.w	#1,$30(a0)
		bpl.w	loc_1786C
		neg.w	$10(a0)
		bsr.w	j_ObjectMoveAndFall_5
		move.w	$10(a0),d0
		asr.w	#2,d0
		move.w	d0,$10(a0)
		bchg	#0,$22(a0)
		bchg	#0,1(a0)
		subq.b	#2,routine(a0)
		sf	$34(a0)
		sf	$35(a0)
		bra.w	loc_1786C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_177EC:				; DATA XREF: ROM:000175E4o
		movea.l	$2A(a0),a1
		cmpi.b	#$54,(a1) ; 'T'
		bne.w	loc_17854
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		move.b	$22(a1),$22(a0)
		move.b	1(a1),1(a0)
		bra.w	loc_1786C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj54:	dc.w byte_17818-Ani_Obj54 ; DATA XREF: ROM:000176A6o
					; ROM:000176C2o ...
		dc.w byte_1781C-Ani_Obj54
byte_17818:	dc.b   5,  0,  1,$FF	; 0 ; DATA XREF: ROM:Ani_Obj54o
byte_1781C:	dc.b   1,  0,  1,$FF	; 0 ; DATA XREF: ROM:00017816o
; ---------------------------------------------------------------------------
; Sprite mappings
; ---------------------------------------------------------------------------
Map_obj54:	incbin	"mappings/sprite/obj54.bin"




; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17854:
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_SingleObjLoad2_1:		; CODE XREF: ROM:0001761Ep sub_17714p
		jmp	SingleObjLoad2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_AnimateSprite_8:			; CODE XREF: ROM:000176ACp
					; ROM:000176C8p ...
		jmp	AnimateSprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_Adjust2PArtPointer2_0:		; CODE XREF: ROM:0001763Ep
					; sub_17714+20p
		jmp	Adjust2PArtPointer2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1786C:				; CODE XREF: ROM:000176B0j
					; ROM:000176CCj ...
		jmp	MarkObjGone_P1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_Adjust2PArtPointer_3:		; CODE XREF: ROM:000175F6p
		jmp	Adjust2PArtPointer
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMoveAndFall_5:				; CODE XREF: ROM:000177C2p
		jmp	ObjectMoveAndFall
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMove_7:				; CODE XREF: ROM:0001768Cp
		jmp	ObjectMove
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 57 - sub object of the	EHZ boss
;----------------------------------------------------

Obj57:					; DATA XREF: ROM:Obj_Indexo
					; ROM:0001833Co
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	off_17892(pc,d0.w),d1
		jmp	off_17892(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_17892:	dc.w loc_1789E-off_17892; 0 ; DATA XREF: ROM:off_17892o
					; ROM:off_17892+2o ...
		dc.w loc_178C4-off_17892; 1
		dc.w loc_17920-off_17892; 2
		dc.w loc_17952-off_17892; 3
		dc.w loc_1797C-off_17892; 4
		dc.w loc_17996-off_17892; 5
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1789E:				; DATA XREF: ROM:off_17892o
		move.b	#0,$20(a0)
		cmpi.w	#$29D0,8(a0)
		ble.s	loc_178B6
		subi.w	#1,8(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_178B6:				; CODE XREF: ROM:000178AAj
		move.w	#$29D0,8(a0)
		addq.b	#2,$25(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_178C4:				; DATA XREF: ROM:off_17892o
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	off_178D2(pc,d0.w),d1
		jmp	off_178D2(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_178D2:	dc.w loc_178D6-off_178D2 ; DATA	XREF: ROM:off_178D2o
					; ROM:000178D4o
		dc.w loc_178FC-off_178D2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_178D6:				; DATA XREF: ROM:off_178D2o
		cmpi.w	#$41E,$C(a0)
		bge.s	loc_178E8
		addi.w	#1,$C(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_178E8:				; CODE XREF: ROM:000178DCj
		addq.b	#2,$2C(a0)
		bset	#0,$2D(a0)
		move.w	#$3C,$2A(a0) ; '<'
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_178FC:				; DATA XREF: ROM:000178D4o
		subi.w	#1,$2A(a0)
		bpl.w	loc_181A8
		move.w	#$FE00,$10(a0)
		addq.b	#2,$25(a0)
		move.b	#$F,$20(a0)
		bset	#1,$2D(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17920:				; DATA XREF: ROM:off_17892o
		bsr.w	sub_17A8C
		bsr.w	sub_17A6A
		move.w	$2E(a0),d0
		lsr.w	#1,d0
		subi.w	#$14,d0
		move.w	d0,$C(a0)
		move.w	#0,$2E(a0)
		move.l	8(a0),d2
		move.w	$10(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d2
		move.l	d2,8(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17952:				; DATA XREF: ROM:off_17892o
		subq.w	#1,$3C(a0)
		bpl.w	BossDefeated
		bset	#0,$22(a0)
		bclr	#7,$22(a0)
		clr.w	$10(a0)
		addq.b	#2,$25(a0)
		move.w	#$FFDA,$3C(a0)
		move.w	#$C,$2A(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1797C:				; DATA XREF: ROM:off_17892o
		addq.w	#1,$C(a0)
		subq.w	#1,$2A(a0)
		bpl.w	loc_181A8
		addq.b	#2,$25(a0)
		move.b	#0,$2C(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17996:				; DATA XREF: ROM:off_17892o
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	off_179A8(pc,d0.w),d1
		jsr	off_179A8(pc,d1.w)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_179A8:	dc.w loc_179AE-off_179A8 ; DATA	XREF: ROM:off_179A8o
					; ROM:000179AAo ...
		dc.w loc_17A22-off_179A8
		dc.w loc_17A3C-off_179A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_179AE:				; DATA XREF: ROM:off_179A8o
		bclr	#0,$2D(a0)
		bsr.w	j_SingleObjLoad2
		bne.w	loc_181A8
		move.b	#$58,0(a1) ; 'X'
		move.l	a0,$34(a1)
		move.l	#Map_Obj58,4(a1)
		move.w	#$2540,2(a1)
		move.b	#4,1(a1)
		move.b	#$20,$19(a1) ; ' '
		move.b	#4,$18(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		addi.w	#$C,$C(a1)
		move.b	$22(a0),$22(a1)
		move.b	1(a0),1(a1)
		move.b	#8,routine(a1)
		move.b	#2,$1C(a1)
		move.w	#$10,$2A(a1)
		move.w	#$32,$2A(a0) ; '2'
		addq.b	#2,$2C(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17A22:				; DATA XREF: ROM:000179AAo
		subi.w	#1,$2A(a0)
		bpl.s	locret_17A3A
		bset	#2,$2D(a0)
		move.w	#$60,$2A(a0) ; '`'
		addq.b	#2,$2C(a0)

locret_17A3A:				; CODE XREF: ROM:00017A28j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17A3C:				; DATA XREF: ROM:000179ACo
		subq.w	#1,$C(a0)
		subi.w	#1,$2A(a0)
		bpl.s	locret_17A68
		addq.w	#1,$C(a0)
		addq.w	#2,8(a0)
		cmpi.w	#$2B08,8(a0)
		bcs.s	locret_17A68
		tst.b	($FFFFF7A7).w
		bne.s	locret_17A68
		move.b	#1,($FFFFF7A7).w
		bra.w	loc_181AE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_17A68:				; CODE XREF: ROM:00017A46j
					; ROM:00017A56j ...
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_17A6A:				; CODE XREF: ROM:00017924p
					; ROM:loc_17C58p
		move.w	8(a0),d0
		cmpi.w	#$2720,d0
		ble.s	loc_17A7A
		cmpi.w	#$2B08,d0
		blt.s	locret_17A8A

loc_17A7A:				; CODE XREF: sub_17A6A+8j
		bchg	#0,$22(a0)
		bchg	#0,1(a0)
		neg.w	$10(a0)

locret_17A8A:				; CODE XREF: sub_17A6A+Ej
		rts
; End of function sub_17A6A


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_17A8C:				; CODE XREF: ROM:loc_17920p
		cmpi.b	#6,$25(a0)
		bcc.s	locret_17AD2
		tst.b	$22(a0)
		bmi.s	loc_17AD4
		tst.b	$20(a0)
		bne.s	locret_17AD2
		tst.b	$3E(a0)
		bne.s	loc_17AB6
		move.b	#$20,$3E(a0) ; ' '
		move.w	#$AC,d0	; '¬'
		jsr	(PlaySound_Special).l

loc_17AB6:				; CODE XREF: sub_17A8C+18j
		lea	($FFFFFB22).w,a1
		moveq	#0,d0
		tst.w	(a1)
		bne.s	loc_17AC4
		move.w	#$EEE,d0

loc_17AC4:				; CODE XREF: sub_17A8C+32j
		move.w	d0,(a1)
		subq.b	#1,$3E(a0)
		bne.s	locret_17AD2
		move.b	#$F,$20(a0)

locret_17AD2:				; CODE XREF: sub_17A8C+6j
					; sub_17A8C+12j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17AD4:				; CODE XREF: sub_17A8C+Cj
		moveq	#$64,d0	; 'd'
		bsr.w	AddPoints
		move.b	#6,$25(a0)
		move.w	#$B3,$3C(a0) ; '³'
		bset	#3,$2D(a0)
		rts
; End of function sub_17A8C

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 58 - sub object of the	EHZ boss
;----------------------------------------------------

Obj58:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	off_17AFC(pc,d0.w),d1
		jmp	off_17AFC(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_17AFC:	dc.w loc_17B2A-off_17AFC ; DATA	XREF: ROM:off_17AFCo
					; ROM:00017AFEo ...
		dc.w loc_17BB0-off_17AFC
		dc.w loc_17C02-off_17AFC
		dc.w loc_17CE4-off_17AFC
		dc.w loc_17B06-off_17AFC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17B06:				; DATA XREF: ROM:00017B04o
		subi.w	#1,$C(a0)
		subi.w	#1,$2A(a0)
		bpl.w	loc_181A8
		move.b	#0,routine(a0)
		lea	(Ani_Obj58).l,a1
		bsr.w	j_AnimateSprite_9
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17B2A:				; DATA XREF: ROM:off_17AFCo
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	off_17B38(pc,d0.w),d1
		jmp	off_17B38(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_17B38:	dc.w loc_17B3C-off_17B38 ; DATA	XREF: ROM:off_17B38o
					; ROM:00017B3Ao
		dc.w loc_17B86-off_17B38
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17B3C:				; DATA XREF: ROM:off_17B38o
		movea.l	$34(a0),a1
		cmpi.b	#$55,(a1) ; 'U'
		bne.w	loc_181AE
		btst	#0,$2D(a1)
		beq.s	loc_17B60
		move.b	#1,$1C(a0)
		move.w	#$18,$2A(a0)
		addq.b	#2,$25(a0)

loc_17B60:				; CODE XREF: ROM:00017B4Ej
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		move.b	$22(a1),$22(a0)
		move.b	1(a1),1(a0)
		lea	(Ani_Obj58).l,a1
		bsr.w	j_AnimateSprite_9
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17B86:				; DATA XREF: ROM:00017B3Ao
		subi.w	#1,$2A(a0)
		bpl.s	loc_17BA2
		cmpi.w	#$FFF0,$2A(a0)
		ble.w	loc_181AE
		addi.w	#1,$C(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17BA2:				; CODE XREF: ROM:00017B8Cj
		lea	(Ani_Obj58).l,a1
		bsr.w	j_AnimateSprite_9
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17BB0:				; DATA XREF: ROM:00017AFEo
		movea.l	$34(a0),a1
		cmpi.b	#$55,(a1) ; 'U'
		bne.w	loc_181AE
		btst	#1,$2D(a1)
		beq.w	loc_181A8
		btst	#2,$2D(a1)
		bne.w	loc_17BF2
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		addi.w	#8,$C(a0)
		move.b	$22(a1),$22(a0)
		move.b	1(a1),1(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17BF2:				; CODE XREF: ROM:00017BCCj
		move.b	#8,$1A(a0)
		move.b	#0,$18(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17C02:				; DATA XREF: ROM:00017B00o
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	off_17C10(pc,d0.w),d1
		jmp	off_17C10(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_17C10:	dc.w loc_17C18-off_17C10 ; DATA	XREF: ROM:off_17C10o
					; ROM:00017C12o ...
		dc.w loc_17C36-off_17C10
		dc.w loc_17C96-off_17C10
		dc.w loc_17CC2-off_17C10
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17C18:				; DATA XREF: ROM:off_17C10o
		movea.l	$34(a0),a1
		cmpi.b	#$55,(a1) ; 'U'
		bne.w	loc_181AE
		btst	#1,$2D(a1)
		beq.w	loc_181A8
		addq.b	#2,$25(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17C36:				; DATA XREF: ROM:00017C12o
		movea.l	$34(a0),a1
		cmpi.b	#$55,(a1) ; 'U'
		bne.w	loc_181AE
		move.b	$22(a1),$22(a0)
		move.b	1(a1),1(a0)
		tst.b	$22(a0)
		bpl.s	loc_17C58
		addq.b	#2,$25(a0)

loc_17C58:				; CODE XREF: ROM:00017C52j
		bsr.w	sub_17A6A
		bsr.w	j_ObjectMoveAndFall_6
		jsr	ObjHitFloor
		tst.w	d1
		bpl.s	loc_17C6E
		add.w	d1,$C(a0)

loc_17C6E:				; CODE XREF: ROM:00017C68j
		move.w	#$100,$12(a0)
		cmpi.b	#1,$18(a0)
		bne.s	loc_17C88
		move.w	$C(a0),d0
		movea.l	$34(a0),a1
		add.w	d0,$2E(a1)

loc_17C88:				; CODE XREF: ROM:00017C7Aj
		lea	(Ani_Obj58a).l,a1
		bsr.w	j_AnimateSprite_9
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17C96:				; DATA XREF: ROM:00017C14o
		subi.w	#1,$2A(a0)
		bpl.w	loc_181A8
		addq.b	#2,$25(a0)
		move.w	#$A,$2A(a0)
		move.w	#$FD00,$12(a0)
		cmpi.b	#1,$18(a0)
		beq.w	loc_181A8
		neg.w	$10(a0)
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17CC2:				; DATA XREF: ROM:00017C16o
		subq.w	#1,$2A(a0)
		bpl.w	loc_181A8
		bsr.w	j_ObjectMoveAndFall_6
		bsr.w	ObjHitFloor
		tst.w	d1
		bpl.s	loc_17CE0
		move.w	#$FE00,$12(a0)
		add.w	d1,$C(a0)

loc_17CE0:				; CODE XREF: ROM:00017CD4j
		bra.w	loc_181B4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17CE4:				; DATA XREF: ROM:00017B02o
		movea.l	$34(a0),a1
		cmpi.b	#$55,(a1) ; 'U'
		bne.w	loc_181AE
		btst	#3,$2D(a1)
		bne.s	loc_17D4A
		bsr.w	sub_17D6A
		btst	#1,$2D(a1)
		beq.w	loc_181A8
		move.b	#$8B,$20(a0)
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		move.b	$22(a1),$22(a0)
		move.b	1(a1),1(a0)
		addi.w	#$10,$C(a0)
		move.w	#$FFCA,d0
		btst	#0,$22(a0)
		beq.s	loc_17D38
		neg.w	d0

loc_17D38:				; CODE XREF: ROM:00017D34j
		add.w	d0,8(a0)
		lea	(Ani_Obj58a).l,a1
		bsr.w	j_AnimateSprite_9
		bra.w	loc_181A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17D4A:				; CODE XREF: ROM:00017CF6j
		move.w	#$FFFD,d0
		btst	#0,$22(a0)
		beq.s	loc_17D58
		neg.w	d0

loc_17D58:				; CODE XREF: ROM:00017D54j
		add.w	d0,8(a0)
		lea	(Ani_Obj58a).l,a1
		bsr.w	j_AnimateSprite_9
		bra.w	loc_181A8

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_17D6A:				; CODE XREF: ROM:00017CF8p
		cmpi.b	#1,$21(a1)
		beq.s	loc_17D74
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17D74:				; CODE XREF: sub_17D6A+6j
		move.w	8(a0),d0
		sub.w	($FFFFB008).w,d0
		bpl.s	loc_17D88
		btst	#0,$22(a1)
		bne.s	loc_17D92
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17D88:				; CODE XREF: sub_17D6A+12j
		btst	#0,$22(a1)
		beq.s	loc_17D92
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17D92:				; CODE XREF: sub_17D6A+1Aj
					; sub_17D6A+24j
		bset	#3,$2D(a1)
		rts
; End of function sub_17D6A


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_17D9A:				; CODE XREF: ROM:loc_17F98p
		jsr	SingleObjLoad2
		bne.s	loc_17E0E
		move.b	#$58,0(a1) ; 'X'
		move.l	a0,$34(a1)
		move.l	#Map_Obj58a,4(a1)
		move.w	#$24C0,2(a1)
		move.b	#4,1(a1)
		move.b	#$10,$19(a1)
		move.b	#1,$18(a1)
		move.b	#$10,$16(a1)
		move.b	#$10,$17(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		addi.w	#$1C,8(a1)
		addi.w	#$C,$C(a1)
		move.w	#$FE00,$10(a1)
		move.b	#4,routine(a1)
		move.b	#4,$1A(a1)
		move.b	#1,$1C(a1)
		move.w	#$16,$2A(a1)

loc_17E0E:				; CODE XREF: sub_17D9A+6j
		jsr	SingleObjLoad2
		bne.s	loc_17E82
		move.b	#$58,0(a1) ; 'X'
		move.l	a0,$34(a1)
		move.l	#Map_Obj58a,4(a1)
		move.w	#$24C0,2(a1)
		move.b	#4,1(a1)
		move.b	#$10,$19(a1)
		move.b	#1,$18(a1)
		move.b	#$10,$16(a1)
		move.b	#$10,$17(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		addi.w	#$FFF4,8(a1)
		addi.w	#$C,$C(a1)
		move.w	#$FE00,$10(a1)
		move.b	#4,routine(a1)
		move.b	#4,$1A(a1)
		move.b	#1,$1C(a1)
		move.w	#$4B,$2A(a1) ; 'K'

loc_17E82:				; CODE XREF: sub_17D9A+7Aj
		jsr	SingleObjLoad2
		bne.s	loc_17EF6
		move.b	#$58,0(a1) ; 'X'
		move.l	a0,$34(a1)
		move.l	#Map_Obj58a,4(a1)
		move.w	#$24C0,2(a1)
		move.b	#4,1(a1)
		move.b	#$10,$19(a1)
		move.b	#2,$18(a1)
		move.b	#$10,$16(a1)
		move.b	#$10,$17(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		addi.w	#$FFD4,8(a1)
		addi.w	#$C,$C(a1)
		move.w	#$FE00,$10(a1)
		move.b	#4,routine(a1)
		move.b	#6,$1A(a1)
		move.b	#2,$1C(a1)
		move.w	#$30,$2A(a1) ; '0'

loc_17EF6:				; CODE XREF: sub_17D9A+EEj
		jsr	SingleObjLoad2
		bne.s	locret_17F52
		move.b	#$58,0(a1) ; 'X'
		move.l	a0,$34(a1)
		move.l	#Map_Obj58a,4(a1)
		move.w	#$24C0,2(a1)
		move.b	#4,1(a1)
		move.b	#$10,$19(a1)
		move.b	#1,$18(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		addi.w	#$FFCA,8(a1)
		addi.w	#8,$C(a1)
		move.b	#6,routine(a1)
		move.b	#1,$1A(a1)
		move.b	#0,$1C(a1)

locret_17F52:				; CODE XREF: sub_17D9A+162j
		rts
; End of function sub_17D9A

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_17F54:				; DATA XREF: ROM:000182FEo
		jsr	SingleObjLoad2
		bne.s	loc_17F98
		move.b	#$58,0(a1) ; 'X'
		move.l	a0,$34(a1)
		move.l	#Map_Obj58a,4(a1)
		move.w	#$4C0,2(a1)
		move.b	#4,1(a1)
		move.b	#$20,$19(a1) ; ' '
		move.b	#2,$18(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		move.b	#2,routine(a1)

loc_17F98:				; CODE XREF: ROM:00017F5Aj
		bsr.w	sub_17D9A
		subi.w	#8,$38(a0)
		move.w	#$2A00,8(a0)
		move.w	#$2C0,$C(a0)
		jsr	SingleObjLoad2
		bne.s	locret_17FF8
		move.b	#$58,0(a1) ; 'X'
		move.l	a0,$34(a1)
		move.l	#Map_Obj58,4(a1)
		move.w	#$2540,2(a1)
		move.b	#4,1(a1)
		move.b	#$20,$19(a1) ; ' '
		move.b	#4,$18(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		move.w	#$1E,$2A(a1)
		move.b	#0,routine(a1)

locret_17FF8:				; CODE XREF: ROM:00017FB4j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj58:	dc.w byte_18000-Ani_Obj58 ; DATA XREF: ROM:00017B1Co
					; ROM:00017B78o ...
		dc.w byte_18004-Ani_Obj58
		dc.w byte_1801A-Ani_Obj58
byte_18000:	dc.b   1,  5,  6,$FF	; 0 ; DATA XREF: ROM:Ani_Obj58o
byte_18004:	dc.b   1,  1,  1,  1,  2,  2,  2,  3,  3,  3,  4,  4,  4,  0,  0,  0; 0
					; DATA XREF: ROM:00017FFCo
		dc.b   0,  0,  0,  0,  0,$FF; 16
byte_1801A:	dc.b   1,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  3,  3,  3,  2; 0
					; DATA XREF: ROM:00017FFEo
		dc.b   2,  2,  1,  1,  1,  5,  6,$FE,  2,  0; 16
Map_Obj58:	dc.w word_18042-Map_Obj58 ; DATA XREF: ROM:000179C6o
					; ROM:00017FC0o ...
		dc.w word_1804C-Map_Obj58
		dc.w word_18076-Map_Obj58
		dc.w word_180A0-Map_Obj58
		dc.w word_180BA-Map_Obj58
		dc.w word_180D4-Map_Obj58
		dc.w word_180EE-Map_Obj58
word_18042:	dc.w 1			; DATA XREF: ROM:Map_Obj58o
		dc.w $D805,    0,    0,	   2; 0
word_1804C:	dc.w 5			; DATA XREF: ROM:00018036o
		dc.w $D805,    4,    2,	   2; 0
		dc.w $D80D,   $C,    6,	 $12; 4
		dc.w $D80D,   $C,    6,	 $32; 8
		dc.w $D80D,   $C,    6,$FFE2; 12
		dc.w $D80D,   $C,    6,$FFC2; 16
word_18076:	dc.w 5			; DATA XREF: ROM:00018038o
		dc.w $D805,    4,    2,	   2; 0
		dc.w $D80D,   $C,    6,	 $12; 4
		dc.w $D805,    8,    4,	 $32; 8
		dc.w $D80D,   $C,    6,$FFE2; 12
		dc.w $D805,    8,    4,$FFD2; 16
word_180A0:	dc.w 3			; DATA XREF: ROM:0001803Ao
		dc.w $D805,    4,    2,	   2; 0
		dc.w $D80D,   $C,    6,	 $12; 4
		dc.w $D80D,   $C,    6,$FFE2; 8
word_180BA:	dc.w 3			; DATA XREF: ROM:0001803Co
		dc.w $D805,    4,    2,	   2; 0
		dc.w $D805,    8,    4,	 $12; 4
		dc.w $D805,    8,    4,$FFF2; 8
word_180D4:	dc.w 3			; DATA XREF: ROM:0001803Eo
		dc.w $D805,    0,    0,	   2; 0
		dc.w $D80D,   $C,    6,	 $12; 4
		dc.w $D80D,   $C,    6,	 $32; 8
word_180EE:	dc.w 3			; DATA XREF: ROM:00018040o
		dc.w $D805,    4,    2,	   2; 0
		dc.w $D80D,   $C,    6,$FFE2; 4
		dc.w $D80D,   $C,    6,$FFC2; 8
Ani_Obj58a:	dc.w byte_1810E-Ani_Obj58a ; DATA XREF:	ROM:loc_17C88o
					; ROM:00017D3Co ...
		dc.w byte_18113-Ani_Obj58a
		dc.w byte_18117-Ani_Obj58a
byte_1810E:	dc.b   5,  1,  2,  3,$FF; 0 ; DATA XREF: ROM:Ani_Obj58ao
byte_18113:	dc.b   1,  4,  5,$FF	; 0 ; DATA XREF: ROM:0001810Ao
byte_18117:	dc.b   1,  6,  7,$FF,  0; 0 ; DATA XREF: ROM:0001810Co
Map_Obj58a:	dc.w word_1812E-Map_Obj58a ; DATA XREF:	sub_17D9A+12o
					; sub_17D9A+86o ...
		dc.w word_18148-Map_Obj58a
		dc.w word_18152-Map_Obj58a
		dc.w word_1815C-Map_Obj58a
		dc.w word_18166-Map_Obj58a
		dc.w word_18170-Map_Obj58a
		dc.w word_1817A-Map_Obj58a
		dc.w word_18184-Map_Obj58a
		dc.w word_1818E-Map_Obj58a
word_1812E:	dc.w 3			; DATA XREF: ROM:Map_Obj58ao
		dc.w $F00F,    0,    0,$FFD0; 0
		dc.w $F00F,  $10,    8,$FFF0; 4
		dc.w $F00F,  $20,  $10,	 $10; 8
word_18148:	dc.w 1			; DATA XREF: ROM:0001811Eo
		dc.w $F00F,  $30,  $18,$FFF0; 0
word_18152:	dc.w 1			; DATA XREF: ROM:00018120o
		dc.w $F00F,  $40,  $20,$FFF0; 0
word_1815C:	dc.w 1			; DATA XREF: ROM:00018122o
		dc.w $F00F,  $50,  $28,$FFF0; 0
word_18166:	dc.w 1			; DATA XREF: ROM:00018124o
		dc.w $F00F,  $60,  $30,$FFF0; 0
word_18170:	dc.w 1			; DATA XREF: ROM:00018126o
		dc.w $F00F,$1060,$1030,$FFF0; 0
word_1817A:	dc.w 1			; DATA XREF: ROM:00018128o
		dc.w $F00F,  $70,  $38,$FFF0; 0
word_18184:	dc.w 1			; DATA XREF: ROM:0001812Ao
		dc.w $F00F,$1070,$1038,$FFF0; 0
word_1818E:	dc.w 3			; DATA XREF: ROM:0001812Co
		dc.w $F00F,$8000,$8000,$FFD0; 0
		dc.w $F00F,$8010,$8008,$FFF0; 4
		dc.w $F00F,$8020,$8010,	 $10; 8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_181A8:				; CODE XREF: ROM:000178B2j
					; ROM:000178C0j ...
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_181AE:				; CODE XREF: ROM:00017A64j
					; ROM:00017B44j ...
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_181B4:				; CODE XREF: ROM:loc_17CE0j
		jmp	MarkObjGone
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_SingleObjLoad2:			; CODE XREF: ROM:000179B4p
		jmp	SingleObjLoad2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_AnimateSprite_9:			; CODE XREF: ROM:00017B22p
					; ROM:00017B7Ep ...
		jmp	AnimateSprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_ObjectMoveAndFall_6:				; CODE XREF: ROM:00017C5Cp
					; ROM:00017CCAp
		jmp	ObjectMoveAndFall
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 55 - EHZ boss
; ---------------------------------------------------------------------------

Obj55:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj55_Index(pc,d0.w),d1
		jmp	Obj55_Index(pc,d1.w)
; ===========================================================================
Obj55_Index:	dc.w Obj55_Init-Obj55_Index
		dc.w loc_18302-Obj55_Index
		dc.w loc_18340-Obj55_Index
		dc.w loc_18372-Obj55_Index
		dc.w loc_18410-Obj55_Index
; ===========================================================================
; loc_181E4:
Obj55_Init:
		move.l	#Map_Obj55,4(a0)
		move.w	#$2400,2(a0)
		ori.b	#4,1(a0)
		move.b	#$20,$19(a0)
		move.b	#3,$18(a0)
		move.b	#$F,$20(a0)
		move.b	#8,$21(a0)
		addq.b	#2,routine(a0)
		move.w	8(a0),$30(a0)
		move.w	$C(a0),$38(a0)
		move.b	$28(a0),d0
		cmpi.b	#$81,d0
		bne.s	loc_18230
		addi.w	#$60,2(a0)

loc_18230:
		jsr	(SingleObjLoad2).l
		bne.w	loc_182E8
		move.b	#$55,0(a1)
		move.l	a0,$34(a1)
		move.l	a1,$34(a0)
		move.l	#Map_Obj55,4(a1)
		move.w	#$400,2(a1)
		move.b	#4,1(a1)
		move.b	#$20,$19(a1)
		move.b	#3,$18(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		addq.b	#4,routine(a1)
		move.b	#1,$1C(a1)
		move.b	1(a0),1(a1)
		move.b	$28(a0),d0
		cmpi.b	#$81,d0
		bne.s	loc_18294
		addi.w	#$60,2(a1)

loc_18294:
		tst.b	$28(a0)
		bmi.s	loc_182E8
		jsr	(SingleObjLoad2).l
		bne.s	loc_182E8
		move.b	#$55,0(a1)
		move.l	a0,$34(a1)

loc_182AC:
		move.l	#Map_Obj55a,4(a1)
		move.w	#$4D0,2(a1)
		move.b	#1,$1E(a0)

loc_182C0:
		move.b	#4,1(a1)
		move.b	#$20,$19(a1)
		move.b	#3,$18(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		addq.b	#6,routine(a1)
		move.b	1(a0),1(a1)

loc_182E8:
		move.b	$28(a0),d0
		andi.w	#$7F,d0
		add.w	d0,d0
		add.w	d0,d0
		movea.l	dword_182FA(pc,d0.w),a1
		jmp	(a1)
; ===========================================================================
dword_182FA:	dc.l 0
		dc.l loc_17F54
; ===========================================================================

loc_18302:
		move.b	$28(a0),d0
		andi.w	#$7F,d0
		add.w	d0,d0
		add.w	d0,d0
		movea.l	dword_18338(pc,d0.w),a1
		jsr	(a1)
		lea	(Ani_Obj55a).l,a1
		jsr	(AnimateSprite).l
		move.b	$22(a0),d0
		andi.b	#3,d0
		andi.b	#$FC,1(a0)
		or.b	d0,1(a0)
		jmp	(DisplaySprite).l
; ===========================================================================
dword_18338:	dc.l 0
		dc.l Obj57
; ===========================================================================

loc_18340:
		movea.l	$34(a0),a1
		move.l	8(a1),8(a0)
		move.l	$C(a1),$C(a0)
		move.b	$22(a1),$22(a0)
		move.b	1(a1),1(a0)
		movea.l	#Ani_Obj55a,a1
		jsr	(AnimateSprite).l
		jmp	(DisplaySprite).l
; ===========================================================================
byte_1836E:	dc.b   0,$FF,  1,  0	; 0
; ===========================================================================

loc_18372:
		btst	#7,$22(a0)
		bne.s	loc_183C6
		movea.l	$34(a0),a1
		move.l	8(a1),8(a0)
		move.l	$C(a1),$C(a0)
		move.b	$22(a1),$22(a0)
		move.b	1(a1),1(a0)
		subq.b	#1,$1E(a0)
		bpl.s	loc_183BA
		move.b	#1,$1E(a0)
		move.b	$2A(a0),d0
		addq.b	#1,d0
		cmpi.b	#2,d0
		ble.s	loc_183B0
		moveq	#0,d0

loc_183B0:
		move.b	byte_1836E(pc,d0.w),$1A(a0)
		move.b	d0,$2A(a0)

loc_183BA:
		cmpi.b	#$FF,$1A(a0)
		bne.w	loc_185D4
		rts
; ===========================================================================

loc_183C6:
		movea.l	$34(a0),a1
		btst	#6,$2E(a1)
		bne.s	loc_183D4
		rts
; ===========================================================================

loc_183D4:
		addq.b	#2,routine(a0)
		move.l	#Map_Obj55b,4(a0)
		move.w	#$4D8,2(a0)
		move.b	#0,$1A(a0)
		move.b	#5,$1E(a0)
		movea.l	$34(a0),a1
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		addi.w	#4,$C(a0)
		subi.w	#$28,8(a0)
		rts
; ===========================================================================

loc_18410:
		subq.b	#1,$1E(a0)
		bpl.s	loc_18452
		move.b	#5,$1E(a0)
		addq.b	#1,$1A(a0)
		cmpi.b	#4,$1A(a0)
		bne.w	loc_18452
		move.b	#0,$1A(a0)
		movea.l	$34(a0),a1
		move.b	(a1),d0
		beq.w	loc_185DA
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		addi.w	#4,$C(a0)
		subi.w	#$28,8(a0)

loc_18452:
		bra.w	loc_185D4
; ===========================================================================

Obj56:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj56_Index(pc,d0.w),d1
		jmp	Obj56_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj56_Index:	dc.w Obj56_Init-Obj56_Index ; DATA XREF: ROM:Obj56_Indexo
					; ROM:00018466o
		dc.w Obj56_Animate-Obj56_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj56_Init:				; DATA XREF: ROM:Obj56_Indexo
		addq.b	#2,routine(a0)
		move.l	#Map_Obj56,4(a0)
		move.w	#$5A0,2(a0)
		move.b	#4,1(a0)
		move.b	#1,$18(a0)
		move.b	#0,$20(a0)
		move.b	#$C,$19(a0)
		move.b	#7,$1E(a0)
		move.b	#0,$1A(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj56_Animate:				; DATA XREF: ROM:00018466o
		subq.b	#1,$1E(a0)
		bpl.s	loc_184BA
		move.b	#7,$1E(a0)
		addq.b	#1,$1A(a0)
		cmpi.b	#7,$1A(a0)
		beq.w	loc_185DA

loc_184BA:				; CODE XREF: ROM:000184A4j
		bra.w	loc_185D4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Map_Obj55a:	dc.w word_184C2-Map_Obj55a ; DATA XREF:	ROM:loc_182ACo
					; ROM:Map_Obj55ao ...
		dc.w word_184CC-Map_Obj55a
word_184C2:	dc.w 1			; DATA XREF: ROM:Map_Obj55ao
		dc.w	 5,    0,    0,	 $1C; 0
word_184CC:	dc.w 1			; DATA XREF: ROM:000184C0o
		dc.w	 5,    4,    2,	 $1C; 0
Map_Obj55b:	dc.w word_184DE-Map_Obj55b ; DATA XREF:	ROM:000183D8o
					; ROM:Map_Obj55bo ...
		dc.w word_184E8-Map_Obj55b
		dc.w word_184F2-Map_Obj55b
		dc.w word_184FC-Map_Obj55b
word_184DE:	dc.w 1			; DATA XREF: ROM:Map_Obj55bo
		dc.w $F805,    0,    0,$FFF8; 0
word_184E8:	dc.w 1			; DATA XREF: ROM:000184D8o
		dc.w $F805,    4,    2,$FFF8; 0
word_184F2:	dc.w 1			; DATA XREF: ROM:000184DAo
		dc.w $F805,    8,    4,$FFF8; 0
word_184FC:	dc.w 1			; DATA XREF: ROM:000184DCo
		dc.w $F805,   $C,    6,$FFF8; 0
Map_Obj56:	dc.w word_18514-Map_Obj56 ; DATA XREF: ROM:0001846Co
					; ROM:Map_Obj56o ...
		dc.w word_1851E-Map_Obj56
		dc.w word_18528-Map_Obj56
		dc.w word_18532-Map_Obj56
		dc.w word_1853C-Map_Obj56
		dc.w word_18546-Map_Obj56
		dc.w word_18550-Map_Obj56
word_18514:	dc.w 1			; DATA XREF: ROM:Map_Obj56o
		dc.w $F805,    0,    0,$FFF8; 0
word_1851E:	dc.w 1			; DATA XREF: ROM:00018508o
		dc.w $F00F,    4,    2,$FFF0; 0
word_18528:	dc.w 1			; DATA XREF: ROM:0001850Ao
		dc.w $F00F,  $14,   $A,$FFF0; 0
word_18532:	dc.w 1			; DATA XREF: ROM:0001850Co
		dc.w $F00F,  $24,  $12,$FFF0; 0
word_1853C:	dc.w 1			; DATA XREF: ROM:0001850Eo
		dc.w $F00F,  $34,  $1A,$FFF0; 0
word_18546:	dc.w 1			; DATA XREF: ROM:00018510o
		dc.w $F00F,  $44,  $22,$FFF0; 0
word_18550:	dc.w 1			; DATA XREF: ROM:00018512o
		dc.w $F00F,  $54,  $2A,$FFF0; 0
Ani_Obj55a:	dc.w byte_1855E-Ani_Obj55a ; DATA XREF:	ROM:00018314o
					; ROM:0001835Co ...
		dc.w byte_18561-Ani_Obj55a
byte_1855E:	dc.b  $F,  0,$FF	; 0 ; DATA XREF: ROM:Ani_Obj55ao
byte_18561:	dc.b   7,  1,  2,$FF,  0; 0 ; DATA XREF: ROM:0001855Co
Map_Obj55:	dc.w word_1856C-Map_Obj55 ; DATA XREF: ROM:loc_181E4o
					; ROM:00018248o ...
		dc.w word_1858E-Map_Obj55
		dc.w word_185B0-Map_Obj55
word_1856C:	dc.w 4			; DATA XREF: ROM:Map_Obj55o
		dc.w $F805,    0,    0,$FFE0; 0
		dc.w  $805,    4,    2,$FFE0; 4
		dc.w $F80F,    8,    4,$FFF0; 8
		dc.w $F807,  $18,   $C,	 $10; 12
word_1858E:	dc.w 4			; DATA XREF: ROM:00018568o
		dc.w $E805,  $28,  $14,$FFE0; 0
		dc.w $E80D,  $30,  $18,$FFF0; 4
		dc.w $E805,  $24,  $12,	 $10; 8
		dc.w $D805,  $20,  $10,	   2; 12
word_185B0:	dc.w 4			; DATA XREF: ROM:0001856Ao
		dc.w $E805,  $28,  $14,$FFE0; 0
		dc.w $E80D,  $38,  $1C,$FFF0; 4
		dc.w $E805,  $24,  $12,	 $10; 8
		dc.w $D805,  $20,  $10,	   2; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

loc_185D4:				; CODE XREF: ROM:000183C0j
					; ROM:loc_18452j ...
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_185DA:				; CODE XREF: ROM:00018436j
					; ROM:000184B6j
		jmp	DeleteObject
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 8A - "SONIC TEAM PRESENTS" screen and credits
; ---------------------------------------------------------------------------

Obj8A:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj8A_Index(pc,d0.w),d1
		jmp	Obj8A_Index(pc,d1.w)
; ===========================================================================
; off_185EE:
Obj8A_Index:	dc.w Obj8A_Init-Obj8A_Index
		dc.w Obj8A_Display-Obj8A_Index
; ===========================================================================
; loc_185F2:
Obj8A_Init:
		addq.b	#2,routine(a0)
		move.w	#$120,8(a0)
		move.w	#$F0,$A(a0)
		move.l	#Map_obj8A,4(a0)
		move.w	#$5A0,2(a0)
		bsr.w	j_Adjust2PArtPointer_4

; Obj8A_Credits:
		move.w	($FFFFFFF4).w,d0	; load credits index number
		move.b	d0,$1A(a0)		; display appropriate credits
		move.b	#0,1(a0)
		move.b	#0,$18(a0)

		cmpi.b	#GameModeID_TitleScreen,(Game_Mode).w	; is this the title screen?
		bne.s	Obj8A_Display		; if not, branch

; Obj8A_SonicTeam:
		move.w	#$300,2(a0)
		bsr.w	j_Adjust2PArtPointer_4
		move.b	#$A,$1A(a0)
		tst.b	($FFFFFFE3).w	; is the Sonic 1 hidden credits cheat activated?
		beq.s	Obj8A_Display	; if not, branch
		cmpi.b	#$72,($FFFFF604).w	; has the player pressed A+B+C+Down?
		bne.s	Obj8A_Display	; if not, branch
		move.w	#$EEE,($FFFFFBC0).w	; 3rd palette, 1st entry = white
		move.w	#$880,($FFFFFBC2).w	; 2nd palette, 1st entry = cyan
		jmp	(DeleteObject).l
; ===========================================================================
; loc_18660:
Obj8A_Display:
		jmp	(DisplaySprite).l
; ===========================================================================
; ---------------------------------------------------------------------------
; Sprite mappings
; ---------------------------------------------------------------------------
Map_obj8A:	incbin	"mappings/sprite/obj8A.bin"

; ===========================================================================
		nop

j_Adjust2PArtPointer_4:	; JmpTo
		jmp	(Adjust2PArtPointer).l

		align 4

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 3D - GHZ Boss
; ---------------------------------------------------------------------------

Obj3D:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj3D_Index(pc,d0.w),d1
		jmp	Obj3D_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj3D_Index:	dc.w Obj3D_Main-Obj3D_Index ; DATA XREF: ROM:Obj3D_Indexo
					; ROM:00018D0Co ...
		dc.w Obj3D_ShipMain-Obj3D_Index
		dc.w Obj3D_FaceMain-Obj3D_Index
		dc.w Obj3D_FlameMain-Obj3D_Index
Obj3D_ObjData:	dc.b   2,  0		; 0 ; DATA XREF: ROM:Obj3D_Maint
		dc.b   4,  1		; 2
		dc.b   6,  7		; 4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj3D_Main:				; DATA XREF: ROM:Obj3D_Indexo
		lea	Obj3D_ObjData(pc),a2
		movea.l	a0,a1
		moveq	#2,d1
		bra.s	loc_18D2A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18D22:				; CODE XREF: ROM:00018D6Cj
		jsr	SingleObjLoad2
		bne.s	loc_18D70

loc_18D2A:				; CODE XREF: ROM:00018D20j
		move.b	(a2)+,routine(a1)
		move.b	#$3D,0(a1) ; '='
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.l	#Map_Eggman,4(a1)
		move.w	#$400,2(a1)
		bsr.w	j_Adjust2PArtPointer2_1
		move.b	#4,1(a1)
		move.b	#$20,$19(a1) ; ' '
		move.b	#3,$18(a1)
		move.b	(a2)+,$1C(a1)
		move.l	a0,$34(a1)
		dbf	d1,loc_18D22

loc_18D70:				; CODE XREF: ROM:00018D28j
		move.w	8(a0),$30(a0)
		move.w	$C(a0),$38(a0)
		move.b	#$F,$20(a0)
		move.b	#8,$21(a0)

Obj3D_ShipMain:				; DATA XREF: ROM:00018D0Co
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	Obj3D_ShipIndex(pc,d0.w),d1
		jsr	Obj3D_ShipIndex(pc,d1.w)
		lea	(Ani_Eggman).l,a1
		jsr	AnimateSprite
		move.b	$22(a0),d0
		andi.b	#3,d0
		andi.b	#$FC,1(a0)
		or.b	d0,1(a0)
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj3D_ShipIndex:dc.w loc_18DC8-Obj3D_ShipIndex ; DATA XREF: ROM:Obj3D_ShipIndexo
					; ROM:00018DBCo ...
		dc.w loc_18EC8-Obj3D_ShipIndex
		dc.w loc_18F18-Obj3D_ShipIndex
		dc.w loc_18F52-Obj3D_ShipIndex
		dc.w loc_18F78-Obj3D_ShipIndex
		dc.w loc_18FAA-Obj3D_ShipIndex
		dc.w loc_18FF6-Obj3D_ShipIndex
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18DC8:				; DATA XREF: ROM:Obj3D_ShipIndexo
		move.w	#$100,$12(a0)
		bsr.w	BossMove
		cmpi.w	#$338,$38(a0)
		bne.s	loc_18DE4
		move.w	#0,$12(a0)
		addq.b	#2,$25(a0)

loc_18DE4:				; CODE XREF: ROM:00018DD8j
					; ROM:loc_18F14j ...
		move.b	$3F(a0),d0
		jsr	(CalcSine).l
		asr.w	#6,d0
		add.w	$38(a0),d0
		move.w	d0,$C(a0)
		move.w	$30(a0),8(a0)
		addq.b	#2,$3F(a0)
		cmpi.b	#8,$25(a0)
		bcc.s	locret_18E48
		tst.b	$22(a0)
		bmi.s	loc_18E4A
		tst.b	$20(a0)
		bne.s	locret_18E48
		tst.b	$3E(a0)
		bne.s	loc_18E2C
		move.b	#$20,$3E(a0) ; ' '
		move.w	#$AC,d0	; '¬'
		jsr	(PlaySound_Special).l

loc_18E2C:				; CODE XREF: ROM:00018E1Aj
		lea	($FFFFFB22).w,a1
		moveq	#0,d0
		tst.w	(a1)
		bne.s	loc_18E3A
		move.w	#$EEE,d0

loc_18E3A:				; CODE XREF: ROM:00018E34j
		move.w	d0,(a1)
		subq.b	#1,$3E(a0)
		bne.s	locret_18E48
		move.b	#$F,$20(a0)

locret_18E48:				; CODE XREF: ROM:00018E08j
					; ROM:00018E14j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18E4A:				; CODE XREF: ROM:00018E0Ej
		moveq	#$64,d0	; 'd'
		bsr.w	AddPoints
		move.b	#8,$25(a0)
		move.w	#$B3,$3C(a0) ; '³'
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


BossDefeated:				; CODE XREF: ROM:00017956j
					; ROM:00018F7Ej ...
		move.b	($FFFFFE0F).w,d0
		andi.b	#7,d0
		bne.s	locret_18EA0
		jsr	SingleObjLoad
		bne.s	locret_18EA0
		move.b	#$3F,0(a1) ; '?'
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		jsr	(RandomNumber).l
		move.w	d0,d1
		moveq	#0,d1
		move.b	d0,d1
		lsr.b	#2,d1
		subi.w	#$20,d1	; ' '
		add.w	d1,8(a1)
		lsr.w	#8,d0
		lsr.b	#3,d0
		add.w	d0,$C(a1)

locret_18EA0:				; CODE XREF: BossDefeated+8j
					; BossDefeated+10j
		rts
; End of function BossDefeated


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


BossMove:				; CODE XREF: ROM:00018DCEp
					; ROM:00018ED4p ...
		move.l	$30(a0),d2
		move.l	$38(a0),d3
		move.w	$10(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d2
		move.w	$12(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d3
		move.l	d2,$30(a0)
		move.l	d3,$38(a0)
		rts
; End of function BossMove

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18EC8:				; DATA XREF: ROM:00018DBCo
		move.w	#$FF00,$10(a0)
		move.w	#$FFC0,$12(a0)
		bsr.w	BossMove
		cmpi.w	#$2A00,$30(a0)
		bne.s	loc_18F14
		move.w	#0,$10(a0)
		move.w	#0,$12(a0)
		addq.b	#2,$25(a0)
		jsr	SingleObjLoad2
		bne.s	loc_18F0E
		move.b	#$48,0(a1) ; 'H'
		move.w	$30(a0),8(a1)
		move.w	$38(a0),$C(a1)
		move.l	a0,$34(a1)

loc_18F0E:				; CODE XREF: ROM:00018EF6j
		move.w	#$77,$3C(a0) ; 'w'

loc_18F14:				; CODE XREF: ROM:00018EDEj
		bra.w	loc_18DE4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18F18:				; DATA XREF: ROM:00018DBEo
		subq.w	#1,$3C(a0)
		bpl.s	loc_18F42
		addq.b	#2,$25(a0)
		move.w	#$3F,$3C(a0) ; '?'
		move.w	#$100,$10(a0)
		cmpi.w	#$2A00,$30(a0)
		bne.s	loc_18F42
		move.w	#$7F,$3C(a0) ; ''
		move.w	#$40,$10(a0) ; '@'

loc_18F42:				; CODE XREF: ROM:00018F1Cj
					; ROM:00018F34j
		btst	#0,$22(a0)
		bne.s	loc_18F4E
		neg.w	$10(a0)

loc_18F4E:				; CODE XREF: ROM:00018F48j
		bra.w	loc_18DE4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18F52:				; DATA XREF: ROM:00018DC0o
		subq.w	#1,$3C(a0)
		bmi.s	loc_18F5E
		bsr.w	BossMove
		bra.s	loc_18F74
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18F5E:				; CODE XREF: ROM:00018F56j
		bchg	#0,$22(a0)
		move.w	#$3F,$3C(a0) ; '?'
		subq.b	#2,$25(a0)
		move.w	#0,$10(a0)

loc_18F74:				; CODE XREF: ROM:00018F5Cj
		bra.w	loc_18DE4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18F78:				; DATA XREF: ROM:00018DC2o
		subq.w	#1,$3C(a0)
		bmi.s	loc_18F82
		bra.w	BossDefeated
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18F82:				; CODE XREF: ROM:00018F7Cj
		bset	#0,$22(a0)
		bclr	#7,$22(a0)
		clr.w	$10(a0)
		addq.b	#2,$25(a0)
		move.w	#$FFDA,$3C(a0)
		tst.b	($FFFFF7A7).w
		bne.s	locret_18FA8
		move.b	#1,($FFFFF7A7).w

locret_18FA8:				; CODE XREF: ROM:00018FA0j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18FAA:				; DATA XREF: ROM:00018DC4o
		addq.w	#1,$3C(a0)
		beq.s	loc_18FBA
		bpl.s	loc_18FC0
		addi.w	#$18,$12(a0)
		bra.s	loc_18FEE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18FBA:				; CODE XREF: ROM:00018FAEj
		clr.w	$12(a0)
		bra.s	loc_18FEE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18FC0:				; CODE XREF: ROM:00018FB0j
		cmpi.w	#$30,$3C(a0) ; '0'
		bcs.s	loc_18FD8
		beq.s	loc_18FE0
		cmpi.w	#$38,$3C(a0) ; '8'
		bcs.s	loc_18FEE
		addq.b	#2,$25(a0)
		bra.s	loc_18FEE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18FD8:				; CODE XREF: ROM:00018FC6j
		subi.w	#8,$12(a0)
		bra.s	loc_18FEE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18FE0:				; CODE XREF: ROM:00018FC8j
		clr.w	$12(a0)
		move.w	#MusID_GHZ,d0	; ''
		jsr	(PlaySound).l

loc_18FEE:				; CODE XREF: ROM:00018FB8j
					; ROM:00018FBEj ...
		bsr.w	BossMove
		bra.w	loc_18DE4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_18FF6:				; DATA XREF: ROM:00018DC6o
		move.w	#$400,$10(a0)
		move.w	#$FFC0,$12(a0)
		cmpi.w	#$2AC0,($FFFFEECA).w
		beq.s	loc_19010
		addq.w	#2,($FFFFEECA).w
		bra.s	loc_19016
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19010:				; CODE XREF: ROM:00019008j
		tst.b	1(a0)
		bpl.s	loc_1901E

loc_19016:				; CODE XREF: ROM:0001900Ej
		bsr.w	BossMove
		bra.w	loc_18DE4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1901E:				; CODE XREF: ROM:00019014j
		addq.l	#4,sp
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj3D_FaceMain:				; DATA XREF: ROM:00018D0Eo
		moveq	#0,d0
		moveq	#1,d1
		movea.l	$34(a0),a1
		move.b	$25(a1),d0
		subq.b	#4,d0
		bne.s	loc_19040
		cmpi.w	#$2A00,$30(a1)
		bne.s	loc_19048
		moveq	#4,d1

loc_19040:				; CODE XREF: ROM:00019034j
		subq.b	#6,d0
		bmi.s	loc_19048
		moveq	#$A,d1
		bra.s	loc_1905C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19048:				; CODE XREF: ROM:0001903Cj
					; ROM:00019042j
		tst.b	$20(a1)
		bne.s	loc_19052
		moveq	#5,d1
		bra.s	loc_1905C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19052:				; CODE XREF: ROM:0001904Cj
		cmpi.b	#4,($FFFFB000+routine).w
		bcs.s	loc_1905C
		moveq	#4,d1

loc_1905C:				; CODE XREF: ROM:00019046j
					; ROM:00019050j ...
		move.b	d1,$1C(a0)
		subq.b	#2,d0
		bne.s	loc_19070
		move.b	#6,$1C(a0)
		tst.b	1(a0)
		bpl.s	loc_19072

loc_19070:				; CODE XREF: ROM:00019062j
		bra.s	Obj3D_Display
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19072:				; CODE XREF: ROM:0001906Ej
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj3D_FlameMain:			; DATA XREF: ROM:00018D10o
		move.b	#7,$1C(a0)
		movea.l	$34(a0),a1
		cmpi.b	#$C,$25(a1)
		bne.s	loc_19098
		move.b	#$B,$1C(a0)
		tst.b	1(a0)
		bpl.s	loc_190A6
		bra.s	loc_190A4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19098:				; CODE XREF: ROM:00019088j
		move.w	$10(a1),d0
		beq.s	loc_190A4
		move.b	#8,$1C(a0)

loc_190A4:				; CODE XREF: ROM:00019096j
					; ROM:0001909Cj
		bra.s	Obj3D_Display
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_190A6:				; CODE XREF: ROM:00019094j
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj3D_Display:				; CODE XREF: ROM:loc_19070j
					; ROM:loc_190A4j
		movea.l	$34(a0),a1
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		move.b	$22(a1),$22(a0)
		lea	(Ani_Eggman).l,a1
		jsr	AnimateSprite
		move.b	$22(a0),d0
		andi.b	#3,d0
		andi.b	#$FC,1(a0)
		or.b	d0,1(a0)
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 48 - the ball that swings on the GHZ boss
;----------------------------------------------------

Obj48:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj48_Index(pc,d0.w),d1
		jmp	Obj48_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj48_Index:	dc.w Obj48_Init-Obj48_Index ; DATA XREF: ROM:Obj48_Indexo
					; ROM:000190F6o ...
		dc.w Obj48_Main-Obj48_Index
		dc.w loc_19226-Obj48_Index
		dc.w loc_19274-Obj48_Index
		dc.w loc_19290-Obj48_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj48_Init:				; DATA XREF: ROM:Obj48_Indexo
		addq.b	#2,routine(a0)
		move.w	#$4080,$26(a0)
		move.w	#$FE00,$3E(a0)
		move.l	#Map_BossItems,4(a0)
		move.w	#$46C,2(a0)
		bsr.w	j_Adjust2PArtPointer_5
		lea	$28(a0),a2
		move.b	#0,(a2)+
		moveq	#5,d1
		movea.l	a0,a1
		bra.s	loc_1916A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1912E:				; CODE XREF: ROM:00019190j
		jsr	SingleObjLoad2
		bne.s	loc_19194
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	#$48,0(a1) ; 'H'
		move.b	#6,routine(a1)
		move.l	#Map_Obj15,4(a1)
		move.w	#$380,2(a1)
		bsr.w	j_Adjust2PArtPointer2_1
		move.b	#1,$1A(a1)
		addq.b	#1,$28(a0)

loc_1916A:				; CODE XREF: ROM:0001912Cj
		move.w	a1,d5
		subi.w	#$B000,d5
		lsr.w	#6,d5
		andi.w	#$7F,d5	; ''
		move.b	d5,(a2)+
		move.b	#4,1(a1)
		move.b	#8,$19(a1)
		move.b	#6,$18(a1)
		move.l	$34(a0),$34(a1)
		dbf	d1,loc_1912E

loc_19194:				; CODE XREF: ROM:00019134j
		move.b	#8,routine(a1)
		move.l	#Map_Obj48,4(a1)
		move.w	#$43AA,2(a1)
		bsr.w	j_Adjust2PArtPointer2_1
		move.b	#1,$1A(a1)
		move.b	#5,$18(a1)
		move.b	#$81,$20(a1)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj48_PosData:	dc.b   0,$10,$20,$30,$40,$60; 0	; DATA XREF: ROM:Obj48_Maint
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj48_Main:				; DATA XREF: ROM:000190F6o
		lea	Obj48_PosData(pc),a3
		lea	$28(a0),a2
		moveq	#0,d6
		move.b	(a2)+,d6

loc_191D2:				; CODE XREF: ROM:loc_191ECj
		moveq	#0,d4
		move.b	(a2)+,d4
		lsl.w	#6,d4
		addi.l	#$FFFFB000,d4
		movea.l	d4,a1
		move.b	(a3)+,d0
		cmp.b	$3C(a1),d0
		beq.s	loc_191EC
		addq.b	#1,$3C(a1)

loc_191EC:				; CODE XREF: ROM:000191E6j
		dbf	d6,loc_191D2
		cmp.b	$3C(a1),d0
		bne.s	loc_19206
		movea.l	$34(a0),a1
		cmpi.b	#6,$25(a1)
		bne.s	loc_19206
		addq.b	#2,routine(a0)

loc_19206:				; CODE XREF: ROM:000191F4j
					; ROM:00019200j
		cmpi.w	#$20,$32(a0) ; ' '
		beq.s	loc_19212
		addq.w	#1,$32(a0)

loc_19212:				; CODE XREF: ROM:0001920Cj
		bsr.w	sub_19236
		move.b	$26(a0),d0
		jsr	loc_842E
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19226:				; DATA XREF: ROM:000190F8o
		bsr.w	sub_19236
		jsr	loc_83EA
		jmp	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_19236:				; CODE XREF: ROM:loc_19212p
					; ROM:loc_19226p
		movea.l	$34(a0),a1
		addi.b	#$20,$1B(a0) ; ' '
		bcc.s	loc_19248
		bchg	#0,$1A(a0)

loc_19248:				; CODE XREF: sub_19236+Aj
		move.w	8(a1),$3A(a0)
		move.w	$C(a1),d0
		add.w	$32(a0),d0
		move.w	d0,$38(a0)
		move.b	$22(a1),$22(a0)
		tst.b	$22(a1)
		bpl.s	locret_19272
		move.b	#$3F,0(a0) ; '?'
		move.b	#0,routine(a0)

locret_19272:				; CODE XREF: sub_19236+2Ej
		rts
; End of function sub_19236

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19274:				; DATA XREF: ROM:000190FAo
		movea.l	$34(a0),a1
		tst.b	$22(a1)
		bpl.s	loc_1928A
		move.b	#$3F,0(a0) ; '?'
		move.b	#0,routine(a0)

loc_1928A:				; CODE XREF: ROM:0001927Cj
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19290:				; DATA XREF: ROM:000190FCo
		moveq	#0,d0
		tst.b	$1A(a0)
		bne.s	loc_1929A
		addq.b	#1,d0

loc_1929A:				; CODE XREF: ROM:00019296j
		move.b	d0,$1A(a0)
		movea.l	$34(a0),a1
		tst.b	$22(a1)
		bpl.s	loc_192C2
		move.b	#0,$20(a0)
		bsr.w	BossDefeated
		subq.b	#1,$3C(a0)
		bpl.s	loc_192C2
		move.b	#$3F,(a0) ; '?'
		move.b	#0,routine(a0)

loc_192C2:				; CODE XREF: ROM:000192A6j
					; ROM:000192B6j
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Eggman:	dc.w byte_192E0-Ani_Eggman ; DATA XREF:	ROM:00018D96o
					; ROM:000190C2o ...
		dc.w byte_192E3-Ani_Eggman
		dc.w byte_192E7-Ani_Eggman
		dc.w byte_192EB-Ani_Eggman
		dc.w byte_192EF-Ani_Eggman
		dc.w byte_192F3-Ani_Eggman
		dc.w byte_192F7-Ani_Eggman
		dc.w byte_192FB-Ani_Eggman
		dc.w byte_192FE-Ani_Eggman
		dc.w byte_19302-Ani_Eggman
		dc.w byte_19306-Ani_Eggman
		dc.w byte_19309-Ani_Eggman
byte_192E0:	dc.b  $F,  0,$FF	; 0 ; DATA XREF: ROM:Ani_Eggmano
byte_192E3:	dc.b   5,  1,  2,$FF	; 0 ; DATA XREF: ROM:000192CAo
byte_192E7:	dc.b   3,  1,  2,$FF	; 0 ; DATA XREF: ROM:000192CCo
byte_192EB:	dc.b   1,  1,  2,$FF	; 0 ; DATA XREF: ROM:000192CEo
byte_192EF:	dc.b   4,  3,  4,$FF	; 0 ; DATA XREF: ROM:000192D0o
byte_192F3:	dc.b $1F,  5,  1,$FF	; 0 ; DATA XREF: ROM:000192D2o
byte_192F7:	dc.b   3,  6,  1,$FF	; 0 ; DATA XREF: ROM:000192D4o
byte_192FB:	dc.b  $F, $A,$FF	; 0 ; DATA XREF: ROM:000192D6o
byte_192FE:	dc.b   3,  8,  9,$FF	; 0 ; DATA XREF: ROM:000192D8o
byte_19302:	dc.b   1,  8,  9,$FF	; 0 ; DATA XREF: ROM:000192DAo
byte_19306:	dc.b  $F,  7,$FF	; 0 ; DATA XREF: ROM:000192DCo
byte_19309:	dc.b   2,  9,  8, $B, $C, $B, $C,  9,  8,$FE,  2; 0
					; DATA XREF: ROM:000192DEo
Map_Eggman:	dc.w word_1932E-Map_Eggman ; DATA XREF:	ROM:00018D40o
					; ROM:Map_Eggmano ...
		dc.w word_19360-Map_Eggman
		dc.w word_19372-Map_Eggman
		dc.w word_19384-Map_Eggman
		dc.w word_1939E-Map_Eggman
		dc.w word_193B8-Map_Eggman
		dc.w word_193D2-Map_Eggman
		dc.w word_193EC-Map_Eggman
		dc.w word_1940E-Map_Eggman
		dc.w word_19418-Map_Eggman
		dc.w word_19422-Map_Eggman
		dc.w word_19424-Map_Eggman
		dc.w word_19436-Map_Eggman
word_1932E:	dc.w 6			; DATA XREF: ROM:Map_Eggmano
		dc.w $EC01,   $A,    5,$FFE4; 0
		dc.w $EC05,   $C,    6,	  $C; 4
		dc.w $FC0E,$2010,$2008,$FFE4; 8
		dc.w $FC0E,$201C,$200E,	   4; 12
		dc.w $140C,$2028,$2014,$FFEC; 16
		dc.w $1400,$202C,$2016,	  $C; 20
word_19360:	dc.w 2			; DATA XREF: ROM:00019316o
		dc.w $E404,    0,    0,$FFF4; 0
		dc.w $EC0D,    2,    1,$FFEC; 4
word_19372:	dc.w 2			; DATA XREF: ROM:00019318o
		dc.w $E404,    0,    0,$FFF4; 0
		dc.w $EC0D,  $35,  $1A,$FFEC; 4
word_19384:	dc.w 3			; DATA XREF: ROM:0001931Ao
		dc.w $E408,  $3D,  $1E,$FFF4; 0
		dc.w $EC09,  $40,  $20,$FFEC; 4
		dc.w $EC05,  $46,  $23,	   4; 8
word_1939E:	dc.w 3			; DATA XREF: ROM:0001931Co
		dc.w $E408,  $4A,  $25,$FFF4; 0
		dc.w $EC09,  $4D,  $26,$FFEC; 4
		dc.w $EC05,  $53,  $29,	   4; 8
word_193B8:	dc.w 3			; DATA XREF: ROM:0001931Eo
		dc.w $E408,  $57,  $2B,$FFF4; 0
		dc.w $EC09,  $5A,  $2D,$FFEC; 4
		dc.w $EC05,  $60,  $30,	   4; 8
word_193D2:	dc.w 3			; DATA XREF: ROM:00019320o
		dc.w $E404,  $64,  $32,	   4; 0
		dc.w $E404,    0,    0,$FFF4; 4
		dc.w $EC0D,  $35,  $1A,$FFEC; 8
word_193EC:	dc.w 4			; DATA XREF: ROM:00019322o
		dc.w $E409,  $66,  $33,$FFF4; 0
		dc.w $E408,  $57,  $2B,$FFF4; 4
		dc.w $EC09,  $5A,  $2D,$FFEC; 8
		dc.w $EC05,  $60,  $30,	   4; 12
word_1940E:	dc.w 1			; DATA XREF: ROM:00019324o
		dc.w  $405,  $2D,  $16,	 $22; 0
word_19418:	dc.w 1			; DATA XREF: ROM:00019326o
		dc.w  $405,  $31,  $18,	 $22; 0
word_19422:	dc.w 0			; DATA XREF: ROM:00019328o
word_19424:	dc.w 2			; DATA XREF: ROM:0001932Ao
		dc.w	 8, $12A, $195,	 $22; 0
		dc.w  $808,$112A,$1995,	 $22; 4
word_19436:	dc.w 2			; DATA XREF: ROM:0001932Co
		dc.w $F80B, $12D, $199,	 $22; 0
		dc.w	 1, $139, $1AB,	 $3A; 4
Map_BossItems:	dc.w word_19458-Map_BossItems ;	DATA XREF: ROM:0001910Eo
					; ROM:Map_BossItemso ...
		dc.w word_19462-Map_BossItems
		dc.w word_19474-Map_BossItems
		dc.w word_1947E-Map_BossItems
		dc.w word_19488-Map_BossItems
		dc.w word_19492-Map_BossItems
		dc.w word_194B4-Map_BossItems
		dc.w word_194C6-Map_BossItems
word_19458:	dc.w 1			; DATA XREF: ROM:Map_BossItemso
		dc.w $F805,    0,    0,$FFF8; 0
word_19462:	dc.w 2			; DATA XREF: ROM:0001944Ao
		dc.w $FC04,    4,    2,$FFF8; 0
		dc.w $F805,    0,    0,$FFF8; 4
word_19474:	dc.w 1			; DATA XREF: ROM:0001944Co
		dc.w $FC00,    6,    3,$FFFC; 0
word_1947E:	dc.w 1			; DATA XREF: ROM:0001944Eo
		dc.w $1409,    7,    3,$FFF4; 0
word_19488:	dc.w 1			; DATA XREF: ROM:00019450o
		dc.w $1405,   $D,    6,$FFF8; 0
word_19492:	dc.w 4			; DATA XREF: ROM:00019452o
		dc.w $F004,  $11,    8,$FFF8; 0
		dc.w $F801,  $13,    9,$FFF8; 4
		dc.w $F801, $813, $809,	   0; 8
		dc.w  $804,  $15,   $A,$FFF8; 12
word_194B4:	dc.w 2			; DATA XREF: ROM:00019454o
		dc.w	 5,  $17,   $B,	   0; 0
		dc.w	 0,  $1B,   $D,	 $10; 4
word_194C6:	dc.w 2			; DATA XREF: ROM:00019456o
		dc.w $1804,  $1C,   $E,	   0; 0
		dc.w	$B,  $1E,   $F,	 $10; 4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_Adjust2PArtPointer2_1:		; CODE XREF: ROM:00018D4Ep
					; ROM:0001915Cp ...
		jmp	Adjust2PArtPointer2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_Adjust2PArtPointer_5:		; CODE XREF: ROM:0001911Cp
		jmp	Adjust2PArtPointer
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
;----------------------------------------------------
; Object 3E - prison capsule
;----------------------------------------------------

Obj3E:					; DATA XREF: ROM:Obj_Indexo
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj3E_Index(pc,d0.w),d1
		jsr	Obj3E_Index(pc,d1.w)
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_1950A
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1950A:				; CODE XREF: ROM:00019502j
		jmp	DeleteObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj3E_Index:	dc.w Obj3E_Init-Obj3E_Index ; DATA XREF: ROM:Obj3E_Indexo
					; ROM:00019512o ...
		dc.w Obj3E_BodyMain-Obj3E_Index
		dc.w Obj3E_Switched-Obj3E_Index
		dc.w Obj3E_Explosion-Obj3E_Index
		dc.w Obj3E_Explosion-Obj3E_Index
		dc.w Obj3E_Explosion-Obj3E_Index
		dc.w Obj3E_Animals-Obj3E_Index
		dc.w Obj3E_EndAct-Obj3E_Index
Obj3E_Var:	dc.b   2,$20,  4,  0	; 0
		dc.b   4, $C,  5,  1	; 4
		dc.b   6,$10,  4,  3	; 8
		dc.b   8,$10,  3,  5	; 12
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj3E_Init:				; DATA XREF: ROM:Obj3E_Indexo
		move.l	#Map_Obj3E,4(a0)
		move.w	#$49D,2(a0)
		bsr.w	j_Adjust2PArtPointer_6
		move.b	#4,1(a0)
		move.w	$C(a0),$30(a0)
		moveq	#0,d0
		move.b	$28(a0),d0
		lsl.w	#2,d0
		lea	Obj3E_Var(pc,d0.w),a1
		move.b	(a1)+,routine(a0)
		move.b	(a1)+,$19(a0)
		move.b	(a1)+,$18(a0)
		move.b	(a1)+,$1A(a0)
		cmpi.w	#8,d0
		bne.s	locret_1957C
		move.b	#6,$20(a0)
		move.b	#8,$21(a0)

locret_1957C:				; CODE XREF: ROM:0001956Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj3E_BodyMain:				; DATA XREF: ROM:00019512o
		cmpi.b	#2,($FFFFF7A7).w
		beq.s	loc_1959C
		move.w	#$2B,d1	; '+'
		move.w	#$18,d2
		move.w	#$18,d3
		move.w	8(a0),d4
		jmp	SolidObject
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1959C:				; CODE XREF: ROM:00019584j
		tst.b	$25(a0)
		beq.s	loc_195B2
		clr.b	$25(a0)
		bclr	#3,($FFFFB022).w
		bset	#1,($FFFFB022).w

loc_195B2:				; CODE XREF: ROM:000195A0j
		move.b	#2,$1A(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj3E_Switched:				; DATA XREF: ROM:00019514o
		move.w	#$17,d1
		move.w	#8,d2
		move.w	#8,d3
		move.w	8(a0),d4
		jsr	SolidObject
		lea	(Ani_Obj3E).l,a1
		jsr	AnimateSprite
		move.w	$30(a0),$C(a0)
		move.b	$22(a0),d0
		andi.b	#$18,d0
		beq.s	locret_19620
		addq.w	#8,$C(a0)
		move.b	#$A,routine(a0)
		move.w	#$3C,$1E(a0) ; '<'
		clr.b	($FFFFFE1E).w
		clr.b	($FFFFF7AA).w
		move.b	#1,($FFFFF7CC).w
		move.w	#$800,($FFFFF602).w
		clr.b	$25(a0)
		bclr	#3,($FFFFB022).w
		bset	#1,($FFFFB022).w

locret_19620:				; CODE XREF: ROM:000195EAj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj3E_Explosion:			; DATA XREF: ROM:00019516o
					; ROM:00019518o ...
		moveq	#7,d0
		and.b	($FFFFFE0F).w,d0
		bne.s	loc_19660
		jsr	SingleObjLoad
		bne.s	loc_19660
		move.b	#$3F,0(a1) ; '?'
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		jsr	(RandomNumber).l
		moveq	#0,d1
		move.b	d0,d1
		lsr.b	#2,d1
		subi.w	#$20,d1	; ' '
		add.w	d1,8(a1)
		lsr.w	#8,d0
		lsr.b	#3,d0
		add.w	d0,$C(a1)

loc_19660:				; CODE XREF: ROM:00019628j
					; ROM:00019630j
		subq.w	#1,$1E(a0)
		beq.s	loc_19668
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19668:				; CODE XREF: ROM:00019664j
		move.b	#2,($FFFFF7A7).w
		move.b	#$C,routine(a0)
		move.b	#6,$1A(a0)
		move.w	#$96,$1E(a0) ; ''
		addi.w	#$20,$C(a0) ; ' '
		moveq	#7,d6
		move.w	#$9A,d5	; ''
		moveq	#$FFFFFFE4,d4

loc_1968E:				; CODE XREF: ROM:000196B4j
		jsr	SingleObjLoad
		bne.s	locret_196B8
		move.b	#$28,0(a1) ; '('
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		add.w	d4,8(a1)
		addq.w	#7,d4
		move.w	d5,$36(a1)
		subq.w	#8,d5
		dbf	d6,loc_1968E

locret_196B8:				; CODE XREF: ROM:00019694j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj3E_Animals:				; DATA XREF: ROM:0001951Co
		moveq	#7,d0
		and.b	($FFFFFE0F).w,d0
		bne.s	loc_196F8
		jsr	SingleObjLoad
		bne.s	loc_196F8
		move.b	#$28,0(a1) ; '('
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		jsr	(RandomNumber).l
		andi.w	#$1F,d0
		subq.w	#6,d0
		tst.w	d1
		bpl.s	loc_196EE
		neg.w	d0

loc_196EE:				; CODE XREF: ROM:000196EAj
		add.w	d0,8(a1)
		move.w	#$C,$36(a1)

loc_196F8:				; CODE XREF: ROM:000196C0j
					; ROM:000196C8j
		subq.w	#1,$1E(a0)
		bne.s	locret_19708
		addq.b	#2,routine(a0)
		move.w	#$B4,$1E(a0) ; '´'

locret_19708:				; CODE XREF: ROM:000196FCj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj3E_EndAct:				; DATA XREF: ROM:0001951Eo
		moveq	#$3E,d0	; '>'
		moveq	#$28,d1	; '('
		moveq	#$40,d2	; '@'
		lea	($FFFFB040).w,a1

loc_19714:				; CODE XREF: ROM:0001971Aj
		cmp.b	(a1),d1
		beq.s	locret_1972A
		adda.w	d2,a1
		dbf	d0,loc_19714
		jsr	(Load_EndOfAct).l
		jmp	(DeleteObject).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_1972A:				; CODE XREF: ROM:00019716j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Ani_Obj3E:	dc.w byte_19730-Ani_Obj3E ; DATA XREF: ROM:000195D0o
					; ROM:Ani_Obj3Eo ...
		dc.w byte_19730-Ani_Obj3E
byte_19730:	dc.b   2,  1,  3,$FF	; 0 ; DATA XREF: ROM:Ani_Obj3Eo
					; ROM:0001972Eo
Map_Obj3E:	dc.w word_19742-Map_Obj3E ; DATA XREF: ROM:Obj3E_Inito
					; ROM:Map_Obj3Eo ...
		dc.w word_1977C-Map_Obj3E
		dc.w word_19786-Map_Obj3E
		dc.w word_197B8-Map_Obj3E
		dc.w word_197C2-Map_Obj3E
		dc.w word_197D4-Map_Obj3E
		dc.w unk_197DE-Map_Obj3E
word_19742:	dc.w 7			; DATA XREF: ROM:Map_Obj3Eo
		dc.w $E00C,$2000,$2000,$FFF0; 0
		dc.w $E80D,$2004,$2002,$FFE0; 4
		dc.w $E80D,$200C,$2006,	   0; 8
		dc.w $F80E,$2014,$200A,$FFE0; 12
		dc.w $F80E,$2020,$2010,	   0; 16
		dc.w $100D,$202C,$2016,$FFE0; 20
		dc.w $100D,$2034,$201A,	   0; 24
word_1977C:	dc.w 1			; DATA XREF: ROM:00019736o
		dc.w $F809,  $3C,  $1E,$FFF4; 0
word_19786:	dc.w 6			; DATA XREF: ROM:00019738o
		dc.w	 8,$2042,$2021,$FFE0; 0
		dc.w  $80C,$2045,$2022,$FFE0; 4
		dc.w	 4,$2049,$2024,	 $10; 8
		dc.w  $80C,$204B,$2025,	   0; 12
		dc.w $100D,$202C,$2016,$FFE0; 16
		dc.w $100D,$2034,$201A,	   0; 20
word_197B8:	dc.w 1			; DATA XREF: ROM:0001973Ao
		dc.w $F809,  $4F,  $27,$FFF4; 0
word_197C2:	dc.w 2			; DATA XREF: ROM:0001973Co
		dc.w $E80E,$2055,$202A,$FFF0; 0
		dc.w	$E,$2061,$2030,$FFF0; 4
word_197D4:	dc.w 1			; DATA XREF: ROM:0001973Eo
		dc.w $F007,$206D,$2036,$FFF8; 0
unk_197DE:	dc.b   0		; DATA XREF: ROM:00019740o
		dc.b   0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_Adjust2PArtPointer_6:		; CODE XREF: ROM:0001953Ep
		jmp	Adjust2PArtPointer
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


TouchResponse:				; CODE XREF: ROM:0000FB08p
					; ROM:00010CF6p

; FUNCTION CHUNK AT 00019B02 SIZE 00000070 BYTES

		nop
		bsr.w	loc_19B7A
		move.w	8(a0),d2
		move.w	$C(a0),d3
		subi.w	#8,d2
		moveq	#0,d5
		move.b	$16(a0),d5
		subq.b	#3,d5
		sub.w	d5,d3
		cmpi.b	#$39,$1A(a0) ; '9'
		bne.s	loc_19812
		addi.w	#$C,d3
		moveq	#$A,d5

loc_19812:				; CODE XREF: TouchResponse+22j
		move.w	#$10,d4
		add.w	d5,d5
		lea	($FFFFB800).w,a1
		move.w	#$5F,d6	; '_'

loc_19820:				; CODE XREF: TouchResponse+42j
		move.b	$20(a1),d0
		bne.s	Touch_Height

loc_19826:				; CODE XREF: TouchResponse+B0j
					; TouchResponse+B6j ...
		lea	$40(a1),a1
		dbf	d6,loc_19820
		moveq	#0,d0

locret_19830:
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Touch_Sizes:	dc.b $14,$14		; 0 ; DATA XREF: TouchResponse+98t
		dc.b  $C,$14		; 2
		dc.b $14, $C		; 4
		dc.b   4,$10		; 6
		dc.b  $C,$12		; 8
		dc.b $10,$10		; 10
		dc.b   6,  6		; 12
		dc.b $18, $C		; 14
		dc.b  $C,$10		; 16
		dc.b $10, $C		; 18
		dc.b   8,  8		; 20
		dc.b $14,$10		; 22
		dc.b $14,  8		; 24
		dc.b  $E, $E		; 26
		dc.b $18,$18		; 28
		dc.b $28,$10		; 30
		dc.b $10,$18		; 32
		dc.b   8,$10		; 34
		dc.b $20,$70		; 36
		dc.b $40,$20		; 38
		dc.b $80,$20		; 40
		dc.b $20,$20		; 42
		dc.b   8,  8		; 44
		dc.b   4,  4		; 46
		dc.b $20,  8		; 48
		dc.b  $C, $C		; 50
		dc.b   8,  4		; 52
		dc.b $18,  4		; 54
		dc.b $28,  4		; 56
		dc.b   4,  8		; 58
		dc.b   4,$18		; 60
		dc.b   4,$28		; 62
		dc.b   4,$20		; 64
		dc.b $18,$18		; 66
		dc.b  $C,$18		; 68
		dc.b $48,  8		; 70
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Touch_Height:				; CODE XREF: TouchResponse+3Cj
		andi.w	#$3F,d0	; '?'
		add.w	d0,d0
		lea	Touch_Sizes-2(pc,d0.w),a2
		moveq	#0,d1
		move.b	(a2)+,d1
		move.w	8(a1),d0
		sub.w	d1,d0
		sub.w	d2,d0
		bcc.s	loc_1989C
		add.w	d1,d1
		add.w	d1,d0
		bcs.s	loc_198A2
		bra.w	loc_19826
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1989C:				; CODE XREF: TouchResponse+A8j
		cmp.w	d4,d0
		bhi.w	loc_19826

loc_198A2:				; CODE XREF: TouchResponse+AEj
		moveq	#0,d1
		move.b	(a2)+,d1
		move.w	$C(a1),d0
		sub.w	d1,d0
		sub.w	d3,d0
		bcc.s	loc_198BA
		add.w	d1,d1
		add.w	d1,d0
		bcs.s	loc_198C0
		bra.w	loc_19826
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_198BA:				; CODE XREF: TouchResponse+C6j
		cmp.w	d5,d0
		bhi.w	loc_19826

loc_198C0:				; CODE XREF: TouchResponse+CCj
		move.b	$20(a1),d1
		andi.b	#$C0,d1
		beq.w	loc_1993A
		cmpi.b	#$C0,d1
		beq.w	Touch_Special
		tst.b	d1
		bmi.w	loc_199F2
		move.b	$20(a1),d0
		andi.b	#$3F,d0	; '?'
		cmpi.b	#6,d0
		beq.s	loc_198FA
		cmpi.w	#$5A,$30(a0) ; 'Z'
		bcc.w	locret_198F8
		move.b	#4,routine(a1)

locret_198F8:				; CODE XREF: TouchResponse+106j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_198FA:				; CODE XREF: TouchResponse+FEj
		tst.w	$12(a0)
		bpl.s	loc_19926
		move.w	$C(a0),d0
		subi.w	#$10,d0
		cmp.w	$C(a1),d0
		bcs.s	locret_19938

loc_1990E:
		neg.w	$12(a0)

loc_19912:
		move.w	#$FE80,$12(a1)
		tst.b	$25(a1)
		bne.s	locret_19938
		move.b	#4,$25(a1)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19926:				; CODE XREF: TouchResponse+116j
		cmpi.b	#2,$1C(a0)
		bne.s	locret_19938
		neg.w	$12(a0)
		move.b	#4,routine(a1)

locret_19938:				; CODE XREF: TouchResponse+124j
					; TouchResponse+134j ...
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1993A:				; CODE XREF: TouchResponse+E0j
					; TouchResponse:loc_19B56j
		tst.b	($FFFFFE2D).w
		bne.s	loc_19952
		cmpi.b	#9,$1C(a0)
		beq.s	loc_19952
		cmpi.b	#2,$1C(a0)
		bne.w	loc_199F2

loc_19952:				; CODE XREF: TouchResponse+156j
					; TouchResponse+15Ej
		tst.b	$21(a1)
		beq.s	Touch_KillEnemy
		neg.w	$10(a0)
		neg.w	$12(a0)
		asr	$10(a0)
		asr	$12(a0)
		move.b	#0,$20(a1)
		subq.b	#1,$21(a1)
		bne.s	locret_1997A
		bset	#7,$22(a1)

locret_1997A:				; CODE XREF: TouchResponse+18Aj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Touch_KillEnemy:			; CODE XREF: TouchResponse+16Ej
		bset	#7,$22(a1)
		moveq	#0,d0
		move.w	($FFFFF7D0).w,d0
		addq.w	#2,($FFFFF7D0).w
		cmpi.w	#6,d0
		bcs.s	loc_19994
		moveq	#6,d0

loc_19994:				; CODE XREF: TouchResponse+1A8j
		move.w	d0,$3E(a1)
		move.w	Enemy_Points(pc,d0.w),d0
		cmpi.w	#$20,($FFFFF7D0).w ; ' '
		bcs.s	loc_199AE
		move.w	#$3E8,d0
		move.w	#$A,$3E(a1)

loc_199AE:				; CODE XREF: TouchResponse+1BAj
		bsr.w	AddPoints
		move.b	#$27,0(a1) ; '''
		move.b	#0,routine(a1)
		tst.w	$12(a0)
		bmi.s	loc_199D4
		move.w	$C(a0),d0
		cmp.w	$C(a1),d0
		bcc.s	loc_199DC
		neg.w	$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_199D4:				; CODE XREF: TouchResponse+1DAj
		addi.w	#$100,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_199DC:				; CODE XREF: TouchResponse+1E4j
		subi.w	#$100,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Enemy_Points:
		dc.w	10,   20,   50,	 100; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_199EC:				; CODE XREF: TouchResponse:Touch_Caterkillerj
		bset	#7,$22(a1)

loc_199F2:				; CODE XREF: TouchResponse+EEj
					; TouchResponse+166j ...
		tst.b	($FFFFFE2D).w
		beq.s	Touch_Hurt

loc_199F8:				; CODE XREF: TouchResponse+21Aj
		moveq	#$FFFFFFFF,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Touch_Hurt:				; CODE XREF: TouchResponse+20Ej
		nop
		tst.w	$30(a0)
		bne.s	loc_199F8
		movea.l	a1,a2
; End of function TouchResponse


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HurtSonic:				; CODE XREF: ROM:0000C75Ep
		tst.b	($FFFFFE2C).w
		bne.s	HurtShield
		tst.w	($FFFFFE20).w

loc_19A10:
		beq.w	Hurt_NoRings
		jsr	SingleObjLoad
		bne.s	HurtShield
		move.b	#$37,0(a1) ; '7'
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)

HurtShield:				; CODE XREF: HurtSonic+4j
					; HurtSonic+14j ...
		move.b	#0,($FFFFFE2C).w
		move.b	#4,routine(a0)
		bsr.w	j_Sonic_ResetOnFloor
		bset	#1,$22(a0)
		move.w	#$FC00,$12(a0)
		move.w	#$FE00,$10(a0)
		btst	#6,$22(a0)
		beq.s	Hurt_Reverse
		move.w	#$FE00,$12(a0)
		move.w	#$FF00,$10(a0)

Hurt_Reverse:				; CODE XREF: HurtSonic+50j
		move.w	8(a0),d0
		cmp.w	8(a2),d0
		bcs.s	Hurt_ChkSpikes
		neg.w	$10(a0)

Hurt_ChkSpikes:				; CODE XREF: HurtSonic+66j
		move.w	#0,$14(a0)
		move.b	#$1A,$1C(a0)
		move.w	#$78,$30(a0) ; 'x'
		move.w	#$A3,d0	; '£'
		cmpi.b	#$36,(a2) ; '6'
		bne.s	loc_19A98
		cmpi.b	#$16,(a2)
		bne.s	loc_19A98
		move.w	#$A6,d0	; '¦'

loc_19A98:				; CODE XREF: HurtSonic+86j
					; HurtSonic+8Cj
		jsr	(PlaySound_Special).l
		moveq	#$FFFFFFFF,d0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Hurt_NoRings:				; CODE XREF: HurtSonic:loc_19A10j
		tst.w	(Debug_mode_flag).w
		bne.w	HurtShield
; End of function HurtSonic


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


KillSonic:				; CODE XREF: sub_F456+268p
					; Sonic_LevelBound:JmpTo_KillSonicj ...
		tst.w	(Debug_placement_mode).w
		bne.s	Kill_NoDeath
		move.b	#0,($FFFFFE2D).w
		move.b	#6,routine(a0)
		bsr.w	j_Sonic_ResetOnFloor
		bset	#1,$22(a0)
		move.w	#$F900,$12(a0)
		move.w	#0,$10(a0)
		move.w	#0,$14(a0)
		move.w	$C(a0),$38(a0)
		move.b	#$18,$1C(a0)
		bset	#7,2(a0)
		move.w	#$A3,d0	; '£'
		cmpi.b	#$36,(a2) ; '6'
		bne.s	loc_19AF8
		move.w	#$A6,d0	; '¦'

loc_19AF8:				; CODE XREF: KillSonic+48j
		jsr	(PlaySound_Special).l

Kill_NoDeath:				; CODE XREF: KillSonic+4j
		moveq	#$FFFFFFFF,d0
		rts
; End of function KillSonic

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR TouchResponse

Touch_Special:				; CODE XREF: TouchResponse+E8j
		move.b	$20(a1),d1
		andi.b	#$3F,d1	; '?'
		cmpi.b	#$B,d1
		beq.s	Touch_Caterkiller
		cmpi.b	#$C,d1
		beq.s	Touch_Yadrin
		cmpi.b	#$17,d1
		beq.s	Touch_D7
		cmpi.b	#$21,d1	; '!'
		beq.s	Touch_E1
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Touch_Caterkiller:			; CODE XREF: TouchResponse+326j
		bra.w	loc_199EC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Touch_Yadrin:				; CODE XREF: TouchResponse+32Cj
		sub.w	d0,d5
		cmpi.w	#8,d5
		bcc.s	loc_19B56
		move.w	8(a1),d0
		subq.w	#4,d0
		btst	#0,$22(a1)
		beq.s	loc_19B42
		subi.w	#$10,d0

loc_19B42:				; CODE XREF: TouchResponse+354j
		sub.w	d2,d0
		bcc.s	loc_19B4E
		addi.w	#$18,d0
		bcs.s	loc_19B52
		bra.s	loc_19B56
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19B4E:				; CODE XREF: TouchResponse+35Cj
		cmp.w	d4,d0
		bhi.s	loc_19B56

loc_19B52:				; CODE XREF: TouchResponse+362j
		bra.w	loc_199F2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19B56:				; CODE XREF: TouchResponse+346j
					; TouchResponse+364j ...
		bra.w	loc_1993A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Touch_D7:				; CODE XREF: TouchResponse+332j
		move.w	a0,d1
		subi.w	#$B000,d1
		beq.s	loc_19B66
		addq.b	#1,$21(a1)

loc_19B66:				; CODE XREF: TouchResponse+378j
		addq.b	#1,$21(a1)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Touch_E1:				; CODE XREF: TouchResponse+338j
		addq.b	#1,$21(a1)
		rts
; END OF FUNCTION CHUNK	FOR TouchResponse
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

j_Sonic_ResetOnFloor:
		jmp	(Sonic_ResetOnFloor).l

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19B7A:
		jmp	(Touch_Rings).l

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; leftover from	Sonic 1

S1SS_ShowLayout:			; CODE XREF: ROM:0000518Ep
					; ROM:000051FAp
		bsr.w	sub_19CC2
		bsr.w	sub_19F02
		move.w	d5,-(sp)
		lea	($FFFF8000).w,a1
		move.b	($FFFFF780).w,d0
		andi.b	#$FC,d0
		jsr	(CalcSine).l
		move.w	d0,d4
		move.w	d1,d5
		muls.w	#$18,d4
		muls.w	#$18,d5
		moveq	#0,d2
		move.w	($FFFFEE00).w,d2
		divu.w	#$18,d2
		swap	d2
		neg.w	d2
		addi.w	#$FF4C,d2
		moveq	#0,d3
		move.w	($FFFFEE04).w,d3
		divu.w	#$18,d3
		swap	d3
		neg.w	d3
		addi.w	#$FF4C,d3
		move.w	#$F,d7

loc_19BD0:				; CODE XREF: S1SS_ShowLayout+8Ej
		movem.w	d0-d2,-(sp)
		movem.w	d0-d1,-(sp)
		neg.w	d0
		muls.w	d2,d1
		muls.w	d3,d0
		move.l	d0,d6
		add.l	d1,d6
		movem.w	(sp)+,d0-d1
		muls.w	d2,d0
		muls.w	d3,d1
		add.l	d0,d1
		move.l	d6,d2
		move.w	#$F,d6

loc_19BF2:				; CODE XREF: S1SS_ShowLayout+82j
		move.l	d2,d0
		asr.l	#8,d0
		move.w	d0,(a1)+
		move.l	d1,d0
		asr.l	#8,d0
		move.w	d0,(a1)+
		add.l	d5,d2
		add.l	d4,d1
		dbf	d6,loc_19BF2
		movem.w	(sp)+,d0-d2
		addi.w	#$18,d3
		dbf	d7,loc_19BD0
		move.w	(sp)+,d5
		lea	($FFFF0000).l,a0
		moveq	#0,d0
		move.w	($FFFFEE04).w,d0
		divu.w	#$18,d0
		mulu.w	#$80,d0	; ''
		adda.l	d0,a0
		moveq	#0,d0
		move.w	($FFFFEE00).w,d0
		divu.w	#$18,d0
		adda.w	d0,a0
		lea	($FFFF8000).w,a4
		move.w	#$F,d7

loc_19C3E:				; CODE XREF: S1SS_ShowLayout+124j
		move.w	#$F,d6

loc_19C42:				; CODE XREF: S1SS_ShowLayout+11Cj
		moveq	#0,d0
		move.b	(a0)+,d0
		beq.s	loc_19C9A
		cmpi.b	#$4E,d0	; 'N'
		bhi.s	loc_19C9A
		move.w	(a4),d3
		addi.w	#$120,d3
		cmpi.w	#$70,d3	; 'p'
		bcs.s	loc_19C9A
		cmpi.w	#$1D0,d3
		bcc.s	loc_19C9A
		move.w	2(a4),d2
		addi.w	#$F0,d2	; 'ğ'
		cmpi.w	#$70,d2	; 'p'
		bcs.s	loc_19C9A
		cmpi.w	#$170,d2
		bcc.s	loc_19C9A
		lea	($FFFF4000).l,a5
		lsl.w	#3,d0
		lea	(a5,d0.w),a5
		movea.l	(a5)+,a1
		move.w	(a5)+,d1
		add.w	d1,d1
		adda.w	(a1,d1.w),a1
		movea.w	(a5)+,a3
		moveq	#0,d1
		move.b	(a1)+,d1
		subq.b	#1,d1
		bmi.s	loc_19C9A
		jsr	loc_D1CE

loc_19C9A:				; CODE XREF: S1SS_ShowLayout+C6j
					; S1SS_ShowLayout+CCj ...
		addq.w	#4,a4
		dbf	d6,loc_19C42
		lea	$70(a0),a0
		dbf	d7,loc_19C3E
		move.b	d5,($FFFFF62C).w
		cmpi.b	#$50,d5	; 'P'
		beq.s	loc_19CBA
		move.l	#0,(a2)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19CBA:				; CODE XREF: S1SS_ShowLayout+130j
		move.b	#0,-5(a2)
		rts
; End of function S1SS_ShowLayout


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_19CC2:				; CODE XREF: S1SS_ShowLayoutp
		lea	($FFFF400C).l,a1
		moveq	#0,d0
		move.b	($FFFFF780).w,d0
		lsr.b	#2,d0
		andi.w	#$F,d0
		moveq	#$23,d1	; '#'

loc_19CD6:				; CODE XREF: sub_19CC2+18j
		move.w	d0,(a1)
		addq.w	#8,a1
		dbf	d1,loc_19CD6
		lea	($FFFF4005).l,a1
		subq.b	#1,($FFFFFEC2).w
		bpl.s	loc_19CFA
		move.b	#7,($FFFFFEC2).w
		addq.b	#1,($FFFFFEC3).w
		andi.b	#3,($FFFFFEC3).w

loc_19CFA:				; CODE XREF: sub_19CC2+26j
		move.b	($FFFFFEC3).w,$1D0(a1)
		subq.b	#1,($FFFFFEC4).w
		bpl.s	loc_19D16
		move.b	#7,($FFFFFEC4).w
		addq.b	#1,($FFFFFEC5).w
		andi.b	#1,($FFFFFEC5).w

loc_19D16:				; CODE XREF: sub_19CC2+42j
		move.b	($FFFFFEC5).w,d0
		move.b	d0,$138(a1)

loc_19D1E:
		move.b	d0,$160(a1)
		move.b	d0,$148(a1)
		move.b	d0,$150(a1)
		move.b	d0,$1D8(a1)
		move.b	d0,$1E0(a1)
		move.b	d0,$1E8(a1)
		move.b	d0,$1F0(a1)
		move.b	d0,$1F8(a1)
		move.b	d0,$200(a1)
		subq.b	#1,($FFFFFEC6).w
		bpl.s	loc_19D58
		move.b	#4,($FFFFFEC6).w
		addq.b	#1,($FFFFFEC7).w
		andi.b	#3,($FFFFFEC7).w

loc_19D58:				; CODE XREF: sub_19CC2+84j
		move.b	($FFFFFEC7).w,d0
		move.b	d0,$168(a1)
		move.b	d0,$170(a1)
		move.b	d0,$178(a1)
		move.b	d0,$180(a1)
		subq.b	#1,($FFFFFEC0).w
		bpl.s	loc_19D82
		move.b	#7,($FFFFFEC0).w
		subq.b	#1,($FFFFFEC1).w
		andi.b	#7,($FFFFFEC1).w

loc_19D82:				; CODE XREF: sub_19CC2+AEj
		lea	($FFFF4016).l,a1
		lea	(S1SS_WaRiVramSet).l,a0
		moveq	#0,d0
		move.b	($FFFFFEC1).w,d0
		add.w	d0,d0
		lea	(a0,d0.w),a0
		move.w	(a0),(a1)
		move.w	2(a0),8(a1)
		move.w	4(a0),$10(a1)
		move.w	6(a0),$18(a1)
		move.w	8(a0),$20(a1)
		move.w	$A(a0),$28(a1)
		move.w	$C(a0),$30(a1)
		move.w	$E(a0),$38(a1)
		adda.w	#$20,a0	; ' '
		adda.w	#$48,a1	; 'H'
		move.w	(a0),(a1)
		move.w	2(a0),8(a1)
		move.w	4(a0),$10(a1)
		move.w	6(a0),$18(a1)
		move.w	8(a0),$20(a1)
		move.w	$A(a0),$28(a1)
		move.w	$C(a0),$30(a1)
		move.w	$E(a0),$38(a1)
		adda.w	#$20,a0	; ' '
		adda.w	#$48,a1	; 'H'
		move.w	(a0),(a1)
		move.w	2(a0),8(a1)
		move.w	4(a0),$10(a1)
		move.w	6(a0),$18(a1)
		move.w	8(a0),$20(a1)
		move.w	$A(a0),$28(a1)
		move.w	$C(a0),$30(a1)
		move.w	$E(a0),$38(a1)
		adda.w	#$20,a0	; ' '
		adda.w	#$48,a1	; 'H'
		move.w	(a0),(a1)
		move.w	2(a0),8(a1)
		move.w	4(a0),$10(a1)
		move.w	6(a0),$18(a1)
		move.w	8(a0),$20(a1)
		move.w	$A(a0),$28(a1)
		move.w	$C(a0),$30(a1)
		move.w	$E(a0),$38(a1)
		adda.w	#$20,a0	; ' '
		adda.w	#$48,a1	; 'H'
		rts
; End of function sub_19CC2

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1SS_WaRiVramSet:dc.w  $142,$6142, $142, $142, $142, $142, $142,$6142; 0
					; DATA XREF: sub_19CC2+C6o
		dc.w  $142,$6142, $142,	$142, $142, $142, $142,$6142; 8
		dc.w $2142, $142,$2142,$2142,$2142,$2142,$2142,	$142; 16
		dc.w $2142, $142,$2142,$2142,$2142,$2142,$2142,	$142; 24
		dc.w $4142,$2142,$4142,$4142,$4142,$4142,$4142,$2142; 32
		dc.w $4142,$2142,$4142,$4142,$4142,$4142,$4142,$2142; 40
		dc.w $6142,$4142,$6142,$6142,$6142,$6142,$6142,$4142; 48
		dc.w $6142,$4142,$6142,$6142,$6142,$6142,$6142,$4142; 56

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_19EEC:				; CODE XREF: Obj09_ChkItems+40p
					; Obj09_ChkItems+7Cp ...
		lea	($FFFF4400).l,a2
		move.w	#$1F,d0

loc_19EF6:				; CODE XREF: sub_19EEC+10j
		tst.b	(a2)
		beq.s	locret_19F00
		addq.w	#8,a2
		dbf	d0,loc_19EF6

locret_19F00:				; CODE XREF: sub_19EEC+Cj
		rts
; End of function sub_19EEC


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_19F02:				; CODE XREF: S1SS_ShowLayout+4p
		lea	($FFFF4400).l,a0
		move.w	#$1F,d7

loc_19F0C:				; CODE XREF: sub_19F02:loc_19F1Cj
		moveq	#0,d0
		move.b	(a0),d0
		beq.s	loc_19F1A
		lsl.w	#2,d0
		movea.l	S1SS_AniIndex-4(pc,d0.w),a1
		jsr	(a1)

loc_19F1A:				; CODE XREF: sub_19F02+Ej
		addq.w	#8,a0

loc_19F1C:
		dbf	d7,loc_19F0C
		rts
; End of function sub_19F02

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1SS_AniIndex:	dc.l loc_19F3A		; DATA XREF: sub_19F02+12t
		dc.l loc_19F6A
		dc.l loc_19FA0
		dc.l loc_19FD0
		dc.l loc_1A006
		dc.l loc_1A046
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19F3A:				; DATA XREF: ROM:S1SS_AniIndexo
		subq.b	#1,2(a0)
		bpl.s	locret_19F62
		move.b	#5,2(a0)
		moveq	#0,d0
		move.b	3(a0),d0
		addq.b	#1,3(a0)
		movea.l	4(a0),a1
		move.b	byte_19F64(pc,d0.w),d0
		move.b	d0,(a1)
		bne.s	locret_19F62
		clr.l	(a0)
		clr.l	4(a0)

locret_19F62:				; CODE XREF: ROM:00019F3Ej
					; ROM:00019F5Aj
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_19F64:	dc.b $42,$43,$44,$45,  0,  0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19F6A:				; DATA XREF: ROM:00019F26o
		subq.b	#1,2(a0)
		bpl.s	locret_19F98
		move.b	#7,2(a0)
		moveq	#0,d0
		move.b	3(a0),d0
		addq.b	#1,3(a0)
		movea.l	4(a0),a1
		move.b	byte_19F9A(pc,d0.w),d0
		bne.s	loc_19F96
		clr.l	(a0)
		clr.l	4(a0)
		move.b	#$25,(a1) ; '%'
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19F96:				; CODE XREF: ROM:00019F88j
		move.b	d0,(a1)

locret_19F98:				; CODE XREF: ROM:00019F6Ej
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_19F9A:	dc.b $32,$33,$32,$33,  0,  0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19FA0:				; DATA XREF: ROM:00019F2Ao
		subq.b	#1,2(a0)
		bpl.s	locret_19FC8
		move.b	#5,2(a0)
		moveq	#0,d0
		move.b	3(a0),d0
		addq.b	#1,3(a0)
		movea.l	4(a0),a1
		move.b	byte_19FCA(pc,d0.w),d0
		move.b	d0,(a1)
		bne.s	locret_19FC8
		clr.l	(a0)
		clr.l	4(a0)

locret_19FC8:				; CODE XREF: ROM:00019FA4j
					; ROM:00019FC0j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_19FCA:	dc.b $46,$47,$48,$49,  0,  0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19FD0:				; DATA XREF: ROM:00019F2Eo
		subq.b	#1,2(a0)
		bpl.s	locret_19FFE
		move.b	#7,2(a0)
		moveq	#0,d0
		move.b	3(a0),d0
		addq.b	#1,3(a0)
		movea.l	4(a0),a1
		move.b	byte_1A000(pc,d0.w),d0
		bne.s	loc_19FFC
		clr.l	(a0)
		clr.l	4(a0)
		move.b	#$2B,(a1) ; '+'
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_19FFC:				; CODE XREF: ROM:00019FEEj
		move.b	d0,(a1)

locret_19FFE:				; CODE XREF: ROM:00019FD4j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_1A000:	dc.b $2B,$31,$2B,$31,  0,  0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A006:				; DATA XREF: ROM:00019F32o
		subq.b	#1,2(a0)
		bpl.s	locret_1A03E
		move.b	#5,2(a0)
		moveq	#0,d0
		move.b	3(a0),d0
		addq.b	#1,3(a0)
		movea.l	4(a0),a1
		move.b	byte_1A040(pc,d0.w),d0
		move.b	d0,(a1)
		bne.s	locret_1A03E
		clr.l	(a0)
		clr.l	4(a0)
		move.b	#4,($FFFFB000+routine).w
		move.w	#$A8,d0	; '¨'
		jsr	(PlaySound_Special).l

locret_1A03E:				; CODE XREF: ROM:0001A00Aj
					; ROM:0001A026j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_1A040:	dc.b $46,$47,$48,$49,  0,  0; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A046:				; DATA XREF: ROM:00019F36o
		subq.b	#1,2(a0)
		bpl.s	locret_1A072
		move.b	#1,2(a0)
		moveq	#0,d0
		move.b	3(a0),d0
		addq.b	#1,3(a0)
		movea.l	4(a0),a1
		move.b	byte_1A074(pc,d0.w),d0
		move.b	d0,(a1)
		bne.s	locret_1A072
		move.b	4(a0),(a1)
		clr.l	(a0)
		clr.l	4(a0)

locret_1A072:				; CODE XREF: ROM:0001A04Aj
					; ROM:0001A066j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
byte_1A074:	dc.b $4B,$4C,$4D,$4E,$4B,$4C,$4D,$4E; 0
		dc.b   0,  0		; 8
S1SS_LayoutIndex:dc.l S1SS_1,S1SS_2	 ; 0
		dc.l S1SS_3,S1SS_4	; 2
		dc.l S1SS_5,S1SS_6	; 4
S1SS_StartLoc:	dc.w  $3D0, $2E0	; 0
		dc.w  $328, $574	; 2
		dc.w  $4E4, $2E0	; 4
		dc.w  $3AD, $2E0	; 6
		dc.w  $340, $6B8	; 8
		dc.w  $49B, $358	; 10

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


S1SS_Load:				; CODE XREF: ROM:000050E0p
					; S1SS_Load+34j
		moveq	#0,d0
		move.b	($FFFFFE16).w,d0
		addq.b	#1,($FFFFFE16).w
		cmpi.b	#6,($FFFFFE16).w
		bcs.s	loc_1A0C6
		move.b	#0,($FFFFFE16).w

loc_1A0C6:				; CODE XREF: S1SS_Load+10j
		cmpi.b	#6,($FFFFFE57).w
		beq.s	loc_1A0E8
		moveq	#0,d1
		move.b	($FFFFFE57).w,d1
		subq.b	#1,d1
		bcs.s	loc_1A0E8
		lea	($FFFFFE58).w,a3

loc_1A0DC:				; CODE XREF: S1SS_Load:loc_1A0E4j
		cmp.b	(a3,d1.w),d0
		bne.s	loc_1A0E4
		bra.s	S1SS_Load
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A0E4:				; CODE XREF: S1SS_Load+32j
		dbf	d1,loc_1A0DC

loc_1A0E8:				; CODE XREF: S1SS_Load+1Ej
					; S1SS_Load+28j
		lsl.w	#2,d0
		lea	S1SS_StartLoc(pc,d0.w),a1
		move.w	(a1)+,($FFFFB008).w
		move.w	(a1)+,($FFFFB00C).w
		movea.l	S1SS_LayoutIndex(pc,d0.w),a0
		lea	($FFFF4000).l,a1
		move.w	#0,d0
		jsr	(EniDec).l
		lea	($FFFF0000).l,a1
		move.w	#$FFF,d0

loc_1A114:				; CODE XREF: S1SS_Load+68j
		clr.l	(a1)+
		dbf	d0,loc_1A114
		lea	($FFFF1020).l,a1
		lea	($FFFF4000).l,a0
		moveq	#$3F,d1	; '?'

loc_1A128:				; CODE XREF: S1SS_Load+86j
		moveq	#$3F,d2	; '?'

loc_1A12A:				; CODE XREF: S1SS_Load+7Ej
		move.b	(a0)+,(a1)+
		dbf	d2,loc_1A12A
		lea	$40(a1),a1
		dbf	d1,loc_1A128
		lea	($FFFF4008).l,a1
		lea	(S1SS_MapIndex).l,a0
		moveq	#$4D,d1	; 'M'

loc_1A146:				; CODE XREF: S1SS_Load+A6j
		move.l	(a0)+,(a1)+
		move.w	#0,(a1)+
		move.b	-4(a0),-1(a1)
		move.w	(a0)+,(a1)+
		dbf	d1,loc_1A146
		lea	($FFFF4400).l,a1
		move.w	#$3F,d1	; '?'

loc_1A162:				; CODE XREF: S1SS_Load+B6j
		clr.l	(a1)+
		dbf	d1,loc_1A162
		rts
; End of function S1SS_Load

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
S1SS_MapIndex:	dc.l S1Map_SS_R		; DATA XREF: S1SS_Load+90o
		dc.w $142
		dc.l S1Map_SS_R
		dc.w $142
		dc.l S1Map_SS_R
		dc.w $142
		dc.l S1Map_SS_R
		dc.w $142
		dc.l S1Map_SS_R
		dc.w $142
		dc.l S1Map_SS_R
		dc.w $142
		dc.l S1Map_SS_R
		dc.w $142
		dc.l S1Map_SS_R
		dc.w $142
		dc.l S1Map_SS_R
		dc.w $142
		dc.l S1Map_SS_R
		dc.w $2142
		dc.l S1Map_SS_R
		dc.w $2142
		dc.l S1Map_SS_R
		dc.w $2142
		dc.l S1Map_SS_R
		dc.w $2142
		dc.l S1Map_SS_R
		dc.w $2142
		dc.l S1Map_SS_R
		dc.w $2142
		dc.l S1Map_SS_R
		dc.w $2142
		dc.l S1Map_SS_R
		dc.w $2142
		dc.l S1Map_SS_R
		dc.w $2142
		dc.l S1Map_SS_R
		dc.w $4142
		dc.l S1Map_SS_R
		dc.w $4142
		dc.l S1Map_SS_R
		dc.w $4142
		dc.l S1Map_SS_R
		dc.w $4142
		dc.l S1Map_SS_R
		dc.w $4142
		dc.l S1Map_SS_R
		dc.w $4142
		dc.l S1Map_SS_R
		dc.w $4142
		dc.l S1Map_SS_R
		dc.w $4142
		dc.l S1Map_SS_R
		dc.w $4142
		dc.l S1Map_SS_R
		dc.w $6142
		dc.l S1Map_SS_R
		dc.w $6142
		dc.l S1Map_SS_R
		dc.w $6142
		dc.l S1Map_SS_R
		dc.w $6142
		dc.l S1Map_SS_R
		dc.w $6142
		dc.l S1Map_SS_R
		dc.w $6142
		dc.l S1Map_SS_R
		dc.w $6142
		dc.l S1Map_SS_R
		dc.w $6142
		dc.l S1Map_SS_R
		dc.w $6142
		dc.l Map_S1Obj47
		dc.w $23B
		dc.l S1Map_SS_R
		dc.w $570
		dc.l S1Map_SS_R
		dc.w $251
		dc.l S1Map_SS_R
		dc.w $370
		dc.l S1Map_SS_Up
		dc.w $263
		dc.l S1Map_SS_Down
		dc.w $263
		dc.l S1Map_SS_R
		dc.w $22F0
		dc.l S1Map_SS_Glass
		dc.w $470
		dc.l S1Map_SS_Glass
		dc.w $5F0
		dc.l S1Map_SS_Glass
		dc.w $65F0
		dc.l S1Map_SS_Glass
		dc.w $25F0
		dc.l S1Map_SS_Glass
		dc.w $45F0
		dc.l S1Map_SS_R
		dc.w $2F0
		dc.l Map_S1Obj47+$1000000
		dc.w $23B
		dc.l Map_S1Obj47+$2000000
		dc.w $23B
		dc.l S1Map_SS_R
		dc.w $797
		dc.l S1Map_SS_R
		dc.w $7A0
		dc.l S1Map_SS_R
		dc.w $7A9
		dc.l S1Map_SS_R
		dc.w $797
		dc.l S1Map_SS_R
		dc.w $7A0
		dc.l S1Map_SS_R
		dc.w $7A9
		dc.l Map_Obj25
		dc.w $27B2
		dc.l S1Map_SS_Chaos3
		dc.w $770
		dc.l S1Map_SS_Chaos3
		dc.w $2770
		dc.l S1Map_SS_Chaos3
		dc.w $4770
		dc.l S1Map_SS_Chaos3
		dc.w $6770
		dc.l S1Map_SS_Chaos1
		dc.w $770
		dc.l S1Map_SS_Chaos2
		dc.w $770
		dc.l S1Map_SS_R
		dc.w $4F0
		dc.l Map_Obj25+$4000000
		dc.w $27B2
		dc.l Map_Obj25+$5000000
		dc.w $27B2
		dc.l Map_Obj25+$6000000
		dc.w $27B2
		dc.l Map_Obj25+$7000000
		dc.w $27B2
		dc.l S1Map_SS_Glass
		dc.w $23F0
		dc.l S1Map_SS_Glass+$1000000
		dc.w $23F0
		dc.l S1Map_SS_Glass+$2000000
		dc.w $23F0
		dc.l S1Map_SS_Glass+$3000000
		dc.w $23F0
		dc.l S1Map_SS_R+$2000000
		dc.w $4F0
		dc.l S1Map_SS_Glass
		dc.w $5F0
		dc.l S1Map_SS_Glass
		dc.w $65F0
		dc.l S1Map_SS_Glass
		dc.w $25F0
		dc.l S1Map_SS_Glass
		dc.w $45F0
; ===========================================================================
; Rather humourously, these sprite mappings are stored in the Sonic 1 format
; ---------------------------------------------------------------------------
; Sprite mappings - 'R'
; ---------------------------------------------------------------------------
S1Map_SS_R:	dc.w byte_1A344-S1Map_SS_R
		dc.w byte_1A34A-S1Map_SS_R
		dc.w word_1A350-S1Map_SS_R
byte_1A344:	dc.b 1
		dc.b $F4, $A,  0,  0,$F4
byte_1A34A:	dc.b 1
		dc.b $F4, $A,  0,  9,$F4
word_1A350:	dc.w 0
; ---------------------------------------------------------------------------
; Sprite mappings - Glass
; ---------------------------------------------------------------------------
S1Map_SS_Glass:	dc.w byte_1A35A-S1Map_SS_Glass
		dc.w byte_1A360-S1Map_SS_Glass
		dc.w byte_1A366-S1Map_SS_Glass
		dc.w byte_1A36C-S1Map_SS_Glass
byte_1A35A:	dc.b 1
		dc.b $F4, $A,  0,  0,$F4
byte_1A360:	dc.b 1
		dc.b $F4, $A,  8,  0,$F4
byte_1A366:	dc.b 1
		dc.b $F4, $A,$18,  0,$F4
byte_1A36C:	dc.b 1
		dc.b $F4, $A,$10,  0,$F4
; ---------------------------------------------------------------------------
; Sprite mappings - 'Up'
; ---------------------------------------------------------------------------
S1Map_SS_Up:	dc.w byte_1A376-S1Map_SS_Up
		dc.w byte_1A37C-S1Map_SS_Up
byte_1A376:	dc.b 1
		dc.b $F4, $A,  0,  0,$F4
byte_1A37C:	dc.b 1
		dc.b $F4, $A,  0,$12,$F4
; ---------------------------------------------------------------------------
; Sprite mappings - 'Down'
; ---------------------------------------------------------------------------
S1Map_SS_Down:	dc.w byte_1A386-S1Map_SS_Down
		dc.w byte_1A38C-S1Map_SS_Down
byte_1A386:	dc.b 1
		dc.b $F4, $A,  0,  9,$F4
byte_1A38C:	dc.b 1
		dc.b $F4, $A,  0,$12,$F4
; ---------------------------------------------------------------------------
; Sprite mappings - Chaos Emeralds
; Merged together; can't split to file in a useful way...
; ---------------------------------------------------------------------------
S1Map_SS_Chaos1:dc.w byte_1A39E-S1Map_SS_Chaos1
		dc.w byte_1A3B0-S1Map_SS_Chaos1
S1Map_SS_Chaos2:dc.w byte_1A3A4-S1Map_SS_Chaos2
		dc.w byte_1A3B0-S1Map_SS_Chaos2
S1Map_SS_Chaos3:dc.w byte_1A3AA-S1Map_SS_Chaos3
		dc.w byte_1A3B0-S1Map_SS_Chaos3
byte_1A39E:	dc.b 1
		dc.b $F8,  5,  0,  0,$F8
byte_1A3A4:	dc.b 1
		dc.b $F8,  5,  0,  4,$F8
byte_1A3AA:	dc.b 1
		dc.b $F8,  5,  0,  8,$F8
byte_1A3B0:	dc.b 1
		dc.b $F8,  5,  0, $C,$F8
; ===========================================================================
		nop
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 09 - Sonic in Special Stage
; ---------------------------------------------------------------------------

Obj09:					; DATA XREF: ROM:Obj_Indexo
		tst.w	(Debug_placement_mode).w
		beq.s	Obj09_Normal
		bsr.w	S1SS_FixCamera
		bra.w	DebugMode
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj09_Normal:				; CODE XREF: ROM:0001A3BCj
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj09_Index(pc,d0.w),d1
		jmp	Obj09_Index(pc,d1.w)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj09_Index:	dc.w loc_1A3DC-Obj09_Index ; DATA XREF:	ROM:Obj09_Indexo
					; ROM:0001A3D6o ...
		dc.w loc_1A41C-Obj09_Index
		dc.w loc_1A618-Obj09_Index
		dc.w loc_1A66C-Obj09_Index
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A3DC:				; DATA XREF: ROM:Obj09_Indexo
		addq.b	#2,routine(a0)
		move.b	#$E,$16(a0)
		move.b	#7,$17(a0)
		move.l	#Map_Sonic,4(a0)
		move.w	#$780,2(a0)
		bsr.w	j_Adjust2PArtPointer_7
		move.b	#4,1(a0)
		move.b	#0,$18(a0)
		move.b	#2,$1C(a0)
		bset	#2,$22(a0)
		bset	#1,$22(a0)

loc_1A41C:				; DATA XREF: ROM:0001A3D6o
		tst.w	(Debug_mode_flag).w
		beq.s	loc_1A430
		btst	#4,($FFFFF605).w
		beq.s	loc_1A430
		move.w	#1,(Debug_placement_mode).w

loc_1A430:				; CODE XREF: ROM:0001A420j
					; ROM:0001A428j
		move.b	#0,$30(a0)
		moveq	#0,d0
		move.b	$22(a0),d0
		andi.w	#2,d0
		move.w	Obj09_Modes(pc,d0.w),d1
		jsr	Obj09_Modes(pc,d1.w)
		jsr	LoadSonicDynPLC
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Obj09_Modes:	dc.w Obj09_OnWall-Obj09_Modes ;	DATA XREF: ROM:Obj09_Modeso
					; ROM:0001A456o
		dc.w Obj09_InAir-Obj09_Modes
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj09_OnWall:				; DATA XREF: ROM:Obj09_Modeso
		bsr.w	Obj09_Jump
		bsr.w	Obj09_Move
		bsr.w	Obj09_Fall
		bra.s	Obj09_Display
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Obj09_InAir:				; DATA XREF: ROM:0001A456o
		bsr.w	nullsub_2
		bsr.w	Obj09_Move
		bsr.w	Obj09_Fall

Obj09_Display:				; CODE XREF: ROM:0001A464j
		bsr.w	Obj09_ChkItems
		bsr.w	Obj09_ChkItems2
		jsr	ObjectMove
		bsr.w	S1SS_FixCamera
		move.w	($FFFFF780).w,d0
		add.w	($FFFFF782).w,d0
		move.w	d0,($FFFFF780).w
		jsr	Sonic_Animate
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Obj09_Move:				; CODE XREF: ROM:0001A45Cp
					; ROM:0001A46Ap
		btst	#2,($FFFFF602).w
		beq.s	loc_1A4A4
		bsr.w	Obj09_MoveLeft

loc_1A4A4:				; CODE XREF: Obj09_Move+6j
		btst	#3,($FFFFF602).w
		beq.s	loc_1A4B0
		bsr.w	Obj09_MoveRight

loc_1A4B0:				; CODE XREF: Obj09_Move+12j
		move.b	($FFFFF602).w,d0
		andi.b	#$C,d0
		bne.s	loc_1A4E0
		move.w	$14(a0),d0
		beq.s	loc_1A4E0
		bmi.s	loc_1A4D2
		subi.w	#$C,d0
		bcc.s	loc_1A4CC
		move.w	#0,d0

loc_1A4CC:				; CODE XREF: Obj09_Move+2Ej
		move.w	d0,$14(a0)
		bra.s	loc_1A4E0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A4D2:				; CODE XREF: Obj09_Move+28j
		addi.w	#$C,d0
		bcc.s	loc_1A4DC
		move.w	#0,d0

loc_1A4DC:				; CODE XREF: Obj09_Move+3Ej
		move.w	d0,$14(a0)

loc_1A4E0:				; CODE XREF: Obj09_Move+20j
					; Obj09_Move+26j ...
		move.b	($FFFFF780).w,d0
		addi.b	#$20,d0	; ' '
		andi.b	#$C0,d0
		neg.b	d0
		jsr	(CalcSine).l
		muls.w	$14(a0),d1
		add.l	d1,8(a0)
		muls.w	$14(a0),d0
		add.l	d0,$C(a0)
		movem.l	d0-d1,-(sp)
		move.l	$C(a0),d2
		move.l	8(a0),d3
		bsr.w	sub_1A720
		beq.s	loc_1A52A
		movem.l	(sp)+,d0-d1
		sub.l	d1,8(a0)
		sub.l	d0,$C(a0)
		move.w	#0,$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A52A:				; CODE XREF: Obj09_Move+7Cj
		movem.l	(sp)+,d0-d1
		rts
; End of function Obj09_Move


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Obj09_MoveLeft:				; CODE XREF: Obj09_Move+8p
		bset	#0,$22(a0)
		move.w	$14(a0),d0
		beq.s	loc_1A53E
		bpl.s	loc_1A552

loc_1A53E:				; CODE XREF: Obj09_MoveLeft+Aj
		subi.w	#$C,d0
		cmpi.w	#$F800,d0
		bgt.s	loc_1A54C
		move.w	#$F800,d0

loc_1A54C:				; CODE XREF: Obj09_MoveLeft+16j
		move.w	d0,$14(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A552:				; CODE XREF: Obj09_MoveLeft+Cj
		subi.w	#$40,d0	; '@'
		bcc.s	loc_1A55A
		nop

loc_1A55A:				; CODE XREF: Obj09_MoveLeft+26j
		move.w	d0,$14(a0)
		rts
; End of function Obj09_MoveLeft


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Obj09_MoveRight:			; CODE XREF: Obj09_Move+14p
		bclr	#0,$22(a0)
		move.w	$14(a0),d0
		bmi.s	loc_1A580
		addi.w	#$C,d0
		cmpi.w	#$800,d0
		blt.s	loc_1A57A
		move.w	#$800,d0

loc_1A57A:				; CODE XREF: Obj09_MoveRight+14j
		move.w	d0,$14(a0)
		bra.s	locret_1A58C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A580:				; CODE XREF: Obj09_MoveRight+Aj
		addi.w	#$40,d0	; '@'
		bcc.s	loc_1A588
		nop

loc_1A588:				; CODE XREF: Obj09_MoveRight+24j
		move.w	d0,$14(a0)

locret_1A58C:				; CODE XREF: Obj09_MoveRight+1Ej
		rts
; End of function Obj09_MoveRight


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Obj09_Jump:				; CODE XREF: ROM:Obj09_OnWallp
		move.b	($FFFFF603).w,d0
		andi.b	#$70,d0	; 'p'
		beq.s	locret_1A5D0
		move.b	($FFFFF780).w,d0
		andi.b	#$FC,d0
		neg.b	d0
		subi.b	#$40,d0	; '@'
		jsr	(CalcSine).l
		muls.w	#$680,d1
		asr.l	#8,d1
		move.w	d1,$10(a0)
		muls.w	#$680,d0
		asr.l	#8,d0
		move.w	d0,$12(a0)
		bset	#1,$22(a0)
		move.w	#$A0,d0	; ' '
		jsr	(PlaySound_Special).l

locret_1A5D0:				; CODE XREF: Obj09_Jump+8j
		rts
; End of function Obj09_Jump


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


nullsub_2:				; CODE XREF: ROM:Obj09_InAirp
		rts
; End of function nullsub_2

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		move.w	#$FC00,d1
		cmp.w	$12(a0),d1
		ble.s	locret_1A5EC
		move.b	($FFFFF602).w,d0
		andi.b	#$70,d0	; 'p'
		bne.s	locret_1A5EC
		move.w	d1,$12(a0)

locret_1A5EC:				; CODE XREF: ROM:0001A5DCj
					; ROM:0001A5E6j
		rts

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


S1SS_FixCamera:				; CODE XREF: ROM:0001A3BEp
					; ROM:0001A480p ...
		move.w	$C(a0),d2
		move.w	8(a0),d3
		move.w	($FFFFEE00).w,d0
		subi.w	#$A0,d3	; ' '
		bcs.s	loc_1A606
		sub.w	d3,d0
		sub.w	d0,($FFFFEE00).w

loc_1A606:				; CODE XREF: S1SS_FixCamera+10j
		move.w	($FFFFEE04).w,d0
		subi.w	#$70,d2	; 'p'
		bcs.s	locret_1A616
		sub.w	d2,d0
		sub.w	d0,($FFFFEE04).w

locret_1A616:				; CODE XREF: S1SS_FixCamera+20j
		rts
; End of function S1SS_FixCamera

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A618:				; DATA XREF: ROM:0001A3D8o
		addi.w	#$40,($FFFFF782).w ; '@'
		cmpi.w	#$1800,($FFFFF782).w
		bne.s	loc_1A62C
		move.b	#GameModeID_Level,(Game_Mode).w

loc_1A62C:				; CODE XREF: ROM:0001A624j
		cmpi.w	#$3000,($FFFFF782).w
		blt.s	loc_1A64A
		move.w	#0,($FFFFF782).w
		move.w	#$4000,($FFFFF780).w
		addq.b	#2,routine(a0)
		move.w	#$3C,$38(a0) ; '<'

loc_1A64A:				; CODE XREF: ROM:0001A632j
		move.w	($FFFFF780).w,d0
		add.w	($FFFFF782).w,d0
		move.w	d0,($FFFFF780).w
		jsr	Sonic_Animate
		jsr	LoadSonicDynPLC
		bsr.w	S1SS_FixCamera
		jmp	DisplaySprite
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A66C:				; DATA XREF: ROM:0001A3DAo
		subq.w	#1,$38(a0)
		bne.s	loc_1A678
		move.b	#GameModeID_Level,(Game_Mode).w

loc_1A678:				; CODE XREF: ROM:0001A670j
		jsr	Sonic_Animate
		jsr	LoadSonicDynPLC
		bsr.w	S1SS_FixCamera
		jmp	DisplaySprite

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Obj09_Fall:				; CODE XREF: ROM:0001A460p
					; ROM:0001A46Ep
		move.l	$C(a0),d2
		move.l	8(a0),d3
		move.b	($FFFFF780).w,d0
		andi.b	#$FC,d0
		jsr	(CalcSine).l
		move.w	$10(a0),d4
		ext.l	d4
		asl.l	#8,d4
		muls.w	#$2A,d0	; '*'
		add.l	d4,d0
		move.w	$12(a0),d4
		ext.l	d4
		asl.l	#8,d4
		muls.w	#$2A,d1	; '*'
		add.l	d4,d1
		add.l	d0,d3
		bsr.w	sub_1A720
		beq.s	loc_1A6E8
		sub.l	d0,d3
		moveq	#0,d0
		move.w	d0,$10(a0)
		bclr	#1,$22(a0)
		add.l	d1,d2
		bsr.w	sub_1A720
		beq.s	loc_1A6FE
		sub.l	d1,d2
		moveq	#0,d1
		move.w	d1,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A6E8:				; CODE XREF: Obj09_Fall+38j
		add.l	d1,d2
		bsr.w	sub_1A720
		beq.s	loc_1A70C
		sub.l	d1,d2
		moveq	#0,d1
		move.w	d1,$12(a0)
		bclr	#1,$22(a0)

loc_1A6FE:				; CODE XREF: Obj09_Fall+4Ej
		asr.l	#8,d0
		asr.l	#8,d1
		move.w	d0,$10(a0)
		move.w	d1,$12(a0)
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A70C:				; CODE XREF: Obj09_Fall+60j
		asr.l	#8,d0
		asr.l	#8,d1
		move.w	d0,$10(a0)
		move.w	d1,$12(a0)
		bset	#1,$22(a0)
		rts
; End of function Obj09_Fall


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_1A720:				; CODE XREF: Obj09_Move+78p
					; Obj09_Fall+34p ...
		lea	($FFFF0000).l,a1
		moveq	#0,d4
		swap	d2
		move.w	d2,d4
		swap	d2
		addi.w	#$44,d4	; 'D'
		divu.w	#$18,d4
		mulu.w	#$80,d4	; ''
		adda.l	d4,a1
		moveq	#0,d4
		swap	d3
		move.w	d3,d4
		swap	d3
		addi.w	#$14,d4
		divu.w	#$18,d4
		adda.w	d4,a1
		moveq	#0,d5
		move.b	(a1)+,d4
		bsr.s	sub_1A768
		move.b	(a1)+,d4
		bsr.s	sub_1A768
		adda.w	#$7E,a1	; '~'
		move.b	(a1)+,d4
		bsr.s	sub_1A768
		move.b	(a1)+,d4
		bsr.s	sub_1A768
		tst.b	d5
		rts
; End of function sub_1A720


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_1A768:				; CODE XREF: sub_1A720+32p
					; sub_1A720+36p ...
		beq.s	locret_1A77C
		cmpi.b	#$28,d4	; '('
		beq.s	locret_1A77C
		cmpi.b	#$3A,d4	; ':'
		bcs.s	loc_1A77E
		cmpi.b	#$4B,d4	; 'K'
		bcc.s	loc_1A77E

locret_1A77C:				; CODE XREF: sub_1A768j sub_1A768+6j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A77E:				; CODE XREF: sub_1A768+Cj
					; sub_1A768+12j
		move.b	d4,$30(a0)
		move.l	a1,$32(a0)
		moveq	#-1,d5
		rts
; End of function sub_1A768


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Obj09_ChkItems:				; CODE XREF: ROM:Obj09_Displayp
		lea	($FFFF0000).l,a1
		moveq	#0,d4
		move.w	$C(a0),d4
		addi.w	#$50,d4	; 'P'
		divu.w	#$18,d4
		mulu.w	#$80,d4	; ''
		adda.l	d4,a1
		moveq	#0,d4
		move.w	8(a0),d4
		addi.w	#$20,d4	; ' '
		divu.w	#$18,d4
		adda.w	d4,a1
		move.b	(a1),d4
		bne.s	loc_1A7C4
		tst.b	$3A(a0)
		bne.w	loc_1A894
		moveq	#0,d4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A7C4:				; CODE XREF: Obj09_ChkItems+2Cj
		cmpi.b	#$3A,d4	; ':'
		bne.s	loc_1A800
		bsr.w	sub_19EEC
		bne.s	loc_1A7D8
		move.b	#1,(a2)
		move.l	a1,4(a2)

loc_1A7D8:				; CODE XREF: Obj09_ChkItems+44j
		jsr	sub_A8DE
		cmpi.w	#$32,($FFFFFE20).w ; '2'
		bcs.s	loc_1A7FC
		bset	#0,($FFFFFE1B).w
		bne.s	loc_1A7FC
		addq.b	#1,($FFFFFE18).w
		move.w	#$BF,d0	; '¿'
		jsr	(PlaySound).l

loc_1A7FC:				; CODE XREF: Obj09_ChkItems+5Aj
					; Obj09_ChkItems+62j
		moveq	#0,d4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A800:				; CODE XREF: Obj09_ChkItems+3Ej
		cmpi.b	#$28,d4	; '('
		bne.s	loc_1A82A
		bsr.w	sub_19EEC
		bne.s	loc_1A814
		move.b	#3,(a2)
		move.l	a1,4(a2)

loc_1A814:				; CODE XREF: Obj09_ChkItems+80j
		addq.b	#1,($FFFFFE12).w
		addq.b	#1,($FFFFFE1C).w
		move.w	#MusID_ExtraLife,d0
		jsr	(PlaySound).l
		moveq	#0,d4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A82A:				; CODE XREF: Obj09_ChkItems+7Aj
		cmpi.b	#$3B,d4	; ';'
		bcs.s	loc_1A870
		cmpi.b	#$40,d4	; '@'
		bhi.s	loc_1A870
		bsr.w	sub_19EEC
		bne.s	loc_1A844
		move.b	#5,(a2)
		move.l	a1,4(a2)

loc_1A844:				; CODE XREF: Obj09_ChkItems+B0j
		cmpi.b	#6,($FFFFFE57).w
		beq.s	loc_1A862
		subi.b	#$3B,d4	; ';'
		moveq	#0,d0
		move.b	($FFFFFE57).w,d0
		lea	($FFFFFE58).w,a2
		move.b	d4,(a2,d0.w)
		addq.b	#1,($FFFFFE57).w

loc_1A862:				; CODE XREF: Obj09_ChkItems+C0j
		move.w	#$93,d0	; ''
		jsr	(PlaySound_Special).l
		moveq	#0,d4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A870:				; CODE XREF: Obj09_ChkItems+A4j
					; Obj09_ChkItems+AAj
		cmpi.b	#$41,d4	; 'A'
		bne.s	loc_1A87C
		move.b	#1,$3A(a0)

loc_1A87C:				; CODE XREF: Obj09_ChkItems+EAj
		cmpi.b	#$4A,d4	; 'J'
		bne.s	loc_1A890
		cmpi.b	#1,$3A(a0)
		bne.s	loc_1A890
		move.b	#2,$3A(a0)

loc_1A890:				; CODE XREF: Obj09_ChkItems+F6j
					; Obj09_ChkItems+FEj
		moveq	#-1,d4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A894:				; CODE XREF: Obj09_ChkItems+32j
		cmpi.b	#2,$3A(a0)
		bne.s	loc_1A8BE
		lea	($FFFF1020).l,a1
		moveq	#$3F,d1	; '?'

loc_1A8A4:				; CODE XREF: Obj09_ChkItems+130j
		moveq	#$3F,d2	; '?'

loc_1A8A6:				; CODE XREF: Obj09_ChkItems+128j
		cmpi.b	#$41,(a1) ; 'A'
		bne.s	loc_1A8B0
		move.b	#$2C,(a1) ; ','

loc_1A8B0:				; CODE XREF: Obj09_ChkItems+120j
		addq.w	#1,a1
		dbf	d2,loc_1A8A6
		lea	$40(a1),a1
		dbf	d1,loc_1A8A4

loc_1A8BE:				; CODE XREF: Obj09_ChkItems+110j
		clr.b	$3A(a0)
		moveq	#0,d4
		rts
; End of function Obj09_ChkItems


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


Obj09_ChkItems2:			; CODE XREF: ROM:0001A476p
		move.b	$30(a0),d0
		bne.s	loc_1A8E6
		subq.b	#1,$36(a0)
		bpl.s	loc_1A8D8
		move.b	#0,$36(a0)

loc_1A8D8:				; CODE XREF: OBj09_ChkItems2+Aj
		subq.b	#1,$37(a0)
		bpl.s	locret_1A8E4
		move.b	#0,$37(a0)

locret_1A8E4:				; CODE XREF: OBj09_ChkItems2+16j
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A8E6:				; CODE XREF: OBj09_ChkItems2+4j
		cmpi.b	#$25,d0	; '%'
		bne.s	loc_1A95E
		move.l	$32(a0),d1
		subi.l	#$FFFF0001,d1
		move.w	d1,d2
		andi.w	#$7F,d1	; ''
		mulu.w	#$18,d1
		subi.w	#$14,d1
		lsr.w	#7,d2
		andi.w	#$7F,d2	; ''
		mulu.w	#$18,d2
		subi.w	#$44,d2	; 'D'
		sub.w	8(a0),d1
		sub.w	$C(a0),d2
		jsr	(CalcAngle).l
		jsr	(CalcSine).l
		muls.w	#$F900,d1
		asr.l	#8,d1
		move.w	d1,$10(a0)
		muls.w	#$F900,d0
		asr.l	#8,d0
		move.w	d0,$12(a0)
		bset	#1,$22(a0)
		bsr.w	sub_19EEC
		bne.s	loc_1A954
		move.b	#2,(a2)
		move.l	$32(a0),d0
		subq.l	#1,d0
		move.l	d0,4(a2)

loc_1A954:				; CODE XREF: OBj09_ChkItems2+7Ej
		move.w	#$B4,d0	; '´'
		jmp	(PlaySound_Special).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A95E:				; CODE XREF: OBj09_ChkItems2+24j
		cmpi.b	#$27,d0	; '''
		bne.s	loc_1A974
		addq.b	#2,routine(a0)
		move.w	#$A8,d0	; '¨'
		jsr	(PlaySound_Special).l
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A974:				; CODE XREF: OBj09_ChkItems2+9Cj
		cmpi.b	#$29,d0	; ')'
		bne.s	loc_1A9A8
		tst.b	$36(a0)
		bne.w	locret_1AA58
		move.b	#$1E,$36(a0)
		btst	#6,($FFFFF783).w
		beq.s	loc_1A99E
		asl	($FFFFF782).w
		movea.l	$32(a0),a1
		subq.l	#1,a1
		move.b	#$2A,(a1) ; '*'

loc_1A99E:				; CODE XREF: OBj09_ChkItems2+C8j
		move.w	#$A9,d0	; '©'
		jmp	(PlaySound_Special).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A9A8:				; CODE XREF: OBj09_ChkItems2+B2j
		cmpi.b	#$2A,d0	; '*'
		bne.s	loc_1A9DC
		tst.b	$36(a0)
		bne.w	locret_1AA58
		move.b	#$1E,$36(a0)
		btst	#6,($FFFFF783).w
		bne.s	loc_1A9D2
		asr	($FFFFF782).w
		movea.l	$32(a0),a1
		subq.l	#1,a1
		move.b	#$29,(a1) ; ')'

loc_1A9D2:				; CODE XREF: OBj09_ChkItems2+FCj
		move.w	#$A9,d0	; '©'
		jmp	(PlaySound_Special).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1A9DC:				; CODE XREF: OBj09_ChkItems2+E6j
		cmpi.b	#$2B,d0	; '+'
		bne.s	loc_1AA12
		tst.b	$37(a0)
		bne.w	locret_1AA58
		move.b	#$1E,$37(a0)
		bsr.w	sub_19EEC
		bne.s	loc_1AA04
		move.b	#4,(a2)
		move.l	$32(a0),d0
		subq.l	#1,d0
		move.l	d0,4(a2)

loc_1AA04:				; CODE XREF: OBj09_ChkItems2+12Ej
		neg.w	($FFFFF782).w
		move.w	#$A9,d0	; '©'
		jmp	(PlaySound_Special).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1AA12:				; CODE XREF: OBj09_ChkItems2+11Aj
		cmpi.b	#$2D,d0	; '-'
		beq.s	loc_1AA2A
		cmpi.b	#$2E,d0	; '.'
		beq.s	loc_1AA2A
		cmpi.b	#$2F,d0	; '/'
		beq.s	loc_1AA2A
		cmpi.b	#$30,d0	; '0'
		bne.s	locret_1AA58

loc_1AA2A:				; CODE XREF: OBj09_ChkItems2+150j
					; OBj09_ChkItems2+156j	...
		bsr.w	sub_19EEC
		bne.s	loc_1AA4E
		move.b	#6,(a2)
		movea.l	$32(a0),a1
		subq.l	#1,a1
		move.l	a1,4(a2)
		move.b	(a1),d0
		addq.b	#1,d0
		cmpi.b	#$30,d0	; '0'
		bls.s	loc_1AA4A
		clr.b	d0

loc_1AA4A:				; CODE XREF: OBj09_ChkItems2+180j
		move.b	d0,4(a2)

loc_1AA4E:				; CODE XREF: OBj09_ChkItems2+168j
		move.w	#$BA,d0	; 'º'
		jmp	(PlaySound_Special).l
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

locret_1AA58:				; CODE XREF: OBj09_ChkItems2+B8j
					; OBj09_ChkItems2+ECj ...
		rts
; End of function Obj09_ChkItems2

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 10 - Blank, animation test in Sonic 1 prototype
; ---------------------------------------------------------------------------

Obj10:
		rts
; ===========================================================================

j_Adjust2PArtPointer_7:		; JmpTo
		jmp	(Adjust2PArtPointer).l

		align 4

; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to animate stage art
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; DynamicArtCues:
AniArt_Load:
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		add.w	d0,d0
		add.w	d0,d0
		move.w	DynArtCue_Index+2(pc,d0.w),d1
		lea	DynArtCue_Index(pc,d1.w),a2
		move.w	DynArtCue_Index(pc,d0.w),d0
		jmp	DynArtCue_Index(pc,d0.w)
; ---------------------------------------------------------------------------
		rts
; End of function AniArt_Load

; ---------------------------------------------------------------------------
; ZONE ANIMATION PROCEDURES AND SCRIPTS
;
; Each zone gets two entries in this jump table. The first entry points to the
; zone's animation procedure (usually Dynamic_Null, AKA none). The second points
; to the zone's animation script.
;
; Seems like stage IDs were already being shifted, since listings for $07-$0F
; can be found, alongside HPZ's art listed from $08 (its ID in the final).
; ---------------------------------------------------------------------------
DynArtCue_Index:
		dc.w Dynamic_NullGHZ-DynArtCue_Index,AnimCue_EHZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
		dc.w Dynamic_Normal-DynArtCue_Index,AnimCue_EHZ-DynArtCue_Index
		dc.w Dynamic_Normal-DynArtCue_Index,AnimCue_HPZ-DynArtCue_Index
		dc.w Dynamic_Normal-DynArtCue_Index,AnimCue_EHZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
		dc.w Dynamic_Normal-DynArtCue_Index,AnimCue_HPZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
		dc.w Dynamic_Null-DynArtCue_Index,AnimCue_CPZ-DynArtCue_Index
; ===========================================================================

Dynamic_Null:
		rts
; ===========================================================================

Dynamic_NullGHZ:
		rts
; ===========================================================================

Dynamic_Normal:
		lea	(Anim_Counters).w,a3
		move.w	(a2)+,d6	; Get number of scripts in list

loc_1AACA:
		subq.b	#1,(a3)		; Tick down frame duration
		bpl.s	loc_1AB10	; If frame isn't over, move on to next script

		moveq	#0,d0
		move.b	1(a3),d0	; Get current frame
		cmp.b	6(a2),d0	; Have we processed the last frame in the script?
		bcs.s	loc_1AAE0
		moveq	#0,d0		; If so, reset to first frame
		move.b	d0,1(a3)

loc_1AAE0:
		addq.b	#1,1(a3)	; Consider this frame processed; set counter to next frame
		move.b	(a2),(a3)	; Set frame duration to global duration value
		bpl.s	loc_1AAEE
		; If script uses per-frame durations, use those instead
		add.w	d0,d0
		move.b	9(a2,d0.w),(a3)	; Set frame duration to current frame's duration value

loc_1AAEE:
		; Prepare for DMA transfer
		; Get relative address of frame's art
		move.b	8(a2,d0.w),d0	; Get tile ID
		lsl.w	#5,d0		; Turn it into an offset
		; Get VRAM destination address
		move.w	4(a2),d2
		; Get ROM source address
		move.l	(a2),d1		; Get start address of animated tile art
		andi.l	#$FFFFFF,d1
		add.l	d0,d1		; Offset into art, to get the address of new frame
		; Get size of art to be transferred
		moveq	#0,d3
		move.b	7(a2),d3
		lsl.w	#4,d3		; Turn it into actual size (in words)
		; Use d1, d2 and d3 to queue art for transfer
		jsr	(QueueDMATransfer).l

loc_1AB10:
		move.b	6(a2),d0	; Get total size of frame data
		tst.b	(a2)		; Is per-frame duration data present?
		bpl.s	loc_1AB1A	; If not, keep the current size; it's correct
		add.b	d0,d0		; Double size to account for the additional frame duration data

loc_1AB1A:
		addq.b	#1,d0
		andi.w	#$FE,d0		; Round to next even address, if it isn't already
		lea	8(a2,d0.w),a2	; Advance to next script in list
		addq.w	#2,a3		; Advance to next script's slot in a3 (usually Anim_Counters)
		dbf	d6,loc_1AACA
		rts
; ===========================================================================
AnimCue_EHZ:	dc.w 4
		dc.l Art_EHZFlower1+$FF000000
		dc.w $7280
		dc.b 6
		dc.b 2
		dc.b   0,$7F		; 0
		dc.b   2,$13		; 2
		dc.b   0,  7		; 4
		dc.b   2,  7		; 6
		dc.b   0,  7		; 8
		dc.b   2,  7		; 10
		dc.l Art_EHZFlower2+$FF000000
		dc.w $72C0
		dc.b 8
		dc.b 2
		dc.b   2,$7F		; 0
		dc.b   0, $B		; 2
		dc.b   2, $B		; 4
		dc.b   0, $B		; 6
		dc.b   2,  5		; 8
		dc.b   0,  5		; 10
		dc.b   2,  5		; 12
		dc.b   0,  5		; 14
		dc.l Art_EHZFlower3+$7000000
		dc.w $7300
		dc.b 2
		dc.b 2
		dc.b   0,  2		; 0
		dc.l Art_EHZFlower4+$FF000000
		dc.w $7340
		dc.b 8
		dc.b 2
		dc.b   0,$7F		; 0
		dc.b   2,  7		; 2
		dc.b   0,  7		; 4
		dc.b   2,  7		; 6
		dc.b   0,  7		; 8
		dc.b   2, $B		; 10
		dc.b   0, $B		; 12
		dc.b   2, $B		; 14
		dc.l Art_EHZFlower5+$1000000
		dc.w $7380
		dc.b 6
		dc.b 2
		dc.b   0,  2		; 0
		dc.b   4,  6		; 2
		dc.b   4,  2		; 4

AnimCue_HPZ:	dc.w 2
		dc.l Art_HPZGlowingBall+$8000000
		dc.w $5D00
		dc.b 6
		dc.b 8
		dc.b   0,  0		; 0
		dc.b   8,$10		; 2
		dc.b $10,  8		; 4
		dc.l Art_HPZGlowingBall+$8000000
		dc.w $5E00
		dc.b 6
		dc.b 8
		dc.b   8,$10		; 0
		dc.b $10,  8		; 2
		dc.b   0,  0		; 4
		dc.l Art_HPZGlowingBall+$8000000
		dc.w $5F00
		dc.b 6
		dc.b 8
		dc.b $10,  8		; 0
		dc.b   0,  0		; 2
		dc.b   8,$10		; 4

; According to leftover resizing code, this was meant for the
; Chemical Plant Zone boss, which symbol tables refer to as "vaccume".
AnimCue_CPZ:	dc.w 7
		dc.l Art_UnkZone_1+$7000000
		dc.w $9000
		dc.b 2
		dc.b 4
		dc.b   0,  4		; 0
		dc.l Art_UnkZone_2+$7000000
		dc.w $9080
		dc.b 3
		dc.b 8
		dc.b   0,  8		; 0
		dc.b $10,  0		; 2
		dc.l Art_UnkZone_3+$7000000
		dc.w $9180
		dc.b 4
		dc.b 2
		dc.b   0,  2		; 0
		dc.b   0,  4		; 2
		dc.l Art_UnkZone_4+$B000000
		dc.w $91C0
		dc.b 4
		dc.b 2
		dc.b   0,  2		; 0
		dc.b   4,  2		; 2
		dc.l Art_UnkZone_5+$F000000
		dc.w $9200
		dc.b $A
		dc.b 1
		dc.b   0		; 0
		dc.b   0		; 1
		dc.b   1		; 2
		dc.b   2		; 3
		dc.b   3		; 4
		dc.b   4		; 5
		dc.b   5		; 6
		dc.b   4		; 7
		dc.b   5		; 8
		dc.b   4		; 9
		dc.l Art_UnkZone_6+$3000000
		dc.w $9220
		dc.b 4
		dc.b 4
		dc.b   0,  4		; 0
		dc.b   8,  4		; 2
		dc.l Art_UnkZone_7+$7000000
		dc.w $92A0
		dc.b 6
		dc.b 3
		dc.b   0,  3		; 0
		dc.b   6,  9		; 2
		dc.b  $C, $F		; 4
		dc.l Art_UnkZone_8+$7000000
		dc.w $9300
		dc.b 4
		dc.b 1
		dc.b   0		; 0
		dc.b   1		; 1
		dc.b   2		; 2
		dc.b   3		; 3

; ===========================================================================
; ---------------------------------------------------------------------------
; This seems to be a subroutine that would've shifted the background blocks
; of Chemical Plant Zone once the player reached a certain X position,
; lasting exactly two screens. This can also be found in the final at
; $40200 in the ROM, with the only difference being its level ID, which
; was updated to match Chemical Plant's final ID ($0D instead of 02)
;
; To see the effect for yourself, add a branch to it at the
; start of LoadTilesAsYouMove and change $FFFF7500/$FFFF7D00 to
; $FFFF0000/$FFFF0800 (to make it more visible)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


; sub_1AC1E: ShiftCPZBackground:
		cmpi.b	#2,(Current_Zone).w	; is this Chemical Plant Zone?
		beq.s	loc_1AC28		; if yes, branch

locret_1AC26:
		rts
; ===========================================================================
; this shifts all blocks of the chunks $EA-$ED and $FA-$FD one block to the
; left and the last block in each row (chunk $ED/$FD) to the beginning
; i.e. rotates the blocks to the left by one

loc_1AC28:
		move.w	($FFFFEE00).w,d0
		cmpi.w	#$1940,d0
		bcs.s	locret_1AC26
		cmpi.w	#$1F80,d0
		bcc.s	locret_1AC26
		subq.b	#1,($FFFFF721).w
		bpl.s	locret_1AC26
		move.b	#7,($FFFFF721).w
		move.b	#1,($FFFFF720).w
		lea	($FFFF7500).l,a1
		bsr.s	sub_1AC58
		lea	($FFFF7D00).l,a1

sub_1AC58:
		move.w	#7,d1

loc_1AC5C:
		move.w	(a1),d0
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	$72(a1),(a1)+
		adda.w	#$70,a1
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	$72(a1),(a1)+
		adda.w	#$70,a1
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	$72(a1),(a1)+
		adda.w	#$70,a1
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	2(a1),(a1)+
		move.w	d0,(a1)+
		suba.w	#$180,a1
		dbf	d1,loc_1AC5C
		rts
; End of function ShiftCPZBackground

; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to load animated blocks
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; LoadMap16Delta:
LoadAnimatedBlocks:
		moveq	#0,d0
		move.b	(Current_Zone).w,d0
		add.w	d0,d0
		move.w	AnimPatMaps(pc,d0.w),d0
		lea	AnimPatMaps(pc,d0.w),a0
		tst.w	(a0)
		beq.s	locret_1AD1A
		lea	($FFFF9000).w,a1
		adda.w	(a0)+,a1
		move.w	(a0)+,d1
		tst.w	(Two_player_mode).w
		bne.s	LoadLevelBlocks_2P
; loc_1AD14:
LoadLevelBlocks:
		move.w	(a0)+,(a1)+
		dbf	d1,LoadLevelBlocks

locret_1AD1A:
		rts
; ---------------------------------------------------------------------------
; loc_1AD1C:
LoadLevelBlocks_2P:
		move.w	(a0)+,d0
		move.w	d0,d1
		andi.w	#$F800,d0
		andi.w	#$7FF,d1
		lsr.w	#1,d1
		or.w	d1,d0
		move.w	d0,(a1)+
		dbf	d1,LoadLevelBlocks_2P
		rts
; End of function LoadAnimatedBlocks

; ===========================================================================
; like with the animated stage art, this already lists stages up to $0F and
; includes an entry for the final HPZ level slot, and this time even lists
; CPZ's final level slot
; Map16Delta_Index:
AnimPatMaps:
		dc.w APM_GHZ-AnimPatMaps
		dc.w APM_LZ-AnimPatMaps
		dc.w APM_CPZ-AnimPatMaps
		dc.w APM_GHZ-AnimPatMaps
		dc.w APM_HPZ-AnimPatMaps
		dc.w APM_GHZ-AnimPatMaps
		dc.w APM_LZ-AnimPatMaps
		dc.w APM_LZ-AnimPatMaps
		dc.w APM_HPZ-AnimPatMaps
		dc.w APM_LZ-AnimPatMaps
		dc.w APM_LZ-AnimPatMaps
		dc.w APM_LZ-AnimPatMaps
		dc.w APM_LZ-AnimPatMaps
		dc.w APM_CPZ-AnimPatMaps
		dc.w APM_LZ-AnimPatMaps
		dc.w APM_LZ-AnimPatMaps

APM_GHZ:	dc.w $1788,  $3B,$4502,$4504,$4503,$4505,$4506,$4508,$4507,$4509,$450A,$450C,$450B,$450D,$450E,$4510
		dc.w $450F,$4511,$4512,$4514,$4513,$4515,$4516,$4518,$4517,$4519,$651A,$651C,$651B,$651D,$651E,$6520
		dc.w $651F,$6521,$439C,$4B9C,$439D,$4B9D,$4158,$439C,$4159,$439D,$4B9C,$4958,$4B9D,$4959,$6394,$6B94
		dc.w $6395,$6B95,$E396,$EB96,$E397,$EB97,$6398,$6B98,$6399,$6B99,$E39A,$EB9A,$E39B,$EB9B

APM_LZ:		dc.w	 0, $C80,  $9B,$43A1,$43A2,$43A3,$43A4,$43A5,$43A6,$43A7,$43A8,$43A9,$43AA,$43AB,$43AC,$43AD
		dc.w $43AE,$43AF,$43B0,$43B1,$43B2,$43B3,$43B4,$43B5,$43B6,$43B7,$43B8,$43B9,$43BA,$43BB,$43BC,$43BD
		dc.w $43BE,$43BF,$43C0,$43C1,$43C2,$43C3,$43C4,$63A0,$63A0,$63A0,$63A0,$63A0,$63A0,$63A0,$63A0,	   0
		dc.w	 0,$6340,$6344,	   0,	 0,$6348,$634C,$6341,$6345,$6342,$6346,$6349,$634D,$634A,$634E,$6343
		dc.w $6347,$4358,$4359,$634B,$634F,$435A,$435B,$6380,$6384,$6381,$6385,$6388,$638C,$6389,$638D,$6382
		dc.w $6386,$6383,$6387,$638A,$638E,$638B,$638F,$6390,$6394,$6391,$6395,$6398,$639C,$6399,$639D,$6392
		dc.w $6396,$6393,$6397,$639A,$639E,$639B,$639F,$4378,$4379,$437A,$437B,$437C,$437D,$437E,$437F,$235C
		dc.w $235D,$235E,$235F,$2360,$2361,$2362,$2363,$2364,$2365,$2366,$2367,$2368,$2369,$236A,$236B,	   0
		dc.w	 0,$636C,$636D,	   0,	 0,$636E,    0,$636F,$6370,$6371,$6372,$6373,	 0,$6374,    0,$6375
		dc.w $6376,$4358,$4359,$6377,	 0,$435A,$435B,$C378,$C379,$C37A,$C37B,$C37C,$C37D,$C37E,$C37F

APM_CPZ:	dc.w $17E0,   $F,$43D1,$43D1,$43D1,$43D1,$43D2,$43D2,$43D3,$43D3,$43D4,$43D4,$43D5,$43D5,$43D6,$43D6
		dc.w $43D7,$43D7

APM_HPZ:	dc.w $1710,  $77,$62E8,$62E9,$62EA,$62EB,$62EC,$62ED,$62EE,$62EF,$62F0,$62F1,$62F2,$62F3,$62F4,$62F5
		dc.w $62F6,$62F7,$62F8,$62F9,$62FA,$62FB,$62FC,$62FD,$62FE,$62FF,$42E8,$42E9,$42EA,$42EB,$42EC,$42ED
		dc.w $42EE,$42EF,$42F0,$42F1,$42F2,$42F3,$42F4,$42F5,$42F6,$42F7,$42F8,$42F9,$42FA,$42FB,$42FC,$42FD
		dc.w $42FE,$42FF,    0,$62E8,	 0,$62EA,$62E9,$62EC,$62EB,$62EE,$62ED,	   0,$62EF,    0,    0,$62F0
		dc.w	 0,$62F2,$62F1,$62F4,$62F3,$62F6,$62F5,	   0,$62F7,    0,    0,$62F8,	 0,$62FA,$62F9,$62FC
		dc.w $62FB,$62FE,$62FD,	   0,$62FF,    0,    0,$42E8,	 0,$42EA,$42E9,$42EC,$42EB,$42EE,$42ED,	   0
		dc.w $42EF,    0,    0,$42F0,	 0,$42F2,$42F1,$42F4,$42F3,$42F6,$42F5,	   0,$42F7,    0,    0,$42F8
		dc.w	 0,$42FA,$42F9,$42FC,$42FB,$42FE,$42FD,	   0,$42FF,    0
		nop

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 21 - SCORE, TIME, RINGS
; ---------------------------------------------------------------------------

Obj21:
		moveq	#0,d0
		move.b	routine(a0),d0
		move.w	Obj21_Index(pc,d0.w),d1
		jmp	Obj21_Index(pc,d1.w)
; ===========================================================================
Obj21_Index:	dc.w Obj21_Init-Obj21_Index
		dc.w Obj21_Main-Obj21_Index
; ===========================================================================

Obj21_Init:
		addq.b	#2,routine(a0)
		move.w	#$90,8(a0)
		move.w	#$108,$A(a0)
		move.l	#Map_obj21,4(a0)
		move.w	#$6CA,2(a0)
		bsr.w	j_Adjust2PArtPointer_8
		move.b	#0,1(a0)
		move.b	#0,$18(a0)

Obj21_Main:
		tst.w	($FFFFFE20).w
		beq.s	Obj21_NoRings
		moveq	#0,d0
		btst	#3,($FFFFFE05).w
		bne.s	Obj21_Display
		cmpi.b	#9,($FFFFFE23).w
		bne.s	Obj21_Display
		addq.w	#2,d0
; loc_1B082:
Obj21_Display:
		move.b	d0,$1A(a0)
		jmp	(DisplaySprite).l
; ---------------------------------------------------------------------------
; loc_1B08C:
Obj21_NoRings:
		moveq	#0,d0
		btst	#3,($FFFFFE05).w
		bne.s	Obj21_Display2
		addq.w	#1,d0
		cmpi.b	#9,($FFFFFE23).w
		bne.s	Obj21_Display2
		addq.w	#2,d0
; loc_1B0A2:
Obj21_Display2:
		move.b	d0,$1A(a0)
		jmp	(DisplaySprite).l
; ===========================================================================
; ---------------------------------------------------------------------------
; Sprite mappings - SCORE, TIME, RINGS
; ---------------------------------------------------------------------------
Map_obj21:	incbin	"mappings/sprite/obj21.bin"

; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to add points to the score counter
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


AddPoints:
		move.b	#1,($FFFFFE1F).w
		lea	($FFFFFE26).w,a3
		add.l	d0,(a3)
		move.l	#999999,d1
		cmp.l	(a3),d1
		bhi.s	loc_1B214
		move.l	d1,(a3)

loc_1B214:
		move.l	(a3),d0
		cmp.l	($FFFFFFC0).w,d0
		bcs.s	locret_1B23C
		addi.l	#5000,($FFFFFFC0).w
		tst.b	($FFFFFFF8).w	; is this a Japanese console?
		bmi.s	locret_1B23C	; if not, branch
		addq.b	#1,($FFFFFE12).w
		addq.b	#1,($FFFFFE1C).w
		move.w	#MusID_ExtraLife,d0
		jmp	(PlaySound).l

locret_1B23C:
		rts
; End of function AddPoints


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HudUpdate:
		nop
		lea	(VDP_data_port).l,a6
		tst.w	(Debug_mode_flag).w
		bne.w	loc_1B330
		tst.b	($FFFFFE1F).w
		beq.s	loc_1B266
		clr.b	($FFFFFE1F).w
		move.l	#$5C800003,d0
		move.l	($FFFFFE26).w,d1
		bsr.w	HUD_Score

loc_1B266:
		tst.b	($FFFFFE1D).w
		beq.s	loc_1B286
		bpl.s	loc_1B272
		bsr.w	HUD_LoadZero

loc_1B272:
		clr.b	($FFFFFE1D).w
		move.l	#$5F400003,d0
		moveq	#0,d1
		move.w	($FFFFFE20).w,d1
		bsr.w	HUD_Rings

loc_1B286:
		tst.b	($FFFFFE1E).w
		beq.s	loc_1B2E2
		tst.w	($FFFFF63A).w
		bne.s	loc_1B2E2
		lea	($FFFFFE22).w,a1
		cmpi.l	#$93B3B,(a1)+	; if the timer has passed 9:59...
		nop			; ...do nothing since this has been nopped out
		addq.b	#1,-(a1)
		cmpi.b	#$3C,(a1)
		bcs.s	loc_1B2E2
		move.b	#0,(a1)
		addq.b	#1,-(a1)
		cmpi.b	#$3C,(a1)
		bcs.s	loc_1B2C2
		move.b	#0,(a1)
		addq.b	#1,-(a1)
		cmpi.b	#9,(a1)
		bcs.s	loc_1B2C2
		move.b	#9,(a1)

loc_1B2C2:
		move.l	#$5E400003,d0
		moveq	#0,d1
		move.b	($FFFFFE23).w,d1
		bsr.w	HUD_Mins
		move.l	#$5EC00003,d0
		moveq	#0,d1
		move.b	($FFFFFE24).w,d1
		bsr.w	HUD_Secs

loc_1B2E2:
		tst.b	($FFFFFE1C).w
		beq.s	loc_1B2F0
		clr.b	($FFFFFE1C).w
		bsr.w	HUD_Lives

loc_1B2F0:
		tst.b	($FFFFF7D6).w
		beq.s	locret_1B318
		clr.b	($FFFFF7D6).w
		move.l	#$6E000002,(VDP_control_port).l
		moveq	#0,d1
		move.w	($FFFFF7D2).w,d1
		bsr.w	HUD_TimeRingBonus
		moveq	#0,d1
		move.w	($FFFFF7D4).w,d1
		bsr.w	HUD_TimeRingBonus

locret_1B318:
		rts
; ===========================================================================
; kills the player if the time has reached 9:59, except now it's unused due
; to its "beq" command being noped out above
S1TimeOver:
		clr.b	($FFFFFE1E).w
		lea	($FFFFB000).w,a0
		movea.l	a0,a2
		bsr.w	KillSonic
		move.b	#1,($FFFFFE1A).w
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B330:				; CODE XREF: HudUpdate+Cj
		bsr.w	HUDDebug_XY
		tst.b	($FFFFFE1D).w
		beq.s	loc_1B354
		bpl.s	loc_1B340
		bsr.w	HUD_LoadZero

loc_1B340:				; CODE XREF: HudUpdate+FCj
		clr.b	($FFFFFE1D).w
		move.l	#$5F400003,d0
		moveq	#0,d1
		move.w	($FFFFFE20).w,d1
		bsr.w	HUD_Rings

loc_1B354:				; CODE XREF: HudUpdate+FAj
		move.l	#$5EC00003,d0
		moveq	#0,d1
		move.b	($FFFFF62C).w,d1
		bsr.w	HUD_Secs
		tst.b	($FFFFFE1C).w
		beq.s	loc_1B372
		clr.b	($FFFFFE1C).w
		bsr.w	HUD_Lives

loc_1B372:				; CODE XREF: HudUpdate+12Aj
		tst.b	($FFFFF7D6).w
		beq.s	locret_1B39A
		clr.b	($FFFFF7D6).w
		move.l	#$6E000002,(VDP_control_port).l
		moveq	#0,d1
		move.w	($FFFFF7D2).w,d1
		bsr.w	HUD_TimeRingBonus
		moveq	#0,d1
		move.w	($FFFFF7D4).w,d1
		bsr.w	HUD_TimeRingBonus

locret_1B39A:				; CODE XREF: HudUpdate+138j
		rts
; End of function HudUpdate


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HUD_LoadZero:				; CODE XREF: HudUpdate+30p
					; HudUpdate+FEp
		move.l	#$5F400003,(VDP_control_port).l
		lea	HUD_TilesZero(pc),a2
		move.w	#2,d2
		bra.s	loc_1B3CC
; End of function HUD_LoadZero


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HUD_Base:				; CODE XREF: ROM:00003D24p
					; ROM:00005248p
		lea	(VDP_data_port).l,a6
		bsr.w	HUD_Lives
		move.l	#$5C400003,(VDP_control_port).l
		lea	HUD_TilesBase(pc),a2
		move.w	#$E,d2

loc_1B3CC:				; CODE XREF: HUD_LoadZero+12j
		lea	Art_HUD(pc),a1

loc_1B3D0:				; CODE XREF: HUD_Base:loc_1B3E6j
		move.w	#$F,d1
		move.b	(a2)+,d0
		bmi.s	loc_1B3EC
		ext.w	d0
		lsl.w	#5,d0
		lea	(a1,d0.w),a3

loc_1B3E0:				; CODE XREF: HUD_Base+32j
		move.l	(a3)+,(a6)
		dbf	d1,loc_1B3E0

loc_1B3E6:				; CODE XREF: HUD_Base+46j
		dbf	d2,loc_1B3D0
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B3EC:				; CODE XREF: HUD_Base+26j HUD_Base+42j
		move.l	#0,(a6)
		dbf	d1,loc_1B3EC
		bra.s	loc_1B3E6
; End of function HUD_Base

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
HUD_TilesBase:	dc.b $16,$FF,$FF,$FF,$FF,$FF,$FF,  0,  0,$14,  0,  0; 0
					; DATA XREF: HUD_Base+14t
HUD_TilesZero:	dc.b $FF,$FF,  0,  0	; 0 ; DATA XREF: HUD_LoadZero+At

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HUDDebug_XY:				; CODE XREF: HudUpdate:loc_1B330p
		move.l	#$5C400003,(VDP_control_port).l
		move.w	($FFFFEE00).w,d1
		swap	d1
		move.w	($FFFFB008).w,d1
		bsr.s	HUDDebug_XY2
		move.w	($FFFFEE04).w,d1
		swap	d1
		move.w	($FFFFB00C).w,d1
; End of function HUDDebug_XY


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HUDDebug_XY2:				; CODE XREF: HUDDebug_XY+14p
		moveq	#7,d6
		lea	(Art_Text).l,a1

loc_1B430:				; CODE XREF: HUDDebug_XY2+32j
		rol.w	#4,d1
		move.w	d1,d2
		andi.w	#$F,d2
		cmpi.w	#$A,d2
		bcs.s	loc_1B442
		addi.w	#7,d2

loc_1B442:				; CODE XREF: HUDDebug_XY2+14j
		lsl.w	#5,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		swap	d1
		dbf	d6,loc_1B430
		rts
; End of function HUDDebug_XY2


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HUD_Rings:				; CODE XREF: HudUpdate+44p
					; HudUpdate+112p
		lea	(HUD_100).l,a2
		moveq	#2,d6
		bra.s	loc_1B472
; End of function HUD_Rings


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HUD_Score:				; CODE XREF: HudUpdate+24p
		lea	(HUD_100000).l,a2
		moveq	#5,d6

loc_1B472:				; CODE XREF: HUD_Rings+8j
		moveq	#0,d4
		lea	Art_HUD(pc),a1

loc_1B478:				; CODE XREF: HUD_Score+58j
		moveq	#0,d2
		move.l	(a2)+,d3

loc_1B47C:				; CODE XREF: HUD_Score+18j
		sub.l	d3,d1
		bcs.s	loc_1B484
		addq.w	#1,d2
		bra.s	loc_1B47C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B484:				; CODE XREF: HUD_Score+14j
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_1B48E
		move.w	#1,d4

loc_1B48E:				; CODE XREF: HUD_Score+1Ej
		tst.w	d4
		beq.s	loc_1B4BC
		lsl.w	#6,d2
		move.l	d0,4(a6)
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)

loc_1B4BC:				; CODE XREF: HUD_Score+26j
		addi.l	#$400000,d0
		dbf	d6,loc_1B478
		rts
; End of function HUD_Score

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

HUD_Unk:
		move.l	#$5F800003,(VDP_control_port).l
		lea	(VDP_data_port).l,a6
		lea	(HUD_10).l,a2
		moveq	#1,d6
		moveq	#0,d4
		lea	Art_HUD(pc),a1

loc_1B4E6:				; CODE XREF: ROM:0001B51Aj
		moveq	#0,d2
		move.l	(a2)+,d3

loc_1B4EA:				; CODE XREF: ROM:0001B4F0j
		sub.l	d3,d1
		bcs.s	loc_1B4F2
		addq.w	#1,d2
		bra.s	loc_1B4EA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B4F2:				; CODE XREF: ROM:0001B4ECj
		add.l	d3,d1
		lsl.w	#6,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		dbf	d6,loc_1B4E6
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
HUD_100000:	dc.l 100000		; DATA XREF: HUD_Scoreo
HUD_10000:	dc.l 10000
HUD_1000:	dc.l 1000		; DATA XREF: HUD_TimeRingBonust
HUD_100:	dc.l 100		; DATA XREF: HUD_Ringso
HUD_10:		dc.l 10			; DATA XREF: ROM:0001B4D8o HUD_Secst ...
HUD_1:		dc.l 1			; DATA XREF: HUD_Minst

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HUD_Mins:				; CODE XREF: HudUpdate+90p
		lea	HUD_1(pc),a2
		moveq	#0,d6
		bra.s	loc_1B546
; End of function HUD_Mins


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HUD_Secs:				; CODE XREF: HudUpdate+A0p
					; HudUpdate+122p
		lea	HUD_10(pc),a2
		moveq	#1,d6

loc_1B546:				; CODE XREF: HUD_Mins+6j
		moveq	#0,d4

loc_1B548:
		lea	Art_HUD(pc),a1

loc_1B54C:				; CODE XREF: HUD_Secs+52j
		moveq	#0,d2
		move.l	(a2)+,d3

loc_1B550:				; CODE XREF: HUD_Secs+16j
		sub.l	d3,d1
		bcs.s	loc_1B558
		addq.w	#1,d2
		bra.s	loc_1B550
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B558:				; CODE XREF: HUD_Secs+12j
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_1B562
		move.w	#1,d4

loc_1B562:				; CODE XREF: HUD_Secs+1Cj
		lsl.w	#6,d2
		move.l	d0,4(a6)
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		addi.l	#$400000,d0
		dbf	d6,loc_1B54C
		rts
; End of function HUD_Secs


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HUD_TimeRingBonus:			; CODE XREF: HudUpdate+CCp
					; HudUpdate+D6p ...
		lea	HUD_1000(pc),a2
		moveq	#3,d6
		moveq	#0,d4
		lea	Art_HUD(pc),a1

loc_1B5A4:				; CODE XREF: HUD_TimeRingBonus:loc_1B5E4j
		moveq	#0,d2
		move.l	(a2)+,d3

loc_1B5A8:				; CODE XREF: HUD_TimeRingBonus+16j
		sub.l	d3,d1
		bcs.s	loc_1B5B0
		addq.w	#1,d2
		bra.s	loc_1B5A8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B5B0:				; CODE XREF: HUD_TimeRingBonus+12j
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_1B5BA
		move.w	#1,d4

loc_1B5BA:				; CODE XREF: HUD_TimeRingBonus+1Cj
		tst.w	d4
		beq.s	loc_1B5EA
		lsl.w	#6,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)

loc_1B5E4:				; CODE XREF: HUD_TimeRingBonus+5Ej
		dbf	d6,loc_1B5A4
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B5EA:				; CODE XREF: HUD_TimeRingBonus+24j
		moveq	#$F,d5

loc_1B5EC:				; CODE XREF: HUD_TimeRingBonus+5Aj
		move.l	#0,(a6)
		dbf	d5,loc_1B5EC
		bra.s	loc_1B5E4
; End of function HUD_TimeRingBonus


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


HUD_Lives:				; CODE XREF: HudUpdate+AEp
					; HudUpdate+130p ...
		move.l	#$7BA00003,d0
		moveq	#0,d1
		move.b	($FFFFFE12).w,d1
		lea	HUD_10(pc),a2
		moveq	#1,d6
		moveq	#0,d4
		lea	Art_LivesNums(pc),a1

loc_1B610:				; CODE XREF: HUD_Lives+52j
		move.l	d0,4(a6)
		moveq	#0,d2
		move.l	(a2)+,d3

loc_1B618:				; CODE XREF: HUD_Lives+26j
		sub.l	d3,d1
		bcs.s	loc_1B620
		addq.w	#1,d2
		bra.s	loc_1B618
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B620:				; CODE XREF: HUD_Lives+22j
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_1B62A
		move.w	#1,d4

loc_1B62A:				; CODE XREF: HUD_Lives+2Cj
		tst.w	d4
		beq.s	loc_1B650

loc_1B62E:				; CODE XREF: HUD_Lives+5Aj
		lsl.w	#5,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)

loc_1B644:				; CODE XREF: HUD_Lives+68j
		addi.l	#$400000,d0
		dbf	d6,loc_1B610
		rts
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_1B650:				; CODE XREF: HUD_Lives+34j
		tst.w	d6
		beq.s	loc_1B62E
		moveq	#7,d5

loc_1B656:				; CODE XREF: HUD_Lives+64j
		move.l	#0,(a6)
		dbf	d5,loc_1B656
		bra.s	loc_1B644
; End of function HUD_Lives

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Art_HUD:	dc.b   0,  0,  0,  0,  0,$66,$66,$10,  6,$66,$66,$61,  6,$61,$16,$61,  6,$61,  6,$61,$76,$61,$76,$61,$66,$10,$66,$10,$66,$10,$66,$10; 0
					; DATA XREF: HUD_Base:loc_1B3CCt
					; HUD_Score+At	...
		dc.b $66,$10,$66,$10,$66,$66,$66,$10,  6,$66,$61,  0,  1,$11,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 32
		dc.b   0,  0,  0,  0,  0,  6,$61,  0,  0,$66,$61,  0,  0,  6,$61,  0,  0,  6,$61,  0,  0,$76,$61,  0,  0,$66,$10,  0,  0,$66,$10,  0; 64
		dc.b   0,$66,$10,  0,  0,$66,$10,  0,  0,$66,$10,  0,  0,$11,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 96
		dc.b   0,  0,  0,  0,  0,$66,$66,$10,  6,$66,$66,$61,  6,$61,$16,$61,  1,$11,$66,$61,  0,  6,$66,$10,  7,$66,$10,  0,$76,$61,  0,  0; 128
		dc.b $66,$61,  0,  0,$66,$66,$66,$10,$66,$66,$66,$10,$11,$11,$11,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 160
		dc.b   0,  0,  0,  0,  0,$66,$66,$10,  6,$66,$66,$61,  6,$61,$16,$61,  1,$11,  6,$61,  0,  6,$66,$10,  0,$66,$61,  0,  0,$11,$66,$10; 192
		dc.b $66,$10,$66,$10,$66,$66,$66,$10,  6,$66,$61,  0,  1,$11,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0,  0,  0,  0,  0,$66,$10,  0,  6,$66,$10,  0,$76,$66,$10,  0,$66,$66,$10,  6,$61,$66,$10,$76,$16,$61,  0,$66,$66,$66,$10; 256
		dc.b $66,$66,$66,$10,$11,$16,$61,$10,  0,  6,$61,  0,  0,  1,$11,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 288
		dc.b   0,  0,  0,  0,  6,$66,$66,$61,  6,$66,$66,$61,  6,$61,$11,$11,  6,$61,  0,  0,$76,$66,$67,$10,$66,$66,$66,$10,$11,$11,$66,$10; 320
		dc.b $66,$10,$66,$10,$66,$66,$66,$10,$16,$66,$61,  0,  1,$11,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 352
		dc.b   0,  0,  0,  0,  0,$66,$66,$10,  6,$66,$66,$61,  6,$61,$16,$61,  6,$61,  1,$11,$76,$66,$78,$10,$66,$66,$67,$10,$66,$11,$66,$10; 384
		dc.b $66,$10,$66,$10,$66,$66,$66,$10,  6,$66,$61,  0,  1,$11,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 416
		dc.b   0,  0,  0,  0,  6,$66,$66,$61,  6,$66,$66,$61,  1,$11,$16,$61,  0,  0,$76,$10,  0,  7,$66,$10,  0,  6,$61,  0,  0,$66,$10,  0; 448
		dc.b   0,$66,$10,  0,  6,$67,$10,  0,  6,$67,$10,  0,  0,$11,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 480
		dc.b   0,  0,  0,  0,  0,$66,$66,$10,  6,$66,$66,$61,  6,$61,$16,$61,  6,$61,  6,$61,  0,$66,$66,$10,  6,$66,$61,  0,$66,$11,$66,$10; 512
		dc.b $66,$10,$66,$10,$66,$66,$66,$10,  6,$66,$61,  0,  1,$11,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 544
		dc.b   0,  0,  0,  0,  0,$66,$66,$10,  6,$66,$66,$61,  6,$61,$16,$61,  6,$61,  6,$61,  6,$66,$66,$61,  8,$66,$66,$71,  1,$11,$66,$10; 576
		dc.b $66,$10,$66,$10,$66,$66,$66,$10,  6,$66,$61,  0,  1,$11,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 608
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,$61,  0,  0,  6,$61,  0,  0,  1,$11,  0,  0,  0,  0,  0,  0,  6,$61,  0; 640
		dc.b   0,  6,$61,  0,  0,  1,$11,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 672
		dc.b   0,  0,  0,  0, $C,$CC,$CC,$C1, $C,$CC,$CC,$C1, $C,$C1,$11,$11, $C,$C1,  0,  0, $C,$CC,$CC,$10,$CC,$CC,$C1,  0,$CC,$11,$11,  0; 704
		dc.b $CC,$10,  0,  0,$CC,$CC,$CC,$10,$CC,$CC,$CC,$10,$11,$11,$11,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 736
Art_LivesNums:	dc.b   0,  0,  0,  0,  0,$66,$66,$10,  6,$61,$16,$61,  6,$61,  6,$61,  6,$61,  6,$61,  6,$61,  6,$61,  0,$66,$66,$10,  0,$11,$11,  0; 0
					; DATA XREF: HUD_Lives+14t
		dc.b   0,  0,  0,  0,  0,  6,$61,  0,  0,$66,$61,  0,  0,$16,$61,  0,  0,  6,$61,  0,  0,  6,$61,  0,  0,  6,$61,  0,  0,  1,$11,  0; 32
		dc.b   0,  0,  0,  0,  0,$66,$66,$10,  0,$11,$16,$61,  0,  0,$66,$11,  0,  6,$61,$10,  0,$66,$11,$10,  6,$66,$66,$61,  1,$11,$11,$11; 64
		dc.b   0,  0,  0,  0,  0,$66,$66,$10,  0,$11,$16,$61,  0,  6,$66,$10,  0,  1,$16,$61,  6,$61,  6,$61,  0,$66,$66,$10,  0,$11,$11,  0; 96
		dc.b   0,  0,  0,  0,  0,  0,$66,$10,  0,  6,$66,$10,  0,$61,$66,$10,  6,$61,$66,$10,  6,$66,$66,$61,  1,$11,$66,$11,  0,  0,$11,$10; 128
		dc.b   0,  0,  0,  0,  6,$66,$66,$61,  6,$61,$11,$11,  6,$66,$66,$10,  1,$11,$16,$61,  6,$61,  6,$61,  0,$66,$66,$10,  0,$11,$11,  0; 160
		dc.b   0,  0,  0,  0,  0,$66,$66,$10,  6,$61,$11,$10,  6,$66,$66,$10,  6,$61,$16,$61,  6,$61,  6,$61,  0,$66,$66,$10,  0,$11,$11,  0; 192
		dc.b   0,  0,  0,  0,  6,$66,$66,$61,  1,$11,$16,$61,  0,  0,$66,$10,  0,  6,$61,  0,  0,$66,$10,  0,  0,$66,$10,  0,  0,$11,$10,  0; 224
		dc.b   0,  0,  0,  0,  0,$66,$66,$10,  6,$61,$16,$61,  0,$66,$66,$10,  6,$61,$16,$61,  6,$61,  6,$61,  0,$66,$66,$10,  0,$11,$11,  0; 256
		dc.b   0,  0,  0,  0,  0,$66,$66,$10,  6,$61,$16,$61,  6,$61,  6,$61,  0,$66,$66,$61,  0,$11,$16,$61,  0,$66,$66,$10,  0,$11,$11,  0; 288
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		nop

j_Adjust2PArtPointer_8:
		jmp	(Adjust2PArtPointer).l

		align 4

; ===========================================================================
; ---------------------------------------------------------------------------
; When debug mode is currently in use
; ---------------------------------------------------------------------------
DebugMode:
		moveq	#0,d0
		move.b	(Debug_placement_mode).w,d0
		move.w	DebugIndex(pc,d0.w),d1
		jmp	DebugIndex(pc,d1.w)
; ===========================================================================
DebugIndex:	dc.w Debug_Init-DebugIndex
		dc.w Debug_Main-DebugIndex
; ===========================================================================

Debug_Init:
		addq.b	#2,(Debug_placement_mode).w
		move.w	($FFFFEECC).w,($FFFFFEF0).w
		move.w	($FFFFEEC6).w,($FFFFFEF2).w
		move.w	#0,($FFFFEECC).w
		move.w	#$720,($FFFFEEC6).w
		andi.w	#$7FF,($FFFFB00C).w
		andi.w	#$7FF,($FFFFEE04).w
		andi.w	#$3FF,($FFFFEE0C).w
		move.b	#0,$1A(a0)
		move.b	#0,$1C(a0)

; Debug_CheckSS:
		cmpi.b	#GameModeID_SpecialStage,(Game_Mode).w	; is this the Special Stage?
		bne.s	loc_1BB04	; if not, branch
		moveq	#6,d0		; force zone 6's debug object list (was the ending in S1)
		bra.s	loc_1BB0A
; ===========================================================================

loc_1BB04:
		moveq	#0,d0
		move.b	(Current_Zone).w,d0

loc_1BB0A:
		lea	(DebugList).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d6
		cmp.b	(Debug_object).w,d6
		bhi.s	loc_1BB24
		move.b	#0,(Debug_object).w

loc_1BB24:
		bsr.w	LoadDebugObjectSprite
		move.b	#$C,(Debug_Accel_Timer).w
		move.b	#1,(Debug_Speed).w

Debug_Main:
		moveq	#6,d0		; force zone 6's debug object list (was the ending in S1)
		cmpi.b	#GameModeID_SpecialStage,(Game_Mode).w	; is this the Special Stage?
		beq.s	loc_1BB44	; if yes, branch

		moveq	#0,d0
		move.b	(Current_Zone).w,d0

loc_1BB44:
		lea	(DebugList).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d6
		bsr.w	Debug_Control
		jmp	(DisplaySprite).l

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


Debug_Control:
		moveq	#0,d4
		move.w	#1,d1
		move.b	($FFFFF605).w,d4
		andi.w	#$F,d4
		bne.s	Debug_Move
		move.b	($FFFFF604).w,d0
		andi.w	#$F,d0
		bne.s	Debug_ContinueMoving
		move.b	#$C,(Debug_Accel_Timer).w
		move.b	#$F,(Debug_Speed).w
		bra.w	Debug_ControlObjects
; ===========================================================================
; loc_1BB86:
Debug_ContinueMoving:
		subq.b	#1,(Debug_Accel_Timer).w
		bne.s	Debug_TimerNotOver
		move.b	#1,(Debug_Accel_Timer).w
		addq.b	#1,(Debug_Speed).w
		bne.s	Debug_Move
		move.b	#-1,(Debug_Speed).w
; loc_1BB9E:
Debug_Move:
		move.b	($FFFFF604).w,d4
; loc_1BBA2:
Debug_TimerNotOver:
		moveq	#0,d1
		move.b	(Debug_Speed).w,d1
		addq.w	#1,d1
		swap	d1
		asr.l	#4,d1
		move.l	$C(a0),d2
		move.l	8(a0),d3

		; move up
		btst	#0,d4
		beq.s	loc_1BBC2
		sub.l	d1,d2
		bcc.s	loc_1BBC2
		moveq	#0,d2

loc_1BBC2:
		; move down
		btst	#1,d4
		beq.s	loc_1BBD8
		add.l	d1,d2
		cmpi.l	#$7FF0000,d2
		bcs.s	loc_1BBD8
		move.l	#$7FF0000,d2

loc_1BBD8:
		; move left
		btst	#2,d4
		beq.s	loc_1BBE4
		sub.l	d1,d3
		bcc.s	loc_1BBE4
		moveq	#0,d3

loc_1BBE4:
		; move right
		btst	#3,d4
		beq.s	loc_1BBEC
		add.l	d1,d3

loc_1BBEC:
		move.l	d2,$C(a0)
		move.l	d3,8(a0)
; loc_1BBF4:
Debug_ControlObjects:
		btst	#6,($FFFFF604).w
		beq.s	Debug_SpawnObject
		btst	#5,($FFFFF605).w
		beq.s	Debug_CycleObjects
		; cycle backwards through the object list
		subq.b	#1,(Debug_object).w
		bcc.s	loc_1BC28
		add.b	d6,(Debug_object).w
		bra.s	loc_1BC28
; ===========================================================================
; loc_1BC10:
Debug_CycleObjects:
		btst	#6,($FFFFF605).w
		beq.s	Debug_SpawnObject
		addq.b	#1,(Debug_object).w
		cmp.b	(Debug_object).w,d6
		bhi.s	loc_1BC28
		move.b	#0,(Debug_object).w

loc_1BC28:
		bra.w	LoadDebugObjectSprite
; ===========================================================================
; loc_1BC2C:
Debug_SpawnObject:
		btst	#5,($FFFFF605).w
		beq.s	Debug_ExitDebugMode
		; spawn object
		jsr	(SingleObjLoad).l
		bne.s	Debug_ExitDebugMode
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	4(a0),0(a1) ; load obj
		move.b	1(a0),1(a1)
		move.b	1(a0),$22(a1)
		andi.b	#$7F,$22(a1)
		moveq	#0,d0
		move.b	(Debug_object).w,d0
		lsl.w	#3,d0
		move.b	4(a2,d0.w),$28(a1)
		rts
; ===========================================================================
; loc_1BC70:
Debug_ExitDebugMode:
		btst	#4,($FFFFF605).w
		beq.s	locret_1BCCA
		; exit Debug Mode
		moveq	#0,d0
		move.w	d0,(Debug_placement_mode).w
		move.l	#Map_Sonic,($FFFFB004).w
		move.w	#$780,($FFFFB002).w
		tst.w	(Two_player_mode).w
		beq.s	loc_1BC98
		move.w	#$3C0,($FFFFB002).w

loc_1BC98:
		move.b	d0,($FFFFB01C).w
		move.w	d0,$A(a0)
		move.w	d0,$E(a0)
		move.w	($FFFFFEF0).w,($FFFFEECC).w
		move.w	($FFFFFEF2).w,($FFFFEEC6).w
		cmpi.b	#GameModeID_SpecialStage,(Game_Mode).w	; is this the Special Stage?
		bne.s	locret_1BCCA		; if not, branch
		move.b	#2,($FFFFB01C).w
		bset	#2,($FFFFB022).w
		bset	#1,($FFFFB022).w

locret_1BCCA:
		rts
; End of function Debug_Control


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_1BCCC: Debug_ShowItem:
LoadDebugObjectSprite:
		moveq	#0,d0
		move.b	(Debug_object).w,d0
		lsl.w	#3,d0
		move.l	(a2,d0.w),4(a0)
		move.w	6(a2,d0.w),2(a0)
		move.b	5(a2,d0.w),$1A(a0)
		bsr.w	j_Adjust2PArtPointer_1
		rts
; End of function Debug_ShowItem

; ===========================================================================
DebugList:	dc.w Debug_GHZ-DebugList
		dc.w Debug_CPZ-DebugList
		dc.w Debug_CPZ-DebugList
		dc.w Debug_EHZ-DebugList
		dc.w Debug_HPZ-DebugList
		dc.w Debug_HTZ-DebugList
		dc.w Debug_HPZ-DebugList
Debug_GHZ:	dc.w $E			; DATA XREF: ROM:DebugListo
		dc.l Map_Obj25+$25000000
		dc.b   0,  0,$26,$BC	; subtype, frame, VRAM setting (2 bytes)
		dc.l Map_Obj26+$26000000
		dc.b   0,  0,  6,$80	; 0
		dc.l Map_obj1F+$1F000000
		dc.b   0,  0,  4,  0	; 0
		dc.l Map_obj22+$22000000
		dc.b   0,  0,  4,$44	; 0
		dc.l Map_Obj2B+$2B000000
		dc.b   0,  0,  4,$70	; 0
		dc.l Map_Obj36+$36000000
		dc.b   0,  0,  4,$A0	; 0
		dc.l Map_Obj18+$18000000
		dc.b   0,  0,$40,  0	; 0
		dc.l Map_Obj3B+$3B000000
		dc.b   0,  0,$66,$C0	; 0
		dc.l Map_obj40+$40000000
		dc.b   0,  0,  4,$E0	; 0
		dc.l Map_obj41_GHZ+$41000000
		dc.b   0,  0,  4,$A8	; 0
		dc.l Map_obj42+$42000000
		dc.b   0,  0,$24,$9B	; 0
		dc.l Map_obj44+$44000000
		dc.b   0,  0,$43,$4C	; 0
		dc.l Map_Obj79+$79000000
		dc.b   1,  0,$26,$BC	; 0
		dc.l Map_Obj03+$03000000
		dc.b   0,  0,$26,$BC	; 0
Debug_CPZ:	dc.w $10		; DATA XREF: ROM:0001BCEEo
					; ROM:0001BCF0o
		dc.l Map_Obj25+$25000000
		dc.b   0,  0,$26,$BC	; 0
		dc.l Map_Obj26+$26000000
		dc.b   0,  0,  6,$80	; 0
		dc.l Map_obj41_GHZ+$41000000
		dc.b   0,  0,  4,$A8	; 0
		dc.l Map_Obj03+$03000000
		dc.b   0,  0,  7,$BC	; 0
		dc.l Map_Obj0B+$0B000000
		dc.b   0,  0,$E0,  0	; 0
		dc.l Map_Obj0C+$0C000000
		dc.b   0,  0,$E4,$18	; 0
		dc.l Map_Obj15_CPZ+$15000000
		dc.b   8,  0,$24,$18	; 0
		dc.l Map_Obj03+$03000000
		dc.b   9,  1,$26,$BC	; 0
		dc.l Map_Obj03+$03000000
		dc.b  $D,  5,$26,$BC	; 0
		dc.l Map_Obj19+$19000000
		dc.b   1,  0,$64,  0	; 0
		dc.l Map_Obj36+$36000000
		dc.b   0,  0,$24,$34	; 0
		dc.l Map_obj41+$41000000
		dc.b $81,  0,  4,$5C	; 0
		dc.l Map_obj41+$41000000
		dc.b $90,  3,  4,$70	; 0
		dc.l Map_obj41+$41000000
		dc.b $A0,  6,  4,$5C	; 0
		dc.l Map_obj41+$41000000
		dc.b $30,  7,  4,$3C	; 0
		dc.l Map_obj41+$41000000
		dc.b $40, $A,  4,$3C	; 0
Debug_EHZ:	dc.w $13		; DATA XREF: ROM:0001BCF2o
		dc.l Map_Obj25+$25000000
		dc.b   0,  0,$26,$BC	; 0
		dc.l Map_Obj26+$26000000
		dc.b   0,  0,  6,$80	; 0
		dc.l Map_Obj79+$79000000
		dc.b   1,  0,  4,$7C	; 0
		dc.l Map_Obj03+$03000000
		dc.b   0,  0,$26,$BC	; 0
		dc.l Map_Obj49+$49000000
		dc.b   0,  0,$23,$AE	; 0
		dc.l Map_Obj49+$49000000
		dc.b   2,  3,$23,$AE	; 0
		dc.l Map_Obj49+$49000000
		dc.b   4,  5,$23,$AE	; 0
		dc.l Map_obj18_EHZ+$18000000
		dc.b   1,  0,$40,  0	; 0
		dc.l Map_obj18_EHZ+$18000000
		dc.b  $A,  1,$40,  0	; 0
		dc.l Map_Obj36+$36000000
		dc.b   0,  0,$24,$34	; 0
		dc.l Map_obj14+$14000000
		dc.b   0,  0,  3,$CE	; 0
		dc.l Map_obj41+$41000000
		dc.b $81,  0,  4,$5C	; 0
		dc.l Map_obj41+$41000000
		dc.b $90,  3,  4,$70	; 0
		dc.l Map_obj41+$41000000
		dc.b $A0,  6,  4,$5C	; 0
		dc.l Map_obj41+$41000000
		dc.b $30,  7,  4,$3C	; 0
		dc.l Map_obj41+$41000000
		dc.b $40, $A,  4,$3C	; 0
		dc.l Map_obj4B+$4B000000
		dc.b   0,  0,  3,$E6	; 0
		dc.l Map_obj54+$54000000
		dc.b   0,  0,  4,  2	; 0
		dc.l Map_obj53+$53000000
		dc.b   0,  0,  4,$1C	; 0
		dc.l Map_obj4F+$4F000000
		dc.b   0,  0,  5,  0	; 0
		dc.l Map_Obj52+$52000000
		dc.b   0,  0,$25,$30	; 0
		dc.l Map_Obj50+$50000000
		dc.b   0,  0,$25,$70	; 0
		dc.l Map_Obj50+$51000000
		dc.b   0,  0,$25,$70	; 0
		dc.l Map_Obj4D+$4D000000
		dc.b   0,  0,$23,$C4	; 0
		dc.l Map_obj4B+$4B000000
		dc.b   0,  0,  3,$2C	; 0
		dc.l Map_Obj4E+$4E000000
		dc.b   0,  0,$23,  0	; 0
		dc.l Map_Obj4C+$4C000000
		dc.b   0,  0,$23,$50	; 0
		dc.l Map_Obj4A+$4A000000
		dc.b   0,  0,$23,$8A	; 0
Debug_HTZ:	dc.w $13		; DATA XREF: ROM:0001BCF6o
		dc.l Map_Obj25+$25000000
		dc.b   0,  0,$26,$BC	; 0
		dc.l Map_Obj26+$26000000
		dc.b   0,  0,  6,$80	; 0
		dc.l Map_Obj79+$79000000
		dc.b   1,  0,  4,$7C	; 0
		dc.l Map_Obj03+$03000000
		dc.b   0,  0,$26,$BC	; 0
		dc.l Map_obj18_EHZ+$18000000
		dc.b   1,  0,$40,  0	; 0
		dc.l Map_obj18_EHZ+$18000000
		dc.b  $A,  1,$40,  0	; 0
		dc.l Map_Obj36+$36000000
		dc.b   0,  0,$24,$34	; 0
		dc.l Map_obj14+$14000000
		dc.b   0,  0,  3,$CE	; 0
		dc.l Map_obj41+$41000000
		dc.b $81,  0,  4,$5C	; 0
		dc.l Map_obj41+$41000000
		dc.b $90,  3,  4,$70	; 0
		dc.l Map_obj41+$41000000
		dc.b $A0,  6,  4,$5C	; 0
		dc.l Map_obj41+$41000000
		dc.b $30,  7,  4,$3C	; 0
		dc.l Map_obj41+$41000000
		dc.b $40, $A,  4,$3C	; 0
		dc.l Map_Obj16+$16000000
		dc.b   0,  0,$43,$E6	; 0
		dc.l Map_Obj16+$1C000000
		dc.b   4,  1,$43,$E6	; 0
		dc.l Map_Obj16+$1C000000
		dc.b   5,  2,$43,$E6	; 0
		dc.l Map_obj4B+$4B000000
		dc.b   0,  0,  3,$E6	; 0
		dc.l Map_obj54+$54000000
		dc.b   0,  0,  4,  2	; 0
		dc.l Map_obj53+$53000000
		dc.b   0,  0,  4,$1C	; 0
Debug_HPZ:	dc.w $F			; DATA XREF: ROM:0001BCF4o
					; ROM:0001BCF8o
		dc.l Map_Obj25+$25000000
		dc.b   0,  0,$26,$BC	; 0
		dc.l Map_Obj26+$26000000
		dc.b   0,  0,  6,$80	; 0
		dc.l Map_Obj1C_01+$1C000000
		dc.b $21,  3,$E4,$85	; 0
		dc.l Map_Obj13+$13000000
		dc.b   4,  4,$E4,$15	; 0
		dc.l Map_Obj1A_HPZ+$1A000000
		dc.b   0,  0,$44,$75	; 0
		dc.l Map_Obj03+$03000000
		dc.b   0,  0,$26,$BC	; 0
		dc.l Map_obj4F+$4F000000
		dc.b   0,  0,  5,  0	; 0
		dc.l Map_Obj52+$52000000
		dc.b   0,  0,$25,$30	; 0
		dc.l Map_Obj50+$50000000
		dc.b   0,  0,$25,$70	; 0
		dc.l Map_Obj50+$51000000
		dc.b   0,  0,$25,$70	; 0
		dc.l Map_Obj4D+$4D000000
		dc.b   0,  0,$23,$C4	; 0
		dc.l Map_obj4B+$4B000000
		dc.b   0,  0,  3,$2C	; 0
		dc.l Map_Obj4E+$4E000000
		dc.b   0,  0,$23,  0	; 0
		dc.l Map_Obj4C+$4C000000
		dc.b   0,  0,$23,$50	; 0
		dc.l Map_Obj4A+$4A000000
		dc.b   0,  0,$23,$8A	; 0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

j_Adjust2PArtPointer_1:		; CODE XREF: Debug_ShowItem+1Ap
		jmp	Adjust2PArtPointer
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4



; ---------------------------------------------------------------------------
; "MAIN LEVEL LOAD BLOCK" (after Nemesis)
;
; This struct array tells the engine where to find all the art associated with
; a particular zone. Each zone gets four longwords, in which it stores four
; pointers (in the lower 24 bits) and three jump table indeces (in the upper eight
; bits). The assembled data looks something like this:
;
; aaBBBBBB
; ccDDDDDD
; EEEEEE
; ffgghhii
;
; aa = index for primary pattern load request list
; BBBBBB = unused, pointer to level art
; cc = index for secondary pattern load request list
; DDDDDD = pointer to 16x16 block mappings
; EEEEEE = pointer to 128x128 block mappings
; ff = unused, always 0
; gg = unused, music track
; hh = unused, palette
; ii = palette
;
; Nemesis refers to this as the "main level load block". However, that name implies
; that this is code (obviously, it isn't), or at least that it points to the level's
; collision, object and ring placement arrays (it only points to palettes and 16x16
; mappings although the 128x128 mappings do affect the actual level layout and collision)
; ---------------------------------------------------------------------------

; macro for declaring a "main level load block" (MLLB)
levartptrs macro plc1,plc2,palette,art,map16x16,map128x128,music
	dc.l art+(plc1<<24)
	dc.l map16x16+(plc2<<24)
	dc.l map128x128
	dc.b 0,music,palette,palette
	endm

; MainLoadBlocks:
LevelArtPointers:
		levartptrs  4,  5,  4, Nem_GHZ, Map16_GHZ, UnkComp_Map128_GHZ, MusID_GHZ	;   0 ; GHZ  ; GREEN HILL ZONE
		levartptrs  6,  7,  5, Nem_CPZ, Map16_CPZ, Map128_CPZ, MusID_LZ			;   1 ; LZ   ; LABYRINTH ZONE
		levartptrs  8,  9,  6, Nem_CPZ, Map16_CPZ, Map128_CPZ, MusID_CPZ		;   2 ; CPZ  ; CHEMICAL PLANT ZONE
		levartptrs $A, $B,  7, Nem_EHZ, Map16_EHZ, Map128_EHZ, MusID_EHZ		;   3 ; EHZ  ; EMERALD HILL ZONE
		levartptrs $C, $D,  8, Nem_HPZ, Map16_HPZ, Map128_HPZ, MusID_HPZ		;   4 ; HPZ  ; HIDDEN PALACE ZONE
		levartptrs $E, $F,  9, Nem_EHZ, Map16_EHZ, Map128_EHZ, MusID_HTZ		;   5 ; HTZ  ; HILL TOP ZONE
		levartptrs  0,  0,$13, Nem_GHZ, Map16_GHZ, UnkComp_Map128_GHZ, MusID_HTZ	;   6 ; LEV6 ; LEVEL 6 (UNUSED, SONIC 1 ENDING)

; ---------------------------------------------------------------------------
; PATTERN LOAD REQUEST LISTS
;
; Pattern load request lists are simple structures used to load
; Nemesis-compressed art for sprites.
;
; The decompressor predictably moves down the list, so request 0 is processed first, etc.
; This only matters if your addresses are bad and you overwrite art loaded in a previous request.
;

; NOTICE: The load queue buffer can only hold $10 (16) load requests. None of the routines
; that load PLRs into the queue do any bounds checking, so it's possible to create a buffer
; overflow and completely screw up the variables stored directly after the queue buffer.
; (in my experience this is a guaranteed crash or hang)
;
; Many levels queue more than 16 items overall, but they don't exceed the limit because
; their PLRs are split into multiple parts (like PLC_GHZ and PLC_GHZ2) and they fully
; process the first part before requesting the rest.
; ---------------------------------------------------------------------------

;---------------------------------------------------------------------------------------
; Table of pattern load request lists. Remember to use word-length data when adding lists
; otherwise you'll break the array.
;---------------------------------------------------------------------------------------
ArtLoadCues:	dc.w PLC_Main-ArtLoadCues,PLC_Main2-ArtLoadCues
		dc.w PLC_Explode-ArtLoadCues,PLC_GameOver-ArtLoadCues
		dc.w PLC_GHZ-ArtLoadCues,PLC_GHZ2-ArtLoadCues
		dc.w PLC_CPZ-ArtLoadCues,PLC_CPZ2-ArtLoadCues
		dc.w PLC_CPZ-ArtLoadCues,PLC_CPZ2-ArtLoadCues
		dc.w PLC_EHZ-ArtLoadCues,PLC_EHZ2-ArtLoadCues
		dc.w PLC_HPZ-ArtLoadCues,PLC_HPZ2-ArtLoadCues
		dc.w PLC_HTZ-ArtLoadCues,PLC_HTZ2-ArtLoadCues
		dc.w PLC_S1TitleCard-ArtLoadCues,PLC_Boss-ArtLoadCues
		dc.w PLC_Signpost-ArtLoadCues,PLC_S1SpecialStage-ArtLoadCues
		dc.w PLC_S1SpecialStage-ArtLoadCues,PLC_GHZAnimals-ArtLoadCues
		dc.w PLC_LZAnimals-ArtLoadCues,PLC_CPZAnimals-ArtLoadCues
		dc.w PLC_EHZAnimals-ArtLoadCues,PLC_HPZAnimals-ArtLoadCues
		dc.w PLC_HTZAnimals-ArtLoadCues,LeftoverArt_Unknown-ArtLoadCues
		dc.w LeftoverArt_Unknown+2-ArtLoadCues,LeftoverArt_Unknown+4-ArtLoadCues
		dc.w LeftoverArt_Unknown+6-ArtLoadCues,LeftoverArt_Unknown+8-ArtLoadCues

; macro for a pattern load request
plreq macro toVRAMaddr,fromROMaddr
	dc.l	fromROMaddr		; art to load
	dc.w	(toVRAMaddr<<5)		; VRAM address to load it at (multiplied by $20)
	endm

; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Standard 1 - loaded for every level
; --------------------------------------------------------------------------------------
PLC_Main:	dc.w ((PLC_Main_End-PLC_Main)/6)-1
		plreq $47C, Nem_Lamppost
		plreq $6CA, Nem_HUD
		plreq $7D4, Nem_Lives
		plreq $6BC, Nem_Ring
		plreq $41C, Nem_Points
PLC_Main_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Standard 2 - loaded for every level
; --------------------------------------------------------------------------------------
PLC_Main2:	dc.w ((PLC_Main2_End-PLC_Main2)/6)-1
		plreq $680, Nem_Monitors
		plreq $4BE, Nem_Shield
		plreq $4DE, Nem_Stars
PLC_Main2_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Explosion - loaded for every level AFTER the title card
; --------------------------------------------------------------------------------------
PLC_Explode:	dc.w ((PLC_Explode_End-PLC_Explode)/6)-1
		plreq $5A0, Nem_Explosion
PLC_Explode_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Game/Time over
; --------------------------------------------------------------------------------------
PLC_GameOver:	dc.w ((PLC_GameOver_End-PLC_GameOver)/6)-1
		plreq $55E, Nem_GameOver
PLC_GameOver_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Green Hill Zone primary
; --------------------------------------------------------------------------------------
PLC_GHZ:	dc.w ((PLC_GHZ_End-PLC_GHZ)/6)-1
		plreq 0, Nem_GHZ
		plreq $470, Nem_GHZ_Piranha
		plreq $4A0, Nem_VSpikes
		plreq $4A8, Nem_VSpring
		plreq $4B8, Nem_HSpring
		plreq $4C6, Nem_GHZ_Bridge
		plreq $4D0, Nem_SwingPlatform
		plreq $4E0, Nem_Motobug
		plreq $6C0, Nem_GHZ_Rock
PLC_GHZ_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Green Hill Zone secondary
; --------------------------------------------------------------------------------------
PLC_GHZ2:	dc.w ((PLC_GHZ2_End-PLC_GHZ2)/6)-1
		plreq $470, Nem_GHZ_Piranha
PLC_GHZ2_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Chemical Plant Zone primary
; --------------------------------------------------------------------------------------
PLC_CPZ:	dc.w ((PLC_CPZ_End-PLC_CPZ)/6)-1
		plreq 0, Nem_CPZ
		plreq $3D0, Nem_CPZ_Unknown
		plreq $400, Nem_CPZ_FloatingPlatform
PLC_CPZ_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Chemical Plant Zone secondary
; --------------------------------------------------------------------------------------
PLC_CPZ2:	dc.w ((PLC_CPZ2_End-PLC_CPZ2)/6)-1
		plreq $434, Nem_VSpikes
		plreq $43C, Nem_DSpring
		plreq $45C, Nem_VSpring2
		plreq $470, Nem_HSpring2
PLC_CPZ2_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Emerald Hill Zone primary
; --------------------------------------------------------------------------------------
PLC_EHZ:	dc.w ((PLC_EHZ_End-PLC_EHZ)/6)-1
		plreq 0, Nem_EHZ
		plreq $39E, Nem_EHZ_Fireball
		plreq $3AE, Nem_EHZ_Waterfall
		plreq $3C6, Nem_EHZ_Bridge
		plreq $3CE, Nem_HTZ_Seesaw
		plreq $434, Nem_VSpikes
		plreq $43C, Nem_DSpring
		plreq $45C, Nem_VSpring2
		plreq $470, Nem_HSpring2
PLC_EHZ_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Emerald Hill Zone secondary
; --------------------------------------------------------------------------------------
PLC_EHZ2:	dc.w ((PLC_EHZ2_End-PLC_EHZ2)/6)-1
		plreq $560, Nem_Shield
		plreq $4AC, Nem_Points
		plreq $3E6, Nem_Buzzer
		plreq $402, Nem_Snail
		plreq $41C, Nem_Masher
PLC_EHZ2_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Hidden Palace Zone primary
; --------------------------------------------------------------------------------------
PLC_HPZ:	dc.w ((PLC_HPZ_End-PLC_HPZ)/6)-1
		plreq 0, Nem_HPZ
		plreq $300, Nem_HPZ_Bridge
		plreq $315, Nem_HPZ_Waterfall
		plreq $34A, Nem_HPZ_Platform
		plreq $35A, Nem_HPZ_PulsingBall
		plreq $37C, Nem_HPZ_Various
		plreq $392, Nem_HPZ_Emerald
		plreq $400, Nem_HPZ_WaterSurface
PLC_HPZ_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Hidden Palace Zone secondary
; --------------------------------------------------------------------------------------
PLC_HPZ2:	dc.w ((PLC_HPZ2_End-PLC_HPZ2)/6)-1
		plreq $500, Nem_Redz
word_1C1E2:	plreq $530, Nem_Bat
PLC_HPZ2_End:
		; unused PLR entries
		plreq $300, Nem_Crocobot
		plreq $32C, Nem_Buzzer
		plreq $350, Nem_Bat
		plreq $3C4, Nem_Triceratops
		plreq $500, Nem_Redz
		plreq $530, Nem_HPZ_Piranha
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Hill Top Zone primary
; --------------------------------------------------------------------------------------
PLC_HTZ:	dc.w ((PLC_HTZ_End-PLC_HTZ)/6)-1
		plreq 0, Nem_EHZ
		plreq $1FC, Nem_HTZ
		plreq $500, Nem_HTZ_AniPlaceholders
		plreq $39E, Nem_EHZ_Fireball
		plreq $3AE, Nem_HTZ_Fireball
		plreq $3DE, Nem_HTZ_AutomaticDoor
		plreq $3C6, Nem_EHZ_Bridge
		plreq $3CE, Nem_HTZ_Seesaw
		plreq $434, Nem_VSpikes
		plreq $43C, Nem_DSpring
PLC_HTZ_End:
		; unused PLR entries
		plreq $45C, Nem_VSpring2
		plreq $470, Nem_HSpring2
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Hill Top Zone secondary
; --------------------------------------------------------------------------------------
PLC_HTZ2:	dc.w ((PLC_HTZ2_End-PLC_HTZ2)/6)-1
		plreq $3E6, Nem_HTZ_Lift
PLC_HTZ2_End:
		; unused PLR entries
		plreq $3E6, Nem_Buzzer
		plreq $402, Nem_Snail
		plreq $41C, Nem_Masher
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Sonic 1 title card
; --------------------------------------------------------------------------------------
PLC_S1TitleCard:dc.w ((PLC_S1TitleCard_End-PLC_S1TitleCard)/6)-1
		plreq $580, Nem_S1TitleCard
PLC_S1TitleCard_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; End of zone bosses
; --------------------------------------------------------------------------------------
PLC_Boss:	dc.w ((PLC_Boss_End-PLC_Boss)/6)-1
		plreq $460, Nem_BossShip
		plreq $4C0, Nem_EHZ_Boss
		plreq $540, Nem_EHZ_Boss_Blades
PLC_Boss_End:
		; unused PLR entries
		plreq $400, Nem_BossShip
		plreq $460, Nem_CPZ_ProtoBoss
		plreq $4D0, Nem_BossShipBoost
		plreq $4D8, Nem_Smoke
		plreq $4E8, Nem_EHZ_Boss
		plreq $568, Nem_EHZ_Boss_Blades
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; End of level signpost
; --------------------------------------------------------------------------------------
PLC_Signpost:	dc.w ((PLC_Signpost_End-PLC_Signpost)/6)-1
		plreq $680, Nem_Signpost
		plreq $4B6, Nem_S1BonusPoints
		plreq $462, Nem_BigFlash
PLC_Signpost_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Sonic 1 Special Stage, although since it's blank, using it will crash the game
; unless you remove the +$10
; --------------------------------------------------------------------------------------
; PLC_Invalid:
PLC_S1SpecialStage:	dc.w ((PLC_S1SpecialStage_End-PLC_S1SpecialStage)/6)-1+$10
PLC_S1SpecialStage_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Green Hill Zone animals
; --------------------------------------------------------------------------------------
PLC_GHZAnimals:	dc.w ((PLC_GHZAnimals_End-PLC_GHZAnimals)/6)-1
		plreq $580, Nem_Bunny
		plreq $592, Nem_Flicky
PLC_GHZAnimals_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Labyrinth Zone animals
; --------------------------------------------------------------------------------------
PLC_LZAnimals:	dc.w ((PLC_LZAnimals_End-PLC_LZAnimals)/6)-1
		plreq $580, Nem_Penguin
		plreq $592, Nem_Seal
PLC_LZAnimals_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Chemical Plant Zone animals
; --------------------------------------------------------------------------------------
PLC_CPZAnimals:	dc.w ((PLC_CPZAnimals_End-PLC_CPZAnimals)/6)-1
		plreq $580, Nem_Squirrel
		plreq $592, Nem_Seal
PLC_CPZAnimals_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Emerald Hill Zone animals
; --------------------------------------------------------------------------------------
PLC_EHZAnimals:	dc.w ((PLC_EHZAnimals_End-PLC_EHZAnimals)/6)-1
		plreq $580, Nem_Pig
		plreq $592, Nem_Flicky
PLC_EHZAnimals_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Hidden Palace Zone animals
; --------------------------------------------------------------------------------------
PLC_HPZAnimals:	dc.w ((PLC_HPZAnimals_End-PLC_HPZAnimals)/6)-1
		plreq $580, Nem_Pig
		plreq $592, Nem_Chicken
PLC_HPZAnimals_End:
; --------------------------------------------------------------------------------------
; PATTERN LOAD REQUEST LIST
; Hill Top Zone animals
; --------------------------------------------------------------------------------------
PLC_HTZAnimals:	dc.w ((PLC_HTZAnimals_End-PLC_HTZAnimals)/6)-1
		plreq $580, Nem_Bunny
		plreq $592, Nem_Chicken
PLC_HTZAnimals_End:

; --------------------------------------------------------------------------------------
; Leftover art from an unknown game, overwrites the other Sonic 1 PLC entries
; --------------------------------------------------------------------------------------
LeftoverArt_Unknown:dc.b   0,  1,  0, $D,  0,  2,  0,  2,  0,  4,  0,  0,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4
		dc.b   4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  4,  4,  4,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  4,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  4,  2,  4
		dc.b   2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2, $A,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  4,  2,  4,  4,  4,  2,  2,  2
		dc.b   2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2, $A,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  4,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  4,  4,  2,  4,  2,  2, $A,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  2,  2,  2,  2, $A,  2
		dc.b   2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2, $A,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  4,  4,  2,  4,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  2,  2,  4,  2,  4,  2,  2
		dc.b   4,  4,  2,  4,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4, $A,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  4,  2,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  6,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   4, $A,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  4
		dc.b   2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  4
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  4,  4,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  4,  2,  2,  2,  4,  2,  2,  2,  4,  2,  4
		dc.b   2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2, $A,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4
		dc.b   2,  2,  2,  2,  4,  4,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  4,  4,  2,  2,  4,  4,  4,  4,  2,  4,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  4
		dc.b   2,  4,  2,  2,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2, $A,  2,  4,  2,  2,  4,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  4,  2,  2,  4,  4,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  4,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  4,  2,  4,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  4,  4,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   4,  4,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b  $A,  2,  2,  2,  2,  2,  2,  2,  6,  6,  6,  2,  2,  6,  6, $A,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  4, $A,  4,  2,  2,  4,  2, $A,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   6,  6,  2,  2,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  6,  6,  4,  2,  6,  2,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  6
		dc.b   8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  4,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  4
		dc.b   6,  6,  6,  6,  6,  8,  6,  4,  8,  8,  8,  8,  8,  8,  6,  6,  8,  6,  6,  6,  6,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  6
		dc.b   6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  2,  6,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  6,  8
		dc.b   8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  6,  2,  6
		dc.b   6,  4,  6,  8,  8,  6,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  6,  6,  6,  2,  4,  2,  6,  6,  6,  6,  6
		dc.b   8,  6,  8,  6,  6,  6,  6,  8,  8,  8,  6,  8,  6,  6,  6,  6,  6,  6,  4,  2,  2,  2,  4,  4,  4,  2,  2,  2,  2,  2,  4,  4
		dc.b   4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8
		dc.b   8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  4,  4,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  6,  2,  6,  6,  6,  8
		dc.b   8,  6,  8,  8,  8,  8,  8,  8,  0,  0, $E,  0,  0,  0,  0,  8,  8,  8,  6,  6,  8,  8,  6,  6,  6,  6,  6,  6,  6,  8,  6,  6
		dc.b   6,  6,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  6,  6,  2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  6,  8,  8,  8
		dc.b   8,  8,  8,  8,  8,  8,  6,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  6,  6,  6,  6,  4,  8,  8,  8
		dc.b   8,  8,  8,  8,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0,  8,  8,  8,  6,  6,  6,  6,  8,  8,  8,  8,  8,  6,  8
		dc.b   8,  0,  0,  0, $E,  0,  0,  0,  0,  0, $E,  0,  8,  8,  8,  8,  6,  8,  6,  6,  6,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8
		dc.b   8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4, $A,  6,  6,  6,  8,  8,  8,  8, $E
		dc.b   0,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  8,  8,  8,  8,  8,  8,  8,  6,  8,  8,  8,  0
		dc.b   0, $E,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0, $E,  0,  0,  8,  8,  6,  8,  6,  6,  6,  2,  2,  2,  2,  2,  2, $A,  4,  4
		dc.b   2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  4,  2,  4,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8
		dc.b   8,  8,  8,  8,  6,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  2,  2,  4,  6,  6,  8,  8,  8,  8,  0,  0,  0
		dc.b   0, $E,  0,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0, $E,  0,  0,  0, $E,  0, $E,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0, $E,  0,  8,  8,  8,  6,  6,  6,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  6,  8,  8,  8,  8,  8,  8
		dc.b   8,  8,  8,  6,  4,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  8,  8,  4,  2,  8,  6,  8,  8,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  8,  8,  6,  6,  6,  2,  2,  4,  4,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  6,  8,  8,  8,  8,  8,  8,  8
		dc.b   8,  8,  6,  6,  2,  4,  2,  2,  2,  2,  2,  2, $A,  2,  2,  2,  4,  2,  2,  2,  2,  6,  6,  6,  8,  8,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b   0,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  8,  6,  8,  8,  6,  6,  6,  6,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2, $A,  2,  6,  6,  6,  6,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8
		dc.b   8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  6,  8,  6,  6,  8,  0,  0,  0, $E,  0,  0,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  8,  8,  8,  6,  6,  6,  6,  2,  6
		dc.b   8,  8,  2,  8,  2,  2,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  2,  2,  6,  2,  2,  4,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8
		dc.b   6,  4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  4,  2,  2,  4,  4,  6,  2,  2,  6,  8,  0, $E,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0, $E,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  8,  6,  8,  8,  6,  6,  6,  8
		dc.b   8,  8,  8,  8,  6,  6,  6,  6,  6,  8,  6,  6,  6,  6,  2,  6,  6,  6,  6,  6,  6,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2, $A,  2,  2,  2,  4,  2,  2,  8,  6,  2,  6,  8,  8,  0,  0,  0,  0,  0,  0,  0, $E
		dc.b   0,  0, $E,  0,  0,  0,  0,  0,  2,  2,  2,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  8,  8,  8,  6,  6,  8
		dc.b   6,  8,  6,  6,  8,  8,  8,  8,  6,  6,  6,  8,  8,  8,  6,  6,  6,  8,  6,  6,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  8,  2,  8,  8,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  8,  8,  8
		dc.b   8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  8,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2
		dc.b   4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  8,  8,  8,  8,  8,  0, $E,  0,  0,  0,  0,  0, $E,  0,  0
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  8,  8,  8, $E,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0, $E
		dc.b   0,  2,  2,  2,  2,  8,  6,  6,  8,  8,  6,  8,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0, $E,  0,  8
		dc.b   8,  8,  8, $E,  0,  0, $E,  0, $E,  0,  0,  0,  0, $E,  0,  0,  8,  8,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6, $A, $A,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  2,  2,  2,  2,  8,  6,  8,  8, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4
		dc.b   2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  8,  8,  8,  8,  8,  8,  8,  8,  8,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  6,  8,  8,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0, $E,  0,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6, $A, $A,  6,  6
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  8,  8,  6,  8,  8,  0,  0,  0,  0,  0,  0,  0,  0,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  6,  6,  6,  8,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b  $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  6,  6,  8,  6,  6
		dc.b   6,  6,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  8,  8,  8,  8,  6,  0,  0,  0,  0,  0,  0,  0, $E,  2,  2,  4,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  6,  6,  6,  8,  8,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6, $A, $A,  0,  8,  8,  6
		dc.b   8,  8,  6,  6,  8,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  8,  8,  8, $E,  0,  0,  0, $E,  0,  0,  0,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  6,  8,  8,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0, $E,  0,  0,  0,  0, $E,  0,  0,  0,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6, $A, $A,  0,  0,  0, $E,  0
		dc.b   8,  8,  8,  8,  6,  6,  6,  2,  2,  2,  2,  4,  2,  2,  2,  2,  6,  6,  8,  0,  0,  0,  0,  0,  0,  0,  0,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  8,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6, $A, $A,  0, $E,  0,  0,  0,  0
		dc.b   0,  0,  8,  8,  8,  8,  6,  6,  6,  6,  2,  2,  2,  2,  2,  8,  6,  8,  8, $E,  0,  0,  0,  0,  0,  0,  0,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  8,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b  $E,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6, $A, $A,  0,  0,  0,  0,  0,  0,  0
		dc.b   0, $E,  0,  0,  8,  8,  8,  8,  8,  8,  6,  6,  2,  2,  4,  8,  6,  8,  8,  0,  0,  0,  0,  0,  0,  0,  2,  2,  4,  2,  2,  4
		dc.b   4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  8,  0,  0, $E,  0, $E,  0,  0,  0
		dc.b   0,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6, $A, $A,  0,  0,  0,  0,  0,  0,  0,  0
		dc.b   0,  0,  0, $E,  0,  0,  8,  6,  6,  8,  6,  6,  8,  6,  6,  8,  8,  8,  0,  0,  0, $E,  0,  0,  0,  0,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2, $A,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  8,  8,  8,  0,  0, $E,  0
		dc.b   0,  0, $E,  0,  0,  0,  2,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6, $A, $A,  0,  0, $E,  0,  0,  0,  0,  0,  0
		dc.b   0,  0, $E,  0,  0,  0, $E,  0,  8,  6,  8,  6,  6,  8,  8,  8,  6,  8,  0,  0,  0,  0,  0,  0,  0, $E,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  4,  2,  2,  4,  4,  2,  4,  2,  2,  8,  8
		dc.b   8,  8,  4,  2,  2,  2,  4,  2,  4,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  6,  6,  0, $E,  0,  0,  0, $E,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  8,  6,  6,  8,  8,  6,  6,  0,  0,  0,  0,  0,  0,  0,  0,  2,  2,  2,  2,  4,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  4,  2,  4,  2,  2
		dc.b   2,  2,  2,  4,  4,  2,  4,  2,  4,  2,  4,  2,  2,  2, $A,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   4,  4,  2,  2,  4,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  2,  2,  2,  0, $E,  0,  0,  0,  0,  0, $E
		dc.b   0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  8,  8,  8,  8,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  2,  2,  2,  2,  2
		dc.b   4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  4,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  4,  2,  4,  2,  2,  2,  4,  2,  0,  0,  0,  0,  0
		dc.b   0,  0,  0,  0,  0, $E,  0,  0,  0,  0, $E,  0,  0, $E,  0,  0,  0, $E,  0,  0,  0,  0,  0, $E,  0,  2,  4,  4,  2,  2,  2,  2
		dc.b   2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2
		dc.b   2,  4,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  4,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  4,  2,  2,  2,  2,  4,  2,  4,  4,  2, $E,  0,  0
		dc.b  $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  2,  2,  2,  2,  4, $A,  2
		dc.b   4,  2,  4,  2,  2,  4,  2,  4,  2,  4,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  4,  4,  2,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2, $E,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  2,  4,  4,  2,  4,  2,  4,  2
		dc.b   4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4
		dc.b   2,  4,  2,  2,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0,  0,  0, $E,  0,  6,  2,  2,  4,  4,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2
		dc.b   4,  2, $A,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  6,  4,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2, $A,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2
		dc.b   4,  4,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  4
		dc.b   2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  6,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  6,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4
		dc.b   2,  4,  2,  4,  4,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   4,  2,  2,  2,  2,  2,  6,  6, $E,  0,  0,  0, $E,  0,  0,  0,  0,  0,  8,  8,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  4,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  6
		dc.b   8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  6,  6,  6,  0,  0,  0,  0,  0, $E,  0,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2
		dc.b   2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2, $A,  2, $A,  2,  2,  4,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  8
		dc.b   8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  6,  4,  8,  8,  6,  6,  6,  8,  6,  6,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2
		dc.b   2,  2,  4,  4,  2,  2,  2,  2,  4,  4,  2,  2,  4,  4,  2,  4,  4,  4,  4,  2,  2,  4,  2,  2,  2, $A,  4,  2,  2,  6,  8,  8
		dc.b   8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  6,  6,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  4,  4,  2,  4
		dc.b   2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2, $A,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   4,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  6,  8,  8,  8
		dc.b   8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2, $A,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  6,  8,  8,  8,  8
		dc.b   8,  8,  8,  8,  8,  6,  2,  4,  4, $A,  2,  2,  2,  2, $A,  2,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  4,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8
		dc.b   8,  8,  8,  8,  6,  2,  2,  4,  2,  4,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, $A,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8
		dc.b   8,  8,  8,  6,  2,  4,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  4,  4,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2, $A,  4,  2, $A,  4,  4,  2,  2, $A,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8
		dc.b   8,  8,  6,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  6,  8,  8,  8,  8,  8,  8,  8,  8
		dc.b   8,  6,  4,  2,  2, $A,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  4,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8
		dc.b   6,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  2,  2,  4,  2,  4,  2,  2,  2
		dc.b   4,  2,  2,  2, $A,  4,  2,  2,  2,  2,  2,  2,  4,  4,  4,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  2,  4,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2
		dc.b   2,  2,  4,  2,  2,  4, $A,  2,  2,  2,  2,  2,  4,  2,  4,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2
		dc.b   2,  4,  4,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4
		dc.b   2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2, $A,  2,  4,  4,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  4,  2,  4,  2,  2,  2,  2,  2
		dc.b   2, $A,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  4,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  4
		dc.b   2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2
		dc.b   4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  2,  4,  2
		dc.b   2,  4,  2,  2,  4,  4,  4,  4, $A,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4,  4
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  4,  4,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2
		dc.b   2,  4,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, $A,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  4,  4,  2,  2,  2,  4,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2, $A,  2,  2,  4,  2,  4,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  4,  2,  4,  4,  2
		dc.b   2,  2,  4,  2,  2, $E,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2, $E, $C, $E,  2,  2,  4,  2,  4,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  4,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  4,  2,  2,  2,  4,  2
		dc.b   2,  4,  4, $E, $C, $C, $C, $E,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  4,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4
		dc.b   2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  4,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   4,  2, $E, $C, $C, $C, $C, $C, $E,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  4,  2,  4,  4,  2,  2,  2,  2,  2,  2
		dc.b   2, $E, $C, $C, $C, $C, $C, $C, $C, $E,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2
		dc.b   4,  4,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b  $E, $C, $C, $C, $C, $C, $C, $C, $C, $C, $E,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   4,  4,  4,  2,  2,  2,  2,  4,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2, $E
		dc.b  $C, $C, $C, $C, $C, $C, $C, $C, $C, $C, $A,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2, $A,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  4,  4,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  2,  2,  2,  4,  2,  4,  2,  4,  2,  2,  2, $A
		dc.b  $C, $C, $C, $C, $C, $C, $C, $C, $C, $A, $A,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  2,  4,  2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  4,  2,  2, $A
		dc.b  $A, $C, $C, $C, $C, $C, $C, $C, $A, $A, $A,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   4,  2,  2,  4,  2,  2,  2,  4,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  4,  4,  2
		dc.b   4,  4,  4,  2,  2,  2, $A,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2, $A,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2, $A,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4, $A
		dc.b  $A, $A, $C, $C, $C, $C, $C, $A, $A, $A, $A,  2,  2,  2,  2,  2, $A,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2, $A
		dc.b  $A, $A, $A, $C, $C, $C, $A, $A, $A, $A,  2,  4,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  4,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  4,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2
		dc.b  $A, $A, $A, $A, $C, $A, $A, $A, $A,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2, $A, $A, $A, $A, $A, $A, $A,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4
		dc.b   2,  2, $A, $A, $A, $A, $A,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4, $C,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  2, $A, $A, $A,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   4,  2, $A,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  6
		dc.b   8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4, $C, $C, $C,  4,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  2, $C,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4
		dc.b   2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  6,  8
		dc.b   8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  4,  2,  4,  4,  4,  2,  2,  2,  2, $C, $C, $A, $C, $C,  4,  2,  2,  4,  2
		dc.b   4,  4,  2,  2,  2,  2,  2,  4,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   4,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  6,  8,  8
		dc.b   8,  8,  8,  8,  8,  8,  8,  6,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, $C, $C, $A, $E, $E, $C, $C,  2,  2,  2,  2
		dc.b   2,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  6,  8,  8,  8
		dc.b   8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4, $C, $C, $A, $E, $E, $E, $E, $C, $C,  4,  4,  2
		dc.b   4,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, $A,  4,  6,  8,  8,  8,  8
		dc.b   8,  8,  8,  8,  8,  6, $A,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2, $C, $C, $A, $E, $E, $E, $E, $E, $E, $C, $C,  2,  2
		dc.b   2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  4,  4,  2,  2,  4,  4,  4,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  6,  8,  8,  8,  8,  8
		dc.b   8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2, $C, $C, $A, $E, $E, $E, $E, $E, $E, $E, $E, $C, $C,  2
		dc.b   2,  4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8
		dc.b   8,  8,  8,  6,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2, $C, $C, $A, $E, $E, $E, $E, $C, $E, $E, $E, $E, $E, $C, $C
		dc.b   2,  2,  2,  2,  4,  2,  4,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8
		dc.b   8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2, $C, $C, $A, $E, $E, $E, $E, $C, $C, $C, $E, $E, $E, $E, $E, $C
		dc.b  $C,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4, $A,  4,  4,  2,  4
		dc.b   4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8
		dc.b   8,  6,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2, $C, $C, $A, $E, $E, $E, $E, $C, $C, $E, $C, $C, $E, $E, $E, $E, $E
		dc.b  $C, $C,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4, $A
		dc.b   2,  2,  2,  4,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8
		dc.b   6,  2,  2,  2,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2, $C, $C, $A, $E, $E, $E, $E, $C, $C, $E, $E, $E, $C, $C, $E, $E, $E, $E
		dc.b  $E, $C, $C,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  4,  2, $A,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, $C, $C, $A, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $C, $C, $E, $E, $E
		dc.b  $E, $E, $C, $C,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   4,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2
		dc.b   2,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2, $C, $C, $A, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $E, $E, $C, $C, $E, $E
		dc.b  $E, $E, $E, $C, $C,  2,  4,  2,  4,  2,  4,  2,  4,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  4,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, $C, $C, $A, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $E, $E, $E, $E, $C, $C, $E
		dc.b  $E, $E, $E, $E, $C, $C,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  4, $C, $C, $A, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $C, $C
		dc.b  $E, $E, $E, $E, $E, $C, $C,  4,  2,  2,  2,  2,  4,  4,  2,  4,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2, $A,  2,  2,  2,  2
		dc.b   2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  2, $C, $C, $A, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $C
		dc.b  $C, $E, $E, $E, $E, $E, $C, $C,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  4,  2,  4,  2,  2,  6,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  4,  2,  2,  2
		dc.b   2,  2,  4,  4,  2,  4,  2,  4, $C, $C, $A, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E
		dc.b  $C, $C, $E, $E, $E, $E, $E, $C, $C,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  4,  4,  4,  4,  2,  2,  4
		dc.b   2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  6,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  4,  2,  2,  4,  4,  2,  2, $C, $C, $E, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $C
		dc.b  $C, $A, $E, $E, $E, $E, $C, $C,  4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2, $A,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2, $C, $C, $E, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $C, $C
		dc.b  $A, $E, $E, $E, $E, $C, $C,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  6,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, $C, $C, $E, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $E, $E, $E, $E, $C, $C, $A
		dc.b  $E, $E, $E, $E, $C, $C,  2,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  4,  2,  2,  2,  4,  4,  2,  4,  2,  2,  4,  2, $A,  2,  2,  4,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  4,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2, $C, $C, $E, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $E, $E, $C, $C, $A, $E
		dc.b  $E, $E, $E, $C, $C,  2,  2,  4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2, $A,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2
		dc.b   4,  2,  2,  4,  2,  2,  2,  2,  4,  2, $A,  2,  2, $C, $C, $E, $E, $E, $E, $E, $C, $C, $E, $E, $E, $E, $E, $C, $C, $A, $E, $E
		dc.b  $E, $E, $C, $C,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  4,  4,  2,  4,  4,  2,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2, $C, $C, $E, $E, $E, $E, $E, $C, $C, $E, $E, $E, $C, $C, $A, $E, $E, $E
		dc.b  $E, $C, $C,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2, $C, $C, $E, $E, $E, $E, $E, $C, $C, $E, $C, $C, $A, $E, $E, $E, $E
		dc.b  $C, $C,  2,  2,  4,  2,  2,  2,  2,  2,  2, $A,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  4,  4,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  2,  4,  4,  2,  2,  2,  2,  4,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2, $A,  2,  2,  2,  2,  2,  2,  2,  2,  4, $C, $C, $E, $E, $E, $E, $E, $C, $C, $C, $A, $E, $E, $E, $E, $C
		dc.b  $C,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  8,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  4, $A,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, $C, $C, $E, $E, $E, $E, $E, $C, $A, $E, $E, $E, $E, $C, $C
		dc.b   2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2
		dc.b   4,  4,  2,  2,  2,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2
		dc.b   4,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2, $C, $C, $E, $E, $E, $E, $E, $E, $E, $E, $E, $C, $C,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4, $A,  4,  2,  2,  2,  2,  2,  4,  2,  2, $A,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4
		dc.b   2,  2,  2,  2,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2, $C, $C, $E, $E, $E, $E, $E, $E, $E, $C, $C,  2,  2
		dc.b   4,  4,  2,  2,  4,  2,  4,  4,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4
		dc.b   2,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4, $C, $C, $E, $E, $E, $E, $E, $C, $C,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   4,  2, $A,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2, $C, $C, $E, $E, $E, $C, $C,  2,  4,  2,  2
		dc.b   2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2, $A,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  4,  4,  2,  4,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  4,  2,  2,  4,  2,  2, $C, $C, $E, $C, $C,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  2
		dc.b   2,  2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  6,  6,  4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  4,  2,  4,  2,  4,  2,  4,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4, $C, $C, $C,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  6,  8,  8,  8,  8,  8,  8,  8,  8,  6,  4,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, $C,  4,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   6,  8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2, $A,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  6
		dc.b   8,  8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2
		dc.b   4,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   4,  2, $A,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  2,  4,  4,  4,  2,  4,  2,  4,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  6,  8
		dc.b   8,  8,  8,  8,  8,  8,  8,  8,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8
		dc.b   8,  8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  4,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  4,  2,  2,  2,  2,  4,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  6,  8,  8,  8
		dc.b   8,  8,  8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2
		dc.b   2,  2,  4,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  4
		dc.b   2,  2,  4,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2, $A,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  6,  8,  8,  8,  8
		dc.b   8,  8,  8,  8,  8,  6,  2,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  4,  2,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  4,  2,  4,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2, $A,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  6,  8,  8,  8,  8,  8
		dc.b   8,  8,  8,  8,  6,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2,  4,  2,  4,  2,  2,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  4,  4,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  4,  4,  2,  4,  2,  2,  2,  2
		dc.b   2,  4,  2,  4,  2,  2,  2,  2,  4,  2,  4,  4,  2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2,  2,  2,  6,  8,  8,  8,  8,  8,  8
		dc.b   8,  8,  8,  6,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  4,  4,  2,  2,  2,  4,  4,  2,  2,  2,  2,  2,  4,  2,  2,  2,  4
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2, $A,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  2,  2,  2
		dc.b   2,  2,  4,  2,  4,  2,  2,  2,  2,  4,  2, $A,  4,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  2,  2,  2,  2,  2,  2
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  2,  2,  6,  8,  8,  8,  8,  8,  8,  8
		dc.b   8,  8,  6,  2,  2,  2,  4,  2
AngleMap_GHZ:	dc.b $FF,  0,$88,$90,$A0,$B0,$B8,$C4,  0,  0,  0,  0,$D0,  0,  0,  0; 0
					; DATA XREF: ROM:00013058o
		dc.b $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$F8,$F8,$F8,$F8,$F0,$F0,$D0,$D0; 16
		dc.b $D4,$E0,$E0,$C8,$FC,$F8,$F0,$EA,$E6,$E0,$E0,$EC,$CC,$F0,$C8,$C8; 32
		dc.b $DA,$D6,$C8,$D0,$D8,$E8,  4,$F0,$D0,$C4,$7A,$6C,$6A,$F4,$54,  0; 48
		dc.b $10,$14,$16,$18,$18,$18,$1C,$1C,$20,$24,$2C,$28,$58,$58,$FF,$FF; 64
		dc.b $E0,$22,$60,$54,$20,$FF,$20,  0,$F8,$F8,$F8,$F8,$1C,$14,  8,  8; 80
		dc.b   6,  4,  2,$FF,$FC,$FC,$FC,$F8,$F4,$F0,$EC,$E8,$E0,$BC,$B4,$AC; 96
		dc.b $A0,$94,$8C,$84,$10,$FF,$FF,$FF,  4,  4,$D4,$D4,  4,  6,  8, $C; 112
		dc.b  $E, $C,$14,$10, $C, $C,  8,  6,  4,  4,$78,$6C,$60,$54,$48,$FF; 128
		dc.b $FF,$44,$70,$58,$FF,$E4,$D0,$D0,  4,$D0,$10,$24,$38,$FF,$FF,$10; 144
		dc.b $20,$30, $C,$14,$20,$2C,$34,$7C,$70,$58,$48,$84,$88,$90,$98,$9C; 160
		dc.b $A0,$B0,$B8,$BC,$28,$18,$20,$E8,$F4,$20,$18,$80,$80,$84,$88,$88; 176
		dc.b $8C,$90,$94,$94,$8C,$8C,$88,$84,$84,$80,$80,$8C,$90,$98,$A8,$A8; 192
		dc.b $B0,$B8,$C0,  8,$18,$30,$84,$88,$90,$98,$A8,$B0,$B4,$B8,$BC,$10; 208
		dc.b $20,$30,  8, $A, $C,$10,$E4,$EC,$E4,$E8,$E8,$E8,$F4,$D8,$EC,$F4; 224
		dc.b $FA,$FC,$38,$38,$38,$38,$E4,  0,  0,  0,  0,$E0,$20,$A0,$60,$FF; 240
AngleMap:	incbin	"collision/Curve and resistance mapping.bin"
		even
ColArray1_GHZ:	dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 0
					; DATA XREF: ROM:00013026o
		dc.b   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1; 16
		dc.b $FE,$FE,$FE,$FE,$FD,$FD,$FD,$FD,$FC,$FC,$FC,$FB,$FB,$FB,$FA,$FA; 32
		dc.b $F9,$F9,$F8,$F8,$F7,$F7,$F6,$F6,$F5,$F5,$F4,$F4,$F3,$F2,$F2,$F1; 48
		dc.b   0,$FF,$FF,$FE,$FD,$FC,$FB,$FA,$F9,$F8,$F7,$F6,$F5,$F4,$F3,$F1; 64
		dc.b   0,$FF,$FD,$FC,$FA,$F8,$F6,$F4,$F2,$10,$10,$10,$10,$10,$10,$10; 80
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FE,$FB,$F8,$F4,$10,$10; 96
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  5,  9; 112
		dc.b   8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8; 128
		dc.b   9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9; 144
		dc.b  $A, $A, $A, $A, $A, $A, $A, $A, $A, $A, $A, $A, $A, $A, $A, $A; 160
		dc.b  $B, $B, $B, $B, $B, $B, $B, $B, $B, $B, $B, $B, $B, $B, $B, $B; 176
		dc.b   0,  0,  0,  0,  0,  0,  0,  1,  3,  6,  8, $B, $E,$10,$10,$10; 192
		dc.b  $D, $D, $D, $D, $D, $D, $D, $D, $D, $D, $D, $D, $D, $D, $D, $D; 208
		dc.b  $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E; 224
		dc.b  $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F; 240
		dc.b   1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2; 256
		dc.b   3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4; 272
		dc.b   5,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  6; 288
		dc.b   7,  7,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8,  8,  8,  8; 304
		dc.b   9,  9,  9,  9,  9,  9,  9,  9, $A, $A, $A, $A, $A, $A, $A, $A; 320
		dc.b  $B, $B, $B, $B, $B, $B, $B, $B, $C, $C, $C, $C, $C, $C, $C, $C; 336
		dc.b  $D, $D, $D, $D, $D, $D, $D, $D, $E, $E, $E, $E, $E, $E, $E, $E; 352
		dc.b  $F, $F, $F, $F, $F, $F, $F, $F,$10,$10,$10,$10,$10,$10,$10,$10; 368
		dc.b   1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  4; 384
		dc.b   5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,  8; 400
		dc.b   9,  9,  9,  9, $A, $A, $A, $A, $B, $B, $B, $B, $C, $C, $C, $C; 416
		dc.b  $D, $D, $D, $D, $E, $E, $E, $E, $F, $F, $F, $F,$10,$10,$10,$10; 432
		dc.b   1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7,  8,  8; 448
		dc.b   9,  9, $A, $A, $B, $B, $C, $C, $D, $D, $E, $E, $F, $F,$10,$10; 464
		dc.b   2,  4,  6,  8, $A, $C, $E,$10,$10,$10,$10,$10,$10,$10,$10,$10; 480
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  2,  4,  6,  8, $A, $C, $E,$10; 496
		dc.b   4,  5,  7,  9, $B, $D, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10; 512
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2; 528
		dc.b   0,  0,  0,  1,  3,  4,  5,  6,  8,  9, $A, $C, $D, $F,$10,$10; 544
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  8, $C,$10; 560
		dc.b   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2; 576
		dc.b   2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  5,  5,  5,  6,  6,  6; 592
		dc.b   7,  7,  7,  8,  8,  8,  9,  9, $A, $A, $B, $B, $C, $C, $D, $D; 608
		dc.b  $E, $F, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 624
		dc.b   0,  0,  0,  0,  0,  1,  2,  2,  3,  4,  5,  5,  6,  7,  8,  9; 640
		dc.b  $A, $B, $B, $C, $D, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 656
		dc.b   0,  0,  1,  1,  2,  3,  4,  5,  6,  7,  8,  9, $A, $B, $C, $D; 672
		dc.b   4,  5,  5,  6,  6,  7,  8,  8,  9, $A, $A, $B, $C, $D, $D, $E; 688
		dc.b   0,  0,  0,  0,  0,  0,  2,  5,  7, $A, $D,$10,$10,$10,$10,$10; 704
		dc.b  $C, $D, $D, $D, $E, $E, $F, $F,$10,$10,$10,$10,$10,$10,$10,$10; 720
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  6, $C,$10,$10; 736
		dc.b   0,  0,  0,  0,  0,  0,  0,  2,  5,  9, $D,$10,$10,$10,$10,$10; 752
		dc.b   0,  0,  0,  0,  0,  0,  0,  1,  2,  3,  4,  6,  7,  8, $A, $B; 768
		dc.b  $D, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 784
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  6, $A, $F,$10,$10; 800
		dc.b   7,  8, $A, $C, $E,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 816
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  3,  5; 832
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  3,  3; 848
		dc.b   1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 864
		dc.b  $B, $B, $C, $C, $D, $D, $E, $E, $F,$10,$10,$10,$10,$10,$10,$10; 880
		dc.b   0,  0,  0,  2,  4,  6,  8, $A, $D,$10,$10,$10,$10,$10,$10,$10; 896
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,$10; 912
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$F1,$F1,$F1,$F1,$F1,$F1,$F2,$F2; 928
		dc.b $F2,$F2,$F3,$F3,$F3,$F4,$F4,$F4,$F5,$F5,$F6,$F6,$F7,$F7,$F8,$F8; 944
		dc.b $F9,$F9,$FA,$FB,$FB,$FC,$FD,$FD,$FE,$FF,  0,  0,  0,  0,  0,  0; 960
		dc.b   5,  5,  5,  6,  6,  6,  7,  7,  7,  8,  8,  9,  9,  9, $A, $A; 976
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$F2,$F4,$F6,$F8,$FB,$FE,  0,  0; 992
		dc.b   1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1008
		dc.b  $C, $B, $B, $B, $A, $A,  9,  9,  8,  8,  8,  7,  7,  6,  6,  6; 1024
		dc.b   5,  4,  4,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0; 1040
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $F, $F, $E, $E, $D; 1056
		dc.b  $D, $C, $B, $B, $A, $A,  9,  8,  8,  7,  7,  6,  5,  5,  4,  3; 1072
		dc.b   3,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1088
		dc.b $10,$10,$10,$10,$10, $F, $F, $E, $D, $D, $C, $B, $A, $A,  9,  8; 1104
		dc.b   7,  7,  6,  5,  4,  3,  3,  2,  1,  0,  0,  0,  0,  0,  0,  0; 1120
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $F, $E, $D, $D, $C, $B; 1136
		dc.b  $A,  9,  8,  7,  6,  5,  4,  3,  2,  1,  0,  0,  0,  0,  0,  0; 1152
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $F, $D, $C, $B, $A,  8; 1168
		dc.b $10, $E, $C, $A,  8,  6,  5,  3,  1,  0,  0,  0,  0,  0,  0,  0; 1184
		dc.b   7,  6,  4,  3,  2,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1200
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$F1,$F2; 1216
		dc.b $F3,$F5,$F6,$F7,$F8,$F9,$FA,$FB,$FD,$FE,$FF,  0,  0,  0,  0,  0; 1232
		dc.b $10,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1248
		dc.b   0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 1264
		dc.b   1,  2,  3,  4,  5,  6,  7,  8,  9, $A, $B, $C, $D, $E, $F,$10; 1280
		dc.b $10,$10,$10,$10,$10,$10,$10, $F, $E, $D, $C, $B,  9,  8,  7,  6; 1296
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$F1,$F2,$F3,$F4,$F5; 1312
		dc.b $F6,$F7,$F8,$FA,$FC,$FD,$FE,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1328
		dc.b   5,  4,  3,  2,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1344
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  6, $A, $E, $E, $F, $F, $F, $F; 1360
		dc.b $10,$10,$10,$10,$10,$10, $F, $E, $D, $C, $B, $A,  9,  8,  7,  6; 1376
		dc.b  $F, $F, $F, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 1392
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2; 1408
		dc.b   3,  3,  3,  3,  4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,  6; 1424
		dc.b   7,  7,  7,  7,  8,  8,  8,  8,  9,  9,  9,  9, $A, $A, $A, $A; 1440
		dc.b  $B, $B, $B, $B, $C, $C, $C, $C, $D, $D, $D, $D, $E, $E, $E, $E; 1456
		dc.b   5,  4,  3,  3,  2,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1472
		dc.b  $D, $C, $B, $B, $A,  9,  9,  8,  8,  7,  6,  6,  5,  5,  4,  4; 1488
		dc.b  $E, $E, $E, $D, $D, $D, $C, $C, $C, $C, $B, $B, $B, $A, $A, $A; 1504
		dc.b  $A,  9,  9,  9,  9,  9,  8,  8,  8,  8,  7,  7,  7,  7,  7,  6; 1520
		dc.b   6,  6,  6,  6,  6,  5,  5,  5,  5,  5,  5,  4,  4,  4,  4,  4; 1536
		dc.b   4,  4,  4,  4,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  2; 1552
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1; 1568
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10; 1584
		dc.b   0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1; 1600
		dc.b   2,  2,  2,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3; 1616
		dc.b   4,  4,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  5,  6,  6,  6; 1632
		dc.b   6,  6,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8,  9,  9,  9,  9; 1648
		dc.b  $A, $A, $A, $A, $B, $B, $B, $B, $C, $C, $C, $D, $D, $D, $E, $E; 1664
		dc.b  $E, $F, $F, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 1680
		dc.b   0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5; 1696
		dc.b   5,  6,  6,  7,  8,  8,  9, $A, $A, $B, $C, $D, $D, $E, $F,$10; 1712
		dc.b   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, $A, $B, $D, $E, $F,$10; 1728
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$F9,$10; 1744
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,$FE,$FB,$F8,$F4,$10,$10,$10; 1760
		dc.b $FE,$FD,$FB,$FA,$F8,$F6,$F4,$F2,$10,$10,$10,$10,$10,$10,$10,$10; 1776
		dc.b $FF,$FE,$FD,$FC,$FC,$FB,$FA,$F9,$F8,$F7,$F6,$F5,$F3,$F2,$F1,$10; 1792
		dc.b $F8,$F8,$F7,$F7,$F6,$F6,$F5,$F5,$F4,$F4,$F3,$F2,$F2,$F1,$10,$10; 1808
		dc.b $FD,$FD,$FD,$FD,$FC,$FC,$FC,$FC,$FB,$FB,$FB,$FA,$FA,$FA,$F9,$F9; 1824
		dc.b $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FE,$FE,$FE,$FE,$FE,$FE,$FE; 1840
		dc.b   4,  3,  3,  3,  2,  2,  2,  1,  1,  1,  0,  0,  0,  0,  0,  0; 1856
		dc.b $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC; 1872
		dc.b $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FB,$FA,$F9,$10,$10,$10,$10; 1888
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10; 1904
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $F, $F; 1920
		dc.b  $F, $F, $F, $F, $F, $F, $E, $E, $E, $E, $E, $E, $E, $E, $E, $D; 1936
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  3,  5,  6,  8; 1952
		dc.b   1,  3,  4,  6,  7,  9, $A, $C, $D, $F,$10,$10,$10,$10,$10,$10; 1968
		dc.b $10,$10, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $E, $E; 1984
		dc.b  $E, $E, $E, $E, $E, $E, $E, $D, $D, $D, $D, $D, $D, $D, $D, $C; 2000
		dc.b  $C, $C, $C, $C, $C, $B, $B, $B, $B, $B, $B, $B, $A, $A, $A, $A; 2016
		dc.b   9,  9,  9,  9,  9,  8,  8,  8,  8,  8,  7,  7,  7,  7,  6,  6; 2032
		dc.b   6,  6,  5,  5,  5,  4,  4,  4,  4,  3,  3,  3,  2,  2,  2,  1; 2048
		dc.b $10,$10,$10,$10,$10, $F, $F, $E, $E, $E, $D, $D, $C, $C, $B, $B; 2064
		dc.b  $A, $A,  9,  8,  8,  7,  7,  6,  5,  4,  4,  3,  2,  2,  1,  0; 2080
		dc.b $10, $F, $E, $E, $D, $C, $C, $B, $A, $A,  9,  9,  8,  8,  7,  7; 2096
		dc.b   6,  6,  5,  5,  4,  4,  3,  3,  3,  2,  2,  1,  1,  1,  0,  0; 2112
		dc.b $10, $F, $F, $F, $E, $E, $E, $D, $D, $D, $D, $C, $C, $C, $B, $B; 2128
		dc.b  $B, $B, $A, $A, $A, $A,  9,  9,  9,  9,  9,  8,  8,  8,  8,  8; 2144
		dc.b   7,  7,  7,  7,  6,  6,  6,  6,  6,  6,  6,  5,  5,  5,  5,  5; 2160
		dc.b   5,  4,  4,  4,  4,  4,  4,  4,  4,  3,  3,  3,  3,  3,  3,  3; 2176
		dc.b   3,  3,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1; 2192
		dc.b $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F9,$F9,$F9,$F9,$FA,$FA,$FA,$FB,$FB; 2208
		dc.b $FB,$FC,$FC,$FD,$FD,$FE,$FF,$FF,  0,  0,  0,  0,  0,  0,  0,  0; 2224
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$F1,$F2,$F3,$F4,$F5,$F6,$F7; 2240
		dc.b $F8,$FA,$FB,$FD,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2256
		dc.b $10,$10,$10,$10,$10,$F2,$F5,$F9,  0,  0,  0,  0,  0,  0,  0,  0; 2272
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,  0,  0,  0,  0,  0; 2288
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$F8,$FC,$FE,$FF,$FF; 2304
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$F2,$F4,$F9,  0,  0,  0,  0,  0; 2320
		dc.b $10,$10,$10,$F1,$F1,$F1,$F1,$F2,$F2,$F3,$F3,$F4,$F4,$F5,$F6,$F6; 2336
		dc.b $F7,$F8,$F9,$FA,$FC,$FD,$FE,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2352
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F; 2368
		dc.b  $C, $D, $E, $F, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 2384
		dc.b   0,  2,  4,  6,  8, $A, $C, $E,$10,$10,$10,$10,$10,$10,$10,$10; 2400
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  4,  6,  8, $A, $C, $E; 2416
		dc.b  $D, $D, $D, $D, $D, $D, $D, $C, $C, $C, $C, $C, $C, $B, $B, $B; 2432
		dc.b   0,  0,  0,  0,  0,  0,  0,  1,  2,  3,  5,  6,  8, $A, $C, $E; 2448
		dc.b  $F, $F, $F, $E, $E, $E, $E, $D, $D, $C, $C, $B, $B, $A,  9,  9; 2464
		dc.b   8,  7,  6,  5,  3,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2480
		dc.b $10,$10,$10,$10,$10,$10,$10, $E, $C,  8,  2,  0,  0,  0,  0,  0; 2496
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,  3,  1,  0,  0,  0; 2512
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,  0,  0,  0,  0,  0,  0,  0,  0; 2528
		dc.b $10,$10,$10,$10,$10,$10, $F, $F, $F, $F, $E, $E, $E, $D, $D, $C; 2544
		dc.b  $C, $B, $A, $A,  9,  8,  7,  6,  5,  4,  2,  1,  0,  0,  0,  0; 2560
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $F, $D, $A,  6; 2576
		dc.b $10,$10,$10,$10,$10,$10,$10, $F, $F, $F, $F, $F, $E, $E, $E, $E; 2592
		dc.b  $D, $D, $C, $C, $C, $B, $B, $A,  9,  9,  8,  8,  7,  6,  5,  4; 2608
		dc.b   4,  3,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2624
		dc.b $10,$10,$10,$10, $F, $E, $D, $C, $A,  8,  7,  5,  2,  0,  0,  0; 2640
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $C,  7; 2656
		dc.b $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F9,$F9,$F9,$F9,$F9; 2672
		dc.b $F9,$F9,$F9,$FA,$FA,$FA,$FB,$FB,$FB,$FC,$FC,$FD,$FD,$FE,$FF,$FF; 2688
		dc.b $10,$F1,$F2,$F3,$F4,$F5,$F6,$F7,$F8,$FA,$FB,$FD,$FF,  0,  0,  0; 2704
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$F2,$F5,$F9; 2720
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 2736
		dc.b $FF,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FD,$FD,$FD,$FD,$FC,$FC,$FC,$FC; 2752
		dc.b $FB,$FB,$FB,$FA,$FA,$FA,$F9,$F9,$F8,$F8,$F7,$F7,$F6,$F6,$F5,$F5; 2768
		dc.b $F4,$F4,$F3,$F2,$F2,$F1,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 2784
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$FF,$FE,$FD,$FC,$FC,$FB,$FA,$F9; 2800
		dc.b $F8,$F7,$F6,$F5,$F3,$F2,$F1,$10,$10,$10,$10,$10,$10,$10,$10,$10; 2816
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$FE,$FD,$FB,$FA,$F8,$F6,$F4,$F2; 2832
		dc.b   0,$FE,$FB,$F8,$F4,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 2848
		dc.b   0,  0,  0,  0,  0,  0,$F9,$10,$10,$10,$10,$10,$10,$10,$10,$10; 2864
		dc.b  $C, $A,  9,  8,  6,  4,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2880
		dc.b   8,  8,  7,  7,  6,  6,  5,  4,  3,  3,  2,  1,  0,  0,  0,  0; 2896
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $F, $E, $D; 2912
		dc.b  $D, $D, $E, $E, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 2928
		dc.b   9,  9, $A, $A, $B, $B, $C, $C, $D, $D, $E, $E, $F, $F, $F, $F; 2944
		dc.b  $F, $F, $F, $F, $F, $E, $E, $D, $D, $C, $B, $A,  9,  7,  5,  0; 2960
		dc.b $10,$10, $F, $F, $E, $E, $D, $D, $D, $C, $B, $A,  9,  7,  5,  0; 2976
		dc.b $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 2992
		dc.b $FF,$FF,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FD,$FD; 3008
		dc.b $FD,$FD,$FD,$FD,$FD,$FD,$FD,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FB; 3024
		dc.b $FB,$FB,$FB,$FB,$FB,$FA,$FA,$FA,$FA,$FA,$FA,$FA,$F9,$F9,$F9,$F9; 3040
		dc.b $F8,$F8,$F8,$F8,$F8,$F7,$F7,$F7,$F7,$F7,$F6,$F6,$F6,$F6,$F5,$F5; 3056
		dc.b $F5,$F5,$F4,$F4,$F4,$F3,$F3,$F3,$F3,$F2,$F2,$F2,$F1,$F1,$F1,$10; 3072
		dc.b   0,  0,$FF,$FF,$FF,$FE,$FE,$FD,$FD,$FD,$FC,$FC,$FB,$FB,$FA,$FA; 3088
		dc.b $F9,$F9,$F8,$F8,$F7,$F7,$F6,$F6,$F5,$F4,$F4,$F3,$F2,$F2,$F1,$10; 3104
		dc.b   0,$FF,$FE,$FE,$FD,$FC,$FC,$FB,$FA,$F9,$F9,$F8,$F8,$F7,$F6,$F6; 3120
		dc.b $F5,$F5,$F4,$F4,$F3,$F3,$F2,$F2,$F2,$F1,$F1,$10,$10,$10,$10,$10; 3136
		dc.b $FF,$FE,$FE,$FE,$FD,$FD,$FD,$FC,$FC,$FC,$FC,$FB,$FB,$FB,$FA,$FA; 3152
		dc.b $FA,$FA,$F9,$F9,$F9,$F9,$F8,$F8,$F8,$F8,$F8,$F7,$F7,$F7,$F7,$F7; 3168
		dc.b $F6,$F6,$F6,$F6,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F4,$F4,$F4,$F4,$F4; 3184
		dc.b $F4,$F3,$F3,$F3,$F3,$F3,$F3,$F3,$F3,$F2,$F2,$F2,$F2,$F2,$F2,$F2; 3200
		dc.b $F2,$F2,$F1,$F1,$F1,$F1,$F1,$F1,$F1,$F1,$F1,$F1,$F1,$F1,$10,$10; 3216
		dc.b $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F7,$F7,$F7,$F7,$F7,$F7,$F7,$F7; 3232
		dc.b $F5,$F5,$F5,$F5,$F4,$F4,$F4,$F4,$F3,$F3,$F3,$F2,$F2,$F2,$F1,$F1; 3248
		dc.b   0,  0,$FF,$FF,$FE,$FE,$FD,$FD,$FC,$FC,$FB,$FA,$FA,$F9,$F8,$F8; 3264
		dc.b $F7,$F6,$F5,$F4,$F4,$F3,$F2,$F1,$10,$10,$10,$10,$10,$10,$10,$10; 3280
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FE,$FD,$FB,$FA,$F9,$F8; 3296
		dc.b $F6,$F5,$F3,$F2,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 3312
		dc.b   0,  0,  0,  0,  0,$FE,$FC,$FA,$F8,$F6,$F3,$10,$10,$10,$10,$10; 3328
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FC,$F8,$F1,$10; 3344
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$F8; 3360
		dc.b $10,$10,$10,$10,$10,$10,$10, $F, $F, $F, $F, $E, $E, $E, $D, $D; 3376
		dc.b  $D, $C, $C, $B, $B, $A,  9,  9,  8,  7,  6,  5,  4,  3,  2,  1; 3392
		dc.b $10, $E, $D, $B,  9,  6,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3408
		dc.b $F7,$F6,$F6,$F6,$F6,$F6,$F6,$F6,$F5,$F5,$F5,$F5,$F4,$F4,$F4,$F4; 3424
		dc.b $F3,$F3,$F3,$F2,$F2,$F2,$F1,$F1,$10,$10,$10,$10,$10,$10,$10,$10; 3440
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,$FE,$FE,$FD,$FD; 3456
		dc.b $FC,$FC,$FB,$FA,$FA,$F9,$F8,$F8,$F7,$F6,$F5,$F4,$F4,$F3,$F2,$F1; 3472
		dc.b   0,$FF,$FE,$FD,$FB,$FA,$F9,$F8,$F6,$F5,$F3,$F2,$10,$10,$10,$10; 3488
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FE,$FC,$FA; 3504
		dc.b $F8,$F6,$F3,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 3520
		dc.b   0,  0,  0,  0,$FC,$F8,$F1,$10,$10,$10,$10,$10,$10,$10,$10,$10; 3536
		dc.b   0,  0,  0,  0,  0,  0,  0,$F8,$10,$10,$10,$10,$10,$10,$10,$10; 3552
		dc.b  $F, $F, $F, $E, $E, $E, $D, $D, $D, $C, $C, $B, $B, $A,  9,  9; 3568
		dc.b   8,  7,  6,  5,  4,  3,  2,  1,  0,  0,  0,  0,  0,  0,  0,  0; 3584
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10, $E, $D, $B,  9,  6,  3,  0; 3600
		dc.b  $B, $B, $B, $A, $A, $A, $A, $A,  9,  9,  9,  9,  9,  8,  8,  8; 3616
		dc.b   8,  8,  7,  7,  7,  7,  6,  6,  6,  6,  5,  5,  5,  5,  4,  4; 3632
		dc.b   4,  4,  3,  3,  3,  2,  2,  2,  1,  1,  1,  0,  0,  0,  0,  0; 3648
		dc.b  $F, $E, $E, $E, $D, $D, $D, $C, $C, $C, $B, $B, $A, $A,  9,  9; 3664
		dc.b   6,  7,  7,  8,  9, $A, $A, $B, $C, $D, $D, $E, $F,$10,$10,$10; 3680
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  3,  4,  4,  5; 3696
		dc.b  $A, $B, $B, $C, $D, $E, $E, $F,$10,$10,$10,$10,$10,$10,$10,$10; 3712
		dc.b   0,  0,  0,  0,  1,  2,  2,  3,  4,  5,  5,  6,  7,  8,  8,  9; 3728
		dc.b  $E, $F, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 3744
		dc.b   2,  3,  3,  4,  5,  6,  6,  7,  8,  9,  9, $A, $B, $C, $C, $D; 3760
		dc.b   7,  7,  7,  8,  8,  8,  9,  9,  9, $A, $A, $A, $B, $B, $C, $C; 3776
		dc.b   3,  4,  6,  7,  9, $A, $C, $D, $F,$10,$10,$10,$10,$10,$10,$10; 3792
		dc.b   5,  6,  7,  7,  8,  8,  9, $A, $A, $B, $C, $C, $D, $D, $E, $F; 3808
		dc.b   6,  7,  7,  7,  8,  8,  8,  9,  9,  9, $A, $A, $A, $A, $B, $B; 3824
		dc.b  $B, $C, $C, $C, $C, $C, $C, $D, $D, $D, $D, $D, $D, $E, $E, $E; 3840
		dc.b  $E, $E, $E, $E, $E, $E, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F; 3856
		dc.b  $E, $A,  6,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3872
		dc.b $10,$10,$10,$10, $E, $A,  6,  2,  0,  0,  0,  0,  0,  0,  0,  0; 3888
		dc.b $10,$10,$10,$10,$10,$10,$10,$10, $E, $A,  6,  2,  0,  0,  0,  0; 3904
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $E, $A,  6,  2; 3920
		dc.b  $B, $C, $D, $E, $F, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 3936
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3952
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3968
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3984
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4000
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4016
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4032
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4048
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4064
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4080
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4096
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10; 4112
		dc.b $10,$10, $C,  8,  5,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4128
		dc.b $10,$10,$10,$10,$10,$10,$10, $E, $C, $A,  8,  6,  4,  3,  1,  0; 4144
		dc.b  $F, $D, $C, $B, $A,  9,  8,  7,  6,  5,  4,  3,  2,  1,  1,  0; 4160
		dc.b  $F, $E, $E, $D, $C, $C, $B, $B, $A, $A,  9,  9,  8,  8,  7,  7; 4176
		dc.b   6,  6,  5,  5,  5,  4,  4,  4,  3,  3,  3,  3,  2,  2,  2,  2; 4192
		dc.b   0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3; 4208
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10; 4224
		dc.b   0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4240
		dc.b   0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4256
		dc.b   0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4272
		dc.b   3,  3,  4,  4,  4,  5,  5,  5,  6,  6,  7,  7,  7,  8,  8,  9; 4288
		dc.b   0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4304
		dc.b   0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4320
		dc.b   0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4336
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,$10; 4352
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,$10,$10,$10; 4368
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,$10,$10,$10,$10,$10; 4384
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  8,$10,$10,$10,$10,$10,$10,$10; 4400
		dc.b   0,  0,  0,  0,  0,  0,  8,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4416
		dc.b   0,  0,  0,  0,  8,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4432
		dc.b   0,  0,  8,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4448
		dc.b   8,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4464
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  8, $C,$10; 4480
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  4,  8, $C,$10,$10,$10,$10,$10; 4496
		dc.b   0,  0,  0,  0,  4,  8, $C,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4512
		dc.b   4,  8, $C,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4528
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  2,  4,  6,  8, $A, $C, $E,$10; 4544
		dc.b   2,  4,  6,  8, $A, $C, $E,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4560
		dc.b   9,  9, $A, $A, $B, $B, $C, $C, $D, $D, $E, $E, $F, $F,$10,$10; 4576
		dc.b   1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7,  8,  8; 4592
		dc.b   9, $A, $A, $B, $B, $C, $C, $D, $D, $E, $E, $F,$10,$10,$10,$10; 4608
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1; 4624
		dc.b   2,  3,  3,  4,  5,  5,  6,  7,  8,  8,  9, $A, $B, $C, $C, $D; 4640
		dc.b   1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  4; 4656
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,$10; 4672
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  6, $A, $F,$10,$10; 4688
		dc.b   0,  0,  0,  2,  4,  6,  8, $A, $D,$10,$10,$10,$10,$10,$10,$10; 4704
		dc.b  $D, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4720
		dc.b   0,  0,  0,  0,  0,  0,  0,  1,  2,  3,  4,  6,  7,  8, $A, $B; 4736
		dc.b  $A, $B, $B, $C, $D, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4752
		dc.b   0,  0,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, $A, $B, $C, $E; 4768
		dc.b   0,  0,  1,  3,  4,  5,  7,  8, $A, $B, $D, $F,$10,$10,$10,$10; 4784
		dc.b   5,  5,  5,  6,  6,  6,  7,  7,  7,  8,  8,  9,  9,  9, $A, $A; 4800
		dc.b   8, $A, $C, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4816
		dc.b   2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  5,  5; 4832
		dc.b   5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,  9,  9; 4848
		dc.b   0,  0,  0,  0,  0,  1,  2,  2,  3,  4,  5,  5,  6,  7,  8,  9; 4864
		dc.b  $E, $F, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4880
		dc.b   2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  5,  5,  5,  6,  6,  6; 4896
		dc.b  $B, $B, $C, $C, $D, $D, $E, $E, $F,$10,$10,$10,$10,$10,$10,$10; 4912
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3; 4928
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  3,  5; 4944
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FC; 4960
		dc.b   7,  8, $A, $C, $E,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 4976
		dc.b   7,  7,  7,  8,  8,  8,  9,  9, $A, $A, $B, $B, $C, $C, $D, $D; 4992
		dc.b   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2; 5008
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$F2,$F8; 5024
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$F2,$F4,$F6,$F8,$FB,$FE,  0,  0; 5040
		dc.b $F6,$F7,$F8,$FA,$FB,$FD,$FE,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5056
		dc.b   0,  0,  0,  0,  0,  0,  2,  5,  7, $A, $D,$10,$10,$10,$10,$10; 5072
		dc.b $F2,$F2,$F3,$F3,$F3,$F4,$F4,$F4,$F5,$F5,$F6,$F6,$F7,$F7,$F8,$F8; 5088
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FE; 5104
		dc.b   0,  0,  0,  0,$FF,$FC,$FA,$F8,$F5,$F3,$10,$10,$10,$10,$10,$10; 5120
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FD,$FB,$F9,$F7; 5136
		dc.b $F5,$F3,$F1,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 5152
		dc.b   0,  0,  0,$FF,$FE,$FC,$FA,$F9,$F7,$F5,$F4,$F2,$F1,$10,$10,$10; 5168
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FE,$FC; 5184
		dc.b $FB,$F9,$F8,$F6,$F5,$F4,$F2,$F1,$10,$10,$10,$10,$10,$10,$10,$10; 5200
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,$FE,$FD,$FC,$FB,$F9,$F8,$F7; 5216
		dc.b $F6,$F5,$F4,$F2,$F1,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 5232
		dc.b   0,  0,  0,  0,  0,  0,$FF,$FE,$FD,$FC,$FB,$FA,$F9,$F8,$F7,$F6; 5248
		dc.b $F6,$F5,$F5,$F4,$F3,$F2,$F1,$F1,$10,$10,$10,$10,$10,$10,$10,$10; 5264
		dc.b $FF,$FF,$FE,$FE,$FD,$FD,$FC,$FC,$FB,$FB,$FA,$F9,$F9,$F8,$F8,$F7; 5280
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FE,$FE,$FD,$FC,$FB,$FA; 5296
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$F1,$F2; 5312
		dc.b $F5,$F6,$F7,$F8,$F8,$F9,$FA,$FB,$FC,$FD,$FE,$FF,$FF,  0,  0,  0; 5328
		dc.b $FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE; 5344
		dc.b  $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E; 5360
		dc.b   1,  2,  3,  4,  5,  6,  7,  8,  9, $A, $B, $C, $D, $E, $F,$10; 5376
		dc.b $F9,$F8,$F7,$F6,$F5,$F4,$F4,$F3,$F2,$F1,$10,$10,$10,$10,$10,$10; 5392
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$F1,$F2,$F3,$F4,$F5; 5408
		dc.b $F9,$F9,$FA,$FB,$FC,$FC,$FD,$FD,$FE,$FF,  0,  0,  0,  0,  0,  0; 5424
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FE,$FD,$FC,$FB; 5440
		dc.b   0,  4,  8,  8,  8,  8,  8,  8,  7,  7,  7,  7,  6,  6,  6,  6; 5456
		dc.b $FA,$F9,$F8,$F7,$F6,$F5,$F4,$F3,$F2,$F1,$10,$10,$10,$10,$10,$10; 5472
		dc.b  $C,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 5488
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  8; 5504
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  8, $C,$10,$10,$10; 5520
		dc.b   0,  0,  0,  0,  0,  0,  4,  8, $C,$10,$10,$10,$10,$10,$10,$10; 5536
		dc.b   0,  0,  4,  8, $C,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 5552
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FE,$FC,$FB,$FA; 5568
		dc.b   0,  0,  0,$FF,$FE,$FC,$FB,$F9,$F7,$F6,$F4,$F2,$10,$10,$10,$10; 5584
		dc.b   0,  0,$FD,$FA,$F6,$F3,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 5600
		dc.b   0,  0,  0,  0,  0,  0,$FF,$FA,$F6,$F1,$10,$10,$10,$10,$10,$10; 5616
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FB,$F5,$10,$10,$10,$10; 5632
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FC,$F1,$10,$10; 5648
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$F3,$10; 5664
		dc.b   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1; 5680
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $A; 5696
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,$10,$10; 5712
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  9,$10,$10,$10,$10; 5728
		dc.b   0,  0,  0,  0,  0,  0,  0,  4,  9, $E,$10,$10,$10,$10,$10,$10; 5744
		dc.b   0,  0,  2,  5,  8, $C,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 5760
		dc.b  $C, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 5776
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  3,  5,  7,  9; 5792
		dc.b   1,  2,  3,  5,  6,  7,  9, $A, $C, $D, $F,$10,$10,$10,$10,$10; 5808
		dc.b   1,  2,  3,  4,  4,  5,  6,  7,  8,  9, $A, $B, $C, $D, $E, $F; 5824
		dc.b   2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1; 5840
		dc.b   7,  7,  6,  6,  6,  5,  5,  5,  4,  4,  4,  4,  3,  3,  3,  3; 5856
		dc.b $10,$10, $F, $E, $E, $D, $C, $C, $B, $B, $A, $A,  9,  9,  8,  8; 5872
		dc.b $10, $F, $E, $D, $B, $A,  9,  8,  7,  6,  5,  4,  4,  3,  2,  1; 5888
		dc.b $10,$10,$10,$10,$10,$10,$10,$10, $E, $C, $A,  8,  6,  5,  3,  2; 5904
		dc.b $10,$10,$10, $C,  8,  5,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5920
		dc.b $10,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5936
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FC,$F9,$F6; 5952
		dc.b $10,$10,$10,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5968
		dc.b $10,$10,$10,$10,  7,  6,  5,  4,  4,  4,  4,  4,  4,  4,  4,  4; 5984
		dc.b   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4; 6000
		dc.b $F2,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6016
		dc.b   0,$FA,$F1,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6032
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  3,  3,  4,  5,  5; 6048
		dc.b   6,  7,  7,  8,  9,  9, $A, $B, $B, $C, $D, $D, $E, $F, $F,$10; 6064
		dc.b $FE,$F2,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6080
		dc.b   0,  0,$F9,$F1,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6096
		dc.b   0,  0,  0,  0,$FB,$F4,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6112
		dc.b   0,  0,  0,  0,  0,  0,  0,$FB,$F6,$F2,$10,$10,$10,$10,$10,$10; 6128
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FE,$FB,$F7,$F4,$F1,$10; 6144
		dc.b $FB,$F9,$F6,$F4,$F2,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6160
		dc.b   0,  0,  0,  0,  0,  0,$FE,$FD,$FB,$F9,$F8,$F7,$F5,$F4,$F2,$F1; 6176
		dc.b $FF,$FE,$FC,$FB,$F9,$F8,$F6,$F4,$F2,$10,$10,$10,$10,$10,$10,$10; 6192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FE,$FC,$FA,$F7,$F5,$F2; 6208
		dc.b $FF,$FC,$F9,$F5,$F2,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6224
		dc.b   0,  0,  0,  0,  0,$FE,$FA,$F5,$10,$10,$10,$10,$10,$10,$10,$10; 6240
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,$FC,$F5,$10,$10,$10,$10,$10; 6256
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$F7,$10,$10,$10; 6272
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FE,$F2,$10; 6288
		dc.b $10,$10,$10,$10,$10,$F2,$F5,$F9,  0,  0,  0,  0,  0,  0,  0,  0; 6304
		dc.b $F8,$FA,$FB,$FD,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6320
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$F1,$F2,$F3,$F4,$F5,$F6,$F7; 6336
		dc.b $FB,$FC,$FC,$FD,$FD,$FE,$FF,$FF,  0,  0,  0,  0,  0,  0,  0,  0; 6352
		dc.b $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F9,$F9,$F9,$F9,$FA,$FA,$FA,$FB,$FB; 6368
		dc.b $F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5; 6384
		dc.b $10,$F2,$F3,$F3,$F4,$F4,$F4,$F4,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5; 6400
		dc.b $F5,$F5,$F5,$F5,$F5,$F5,$F5,$F6,$F6,$F6,$F6,$F6,$F7,$F7,$F8,$F8; 6416
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$F2,$F3,$F5,$F7,$F9,$FD; 6432
		dc.b $F9,$F9,$FA,$FB,$FC,$FC,$FD,$FE,$FF,  0,  0,  0,  0,  0,  0,  0; 6448
		dc.b   0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1; 6464
		dc.b  $B, $D, $E, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6480
		dc.b   8,  8,  9,  9, $A, $A, $B, $B, $C, $C, $D, $D, $E, $E, $F, $F; 6496
		dc.b   0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7; 6512
		dc.b   0,  0,  0,$F9,$F3,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6528
		dc.b   0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  6,  6,  7,  8,  9; 6544
		dc.b   0,$FD,$F9,$F7,$F5,$F3,$F2,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6560
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$FF,$FE,$FD,$FC,$FC,$FB,$FA,$FA; 6576
		dc.b $F9,$F9,$F8,$F8,$F7,$F7,$F7,$F7,$F6,$F6,$F6,$F6,$F6,$F6,$F5,$F5; 6592
		dc.b $F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F5,$F4,$F4,$F3; 6608
		dc.b $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8; 6624
		dc.b $FA,$F6,$F3,$F1,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6640
		dc.b   0,  0,  0,  0,$FF,$FE,$FC,$FB,$FA,$F9,$F8,$F7,$F6,$F6,$F5,$F4; 6656
		dc.b $F4,$F3,$F3,$F2,$F2,$F2,$F1,$F1,$F1,$F1,$10,$10,$10,$10,$10,$10; 6672
		dc.b $F9,$F4,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 6688
		dc.b   0,  0,  0,$FE,$FB,$F9,$F8,$F6,$F4,$F3,$F2,$F1,$10,$10,$10,$10; 6704
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FE,$FD,$FD; 6720
		dc.b $FC,$FB,$FA,$F9,$F8,$F8,$F7,$F7,$F6,$F5,$F5,$F4,$F4,$F4,$F3,$F3; 6736
		dc.b $F2,$F2,$F2,$F2,$F1,$F1,$F1,$F1,$F1,$10,$10,$10,$10,$10,$10,$10; 6752
		dc.b $10,$10,$10,$10,$10,$10,$10,$F5,  0,  0,  0,  0,  0,  0,  0,  0; 6768
		dc.b $10,$F2,$F3,$F5,$F7,$FA,$FD,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6784
		dc.b $F3,$F4,$F4,$F5,$F5,$F6,$F7,$F7,$F8,$F9,$FA,$FB,$FC,$FD,$FE,$FF; 6800
		dc.b $10,$10,$10,$10,$10,$10,$10,$F1,$F1,$F1,$F1,$F2,$F2,$F2,$F3,$F3; 6816
		dc.b   8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6832
		dc.b $10, $F,  8,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6848
		dc.b $10,$10,$10,$10,$10, $D, $A,  8,  6,  4,  2,  0,  0,  0,  0,  0; 6864
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $E, $D, $B, $A; 6880
		dc.b   8,  7,  6,  5,  3,  2,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6896
		dc.b $10,$10,$10,$10,$10,$10,$10,$10, $F, $E, $D, $C, $C, $B, $A,  9; 6912
		dc.b   8,  8,  7,  6,  6,  5,  4,  4,  3,  3,  2,  2,  1,  1,  0,  0; 6928
		dc.b  $F, $F, $E, $E, $E, $D, $D, $D, $C, $C, $C, $C, $B, $B, $B, $B; 6944
		dc.b  $A, $A, $A, $A, $A, $A, $A,  9,  9,  9,  9,  9,  9,  9,  9,  9; 6960
		dc.b   0,  0,  0,  0,$FF,$FF,$FE,$FD,$FC,$FC,$FB,$FB,$FA,$FA,$F9,$F9; 6976
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$FE,$FC,$FA,$F9,$F8,$F6,$F5,$F4; 6992
		dc.b $F3,$F2,$F1,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 7008
		dc.b  $B, $C, $E,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 7024
		dc.b   0,  4,  6,  8, $A, $C, $E,$10,$10,$10,$10,$10,$10,$10,$10,$10; 7040
		dc.b   0,$FB,$F9,$F7,$F6,$F5,$F4,$F3,$F3,$F2,$F2,$F1,$F1,$F1,$F1,$F1; 7056
		dc.b $FE,$FC,$FA,$F7,$F6,$F5,$F4,$F3,$F3,$F2,$F2,$F1,$F1,$F1,$F1,$F1; 7072
		dc.b $10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 7088
		dc.b $10, $E,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 7104
		dc.b $10,$10,$10,  9,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 7120
		dc.b $10,$10,$10,$10,$10, $B,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0; 7136
		dc.b $10,$10,$10,$10,$10,$10,$10,$10, $B,  6,  2,  0,  0,  0,  0,  0; 7152
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $E, $B,  7,  4,  1; 7168
		dc.b  $E, $B,  9,  6,  4,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 7184
		dc.b $10,$10,$10,$10,$10,$10,$10, $E, $C, $A,  8,  7,  5,  4,  2,  1; 7200
		dc.b  $F, $E, $C, $B,  9,  8,  7,  5,  3,  2,  0,  0,  0,  0,  0,  0; 7216
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $E, $C, $A,  7,  5; 7232
		dc.b $10, $F, $C,  9,  5,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 7248
		dc.b $10,$10,$10,$10,$10,$10, $E, $A,  5,  0,  0,  0,  0,  0,  0,  0; 7264
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $C,  5,  0,  0,  0,  0; 7280
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $F,  7,  0,  0; 7296
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $E,  2; 7312
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,  8,  0,  0,  0,  0,  0,  0,  0; 7328
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $C,  8,  5,  2,  0; 7344
		dc.b  $E, $C, $A,  8,  6,  5,  3,  2,  0,  0,  0,  0,  0,  0,  0,  0; 7360
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10, $F, $E, $D, $B, $A,  9,  8; 7376
		dc.b   7,  6,  5,  4,  4,  3,  2,  1,  0,  0,  0,  0,  0,  0,  0,  0; 7392
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $F, $E, $E, $D, $C, $C; 7408
		dc.b  $B, $B, $A, $A,  9,  9,  8,  8,  7,  7,  6,  6,  6,  5,  5,  5; 7424
		dc.b   4,  4,  4,  4,  3,  3,  3,  3,  2,  2,  2,  2,  2,  2,  2,  1; 7440
		dc.b   1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0; 7456
		dc.b $F9,$F5,$F2,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 7472
		dc.b   0,  0,  0,$FF,$FD,$FB,$FA,$F8,$F7,$F6,$F5,$F4,$F3,$F2,$F1,$10; 7488
		dc.b $FF,$FF,$FE,$FD,$FD,$FC,$FC,$FB,$FB,$FB,$FA,$FA,$FA,$F9,$F9,$F9; 7504
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10, $F,  8,  4,  0,  0,  0,  0; 7520
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10, $D, $A,  8; 7536
		dc.b   6,  4,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 7552
		dc.b $10,$10,$10,$10, $E, $D, $B, $A,  8,  7,  6,  5,  3,  2,  1,  0; 7568
		dc.b  $F, $E, $D, $C, $C, $B, $A,  9,  8,  8,  7,  6,  6,  5,  4,  4; 7584
		dc.b   3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 7600
		dc.b $10,$10,$10,$10,$10,$10,$10,$10, $F, $F, $E, $E, $E, $D, $D, $D; 7616
		dc.b  $C, $C, $C, $C, $B, $B, $B, $B, $A, $A, $A, $A, $A, $A, $A,  9; 7632
		dc.b   9,  9,  9,  9,  9,  9,  9,  9,  8,  8,  8,  8,  8,  8,  8,  8; 7648
		dc.b   0,$FD,$FA,$F7,$F5,$F3,$F2,$10,$10,$10,$10,$10,$10,$10,$10,$10; 7664
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$FF,$FE,$FD,$FC,$FB,$FA,$F9,$F8; 7680
		dc.b $F7,$F7,$F6,$F5,$F5,$F4,$F4,$F3,$F3,$F3,$F2,$F2,$F2,$F1,$F1,$F1; 7696
		dc.b   0,  0,  0,  0,  0,$FD,$F8,$F3,$10,$10,$10,$10,$10,$10,$10,$10; 7712
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$FE,$FA,$F6,$F2,$10,$10,$10,$10; 7728
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FE,$FB,$F8,$F5; 7744
		dc.b   0,$FF,$FC,$F9,$F6,$F4,$F2,$10,$10,$10,$10,$10,$10,$10,$10,$10; 7760
		dc.b   3,  4,  5,  7,  8,  9, $B, $C, $D, $F,$10,$10,$10,$10,$10,$10; 7776
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  3,  4,  5,  7; 7792
		dc.b   8,  9, $B, $C, $D, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 7808
		dc.b   0,  0,  0,  0,  0,  0,  0,  1,  3,  4,  5,  7,  8,  9, $B, $C; 7824
		dc.b  $D, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 7840
		dc.b   0,  0,  0,  1,  3,  4,  5,  7,  8,  9, $B, $C, $D, $F,$10,$10; 7856
		dc.b   0,  0,  0,  0,  2,  4,  7, $A, $D,$10,$10,$10,$10,$10,$10,$10; 7872
		dc.b   7,  8,  8,  9, $A, $A, $B, $C, $C, $D, $E, $E, $F,$10,$10,$10; 7888
		dc.b   0,  1,  2,  4,  6,  7,  9, $A, $C, $E, $F,$10,$10,$10,$10,$10; 7904
		dc.b   0,  0,  0,  0,  0,  2,  6,  9, $C, $F,$10,$10,$10,$10,$10,$10; 7920
		dc.b   0,  0,  3,  9, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 7936
		dc.b   0, $A,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 7952
		dc.b   0,  0,$FF,$FF,$FF,$FF,$FE,$FE,$FE,$FE,$FD,$FD,$FD,$FD,$FC,$FC; 7968
		dc.b $FC,$FC,$FB,$FB,$FB,$FB,$FA,$FA,$FA,$FA,$F9,$F9,$F9,$F9,$F8,$F8; 7984
		dc.b $F8,$F8,$F7,$F7,$F7,$F7,$F6,$F6,$F6,$F6,$F5,$F5,$F5,$F5,$F4,$F4; 8000
		dc.b $F4,$F4,$F3,$F3,$F3,$F3,$F2,$F2,$F2,$F2,$F1,$F1,$F1,$F1,$10,$10; 8016
		dc.b  $A, $C, $D, $E, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 8032
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 8048
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 8064
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 8080
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 8096
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 8112
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 8128
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 8144
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 8160
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10; 8176
ColArray1:	incbin	"collision/Collision array 1.bin"
		even
ColArray2:	incbin	"collision/Collision array 2.bin"
		even
ColP_GHZ:	dc.b   0,$FF,$1A,  0,  0,  0,$1A,  0,$1D,$1C,$FF,$FF,  9,$14, $B,  0,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0
					; DATA XREF: ROM:ColP_Indexo
		dc.b $FF,$FF,$FF,$FF,$FF,$FF,$FF,  0,  0,$10,$11,$12,$13,$14,$15,$16,$18,$19,$1A,$1B,$FF,$FF,$FF,$FF,$FF,$FF,  0,$1C,$1D,$FF,$FF,$FF; 32
		dc.b $FF,  0,$13,  9,$FF, $A,$FF,$FF,$FF,$14,$15,$16,$16,$18,$19,$1A,$1B,$FF,$1C,$1D,$6F, $A,$1A,$75,$76,$77,  0,  0,$FF,  0,$FF,$FF; 64
		dc.b   0,  0,  0,  0,  0,  0,$14,  0,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,  0,  0,$FF,  0,  0,$FF,$FF; 96
		dc.b $FF,$FF,$FF,  0,$FF,  0,$1A,$1A,  0,$1A,$14,  0,$FF,$FF,$FF,$FF,  0,$24,$25,$26,$27,$FF,$FF,  0,  0,$28,$29,$FF,$FF,$3A,$3B,$3C; 128
		dc.b $30,$31,$FF,$FF,$52,$53,$38,$FF,$3E,$32,$FF,$4E,$4F,$FF,$FF,$52,$53,$4C,$4D,  0,  0,$14,$FF,  0,$FF,$15,  0,  0,  0,$FF,$FF,  0; 160
		dc.b $14,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$1C,  0,  0,  0,  0,  0,  0, $E,$1D,$1C,  0,$18,  0,  0,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 256
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 288
		dc.b $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,  0,$6F,$6E,$6D,$FF,$70,$6E,$FF,$FF,$6D,$6A,$6B,$6C,$69,$FF,  0,  0,  0,  0,  0,  0,  0; 320
		dc.b $68,  0,  0,  0,  0,  0,  0,  0,  0,$66,$67,  0,  0,  0,  0,  0,  0,  0,$64,$65,$66,$67,$68,$69,$6A,$6B,$6C,$6D,$6E,$6F,$70,$71; 352
		dc.b $72,$73,$64,$65,$1A,  0,  0,$1A,  0,$FB,$FB,$FD,$FC,$FC,  0,  0,$15,$FF,$FF,  9, $A,  0,  0,$FF,$FF,  0; 384
ColS_GHZ:	dc.b   0,$FF,$1A,  0,  0,  0,$1A,  0,$1D,$1C,$FF,$FF,  9,$14, $B,  0,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0
					; DATA XREF: ROM:ColS_Indexo
		dc.b $FF,$FF,$FF,$FF,$FF,$FF,$FF,  0,  0,$10,$11,$12,$13,$14,$15,$16,$18,$19,$1A,$1B,$FF,$FF,$FF,$FF,$FF,$FF,  0,$1C,$1D,$FF,$FF,$FF; 32
		dc.b $FF,  0,$13,  9,$FF, $A,$FF,$FF,$FF,$14,$15,$16,$16,$18,$19,$1A,$1B,$FF,$1C,$1D,$6F, $A,$1A,$75,$76,$77,  0,  0,$FF,  0,$FF,$FF; 64
		dc.b   0,  0,  0,  0,  0,  0,$14,  0,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,  0,  0,$FF,  0,  0,$FF,$FF; 96
		dc.b $FF,$FF,$FF,  0,$FF,  0,$1A,$1A,  0,$1A,$14,  0,$FF,$FF,$FF,$FF,  0,$24,$25,$26,$27,$FF,$FF,  0,  0,$28,$29,$FF,$FF,$3A,$3B,$3C; 128
		dc.b $30,$31,$FF,$FF,$52,$53,$38,$FF,$3E,$32,$FF,$4E,$4F,$FF,$FF,$52,$53,$4C,$4D,  0,  0,$14,$FF,  0,$FF,$15,  0,  0,  0,$FF,$FF,  0; 160
		dc.b $14,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$1C,  0,  0,  0,  0,  0,  0, $E,$1D,$1C,  0,$18,  0,  0,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 256
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 288
		dc.b $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,  0,$6F,$6E,$6D,$FF,$70,$6E,$FF,$FF,$6D,$6A,$6B,$6C,$69,$FF,  0,  0,  0,  0,  0,  0,  0; 320
		dc.b $68,  0,  0,  0,  0,  0,  0,  0,  0,$66,$67,  0,  0,  0,  0,  0,  0,  0,$64,$FF,$69,$68,$67,$66,$6A,$6B,$6C,$6D,$6E,$6F,$70,$71; 352
		dc.b $72,$73,$64,$65,$1A,  0,  0,$1A,  0,$FB,$65,$FD,$FC,$FC,  0,  0,$15,$FF,$FF,  9, $A,  0,  0,$FF,$FF,  0; 384
ColP_EHZ:	incbin	"collision/EHZ primary 16x16 collision index.bin"
		even
ColS_EHZ:	incbin	"collision/EHZ secondary 16x16 collision index.bin"
		even
ColP_CPZ:	incbin	"collision/CPZ primary 16x16 collision index.bin"
		even
ColS_CPZ:	incbin	"collision/CPZ secondary 16x16 collision index.bin"
		even
ColP_HPZ:	incbin	"collision/HPZ primary 16x16 collision index.bin"
		even
ColS_HPZ:	incbin	"collision/HPZ secondary 16x16 collision index.bin"
		even
S1SS_1:		dc.b  $B, $F,  0,  2,  0,  0,$48,  8,$20,$40,$78,  2,  0,$7D,$B0,$11,$E0, $C,  1,$F6,$C0,$47,$80,$40,  7,$DB,  1,$1E,  1,$40,$1F,$6C,  4,$78,  6,  0,$7D,$B0,$11,$E0,$1C,  1,$F7,$39,$12,$3A,$74,$74,$A8,  1,$F7,$39, $D,$3A,$74,$74,  0,$A9,$F7,$38, $E,  0,$47,$8A; 0
					; DATA XREF: ROM:S1SS_LayoutIndexo
		dc.b $A0,$D1,$C1,$EF,$B5,$C8,$78,  0,  3,$A7,$47,$48,$F1,$22,$24,$B0,  1,$F6,$3B,$2C,  0,  0,$74,$E8,$E8,  1,$D3,$A3,$A0,  0,  0, $B,$1F,$63,$80,  2,$B4,$7A,  0,$3A,$74,$74,  0,$E9,$D0,  2,$C0,  7,$D8,$E2,$B0,$48,$58,$62,$3C,$80,$1D,$3A,  0,$30,  0,$FB,$5D,  7; 64
		dc.b   7,$90,$1A,$56,$74,$E8,  0,$C8,  3,$EA,$72,  0,$4E,$9C,$9D,$39,$3A,$9C,$8A,  0,  0,  0,$4A,  0,$FA,$9C,$80,  5,  0,  0,  0,$14,$A7,$22,$A0, $E,$80, $D,$80,$3E,$A7,$20,  1,$40,  0,  0,  5,$29,$C8,$B0,  3,$A0,  2,$80, $F,$A9,$C8,  1,$28,  0,  0,  4,$AA,$72; 128
		dc.b $3A,  0,$E8,  1,  0,  3,$EA,$72,  0,$14,  0,  0,  0,$52,$9C,$94,$80,  0,  0,$58,  0,$FA,$9D,$D6,  0,$3A,$3A,$74,$56, $C, $D,$48,$48,$80,  0,  0,  0, $A,$51,$E0,  0,$B1,$F4,$F9,$80,$2C,  0,  0,$E8,$E9,$D0,  2,$3C,$80,  3,  0,  0,  0,$40,$8F,  0,  4,$8F,$A7; 192
		dc.b $C5,$60,  0,  3,$A4,$BD,$80,$3A,  0,  0,$10,  0,  1,  8,  0,  5,$80,  0, $A,$CE,$8F,  0,  0,  0,$58,$74,$79,$38,  3,$DE,$8B,$80,$3A,$3A,  0,$58,$B4,$B5,$69,$60,  3,$A7,$49,$4A,$C9,$11,$96,  0,$3A,$74,$74,$8F,$34,  4,$2B,  0,  0,  0,$27,  0,$7B,$D9,$80,  7; 256
		dc.b $47,$40, $B,$5D,$1D,$3A,$2D,  0,$74,$E9,$2A,  8,  0,  0,  7,$47,$4E,$8E,$9D,  0,$27,$C1,$38,  3,$DF,$92,$80,$3A,$3A,  0,$5A,$E8,$ED,$D1,$68,  3,$A7,$49,$50,$4E,$9D,$1D,$3A,$3A,$4A,$74,$E8,$B0,  1,$D3,$A3,$A7,$47,$48,$70,$4E,  0,$F7,$B3,$40, $E,$8E,$80,$16; 320
		dc.b $BA,$3A,$74,$5A,  0,$E9,$D2,$54,$10,  0,  0, $E,$8E,$9D,$1D,$3A,  0,$4F,$82,$70,  7,$BD,$1B,  0,$74,$74,  0,$B1,$69,$6A,$D2,$C0,  7,$4E,$92,$96, $F,$1D,$2C,  0,$74,$E8,$E9,$1E,$67,$49,$16,  0,  0,  0,$4E,  0,$F7,$15,$80,  0, $E,$92,$F6,  0,$E8,  0,  0,$60; 384
		dc.b   0,  4,$80,  0,$16,  0,  0,$2B,$40,$3E,  0,  0,  1,$62,  1,$F4,$E0, $F,$73,  0,$58,  0,  1,$D1,$D3,$A0,  4,$40,$43,$80,  2,$34,$78,  0,$22,$7D,$4F,$4B,  0,$1D,$1D,$3A,$2B, $A, $A,$A4, $C,$10,  0,  0,  0,  4,$40,  0,$1D,  0,  0,$23,$7D,$4E,$40,  2,$80,  0; 448
		dc.b   0, $A,$53,$92,$B0,  7,$40, $B,  0,$1F,$53,$90,  2,$50,  0,  0,  9,$54,$E4,$7C,  1,$D0,  1,$E0,  7,$D4,$E4,  0,$28,  0,  0,  0,$A5,$39,$1E,  0,$74,  0,$94,  1,$F5,$39,  0, $A,  0,  0,  0,$29,$4E,$47,$40,$1D,  0,$20,  0,$7D,$4E,$40,  9,$D3,$93,$A7,$27,$53; 512
		dc.b $92,$40,  0,  0,  8,$40,$1F,$72, $A,$72,$7E,  9,$C0,$1F,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$4F,$F8; 576
S1SS_2:		dc.b  $B, $F,  0,  0,  0,  0,  1,$3E,$60,  9,$D3,$93,$A7,$27,$4E,  0,$FB,$7C,  0,  9,$23,$C0,$90,  3,$ED,$F0,  0,$22,$8F,  1,$60, $F,$B7,$C0,  1,$2A,$3C,  6,  0,$3E,$DF,$20,  1,$E0,  0,  0,  7,$3E,$E7,$21,$A0,  0,  0,  0,  7,$BE,$E7,$21,$80,  0,  0,  0,$16,$3E; 0
					; DATA XREF: ROM:S1SS_LayoutIndexo
		dc.b $DF,$10,  2,$4A,$C0,$11,$E2,$B0,$2C,$61,$53,$EC,$F2,$58,  0,  0,  0,  1,$D2,$5C,$15,  0,$3E,$BF,  0,  5,$28,$F1,$74,$74,$E8,  1,$1E,$40, $A,$85,$86,$2C,  0,$7D,$5E,$2B,  0,  0,  0,$42,  0,$74,$9F,  0,  5,$8F,$AB,$E8,$88,  0,  0,  7,$47,$4E,$80,$1D,$1D,$3A; 64
		dc.b   0,  0,  0,  0,$E9,$D0,  0,  0,  5,$80, $F,$A9,$D4,$80,  0,  3,$A7,$44,$AE,$8E,$9D,$12,$BA,$3A,$47,$93,$A3,$A0,  0,  4,$80,$1F,$53,$A8,$F0,  0,  0, $E,$8E,$9D,  0,$3A,$3A,$74,  0,$8F,$30,  7,$4E,$80,$15,$86, $D,$2C,$7D,$3E,$2B,  0,  0,  0,$42,  0,$74,$8F; 128
		dc.b $20,  5,$80,  0,$1D,  0,$23,$C1,$60,  3,$E9,$70,  0,$54,$8F,$17,$47,$4E,$80,$12,$E0,$B0,  1,$2E,$60, $B,  5,$92,$8D, $E,$4E,  0,$FA,$1C,$96,  0,  0,  0,  0,$74,$9F,  0,  5,$8A,$F0,$4E,  0,$FA,$1D,$40,  8, $F, $E,  0,  0,  0,$AC,$88,$90,$B2,$94,$78,$80,$3A; 192
		dc.b $74,$74,$9F,  4,$E0, $F,$A3,$C8,  0,$68,  0,  0,  1,$E8,$F4,$52,  0,  0,  1,$D1,$D3,$A3,$A7,$40,  9,$70,$4E,  0,$FA,$3C,$80,$16,  0,  0,  0,$58,$8F,$80,  5,$20,  0,$1D,$1D,$25,$3A,$74,  0,  0,$A4,$61,$28,$E0,$F4,$E0, $F,$A3,$C8,  1,$60,  0,  0,  5,$88,$F5; 256
		dc.b   0,$2A,  0,  1,$D1,$D3,$A3,$A7,$40, $A,$40,$1F,$53,$90,  2,$C0,  0,  0, $B,$11,$EA,  0,$58,  0,  0,  3,$A7,$47,$40,  0, $D,  0,$3E,$A7,$20,  1,  0,  0,  0,  1,$25,$C0,$C0,  2,$5C, $D,$80,$3E,$97,$C0,  5,$41,  1,$43,$15,$80,  0,  0,$12,$20,$1C,$30,  0,  0; 320
		dc.b   3,$20,  0,  0,$12,$80,  0,  0,$28,  0,$FA,$5C,$15,  0,$29,$D4,$28,  0,  0,  0,  3,$60,  0, $A,  0,  0,$15,$7D,$3F,$62,  0,$1D,$1D,$3A,  0,  0,$74,$E8,$E8,  0,  2,$C0,  0,  0,  0,  5,  0,  0,$15,  0,  0,$2C,$FA,$7D,$43,$80,$3A,$3A,$74,  0,  0,$E9,$D1,$D0; 384
		dc.b   2,$C4,$79,$80,$15,  0,  0,$58,  0,  0,$BB,$E8,  1,$DC,$10,$18,$40,$55,$60,  0,  0,$16,  0,  0,$2C,  0,  0,$B0,  1,$1E,$60,  5,$80,  0,$17,  0,  0,$30,$FA,$18,$40,  0,$A3,$C4,  1,$D3,$A0,  4,$7C,  7,  0,  0,  0,$68,$AC,$C0,$BC,$14,$13,  8,$30,$46,$4D,$15; 448
		dc.b $94,  0,$7B,  8,  0,$14,$78,$80,$3A,$74,  0,$8F,$30,$C0,  0,  0, $D,$80,  0,$4A,$85,$29,$29, $E,  5,$40,$1E,$C2,  0,  5,$1E,$20, $E,$9D,  0,$23,$C8,$28,  0,  0,  2,$60,  8,$F0,$74,  0,$8F,  2,$C0, $F,$73,  0,  2,  8, $C,$20,$2A,$A0,  4,$78,$A9,  9,  4,  6; 512
		dc.b $8F,  2,$80,  8,$F0,$74,  0,$8F,  2,$E0, $F,$A3,$C8,  1,$50,  0,  0,  5,$29,$F6,$52,  0,  0,$B0,  0,  2,$50,  0,  5,$80,  0,$15,  0,$3E,$8F,$20,  1,$20,  0,  0,  2,$A5,$C0,  1,$62,$30,$9D,  0,$21,$C0,  1,$63,$E8,$80,$87,  0,  4,$A9,$70,$52,  0,$8F,$10,  7; 576
		dc.b $4E,$8E,$92,$E0,$A8,  1,$F4,$38,$80,$2C,  0,  0,  2,$5C, $C,$80,$25,$C1,$D0,  2,$5C, $A,$80,$3E,$87,$25,$80,  0,  0,  0,$16,$25,$E0,$D0,  3,$A3,$A0,  0, $B,  0,  0,  0,$2C,  0,  0,$74,$E8,  0,$B0,  3,$E8,$72, $C,  0,  0,  1,$60,  2,$5E, $D,$80,$3A,$3A,  0; 640
		dc.b   0,$BC,$B1,$61,$62,$F0,  0,  7,$4E,$80, $B,$80,$3E,$87,$20,$E0,  0,  0,  3,$80,$23,$CC,$F8,$F2,$B0,  7,$47,$40, $B,$D1,$E8,  0,$BC,  1,$D3,$A0,  5,$64,$48,$C0,$1F,$E4,$20,  0,  0,  0,$60,  4,$78,$20,  0,$47,$A2,$F0,  0,  5,$CB,$8B,$80,  0,$2F,  0,$47,$82; 704
		dc.b $40,  7,$E0,$A7,$27,$E0,$9C,  1,$1E,$E8,$40,  0,  0,  0,$2F,  0,  0,$B4,$B5,$69,$6A,$D0,  0,  5,$E8,$F0,$3A,  0,$FA,$9E,$92,$80,  0,$3A,$74,$58,  0,$B9,$68,  0,  0,  5,$A5,$C0, $B,$1D,$1D,  0,  0,$4A,  0,$FA,$9E,$91,$80,  0,$3A,$74,$58,  0,$B9,$68,  3,$C0; 768
		dc.b   5,$A5,$C0, $B,$1D,$1D,  0,  0,$3E,  0,$FA,$9E,$95,  0,  0,$3A,$74,$58,  0,$B9,$68,  0,  0,  5,$A5,$C0, $B,$1D,$1D,  0,  0,$52,  0,$FA,$9E,$40,$15,  0,  0,  0,$5E,  0,  1,$69,$6A,$D2,$D5,$A0,  0, $B,$C0,  0,  0,$29,$7D,$5E,  0,  7,$D1,$EC,$BC,  0,  1,$72; 832
		dc.b $E2,$E0,  0, $B,$C0,  0,  0,  0,$23,$7D,$5E,$60,  9,$40,  0,$3A,$3A,  0,$5E,$8F,$30,  5,$E0, $E,$9D,  0,  0,$25,$7D,$5F,$20,  8,$40,  0,$3A,$3A,  0,  0,$BC,$B1,$61,$62,$F0,  0,  7,$4E,$80,  0, $E,$BE,$AF,  0,  5,$89,$71,  0,$74,$E8,$E9,$2E,  0, $B,$1F,$5B; 896
		dc.b $82,$C0,  4,$78,$80,$3A,$74,$74,$97,  5,$80, $F,$AD,$C8,  1,$61,$F2,$54,$24,  8,$F2,  0,$3C,$74,$95,$19,$63,$EC,$F0,  0,$3E,$8F,  0,  3,$EF,$B7,$CC,  0,$F1,$D0,  0,  0,  8,$48,$1F,$73,$91,$E0,  0,  0,  8,$80,$1F,$73,$91,$F0,  0,  0,  8,$C0,$1F,$72, $A,$72; 960
		dc.b $7E,  9,$C0,$1F,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$43,$F8; 1024
S1SS_3:		dc.b  $B,  7,  0,  2,  0,  0,$63,$90,  0,$62,  2,$8C, $E,$FB,$5C,$80,  6,$1C,$AC,$90,  4,$78,$8C,$56,$40,$4B,$EB,$72,  0,$A8,$20,$31,  0,$15,$E2,$18,$20,$A5,$2F,$A9,$C2,$A0,  4,$78,$F4,$75,$D0,  2,$3C,$7A,$3A,$E8,  1,$1E,$14,$80,$3E,$97,  0, $A,$92,$E3,$D1,$D7; 0
					; DATA XREF: ROM:S1SS_LayoutIndexo
		dc.b $40,  8,$F1,$E8,$EB,$A0,  4,$78,  0,$52,$FA,$5C,  0,  4,$6B,$80,  0,$6F,$A5,$F0,  0,$30,  0,$29,  0,$E8,$EB,$A0, $B,  0,$3A,$3A,$E8,  2,$C0, $E,$8E,$BA,  0,$A8,  0,  0,$47,$D2,  1,$1F,$3D,$1D,$74,  0,  0,  7,$47,$5D,  0,  0,  1,$D1,$D7,$40,  0,  0,  0, $A; 64
		dc.b $FA,$5C,  0,$2C,$6B,$80,  5,$8F,$F3,  0,$9C,$F0,$E3,$43,$2C,  0,$47,$80,  5,$68,$F0,  0,$95,$1E,  0,$15,$A5,$CA,$C0,$B3,  3,$4E,$27,$73,$80,  4,$E8,$F2,  0,$EB,$A0, $B,  0,$17,$E3,$60,  7,$47,$48,$F0,  0,$9D,$CE,  0,$13,$A3,$F0,  3,$AE,$80,$2C,  0,$E8,$EB; 128
		dc.b $A0,  0,  0,$3A,$3A,$E8,  0,  0, $E,$8E,$BA,  0,$B0,  3,$A3,$A4,$78,  0,$4E,$E7,  0,  9,$D1,$F8,  1,$D7,$40,$16,  0,$74,$75,$D0,  5,$40,$1D,$1D,$74,  1,$48,  7,$47,$5D,  0,$58,  1,$D1,$D2,$3C,  0,$27,$73,$98,  4,$E5,$86,$1A,$1D,$60,  2,$3D,$FA,$3A,$E8,  0; 192
		dc.b   0, $E,$8E,$BA,  0,  0,  3,$A3,$AE,$80,$11,$E5,$60,$61,$62,$48,$93,$BF,$C0,  2,$C6,$B8,  0,$58,$FA,$5C,  0,$12,$47,$80,  5,$88,$F0,  0,$95,$1E,  0,$16,$23,$C0,  1,  7,$D2,$E0,  1,$5B,$5C,  0,$2B,$7D,$2E,  0,  6,$23,$E7,$A3,$AE,$80,  0,  0,$E8,$EB,$A0,  0; 256
		dc.b   0,$3A,$3A,$E8,  0,  0,  0,  4,$9F,$4B,$E0,  5,$20,  0,$4A,  1,$D1,$D7,$40,$15,$80,$74,$75,$D0,  5,$60,$1D,$1D,$74,  1,$28,  0,  5,$4F,$A5,$C2,$90,  4,$7B,$F4,$75,$D0,  0,  0,$1D,$1D,$74,  0,  0,  7,$47,$5D,  0,$23,$C2,$A0,  7,$D1,$E0,$80,  3,$7C, $E,  0; 320
		dc.b $7D,$1E,$12,$80,$29,$C0,  2,$55,$78,$4A,  0,$FA,$3C,$12,  0,$4B,$85,$80,  9,$F0,$B0,  1,$2E,  8,  0,$3E,$8F, $A,$80,$11,$E3,$D1,$D7,$45,$89,$72,  0,$B3,$A3,$AE,$80,$11,$E1,$48,  3,$E8,$FC,  0,$A8,  0, $B,  0,$3A,$3A,$E8,  2,$C3, $B,$CE,$AF,$30,$B0,  3,$A3; 384
		dc.b $AE,$80,$2C,  0,  0,$A5,$F4,$B8,  0,$2E,$8F,$9E,$8E,$BA,  0,$C0,$BE,$E2,$EB,$8B,$F0,  0,$E8,$EB,$A0,  0,  0,  0,$15,$7D,$2E,  0, $C,$27,$CE,$F2,$EB,$4B,$6D,$2E,$BC,  1,$2E,  0, $B,$3E,$97,  0,  6,$51,$EC,  1,$28,  0,$1D,$17,$5A,$7B,$69,$77,$40,  0,$12,$A3; 448
		dc.b $C0,  1,$77,$D2,$E0,  1,$62,$7C,$EF,$2E,$B4,$B6,$D2,$EB,$C0,$12,$E0,  1,$63,$FC,$C0,$27,$60,$5D,$61,$5B,  0,$11,$EF,$D1,$D7,$40,$18,$17,$DC,$5D,$71,$7E,  0,$1D,$1D,$74,  0,$8F,$2B,  6,$D4,$15,$58,$9D,$CE,  0,$13,$A3,$F0,  3,$AE,$80,$2C,  0,$E8,$EB,$A0, $B; 512
		dc.b  $C,$2F,$3A,$BC,$C2,$C0, $E,$8E,$BA,  0,$B0,  3,$A3,$A4,$78,  0,$4E,$E7,  0,  9,$D1,$E8,  1,$D7,$40,$16,  0,$74,$75,$D1,$62,$5D,  0,$2C,$E8,$EB,$A0, $B,  0,$3A,$3A,$47,$80,  4,$EE,$70,  0,$9D,$1E,$80,$1D,$74,  1,$60,  0,  0,$16,  0,$27,$CE,$C0,  0,  0,$2C; 576
		dc.b   0,$E8,$E9,$1E,  0,$13,$B9,$CC,  2,$77,$47,$9F,$20,$B0,  1,$4E,  0,$12,$AB,$CA,$C1,$E7,$49,$23,$27,$7F,$80,  5,$8D,$70,  0,$B1,$F4,$B8,  0,$48,$8F,$9E,$8E,$BA,  0,  0,  3,$A3,$AE,$80,  0,  0,$E8,$EB,$A0,  0,  0,  0,$22,$7D,$2F,$80, $E,$80,  1,$28,  7,$47; 640
		dc.b $5D,  0,$54,  1,$D1,$D7,$40,$14,$80,$74,$75,$D0,  4,$A0,  0,$11,$BE,$97,  0,  7,$9A,$E0,  1,$23,$E9,$70,  0,$A5,$4E,$3D,$1D,$74,  0,$9F,  0, $A,$9F,$4F,$85,$20,  9,$F1,$B0,$B2,$C0,  4,$F8,$54,  0,$FA,$7C,$80,$29,$90,$AD,$E0,  4,$78,$F4,$75,$D0,  2,$3C,$61; 704
		dc.b $2B,$88,$A9,$F5,$B8,$80,$41,  9,$62,$5C,$40,$2C,$90,$8D,$F6,$B8,$58,  0,$8F, $B,  0,$1F,$6F,$90,  3,$C0,  0,  0,$42,$FB,$9C,$80,$1F,  0,  0,  2,$27,$DC,$E4,  1,$28,  0,  0,$12,$BE,$E7,$20,  8,$40,  0,  0,$91,$F7,$39,  0,$44,  0,  0,  3,$AF,$B9,$C8,  2,$79; 768
		dc.b $C9,$E7,$27,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$D3,$FE; 832
S1SS_4:		dc.b  $B, $F,  0,  2,  0,  0,$4A,  8,$10,$1E,  0,$40,$16,$E6,  0,$7D,  1,$2A,$12,$24,$E0,  8,$C1,$4E,$4F,$C1,$38,  3,$9C,$81,  0,  0,  0,  4,  0,$B7,  3,$A0,  8,$F0,$4E,  0,$8F,$22,$80,  0,  0, $D,$80,$39,$C8,$18,  0,  0,  0,$60,  8,$F4,$3E,$3C,$74,$A9,$51,$2A; 0
					; DATA XREF: ROM:S1SS_LayoutIndexo
		dc.b $92,$93,$A4,$69,$70,$4E,  0,$8F,$22,$A0,  0,  0, $D,  0,$39,$D0,$20,  0,  0,  0,$80,  0,  0,  0,$15,$AF,$D1,$38,  0,  0,  0,  5,$80,  0,  0, $C,$3B,$F8,$28,  0,  0,  0,$A0,  0,  0,$11,$80,$3A,$3A,  0,  0,$E8,$E9,$D0,  0,  3,$A7,$40, $A,$C8,$10,$91,$27,  0; 64
		dc.b   0,  1,$C8,$C0,  0,  0,  0,  2,$ED,$F8,  0,$12,$AC,$1C,$30,  0,  0,  0,$C0,  0,  0,$12,  0,$3A,$3A,$58,  0,$8F,$25,$87,$4E,$80, $F,  0,$25,$C8,$C8,  0,  0,  2,$A0, $D,$F0,  6,  0,$97,$90,  5,$80,  0, $E,$80,  0,$2C,  0,  0,$C0,  1,$80,  0,  2,$C0,  0,  7; 128
		dc.b $40,$11,$E6,$50,$6D,$60,  0,  0,  5,$63,$6D,$F5,  8,  0,$E8,$E9,$D0,  0,  0,  0,  5,$80, $A,$51,$E4,  0,$C1,$79,$72,$F3,  4,$7A,$24,$23,$44,$4A,$80,$7C,  0,  3,$A0,  4,$78,$19,  0,$6B,$E8,$50,  7,$47,$4E,$80,  0,  0,  0,$2C,  0,$52,  0,  1,$D0,  3,  2,$F5; 192
		dc.b $A0, $B,$4B,$D8,  0,$3A,  0,$94,$82,$8F,  0,  7,$49,$70,$30,  0,$D7,$D0,$C0, $E,$8E,$9D,  0,  0,  5,  8,  0,  0,$94,  0,  3,$A0,  0,  5,$C0, $F,$80,$17,  0,  0,$74,  1,$29,  5,$18,$2E,$8E,$B9,$2C,$3A,$74,  0,$5C,  1,$AE,  0, $B,$11,$F4,$A8,  0,  0,  0,  2; 256
		dc.b $A0,  0, $E,$80,$18,$17,$AD,  0,$5A,$5E,$C0,  1,$D0,  4,$A4,$14,$78,  0,$3A,$4B,$88,  1,$52,$85,$2C,$F5,  0,$58,  0,  1,$D1,$D2,$A0,  0,  0,  0, $A,$91,$E4,  0,$C1,$79,$72,$F3,  4,$7C,$A1,$20,$3E,$4A,$74,$90,  0,  3,$A0,  0,  0, $E,$8E,$9D,  0,  0,  0,$52; 320
		dc.b   0,$CF,$20,$60, $E,$8E,$80,  4,$A3,$DD,$10,  0,  2,$C0,  0, $C,  0,$18,  0,  0,$2C,  0,  0,$88,  1,$1E,$C6,$46, $B,$8B,  0,  0,$74,$74,$E8,  0,  0,  0,  2,$96,$78,$84,  0,  0,  0,  2,$3C,$90,$80,$3A,$3A,$58,  0,$8F,$25,$87,$4E,$80,$11,$80,$27,$C8,$A0,  3; 384
		dc.b $A3,$A7,$40,  8,$F0,$2E,  0,$C7,$E0,  0,$C0, $E,$9D,  0,  3,  0,  0,  0,$80,  1,$D1,$D0,  0,  7,$47,$4E,$80,  0,$1D,$3A,  0,$56,$3A,$78,$7D,$38,  2,$3C,  0, $D,$23,$C9,$28,  0,  0,  2,$C0, $C,$75,  0, $E,  0,$E9,$D0,  0,$40,  0,  0,  0, $A,$D7,$E0,$9C,  1; 448
		dc.b $2E, $B,  0,$12,$E0,$54,  1,$9E,$42,$40,  0,  0,$2C,  0,$47,$A2,$42,$34,$45,$2A,$49,$55,$15,$1E,$1D,$4B,$82,$70,  4,$BA,  0,$2C,  0,  0,$E8,$E9,$D0,  1,$40,  6,$79,  2,  0,  0,  0,  0,$B1,$6E,  8,$C0,$11,$E0,$9C,  1,$3E,$6B,  0,$1D,$1D,$3A,  0,$32,  0,$CF; 512
		dc.b   5,$20,  8,$F0,$58,  0,$AF,$30,  4,$28,  9,$4F, $E,$A7,  0,$4F,$99,$B0,  7,$47,$4E,$80,$16,  0,$33,$C9,$48,  3,$A3,$A7,$47,$40,$3B,$C0,$D0,  2,$3C,  0, $B,$33,$C8,$28,  3,$A2,$C7,$47,$40,$70, $A, $C,$E7,$33,$23, $A,$C0,  0,  0,  0,$15,$67,$A0,$60,  7,$47; 576
		dc.b $4B, $E,$80,  0,  0,  7,$77,$81,$60,  4,$78,$29,  0,$63,$A8,$70,  7,$47,$4E,$8E,$80,  0,  0,$2B,$12,  4,$E7,  2,$A0,  8,$F0,$52,  0,$C7,  0,  5,$8A,$70,$52,  0,$C7,$34,$E2,$E6,  9,$4D, $D,$AC,  0,$47,$80,  2,$B6,$7A,$AC,  0,  0,  0,  0,$E9,$D1,$D3,$A0,  0; 640
		dc.b   5,$2C,$70,$4E,  0,$8F,$30,  7,$4E,$8B,$1D,$1D,  0,$17,$67,$B0,  2,$C0,  0,  0, $E,$96,$16,$3A,  0,  0,  0,$20,  1,$7E,  9,$C0,$11,$E6,  0,$E9,$D1,$63,$A3,$A0,  2,$CD,$75,$56,  0,  0,$E9,$61,$63,$A0,  0,  0,  2,$40,$17,$E0,$9C,  1,$1E,$60, $E,$9D,$16,$3A; 704
		dc.b $3A,  0,$2A,$D7,$51,  0,  0, $E,$9D,$1D,$3A,  0,  0,  0,$2C,  1,$7E,$69,$C6,$CD,$12,$98,$17,$58,  0,$8F,  0,  5,$6D,$70,$12,  0,$8F,$20,  7,$4E,$80,  6,  0,$35,$C0,$60,  2,$3C,$15,  0,$35,$D8,  0,$18,$40,$50,$C5,$80, $E,$9D,  0,$29, $E,$1E,$58,$CF,  1,$60; 768
		dc.b   8,$F0,$54,  0,$E7,$20,  5,$80, $E,$9D,  0,$23,$D5,$60,  0,  0,  0,  2,$24,$82,$D2,$86,$8E,$27,$4B,$80,  1,$14,$78,  0, $F,$77,$B8,  2,$C0,  7,$4E,$8E,$9D,$1D,  0,  0,  0,$58,  0,  0,$78,  2,$3C,  0,$13,$A5,$C0,  0,$82,$3C,  0,  7,$3B,$CC,  1,$60,  3,$A7; 832
		dc.b $47,$4E,$8E,$91,$E0,$B0,$35,$2E,  0,  9,$D2,$E6,$38,$E9,$D1,$D3,$A0,  1,$80, $F,$70,$56,  0,$97,  7,$47,$49,$F0,  0,$4E,$97,$31,$A7,$4E,$8E,$9D,  0, $B,  0,$7B,$C8,  2,$C2,  2,$2A,$80,  0,$1D,$3A,$3A,$74,  0,  0,  1,$58,$5A,$51,$12,  4,$E8,$F3,  0,$16,  0; 896
		dc.b   0,  1,$D3,$A1,$27,$D1,$EA,$2C,  1,$D1,$D2,$C2,$C7,$47,$40,  0,  6,$80,$27,$CC,  0,$90,  0,  0,  7,$4E,$84,$5F,$47,$A8,$C0,  0,  7,$4E,$8E,$9D,  0,  0,  0,$1C,  0,$9F,  5,$80,  8,$F0,$58,  0,$FA,$3C,$86,$80,  0,  0,$74,$74,$8F,  1,$E0,  9,$F3,$58,  0,  0; 960
		dc.b $E8,  0,  2,$C0,  7,$D1,$E0,$38,  1,$3E,  4,  0,$13,$E6,$B0,  1,$D1,$D3,$A0,  5,$80, $F,$A3,$F8,  1,$62,$C2,$C5,$81,$80, $E,$9D,  0,$2B,$12,$4A,$18,$34,$38,$78,  0,  0,  5,$87,$40, $E,$80,$1D,$2C,  0,  0,$21,$C4,$88,$90,$B2,$77,$D0,$E4,  0,$34,  1,$D3,$A0; 1024
		dc.b   4,$BC,  0,$2A,$54,$54,$AC,  0,  1,$D0,  0,  1,$81,$A3,$80,  0,  0,  0,$27,$7D, $E,$A0,  9,$40,$1D,$3A,  0,  0,  0,$E8,$E9,$D0,  2,$5C,  0,$1D,$27,$C0,  1,$3B,$E8,$70,  0,$1E,$97,$57,$45,$8E,$80,  0,$1D,$3A,$3A,  0,  0,  0,$B1,$3E,  0,  9,$DF,$43,$80,  1; 1088
		dc.b   4,$BA,$BA,$3A,$74,  0,  0,$E9,$61,$D0,  0,  0,  7,$49,$71,  0,$1E,$40,$9D,$F4,$79,$12, $B,$18,$1A,$38,  1,$1E,$20, $E,$9D,$1D,$25,$C8,$89,$28,$B0,$C1,$A0, $F,$A9,$C8,  0,$81,$12,$95,$25,$28,$F2,  0,$58,$B0,$95,$61,$63,$ED,$72,$1C,$1E,$94,$44,$90,  3,$EF; 1152
		dc.b $BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$B5,$FC; 1216
S1SS_5:		dc.b  $B, $F,  0,  2,  0,  0,$63,$90,  2,$74,$E4,$E9,$C9,$D7,$E6,  0,$81,  9,$12,$52,$44,$64,$4F,$A1,$C8,  0,$70,  0,  0,  2,$4B,$71,  0,$3A,$78,  1,$2E,  8,  7,$DF,$E4,  0,$34,  0,  0,  1,$15,$B9,$AC,  0,  0,  0,  0,$E9,$D1,$D2,$3C,$16,  0,$3D,$C8,  0,$60,  0; 0
					; DATA XREF: ROM:S1SS_LayoutIndexo
		dc.b   0,  4,$A9,$F2,$4E,$44,  0,  0,  1,$52,$3D,$DD,$1D,$25,$3A,$74,  0,  0,  0,  1,$48,  0,  0,  3,$A9,$C0,$1B,$E4,  0,$2C,  0,  0,  0,$F4,$BC,  0,$27,  0,  0,$80,  1,$20,  0,  0,  0,  6, $C,  0,$17,  0,$30,$30,$47,$92,$20,  3,$C0,  0,  9,$DC,$E2,$48,  0,  0; 64
		dc.b $72,$5C,$93,$80,  0,  0,  0,$3C,$8E,$10,  6,$14,$40,$17,$A3,$C1,$59,  2,$3C,$13,$80,$37,$C8,$88,  0,  0,  1,$A0,  8,$F0,$48,  0,$97,$67,$45,$8E,$80,$17,$80,$2D,  0,$5E,  0,$E8,$B1,$D0,  2,$5C,$12,  0,$37,$C9,$28,  0,  0,  1,$80,  8,$F0,  0,$46,$97,$67,$45; 128
		dc.b $8E,$8B,$80,$16,$BF,$2D,  0,$5C,$E8,$B1,$D0,  2,$3C,  0,$11,$39,$C8,$78,  0,  0,  1,$60,  9,$70,$44,  0,$8F,$67,$45,$8E,$80,$17,$80,$2D,  0,$5E,  0,$E8,$B1,$D0,  2,$3C,$10,  0,$35,$D0,  0,$58,$C0,$D5,$60,  0,  0,  0,$14,$A5,$DC,  1,$22,$52,$25,$60,  0,  0; 192
		dc.b   0,$18,  0,$2F,  0,$5E,  0,$C1,$1E,$20,  9,$12,$8F,$37,$C0,$88,  2,$7C,$14,$80,$27,$D4,$F8,  0,  0,  0,  6, $C,  0,$17,  0,$30,$30,$47,$82,$10,  6,$F9,$80, $F,  0,  0,$E8,$E9,$D0,  2,$3C,$80,$14,$90,$11,$24,$16,$8F,  5,$80,  8,$F2,$74,$74,$94,$E9,$D0,  2; 256
		dc.b $3C,$16,  0,$37,$D0,$70,  0,  0,  7,$47,$4E,$80,$12,$80,$25,$C0,  0,$62,$3C,  0,$14,$A3,$C4,  1,$D3,$A3,$A4,$78,  0,$2A,$73,$98,$D0,  0,  0, $E,$8E,$9D,  0,$27,$C4,  1,$58,$E0,$F4,$78,$AC,$1F,$3C,  0,$97,$14,$44,$6B,  0,$1C,$E6,$B0,  0,  0,  3,$A3,$A7,$40; 320
		dc.b  $A,$F0,$22,  0,$8F,$30,  4,$92,$92,$A5,$25,$4A,$21,$77,$80,  2,$C4,$F9,  0, $D,$1C,$1E,$40,$B1,$2E,  4,$80,$11,$E6,  0,$8E, $A, $C,$14,$18,$23,$EE,$F0,$58,  0,$8F,$25,$82,  4,$44,$85,$80,$23,$CD,$60,  0,  3,$A7,$40,  2,$C0,$11,$E0,  0,$89,$1E,  0,  7,$9C; 384
		dc.b $E0,  0,$11,$1E,  0, $B,$14,$E6,  0,$B0,  1,$D3,$A0,  4,$A0,  8,$F0,  0,$42,$8F,  0,  3,$AE,$70,  0,  6,$8F,  5,$80, $A,$73,  0,$1C,  0,$E9,$D0,  0,$D0,  4,$79,$80,$25,  0,$74,$E8,  0,  1,$23,$80,$41,$74,$75,$C0,$48,  2,$9C,  0,  7,$A3,$C0,$70,  2,$3C,$C0; 448
		dc.b  $F,$80,$3A,$74,  0,$88,  1,$CE,$60, $A,$DD,$1D,$3A,$3A,$4A,  0,$A7,$20,  2,  0,  0,  0,  8,$25,$CC,  0,$F0,  3,$A7,$40,  8,$40,$1C,$E6,  0,$21,$D1,$D3,$A3,$A0,$E0, $A,$72,$58,  0,  0,  0,  0,$8A,$5C, $D,$80,$23,$C1,$28,  3,$9C,  0,  3,$A3,$C0,$30,  2,$7C; 512
		dc.b   0,$16,$23,$C0,  0,$92,$5C,$CD,$1D,$3A,$3A,$74,$74,$7C,  1,$CE,  0, $A,$51,$E0,$B0,  1,$3E,$6B,  0,  0,$1D,$3A,$3A,  0,$16,$97,$33,$27,$4E,$8E,$9D,$1D,$1E,  0,$73,$92,$90,  0,  0,  0, $B,$13,$E8,  0,$40,  0,  3,$A3,$A7,$40,  0, $A,$92,$E0,$B0,  1,$1E, $A; 576
		dc.b $80,$1B,$E0,  0,$A5,$1E, $B,  0,$13,$E0,  0,$45,$2E, $A,$80,$11,$E0,  0,$B1,$1E,  0, $A,$9C,$E6,  0,$1D,$D1,$D3,$A3,$A1,  0,  9,$F3,  0,$52,  0,$E9,$61,$D0,  2,$A4,$B8,$2C,  0,$47,$82,$A0,  7,$39,$80,  6,$74,$74,$E8,$E8,$38,  2,$7C,$C0,$14,$80,$3A,$58,$74; 640
		dc.b   0,$3D,$2E,  6,$C0,$11,$E4,$AC,$65,$28,$B9,$60,  6,$B9,$80,$25,$74,$74,$E8,$E9,$58,  2,$7C,$C0,$14,$80,$3A,$58,$74,  0,$95,$2E,$46,$80,$1D,$16,$3A,  0,$47,$88,  1,$43,$64,$EC,$F0,  0, $C,$8F,  0,$A0,  9,$F0,$1C,  0,$8F,  0,  2,$29,$72,$32,  0,$E8,$B1,$D0; 704
		dc.b   2,$5C,  0,$13,$B3,$C0,  0,$2A,$3C,  2,  0,$27,$C0,$78,  2,$3C,  0,  9,$25,$C9,$58,  3,$A2,$C7,$40,  9,$70,  0,$4E,$CF,  0,  5,$88,$F0,$52,  0,$9F,$32,  0,  0,  0,$15,$86,$8C, $B,$47,$80,  1,$64,$B9,$AB,$14,$2A,$2C,  0,  0,  1,$3B,$5C,$96,  0,  0,  0,  0; 768
		dc.b $52,$9F,$22,$20,  0,  0,  7,$80,$25,$C0,  0,$AA,$5C,$CD,  0,  0,  0,$30,$32,$68,$9D,$AE,$60, $B,$1D,$1D,$3A,$3A,$52,  0,$8F,  0,  2,$88,$F0,$20,  0,$97,  0,  2,$88,$F0,  0,$30,$F7,$30,  0,$EE,$8E,$9D,$1D,  6,  0,$47,$80,  1,$54,$78,$29,  0,$4B,$98,  2,$A0; 832
		dc.b   0, $B,  0,  0, $B,$BD,$CC,  0,$33,$A3,$A7,$47,$41,$40,$11,$E0,  0,$95,$1E,  0, $A,$52,$E6,$A8,  0,  0,  2,$C0,  0,  4,$AF,$73,  0, $A,$E8,$E9,$D1,$D0,$40,  4,$7B,  0,$17,  0,$74,$E8,$E8,  0,  2,$91,$93,$43,$65, $A,$92,$E0,  0,$55,$EE,$40, $A,$40,  0,  0; 896
		dc.b   2,$4B,$98,  1,$80,  0, $E,$8E,$9D,  0,$23,$D1,$D1,$D3,$A0,  7,$47,$40,  0,  0, $A,$3D,$C9,$48,  0,  0,  0,  1,$29,$F2,$58,  0,  0,$E9,$D1,$D2,$3D,$1D,$1D,$3A,  0,$74,$74,  0,  0,$D0,  3,$9C,$42,$83,  7,$29,$47,$80,  2,$54,$F8,  0,$2C,$4F,$9A,$C2,$C5,$80; 960
		dc.b   0,  0,  0,$16,$37,$C4,  8,$48,$20,$34,$F8,  0,  7,$53,$82,$C0,  4,$B9,$BA,$3A,$74,  0,  0,  1,$60,  3,$7C,  0,$80,$29,$C0,  0,$32,$9D,$80, $C,$2B,  0,  0,$58,  0,  1,$D1,$D3,$A0,  0,  5,$8E,$70,  2,  0,$A7,  0,  5,$8A,$F5,$36,  0,  0,$B0,  0,  2,$C1,$B2; 1024
		dc.b $82,$A5,$80,$1C,$E0,  4,  1,$4E, $B,  0,$15,$E6,$50,  0,  1,$D0,  0,  3,$20, $F,$70,  2,  0,$8F,$25,$60,$A1,$81,$C4,$16,$2D,$CC,$A8,  0,  3,$A0,  0,  6,$80,$1E,$E4,  4,$18,$38,$40,$90,$26,$79,$80,$18,  0,$74,  0,  0,$D8,  3,$ED,$F2,  0,$32,  0,  0,  0,$AB; 1088
		dc.b $EE,$72,  0,$34,  0,  0,  0,$B3,$EE,$72,  0,$36,  0,  0,  0,$BB,$EE,$72,  0,$4E,$9C,$9D,$39,$3B,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$DF,$C0,  0; 1152
S1SS_6:		dc.b  $B, $F,  0,  2,  0,  0,$7D,$F7,$DF,$72, $A,$72,$7E,  9,$C0,$1F,$73,$91,$C0,  0,  0,  7,  0,$1F,$57,$88,  0,$40,$60,$48,$F5,  0,$3A,$78,$7C,  0,  1,$C0,  0,  0,  7,  0,$1F,$53,$D0,$80,$70,$C0,  0,  0,$15,  0,$A5,$1C,$52,  0,  0,  1,  9,$11,$C0,  0,  0,  9; 0
					; DATA XREF: ROM:S1SS_LayoutIndexo
		dc.b $40,$1F,$4C,  6,$78,$1C,  0,$7F,$A0,  2,$70,$20,$29,$40,$40,$80,$81,  0,$4B,$88,  3,$A7,$47,$4A,$70,$38,  0,$FF,  0,  4,$EB,$71,  0,$74,$E8,$E9,$2E,$40, $B,  0,  0,$1C,  0,$7F,$80,  2,$74,$B9,  0,$3A,$74,$74,  0,$95,$3E,  0,  9,$52,$E0,$70,  1,$FE,  0,  9; 64
		dc.b $D1,$E4,  0,$B0,  1,$D3,$A3,$A4,$78,$80,$2C,$56,$58,$97,$20,  7,$4E,$80,  0, $E,$BF,$C8,  1,$38,$10,$10,$20,  9,$F9,$74,$74,$E8,  0,  0,  3,$A3,$A7,$40,  0,  0,  0,$1D,$3A,  0,  0,  0,$8C,  1,$F4,$38,  7,  0,$4F,$CB,$A3,$A7,$40,  0,  0,$1D,$1D,$3A,  0,  0; 128
		dc.b   0,  0,$E9,$D0,  0,  0,  4,$40, $F,$A1,$C0,$30,  2,$7D,$16,  0,  0,$30,$60,$60,  0,  1,$60,  2,$7C,$10,$80,$3F,$C0,  0,$22,$3D,$D2,$80,  0,  0,  0,$58,$BC,$BD,$78,  0,  0,  5,$E5,$EB,$CB,$11,$E4,$94,  0,  0,  0,  1,$F7,$C0,$4B,$8B,$A3,$A5,$85,$E9,$F2,  0; 192
		dc.b $5E,$B0,$E9,$D0,  2,$3C,  0, $F,$3F,$C0,  0,$12,$5E,$1D,$1D,  0,$2F,  0,$74,$E8,$B9,$71,$73,$A3,$A0,  5,$E0, $E,$9D,  0,$23,$C0,  0,$EB,$E8,$70,$52,  0,$8F,$87,$47,$40, $B,$C0,$1D,$2D,$2D,$5A,$5A,$B4,$E8,  1,$78,  3,$A7,$40,  8,$F0,$54,  0,$FA,$1F,$80,$80; 256
		dc.b $3A,$3A,  0,$58,  0,  1,$80,  0,  2,$E5,$A0,  0,  0,$16,$97,  0,  0,$60,  0,  0,$B0,  1,$D3,$A0,  3,$80, $F,$A1,$F9,$28,  3,$A3,$A0,  5,$60,  0,$18,  0,  0,$2E,$5A,  1,  0,  1,$69,$70,  0,  6,  0,  0, $A,$C0,$1D,$3A,  0,$4A,  0,$FA,$1F,$85,  0,$3A,$3A,  0; 320
		dc.b $58,  0,  1,$80,  0,  2,$E5,$A0,  0,  0,$16,$97,  0,  0,$60,  0,  0,$B0,  1,$D3,$A0,  2,$60, $F,$A1,$C1,$50,  2,$3E,$1D,$1D,  0,$2F,  0,$74,$B4,$B5,$69,$6A,$D3,$A0,  5,$E0, $E,$9D,  0,$23,$C1,$48,  3,$FC,  0,  5,$A5,$E1,$D1,$D0,  2,$F0,  7,$4E,$8B,$97,$17; 384
		dc.b $3A,$3A,  0,$5E,  0,$E9,$D0,  2,$3C,  0, $A,$3F,$C0,  0,$62,$5C,$5D,$1D,$2C,$2F,$4F,$90,  2,$F5,$87,$4E,$80,$11,$E0,  0,$55,$FE,  0,  3,$51,$EE,$94,  0,  0,  0,  2,$C5,$E5,$EB,$C0,  0,  0,$2F,$2F,$5E,$58,$8F,$24,$A0,  0,  0,  0, $B,$3E,$87,  1,$E0,  9,$F4; 448
		dc.b $58,  0,  0,$C1,$81,$80,  0,  5,$80,  9,$F0,$30,  0,$FA,$1C,$88,  0,  0,  0,$74,$74,$8F,$47,$47,$4E,$80,  0,  0,$3A,$3A,$74,  0,$9F,  3,$20, $F,$A1,$C8,$88,  0,  0,  7,$47,$48,$F4,$74,$74,$E8,  0,  0,  3,$A3,$A7,$40,  9,$F1,$26,$26,$4C,$9D,$FE,$40,  2,$C0; 512
		dc.b   0,$3A,$3A,$4B,$88,  2,$C5,$65,$88,$F2,  0,$74,$E8,$E8,  1,$62,$3C,  0,$13,$BE,$87,  1,$40,  8,$F0,  0,$4A,$9F,$20,  4,$A0, $E,$9D,$1D,$25,$C0,  1,$3B,$E8,$71,$14,  0,  0,$B1,$2E,$20, $E,$9D,$1D,$2D,$C0,  1,$3B,$E8,$70,$14,  0,$9F,$10,  7,$4E,$8E,$93,$82; 576
		dc.b $4C,$4F,$8A,$51,$32,$64,$EF,$A1,$C0,$50,  3,$1C,  0, $A,$3E,$A7,$A4,$A0,  0,  0,  5,  8, $F,  0,  0,  0,$A4,$29,$28,$9A,$A0,  0,  0,  6,  6,$4D,  0,$3E,$A7,$41,$40,  0,  0,  5,  0,  0, $D,$18,$16,$8F,$10,  2,$85,$45,$9F,$5B,$90,$A0,  0,  0,  2,$80,$1F,$72; 640
		dc.b  $A,$72,$7E,  9,$C0,$1F,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F6,$7F,$80,  0; 704
Art_EHZFlower1:	incbin	"art/uncompressed/EHZ and HTZ flowers - 1.bin"
		even
Art_EHZFlower2:	incbin	"art/uncompressed/EHZ and HTZ flowers - 2.bin"
		even
Art_EHZFlower3:	incbin	"art/uncompressed/EHZ and HTZ flowers - 3.bin"
		even
Art_EHZFlower4:	incbin	"art/uncompressed/EHZ and HTZ flowers - 4.bin"
		even
Art_EHZFlower5:	incbin	"art/uncompressed/Pulsing ball against checkered background (EHZ).bin"
		even
Art_HPZUnusedBg:dc.l	     0,	       0,	 0,	   0,	     6,	     $67,     $677,    $6777,	     0,	       0,	 6,	 $67,$22100677,$77210677,$77721677,$77721677; 0
		dc.l	     0,	$6600000,$67711111,$77777777,$77777777,$77777777,$77777777,$77777777,	     0,	       0,$11000000,$77110000,$77771000,$77777100,$77777200,$77777210; 16
		dc.l	$67777,	 $677777, $6777777, $6777777,$67777777,$67777777,$67777777,$67777777,$77771677,$77771777,$77777777,$77777777,$77777777,$77777777,$77777777,$77777777; 32
		dc.l $77777777,$77777777,$77777777,$77777777,$77777777,$77777777,$77777777,$77777777,$77777210,$77777210,$77777721,$77777721,$77777721,$77777721,$77777721,$77777721; 48
		dc.l $67777771,$67777721, $6777721, $6777721, $6777210,	 $677210,   $62210,	   0,$77777777,$67777777,$67777777,$67777777,$67777777,$67777777, $6777777, $6777777; 64
		dc.l $77777777,$77777777,$77777777,$71777777,$21777777,$21677777,$21677777,$21677777,$77777721,$77777721,$77777721,$77777721,$77777721,$77777721,$77777210,$77777210; 80
		dc.l	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0, $6777772,	$6777772, $6777772,  $677721,	$67221,	  $62110,	 0,	   0; 96
		dc.l $10677777,$10677777,$10067777,   $67777,	  $111,	       0,	 0,	   0,$77772100,$77772100,$77721000,$72210000,$21000000,	       0,	 0,	   0; 112
		dc.l	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0,	     0,	       0,	 6,	 $67,	   $67,	    $677,     $677,	$677; 128
		dc.l   $660000,	$6771111,$67777777,$77777777,$77777777,$77777777,$77777777,$77777777,	     0,$10000000,$21000000,$72100000,$72100000,$72100000,$77210000,$77210000; 144
		dc.l	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0,	 $6777,	   $6777,    $6777,    $6777,	 $6777,	   $6777,    $6777,	$677; 160
		dc.l $77777777,$77777777,$77777777,$77777777,$72777777,$21777777,$21677777,$21677777,$77210000,$77210000,$77210000,$77210000,$77210000,$77210000,$77210000,$77210000; 176
		dc.l	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0,	  $677,	    $672,     $672,	 $21,	   $10,	       0,	 0,	   0; 192
		dc.l $21677777,$10677777,$10677777,   $67777,	$67777,	  $67772,   $66721,    $6210,$77210000,$72100000,$72100000,$72100000,$21000000,$10000000,	 0,	   0; 208
		dc.l	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0; 224
		dc.l	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0; 240
Art_HPZGlowingBall:dc.l	$11111111,   $11111,	$1111,	  $1111,   $11122,  $111220,  $111200, $1112001; 0
					; DATA XREF: ROM:0001AB8Ct
					; ROM:0001AB9At ...
		dc.l $11111111,$11112222,$12221100,$21000000,	 $1121,	 $122222,$12222211,$22233122; 8
		dc.l  $1120012,	$1220012,$11200122,$12200123,$12101224,$12001232,$12001222,$12001222; 16
		dc.l $22412221,$44222111,$42211111,$32111111,$21111111,$21111111,$21111111,$11111111; 24
		dc.l $22222211,$22222222,   $22222,	 $22,$11110000,$11111100,$11111111,$11111121; 32
		dc.l $10000000,$11000000,$21100000,$22110000,$22211000,	$2221100,  $221100,$10022110; 40
		dc.l $11111112,$11111111,$11111111,$11111111,$11111111,$11111111,$11111111,$11111111; 48
		dc.l $11002110,$21002211,$22100211,$12100211,$12110221,$12210021,$22210021,$22210021; 56
		dc.l $11111111,	  $11111,    $1111,    $1111,	$11122,	 $111220,  $111200, $1112001; 64
		dc.l $11111111,$11112222,$12221100,$21000000,	 $1121,	 $122222,$12222211,$22244122; 72
		dc.l  $1120012,	$1220012,$11200122,$12200124,$12101224,$12001242,$12001222,$12001222; 80
		dc.l $22412222,$44222222,$42222222,$42222222,$22222233,$22222333,$22223334,$22223344; 88
		dc.l $22222211,$22222222,   $22222,	 $22,$11110000,$11111100,$11111111,$11111121; 96
		dc.l $10000000,$11000000,$21100000,$22110000,$22211000,	$2221100,  $221100,$10022110; 104
		dc.l $22211112,$22222111,$22222211,$22222221,$33222221,$33322222,$43332222,$44332222; 112
		dc.l $11002110,$21002211,$22100211,$12100211,$12110221,$12210021,$22210021,$22210021; 120
		dc.l $11111111,	  $11111,    $1111,    $1111,	$11124,	 $111240,  $111400, $1114001; 128
		dc.l $11111111,$11112444,$12444100,$44000000,	 $1121,	 $123222,$12433322,$33344233; 136
		dc.l  $1140013,	$1240014,$11400133,$12400144,$12401344,$14001343,$14001343,$14001333; 144
		dc.l $43423333,$44333333,$43333344,$43334444,$33344444,$33344444,$33444444,$33444444; 152
		dc.l $22222211,$44422222,   $44422,	 $44,$11110000,$22111100,$22222111,$22222221; 160
		dc.l $10000000,$11000000,$21100000,$22110000,$42211000,	$4221100,  $421100,$10042110; 168
		dc.l $33322222,$33333222,$44333322,$44443332,$44444332,$44444333,$44444433,$44444433; 176
		dc.l $11004110,$21004211,$22100411,$22100411,$23110421,$23210041,$33210041,$33310041; 184
Art_UnkZone_1:	dc.l $12332411,$12334199,$12331999,$12331999,$12331999,$12343199,$12313311,$12222222; 0
					; DATA XREF: ROM:0001ABB8t
		dc.l $11423333,$99143333,$99913333,$99913333,$99913333,$99133333,$11333333,$22222222; 8
		dc.l $33332411,$333341BB,$33331BBB,$33331BBB,$33331BBB,$333331BB,$33333311,$22222222; 16
		dc.l $11423321,$BB143321,$BBB13321,$BBB13321,$BBB13321,$BB134321,$11331321,$22222221; 24
		dc.l $12332411,$123341BB,$12331BBB,$12331BBB,$12331BBB,$123431BB,$12313311,$12222222; 32
		dc.l $11423333,$BB143333,$BBB13333,$BBB13333,$BBB13333,$BB133333,$11333333,$22222222; 40
		dc.l $33332411,$33334199,$33331999,$33331999,$33331999,$33333199,$33333311,$22222222; 48
		dc.l $11423321,$99143321,$99913321,$99913321,$99913321,$99134321,$11331321,$22222221; 56
Art_UnkZone_2:	dc.l $13333334,$11111111,$13333334,$13333334,$11111111,$13333334,$13333334,$14444444; 0
					; DATA XREF: ROM:0001ABC2t
		dc.l $13333334,$11111111,$13333334,$13333334,$11111111,$13333334,$13333334,$14444444; 8
		dc.l $11111111,$14444445,$14444445,$15555555,$15555555,$11111111,$15555555,$15555555; 16
		dc.l $11111111,$14444445,$14444445,$15555555,$15555555,$11111111,$15555555,$15555555; 24
		dc.l $15555555,$15555555,$11111111,$15555555,$15555555,$14444445,$14444445,$11111111; 32
		dc.l $15555555,$15555555,$11111111,$15555555,$15555555,$14444445,$14444445,$11111111; 40
		dc.l $14444444,$13333334,$13333334,$11111111,$13333334,$13333334,$11111111,$13333334; 48
		dc.l $14444444,$13333334,$13333334,$11111111,$13333334,$13333334,$11111111,$13333334; 56
		dc.l $13333334,$13333334,$11111111,$13333334,$13333334,$13333334,$11111111,$14444445; 64
		dc.l $11111111,$13333334,$11111111,$13333334,$13333334,$11111111,$13333334,$14444445; 72
		dc.l $14444445,$14444445,$15555555,$11111111,$15555555,$15555555,$15555555,$15555555; 80
		dc.l $14444445,$11111111,$14444445,$15555555,$15555555,$15555555,$11111111,$15555555; 88
		dc.l $15555555,$11111111,$15555555,$15555555,$15555555,$14444445,$11111111,$14444445; 96
		dc.l $15555555,$15555555,$15555555,$15555555,$11111111,$15555555,$14444445,$14444445; 104
		dc.l $14444445,$13333334,$11111111,$13333334,$13333334,$11111111,$13333334,$11111111; 112
		dc.l $14444445,$11111111,$13333334,$13333334,$13333334,$11111111,$13333334,$13333334; 120
		dc.l $11111111,$13333334,$11111111,$13333334,$13333334,$11111111,$13333334,$14444445; 128
		dc.l $13333334,$13333334,$11111111,$13333334,$13333334,$13333334,$11111111,$14444445; 136
		dc.l $14444445,$11111111,$14444445,$15555555,$15555555,$15555555,$11111111,$15555555; 144
		dc.l $14444445,$14444445,$15555555,$11111111,$15555555,$15555555,$15555555,$15555555; 152
		dc.l $15555555,$15555555,$15555555,$15555555,$11111111,$15555555,$14444445,$14444445; 160
		dc.l $15555555,$11111111,$15555555,$15555555,$15555555,$14444445,$11111111,$14444445; 168
		dc.l $14444445,$11111111,$13333334,$13333334,$13333334,$11111111,$13333334,$13333334; 176
		dc.l $14444445,$13333334,$11111111,$13333334,$13333334,$11111111,$13333334,$11111111; 184
Art_UnkZone_3:	dc.l $11111111,$13111131,$13111131,$14333341,$12222221,$12222221,$11111111,$11111111; 0
					; DATA XREF: ROM:0001ABCEt
		dc.l $11111111,$13111131,$13111131,$14333341,$12222221,$12222221,$11111111,$11111111; 8
		dc.l $13111131,$13111131,$14333341,$12222221,$12222221,$11111111,$11111111,$11111111; 16
		dc.l $11111111,$11111111,$13111131,$13111131,$14333341,$12222221,$12222221,$11111111; 24
		dc.l $11111111,$11111111,$13111131,$13111131,$14333341,$12222221,$12222221,$11111111; 32
		dc.l $13111131,$13111131,$14333341,$12222221,$12222221,$11111111,$11111111,$11111111; 40
Art_UnkZone_4:	dc.l $22222233,$15111111,$11111455,$11145555,$1115B555,$11455B55,$115555B5,$1155555B; 0
					; DATA XREF: ROM:0001ABDAt
		dc.l $33434445,$11111151,$55411111,$55554111,$55555111,$55555411,$55555511,$55555511; 8
		dc.l $22222233,$15111111,$11111455,$1114555B,$1115555B,$1145555B,$1155555B,$1155555B; 16
		dc.l $33434445,$11111151,$55411111,$55554111,$55555111,$55555411,$55555511,$55555511; 24
		dc.l $22222233,$15111111,$11111455,$11145555,$11155555,$11455555,$11555555,$1155555B; 32
		dc.l $33434445,$11111151,$55411111,$55554111,$55B55111,$5B555411,$B5555511,$55555511; 40
Art_UnkZone_5:	dc.l $11111111,$15511222,$15511222,$11155111,$11155111,$12211551,$12211551,$12211115; 0
					; DATA XREF: ROM:0001ABE6t
		dc.l $11111111,$12211222,$12211222,$11155111,$11155111,$12211551,$12211551,$12211115; 8
		dc.l $11111111,$12211222,$12211222,$11122111,$11122111,$12211551,$12211551,$12211115; 16
		dc.l $11111111,$12211222,$12211222,$11122111,$11122111,$12211221,$12211221,$12211115; 24
		dc.l $11111111,$12211222,$12211222,$11122111,$11122111,$12211221,$12211221,$12211112; 32
		dc.l $11111111,$12211555,$12211555,$11155111,$11155111,$15511221,$15511221,$15511112; 40
Art_UnkZone_6:	dc.l	     0,	       0,	 0,	   0,	     0,	$2222222,$22222222,$22222222; 0
					; DATA XREF: ROM:0001ABF8t
		dc.l	  $234,	    $234,     $234,	$234,	  $234,$22000234,$22222234,$22222211; 8
		dc.l $43200000,$43200000,$43200000,$43200000,$43200000,$43200044,$43234444,$11233333; 16
		dc.l	     0,	       0,	 0,	   0,	     0,$55555500,$44455555,$33444444; 24
		dc.l	     0,	       0,	 0,	   0,	     0,	     $44,    $4433,    $3332; 32
		dc.l	  $234,	    $234,     $234,	$234,	  $234,$33300234,$32222234,$22222211; 40
		dc.l $43200000,$43200000,$43200000,$43200000,$43200000,$43200054,$43225543,$11354432; 48
		dc.l	     0,	       0,	 0,	   0,	     0,$32000000,$32220000,$22220000; 56
		dc.l	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0; 64
		dc.l	  $234,	    $234,     $234,	$234,	  $234,	    $223,    $2334,    $2211; 72
		dc.l $43200000,$43200000,$43200000,$43200000,$43200000,$45200000,$44500000,$11250000; 80
		dc.l	     0,	       0,	 0,	   0,	     0,	       0,	 0,	   0; 88
Art_UnkZone_7:	dc.l	     0,	       0,	 0,	   0,	 $8700,	 $688786,$87876887,$68767768; 0
					; DATA XREF: ROM:0001AC04t
		dc.l	     0,	       0,	 0,	   0,$80000000,$67600000,$87876007,$68767768; 8
		dc.l	     0,	       0,	 0,	   0,	 $8700,	 $688786,$87876887,$68767768; 16
		dc.l	     0,	       0,	 0,	   0,	   $68,	   $8786,$87876887,$68767768; 24
		dc.l	     0,	       0,	 0,	   0,$88778000,$67688780,$87876887,$68767768; 32
		dc.l	     0,	       0,	 0,	   0,	     8,	   $8786,$87876887,$68767768; 40
		dc.l	     0,	       0,	 0,	   0,	 $8000,	     $86,$80076887,$68767768; 48
		dc.l	     0,	       0,	 0,	   0,$88778760,$67688786,$87876887,$68767768; 56
		dc.l	     0,	       0,	 0,	   0,	     0,$67680000,$87876887,$68767768; 64
		dc.l	     0,	       0,	 0,	   0,	     0,$67600000,$87876800,$68767768; 72
		dc.l	     0,	       0,	 0,	   0,	   $68,	   $8786,  $876887,$68767768; 80
		dc.l	     0,	       0,	 0,	   0,$88700000,$67688780,$87876887,$68767768; 88
		dc.l	     0,	       0,	 0,	   0,$80000000,$67688700,$87876887,$68767768; 96
		dc.l	     0,	       0,	 0,	   0,	     0,	       6,$87000887,$68767768; 104
		dc.l	     0,	       0,	 0,	   0,  $778760,$67688786,$87876887,$68767768; 112
		dc.l	     0,	       0,	 0,	   0,  $778700,$67688786,$87876887,$68767768; 120
		dc.l	     0,	       0,	 0,	   0,	     0,$60000000,$87800087,$68767768; 128
		dc.l	     0,	       0,	 0,	   0,	$78700,	$7688786,$87876887,$68767768; 136
Art_UnkZone_8:	dc.l  $6600666,	$7777777, $8888888,	   0, $6600666,	$7777777, $8888888,	   0; 0
					; DATA XREF: ROM:0001AC12t
		dc.l	     0,	$6600666, $7777777, $8888888,	     0,	$6600666, $7777777, $8888888; 8
		dc.l  $8888888,	       0, $6600666, $7777777, $8888888,	       0, $6600666, $7777777; 16
		dc.l  $7777777,	$8888888,	 0, $6600666, $7777777,	$8888888,	 0, $6600666; 24

; ---------------------------------------------------------------------------
; Level layouts, three entries per act (although the third one is unused)
; --------------------------------------------------------------------------- 
Level_Index:	dc.w Level_GHZ1-Level_Index,Level_GHZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_GHZ2-Level_Index,Level_GHZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_GHZ3-Level_Index,Level_GHZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index

		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index

		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index

		dc.w Level_EHZ1-Level_Index,Level_EHZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_EHZ2-Level_Index,Level_EHZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_EHZ1-Level_Index,Level_EHZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_EHZ2-Level_Index,Level_EHZBg-Level_Index,Level_Null-Level_Index

		dc.w Level_HPZ1-Level_Index,Level_HPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_HPZ1-Level_Index,Level_HPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_HPZ1-Level_Index,Level_HPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_HPZ1-Level_Index,Level_HPZBg-Level_Index,Level_Null-Level_Index

		dc.w Level_HTZ1-Level_Index,Level_HTZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_HTZ2-Level_Index,Level_HTZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_HTZ1-Level_Index,Level_HTZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_HTZ2-Level_Index,Level_HTZBg-Level_Index,Level_Null-Level_Index

		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index
		dc.w Level_CPZ1-Level_Index,Level_CPZBg-Level_Index,Level_Null-Level_Index

Level_GHZ1:	dc.b $2F,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 0
					; DATA XREF: ROM:Level_Indexo
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,$38,  1,  1,  1,$24,  0,  0; 16
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 32
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 48
		dc.b   0,  0,  0,  0,$38,$24,  0,  0,$21,$26,$11,$11,$1F, $F,  0,  0; 64
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 80
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$2D,$31; 96
		dc.b $24,$14,$38,  4,$23,$25,$2D,$B5,$26,$11,$1F,$1E,$20, $F,  0,  0; 112
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 128
		dc.b   0,  0,$2D,$2D,  3,$31,$24,$10,  2,  7,  4,  5,$2B, $E,$1E,$11; 144
		dc.b $25,$1A,$26,$11,  8,  9, $A,$17,$1E,$1E,$20,$11,$1F, $F,  0,$10; 160
		dc.b   5,$2B,$16,  2,  3,$37,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 176
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,$1E,$1E,$1E,$20,$25,  7,$22; 208
		dc.b  $C, $D,$15,$19,$11,$25,$2D,$2D,$2D,$2D,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0		; 240
Level_GHZ2:	dc.b $20,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 0
					; DATA XREF: ROM:Level_Indexo
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 16
		dc.b   0,  0,  0, $E,$2B,$16,$1C,  5,$2B,$16,  2,$37,  0,  0,  0,  0; 32
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$21,  3,  0,  0,  0,  0,$21,$31; 48
		dc.b $24,  0,  0,  0, $C, $D,  6, $C,$1E, $D,$15,$11,$25,$32,$2B, $B; 64
		dc.b $2D,$B5,$2D,  7,$24,$12,$38,$24,$2D,$26,  8,  5,$2B, $B,$21,$26; 80
		dc.b $1F, $F,  0,  0,  0,$1E,$1E,$1E,$1E, $A,$17,$1E,$1E, $C, $C, $D; 96
		dc.b $19,$11,  8,$17,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$18, $D,  8,$23; 112
		dc.b $11,$20,$25,$2D,$2D,$2D,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E; 128
		dc.b $1E,$1E,$1E,$1E,$1E,$1E,  0,  0,  0,  0,  0,$1E,$1E, $A,$17,$1E; 144
		dc.b $11,  8,$1D,  9,$1E,$1E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 160
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$1E,$1E,$1E; 176
		dc.b $1E,$1E,$1E,$1E,$1E,$1E,$1E,  0; 192
Level_GHZ3:	dc.b $2F,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 0
					; DATA XREF: ROM:Level_Indexo
		dc.b $2D,$37,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 16
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 32
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$13,$38; 48
		dc.b $18, $F,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 64
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 80
		dc.b   0,  0,  0,  0,  0,$13,$38,$24,$14,  0,$13,$38,$27,  2,$1A,$26; 96
		dc.b $1F, $F,  0,  0,$14,$21,$2D,  0,  0,  0,$13,$33,$33,$10,$24,$2C; 112
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 128
		dc.b   0,  0,$2D,$37,$16,$1B,$23,$25,$1A,  3,  6,$26,$1F,$1E,$1E,$1E; 144
		dc.b $20,$25,$B5,$31,$1B,$23,$11,$33,$33,  2,$1A,$34,$34,$19,$25,  6; 160
		dc.b $31,$27,  0,$16,  2,  7,  2,$37,$2D,$2D,$2D,$3C,$3C,$2D,$2D,  0; 176
		dc.b   0,  0,$1E, $F,$15,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$20,$1F,$1E,$1E; 192
		dc.b $1E,$1E,$1E,$1E, $C,$11,  9,$34,$34,$11,$1E,$1E,$1E,$1E,  0,  0; 208
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$1E,$1E,$20,$11,  8; 240
		dc.b   9, $A,$1D,  9,$1E,$1E,$1E,$1E,$1E,$1E,  0,  0,  0,  0,  0,  0; 256
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 272
		dc.b   0,  0		; 288
Level_GHZBg:	dc.b $1F,  0,$3D,$3E,$3A,$3F,$30,$39,$3B,$3D,$3A,$30,$3E,$39,$3D,$3B; 0
					; DATA XREF: ROM:Level_Indexo
		dc.b $3B,$3D,$3E,$3A,$3F,$3E,$3A,$3F,$30,$39,$3B,$3D,$3A,$30,$3E,$39; 16
		dc.b $3D,$3B		; 32
Level_EHZ1:	incbin	"level/layout/EHZ_1.bin"
		even
Level_EHZ2:	incbin	"level/layout/EHZ_2.bin"
		even
Level_EHZBg:	incbin	"level/layout/EHZ_BG.bin"
		even
Level_HTZ1:	incbin	"level/layout/HTZ_1.bin"
		even
Level_HTZ2:	incbin	"level/layout/HTZ_2.bin"
		even
Level_HTZBg:	incbin	"level/layout/HTZ_BG.bin"
		even
Level_CPZ1:	incbin	"level/layout/CPZ_1.bin"
		even
Level_HPZ1:	incbin	"level/layout/HPZ_1.bin"
		even
Level_CPZBg:	incbin	"level/layout/CPZ_BG.bin"
		even
Level_HPZBg:	incbin	"level/layout/HPZ_BG.bin"
		even
Level_Null:	dc.b   0,  0,  0,  0

Art_BigRing:	dc.l	     0,	       0,	 0,	   0,	    $D,	     $DD,    $EDDC,   $EDDCC,	     0,	     $DD,   $DDCCC, $DDCCC6C,$DCCCCCCC,$CCCCCCCC,$CCCDCDDD,$DDCCCCDD; 0
		dc.l   $CCCCCC,$CCC66666,$66666666,$CCCCCCCC,$CCCCCCCC,$CDDDDDDD,$DDDDDDDD,$DDDEEEEE,$CCCCCC00,$666666CC,$66666666,$66666666,$CCCCC666,$DDDDDCCC,$DDDDDDDD,$EEEEEEEE; 16
		dc.l	     0,$CC000000,$66CCC000,$66666CC0,$66666666,$CC666666,$DCCCC666,$DDDDCCC6,	     0,	       0,	 0,	   0,$C0000000,$66000000,$666C0000,$66666000; 32
		dc.l	     0,	       0,	 0,	  $E,	   $EE,	     $EE,     $EED,    $EEED,  $EEDDDD,	$EEDDDDC,$EEDDDDCC,$EDDDDCCC,$DDDDCCCD,$DDDCCCCD,$DDCCCCDE,$DCCCCDDE; 48
		dc.l $CCCCDDDD,$CCCDDDEE,$CDDDEEEE,$DDEEEEEE,$DEEEEE00,$EEEE0000,$EE000000,$E0000000,$EEEEEEEE,$EEEEEEEE,$EEE00000,	   0,	     0,	       0,	 0,	   0; 64
		dc.l $EEEEEEEE,$EEEEEEEE,     $EEE,	   0,	     0,	       0,	 0,	   0,$EEEDDDCC,$EEEEEDDD,$EEEEEEED,$EEEEEEEE,  $EEEEEE,	   $EEEE,      $EE,	  $E; 80
		dc.l $66666600,$CC666660,$DDC66666,$EDDC6666,$EEDDC666,$EEEDDC66,$EEEEDDC6,$EEEEEDC6,	     0,	       0,	 0,$60000000,$6C000000,$66000000,$66600000,$666C0000; 96
		dc.l	 $EEDD,	  $EEEDD,   $EEEDD,  $EEEDDC,  $EEEDDC,	 $EEEDCC, $EEEEDCC, $EEEDDCC, $EEEDCCC,	$EEEDCCC,$EEEEDCCC,$EEEEDCCC,$EEEEDCCC,$EEEEDCCC,$EEEEDCCC,$EEEEDCCC; 112
		dc.l $EEEEDCCC,$EEEEDCCC,$EEEEDCCC,$EEEEDDCC,$EEEEEDCC,$EEEEEDCC, $EEEEDCC, $EEEEEDC, $EEEEEDC,	$EEEEEDC,  $EEEEDC,  $EEEEED,  $EEEEED,	  $EEEEE,   $EEEEE,    $EEEE; 128
		dc.l $DCCCCDEE,$CCCCDEE0,$CCCCDE00,$CCCDEE00,$CCCDE000,$CCCDE000,$CCCE0000,$CCDE0000,$CCD00000,$CCD00000,$CCD00000,$CC000000,$C6000000,$C6000000,$C6000000,$C6000000; 144
		dc.l $66000000,$66000000,$66000000,$66000000,$66000000,$66600000,$66600000,$66600000,$66660000,$66660000,$C6666000,$C6666000,$C6666600,$DC666600,$EDC66660,$EDC66666; 160
		dc.l $EEEEEDDC,	$EEEEEDC,  $EEEEDD,  $EEEEED,	$EEEED,	  $EEEEE,    $EEEE,    $EEEE,	  $EEE,	    $EEE,     $EEE,	 $EE,	   $EE,	     $EE,      $EE,	 $EE; 176
		dc.l	   $EE,	     $EE,      $EE,	 $EE,	   $EE,	    $EEE,     $EEE,	$EEE,	 $EEED,	   $EEED,   $EEEDD,   $EEEDD,  $EEEDDC,	 $EEEDCC, $EEEDDCC,$EEEDDCCC; 192
		dc.l $66660000,$C666C000,$C666C000,$CC666C00,$DC666C00,$DC666C00,$DCC666C0,$DDC666C0,$EDC666C0,$EDC666C0,$EDC6666C,$EDDC666C,$EDDC666C,$EDDC666C,$EDDC666C,$EDDC666C; 208
		dc.l $EDDCC66C,$EDDCC66C,$EDDCC66C,$EDDCC66C,$EDDCC66C,$DDDCC6CC,$DDDCC6C0,$DDCCC6C0,$DDCCCCD0,$DDCC6CD0,$CDCCCC00,$CCCCCD00,$CDCCCD00,$CCCCD000,$DCCCD000,$DCCD0000; 224
		dc.l	 $EEEE,	    $EEE,      $EE,	 $EE,	    $E,	       0,	 0,	   0,$EEDC6666,$EEEDC666,$EEEEDC66,$EEEEEDC6,$EEEEEEDC,$EEEEEEED, $EEEEEEE,  $EEEEEE; 240
		dc.l $60000000,$66000000,$66660000,$66666600,$66666666,$CC666666,$DDC66666,$EEDCCC66,	     0,	       0,	 0,	   0,	     0,$66600000,$66666666,$66666666; 256
		dc.l	     0,	       0,	 0,	   0,	     0,	    $DDD,$6666CCCC,$CCCCCCCC,	    $E,	     $EE,    $EEED,  $EEEDDC,$EEDDDCCC,$DCCCCCCC,$CCCCCCCC,$CCCCCCCD; 272
		dc.l $EEDDCCCD,$DDCCCCDD,$DCCCCDDD,$CCCCDDDD,$CCCDDDDE,$CCDDDDEE,$CDDDDEE0,$DDDDEE00,$CCDD0000,$CDD00000,$DD000000,$DE000000,$E0000000,	       0,	 0,	   0; 288
		dc.l	$EEEEE,	   $EEEE,      $EE,	  $E,	     0,	       0,	 0,	   0,$EEEDDCCC,$EEEEEDDD,$EEEEEEEE,$EEEEEEEE, $EEEEEEE,	  $EEEEE,      $EE,	   0; 304
		dc.l $CCCCCCCC,$DCCCCCCC,$EDDDDCCC,$EEEEDDDD,$EEEEEEEE,$EEEEEEEE,$EEEEEEEE,  $EEEEEE,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$DDDDDDDD,$EEEEEEEE,$EEEEEEEE,$EEEEEEEE,$EEEEEE00; 320
		dc.l $CCCCCDDD,$CCCDDDDD,$DDDDDEEE,$DEEEEEEE,$EEEEEEE0,$EEEEE000,$EE000000,	   0,$DDEEE000,$EEEE0000,$EE000000,$E0000000,	     0,	       0,	 0,	   0; 336
		dc.l	     0,	       0,	$D,	$DDC,	 $DCCC,	  $DCCCD,  $DCCDDD, $DCDDDDD,	$CCCCC,	$DCCC666,$CC666666,$C6CCC666,$CCCCCCCC,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD; 352
		dc.l $CCCCC000,$66666CCC,$66666666,$66666666,$66666666,$CC666666,$DDCC6666,$DDDDC666,	     0,	       0,$CC000000,$66CC0000,$6666C000,$66666600,$66666660,$66666666; 368
		dc.l	     0,	      $E,      $ED,	 $ED,	  $EDD,	    $EDD,    $EDDE,   $EEDDE,$DDDDDDDD,$DDDDDEEE,$DDDEEEEE,$DDEEEEEE,$DEEEEEEE,$EEEEEEEE,$EEEEEEE0,$EEEEEDE0; 384
		dc.l $EEEEEEEE,$EEEEEEEE,$EEEE0000,$EE000000,$E0000000,	       0,	 0,	   0,$DDDDDC66,$EEDDDDC6,$EEEEDDDC,  $EEEDDD,	$EEEDD,	   $EEDD,     $EED,	 $EE; 400
		dc.l	   $EE,	      $E,	$E,	   0,	     0,	       0,	 0,	   0,$66666666,$66666666,$66666666,$C6666666,$DC666666,$DC666666,$DDC66666,$DDC66666; 416
		dc.l $DDDC6666,$EDDC6666,$EDDDC666,$EDDDC666,$EDDDCC66,$EEDDDC66,$EEDDDC66, $EDDDCC6,$60000000,$66000000,$66000000,$66600000,$666C0000,$66660000,$66666000,$66666000; 432
		dc.l $66666000,$66666C00,$66666C00,$666666C0,$666666C0,$666666C0,$66666660,$6666666C,	$EDDEE,	  $EDDEE,   $EDEEE,  $EEDEEE,  $EDDEEE,	 $EDDEED, $EEDDEED, $EEDEEDD; 448
		dc.l  $EDDEEDD,	$EDDEDDC,$EEDDEDCC,$EEDDEDCC,$EEDDEDCC,$EEDDDCCC,$EEEDDCCC,$EEEDDCC6,$EEEDDCC6,$EEEDDCC6,$EEEDDC66,$EEEDDC66,$EEEEDC66,$EEEEDC66, $EEEDC66, $EEEED66; 464
		dc.l  $EEEED66,	$EEEED66,  $EEEDC6,  $EEEEC6,  $EEEEC6,	  $EEEDC,   $EEEED,   $EEEED,$EEEDDD00,$EEDDDE00,$EDDDD000,$DDDDE000,$DDDD0000,$DDCD0000,$DCCD0000,$CCCD0000; 480
		dc.l $CCCD0000,$CCC00000,$CCC00000,$CC600000,$C6600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66660000; 496
		dc.l $66660000,$66660000,$66660000,$66660000,$66666000,$66666000,$C6666600,$C6666600, $EDDDCC6,	$EDDDCC6, $EDDDCC6, $EDDDDCC,  $EDDDCC,	 $EDDDCC,  $EDDDCC,  $EDDDCC; 512
		dc.l   $EDDDCC,	 $EDDDCC,  $EDDDCC,  $EDDDCC, $EDDDDCC,	$EDDDCCC, $EDDDCCC, $EDDDCCC,$6666666C,$6666666C,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666; 528
		dc.l $6666666C,$C666666C,$C666666C,$CCC666CC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCD,	     0,	       0,	 0,	   0,	     0,	      $E,	$E,	 $ED; 544
		dc.l	   $ED,	    $EDD,    $DDDD,   $DDDDD,  $DDDDDC,$DDDDDCCD,$DDDCCDDD,$DDDDDDDD, $EDDDCCC,$EDDDDCCC,$EDDDDCCC,$EDDDCCCC,$EDDDCCCC,$DDDDCCCC,$DDDCCCCC,$DDDCCDCC; 560
		dc.l $DDCCDDCC,$DDCCDDDC,$DCCDDDDD,$CCDDDDDD,$CDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDEE,$CCCCCCCD,$CCCCCCC0,$CCCCCCC0,$CCCCCCD0,$CCCCCCD0,$CCCCCD00,$CCCCCD00,$CCCCD000; 576
		dc.l $CCCCD000,$CCDDE000,$DDDE0000,$DDDE0000,$DDE00000,$DE000000,$EE000000,$E0000000,	$EEEEE,	   $EEEE,     $EEE,	$EEE,	   $EE,	     $EE,	$E,	   0; 592
		dc.l $D6666660,$EC666660,$EDC66666,$EEDC6666,$EEED6666,$EEEEDD66,$EEEEDDDD,$EEEEEEDD,	     0,	       0,	 0,$60000000,$66000000,$66660000,$D6666DDD,$DDDDDDDD; 608
		dc.l  $EEEEEED,	$EEEEEEE,   $EEEEE,    $EEEE,	  $EEE,	      $E,	 0,	   0,$DDDDDDDD,$DDDDDDDD,$EEEDDDDD,$EEEEEEDD,$EEEEEEEE,$EEEEEEEE, $EEEEEEE,   $EEEEE; 624
		dc.l $DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDEEEEE,$EEEEEEEE,$EEEEEEEE,$EEEEEEEE,$EEEEE000,$DDDDDEEE,$DDDEEEE0,$EEEEEE00,$EEEEE000,$EEEE0000,$EE000000,	 0,	   0; 640
		dc.l	     0,	     $CC,     $CC6,    $DC66,	$DCC66,	  $DC666,  $DCC666,  $DCC666, $DDCC666,	$DCCC666, $DCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666; 656
		dc.l $DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$EDCCC666,$EDCCC666,$EDCCC666,$EDCCC666,$EDCCC666,$EDCCC666,$EDCCC666,$EDCCCC66; 672
		dc.l $CCCCCCCC,$C666666C,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666; 688
		dc.l $66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666; 704
		dc.l $EDDCCC66,$EDDCCC66,$EDDCCCC6,$EDDCCCCC,$EDDCCCCC,$EDDCCCCC,$EDDCCCCC,$EDDCCCCC,$EDDCCCCC,$EDDDCCCC,$EDDDCCCC,$EEDDCCCC,$EEDDCCCC,$EEDDDCCC,$EEDDDCCC,$EEDDDDCC; 720
		dc.l $EEDDDDDC,$EEDDDDDD,$EEDDDDDD,$EEDDDDDD,$EEEDDDDD,	$EEDDDDD, $EEDDDDD, $EEEDDDD,  $EEDDDD,	 $EEEDDD,   $EEEDD,   $EEEEE,	 $EEEE,	    $EEE,      $EE,	   0; 736
		dc.l $66666666,$66666666,$66666666,$C666666C,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC; 752
		dc.l $CCCCCCCC,$DCCCCCCD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$EEEEEEEE,$EEEEEEEE,$EEEEEEEE,$EEEEEEEE; 768
;
; leftover level layouts from a	previous build
;
Leftover_LevelLayouts:dc.b   0,	 0,$6E,$6E,$AF,$76,$AB,$43,  0,	 0,$B5,$66,$A8,$B2,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0; 0
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 32
		dc.b   0,  0,  0,  0,$A2,  0,  0,$93,  0,  0,$93,$57,$1A,  0,$9C, $F,$95,  0,  0,  0,$B3,$66,$67,  0,  0,  0,$A1,$96,$39,$2F,$C9,$84; 64
		dc.b $8F,$43,$42,$98, $D,$18,$D1,$47,$5F,$7C,$6E,$86,$88,$6E,$6E,$86,$94, $F, $F,$90, $F, $F,$2F,$3F,$14,  0,$93,$49,$96,$96,$D4,$68; 96
		dc.b $94,$90,$6E,$74,$75,$86,$AB,$F0,$F0,$F0,$F0,$F0,$98, $F,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 128
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 160
		dc.b   0,$10,  9,$2B,$A8,$2D,$14,$8C,$16,  6,$8E,$35,$36,$1F,$CB, $F,$95, $E,  0,  0,$64,  0,$B5,$66,$67,  0,$67,  0,$43,$54,$44,$63; 192
		dc.b $A2,  0,  0,$73,$62,$44,$95,$7B,$7B,$D0,$6E,$6E,$6E,$6E,$7D,$BF,$BA,$5A,$5A,$5A,$5A,$5A,$5A,$5A,$2F,$3F,$8E,$78,$D7,$4A,$4A,$E2; 224
		dc.b $94,$90,$75,$B0,$6E,$6E,$A1,$96,$96,$96,$96,$96,$96,$96,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 256
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$9F,  0; 288
		dc.b   0,$55, $F,$A7,  4,$3D,$42,$47,$40,$41, $F,$31,$80,$2E, $F,$53,$54,$42,  0,  0,$93,$A2,$57,$1A,$B5,$C2,$B5,$66,$67,  0,  0,$93; 320
		dc.b $A8,$C5,$66,$67,  0,  0,$47,$49,$96,$4E,$6E,$6E,$86,$6E,$47,$CF,$94, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F; 352
		dc.b  $F,$90,$88,$76,$77,$6E,$6E,$6E,$6E,$6E,$6E,$6E,$6E,$6E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 384
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,$18; 416
		dc.b $14,  0,$A1, $F, $F, $F,  4,$7B,$50,$51, $F,$95,$54,$54,$52,  0,  0,  0,  0,  0,$B2,$8E,$35,$36,  0,$64,$93,$93,$1F,$16,  6,$8E; 448
		dc.b $98,$AB,  0,  0,$BD,  3,$D0,$4A,$D1,$6E,$6E,$6E,$6E,$86,$6E,$88,$94, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F; 480
		dc.b  $F,$90,$6E,$6E,$AF,$76,$77,$6E,$6E,$6E,$DD,$DD,$59,$7B,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 512
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F, $F; 544
		dc.b $B9,$F0,$A1, $F, $F, $F, $F, $F,$60,$61,$54,$73,  0,$10,$46,$BB,$BB,$B3,  0,  0,$62,$94,$72,$BE,$1F,$8A,  8,  8,$2E, $F, $F, $F; 576
		dc.b  $F,$90,$F0,$F0,$94, $F, $F, $F,$95,$D0,$6E,$88,$6E,$6E,$6E,$6E,$94, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F; 608
		dc.b  $F,$90,$6E,$6E,$6E,$6E,$AF,$76,$6E,$E4,$F2,$F2,$94, $F,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 640
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F, $F; 672
		dc.b $90,$F1,$A1, $F, $F, $F, $F, $F,$70,$71, $D,$18, $A,$33,$F3,$F4,$F4,$AB,$F0,$F0,$F0,$94,$31,$87,$2E, $F, $F, $F, $F, $F, $F, $F; 704
		dc.b  $F,$90,$F1,$F1,$94, $F, $F, $F,$95,$95,$6E,$6E,$6E,$6E,$6E,$6E,$94, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F; 736
		dc.b  $F,$90,$E0,$E0,$E0,$E0,$E0,$E0,$59, $F,$F3,$F3,$94, $F,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 768
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  1; 800
		dc.b $D6,$DF,$EA,$EC,$F7,$F7,$F7,$F7,$7F, $F,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$3C,$3C,$3C,  0,  0,  0; 832
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$3C,$3C,$3C,$3C,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$3C,$3C; 864
		dc.b $3C,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 896
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 928
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$3C,$3C,$3C,  0,  0,  0; 960
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$18,$19,  0,  3,  0,  0,  0,  0,$3C,$3C,$3C,$3C,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$3C,$3C; 992
		dc.b $3C,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1024
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1056
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  3,$27,  0,  0,  0; 1088
		dc.b   0,  0,  0,$11,  1,$1A,$25,$51,$28,$29,$70,$20,$44,$45,  1,  9,$3C,$3C,$3C,$3C,  9,  0,  0,  0,  0,  0,  0,  0,  0,  3,$3C,$3C; 1120
		dc.b   3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1152
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1184
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$11,  1,$23,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$3C,  9,  1,  0,  1; 1216
		dc.b $2B,$2C,  8,$21,$10,$70,$92,$61,$38,$39,  0,$78,$54,$87,  0,  0,$3C,$3C,$3C,$3C, $F, $F,  4,  5,  6,$4C,$3A,$3F,  0,$10,$1A,  0; 1248
		dc.b   3,$84, $F, $F,$85,  3,  3,  3,  3,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1280
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1312
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  2,$21,  3,$33,$34,$25,$80,  4,  5,  6,  7,  4,  5,  6,  7,  8,$24, $F,  3,$25,$26; 1344
		dc.b $3C,$2A,$1B,  2,$65,  0,$8B,$70,$49,$70,$70,$79,  0,  0,$11,  1,$46,  0,$11,$41,$2B,$2C,$14,$15,$16,$2F,$88,$15,  8,$65,$10,$25; 1376
		dc.b $26,  0, $C,  0,  0,$50,  0,  0,$30,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1408
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1440
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  3,  3,  3,  3,$14,$15,$16,$17,$14,$15,$16,$17,$1D,$1E,$1F,  0,$3C,$36; 1472
		dc.b   2,$72,$20,$44,$6E,$25,$6B,  0,$59,$24,  4,  5,  6,  7,$21, $F,$56,$24,$21, $F,  0,  0,  0,$18,$19,  0,$17,$31,  2,$60,$65,  3; 1504
		dc.b $36, $B,$1C, $B,  2,$5E,$5F,  2,$40,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1536
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1568
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,$27,$37,$2F,$8D,$3C,$30; 1600
		dc.b   0,$71,$7A,$7E,$79,$86,$7D,  2,  2,  2,$14,$15,$16,$17,  6,  7,  4,  5,  6,$4C,$3A,$91,$7F,$28,$29,$70,$20,$63,$10,$79,$71,  3; 1632
		dc.b   0,$2A,$20,  0,$4D,$4E,  0,$10,$23,  0, $F,  3,  3,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1664
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1696
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$8B,$70,$70,$20,  0,$12,$13,  2,  2,$40; 1728
		dc.b $8E,$32,  0,  0,  0,$10,$79,$3C,$72,$20,  0,$50,$12,$13,$16,$17,$14,$15,$16,$2F,$1F,$90,$40,$38,$83,$19,$71,$3C,$73,$68,$69,$10; 1760
		dc.b $25,$26,$78,$8A,$5D,$5B,$58,$66,$33,$34,  0,  3,  3, $F,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1792
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1824
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$71,  0,$3C,$78,  2,$22,  0,  0,  9,$2A; 1856
		dc.b $41,$42,$43,  6,  7,$65,$10,$70,$79,$78,  8,$40,$22,  0,  0,$3C, $C, $D,$20,$67,$8F,$52,$72,$49,$28,$29,$79,  0,  0,$71,$3C,$71; 1888
		dc.b $72,$6D,$53, $E, $D,$55,  1, $C,  9,  1,  1,  1, $A,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1920
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1952
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$71,  0,$3C,$73,$20,$3C,$35, $B,  3,  3; 1984
		dc.b $72,$79,$15,$16,$17,$60,$65,$18,$19,$73,$20,$3C,  0,  9, $D,$1B,$1C,  3,$71,$73,$70,$62,$60,$31,$38,$39,$3C,$2D,$2E,$71,$3C,$5C; 2016
		dc.b $71,  0,  0,  3, $F,$71,  3,$1C,  3,  3,  3,  3,  3,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2048
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2080
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$71,  3,$3C,  0,$74,  8, $F,$3C,$3C,  0; 2112
		dc.b $71,  0,  0,  0,  0,$71,$7C,$28,$29,$70,$77,$31,$4A,$8C,$3C,$3C,$2A,$25,$6B,$10,$70,$76,$73,$20,$48,  0,  0,$3D,$3E,$64,$2C,$6C; 2144
		dc.b $57,$4F,  0,$10,$70,$79,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2176
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2208
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$73,$20,$3C,  0,  0,$3C,$2A,$3B,$3B, $B; 2240
		dc.b $60,  2,  0,  0,  8,$60,$40,$38,$83,$2E,$3C,  3,  0,$17,$89,$8A, $F,$86,$7B,$66,  0,$71,  3,$78,$31,  2,  2,  2,$39,$73,$20,$5A; 2272
		dc.b $6F,$31,$31,$65,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2304
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2336
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$74,  8,  8,$4A,$4B, $F,$10,$70,$76; 2368
		dc.b $73,$20,$44,$45,$25,$6B,$30,$48,$3D,$3E,$1A,$20,$12,$13,$40, $E, $D,  9, $C,  1,$25,$6B,$10,$79,$3C,$3C,$3C,$3C,$3C,$3C,$7A,$6A; 2400
		dc.b $73,$70,$70,$79,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2432
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2464
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$3C,$3C,  0,$17,  8,$75,  0,$73; 2496
		dc.b $70,$77,$54,$87,$86,$7B,$81,$58,$58,$82,$70,$77,$22,  0,$3C,$3C,$3C,$3C,$1C,  3,$86,$7B,$66,  0,$3C,$3C,  0,  0,$3C,$3C,  0,  0; 2528
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2560
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2592
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$3C,$3C,  0,  0,$3C,  0,  0,  0; 2624
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2656
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2688
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2720
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$3C,$3C,  0,  0,$3C,  0,  0,  0; 2752
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2784
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2816
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2848
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$7F, $F,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$98,$77,  2,  0,  0; 2880
		dc.b   0,  0,  0,  0,  0,  0,$77,$B5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,$77,$A8,$10,$10,$10,$10,$10,$10,$10,$10,$56; 2912
		dc.b $51,$53,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2944
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2976
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$15,$16,$15,$16,$10,$98,  2,$7A,$B5,$77,$A8,$17,  0,  0,  0,  0; 3008
		dc.b   0,  0,  0,  0,  0,  0,$93,$85,$94,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$14,$10,$10,$10,$10,$10,$10,$10,$54,$58; 3040
		dc.b $52,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3072
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3104
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$98,$8E,$77,$5A,$69,$7A,$69,  0,$7D,$85, $B,$14,$17,  0,  0,  0,  0; 3136
		dc.b   0,  0,  0,  0,  0,  0,$31,  5,  7,  0,$9D,$5F,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$14,$10,$10,$10,$10,$10,$10,$10,$56,$51; 3168
		dc.b $53,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3200
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3232
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$97,$AA,$13,$6A,$79,$8D,$67,$2A,$2B,  9, $A,$A9,$17,  0,$94,  0,  0; 3264
		dc.b   0,  0,  0,  0,  0,  0,$32,  3,$17,  0,$87,$70,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$14,$10,$10,$10,$10,$10,$10,  3,$57,$52; 3296
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3328
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3360
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$23,$15,$16,$23,$23,$23, $C, $D, $E,$15,$16,$21,$AC,  0,  0; 3392
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,$14,$20,$9E,$4C,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$14,$10,$10,$10,  3,$2E,  2,  0,$51,$53; 3424
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3456
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3488
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$15,$16,$1C,$1D,$1E,$10,$95,$AB,$7B,  0,  0; 3520
		dc.b   0,  0,  0,  0,  0,  0,  0,$93,$9B,$8E,$8F,  7,  0,$92,  0,  0,  0,  0,  0,  0,  0,  0,$14,$10,  3,$2E,  0,  0,  0,  0,$52,$10; 3552
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3584
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3616
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10, $C, $D, $E,$10,$10,$19,$68,$7D,$7E,$91,  0; 3648
		dc.b   0,  0,$94,$1B,$3B,  0,  0,$3C,$4D,$2D,$5D,$5E,  0,  4,$3A,  0,  0,  0,  0,  0,  0,  0,$24,$17,  0,  0,  0,  0,  0,$51,$53,$10; 3680
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3712
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3744
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$1C,$1D,$1E,$10,$10,$1A,$65,$78,$78,$75,  0; 3776
		dc.b   0,$3C,$31,$22,$17,  0,  0,  0,$AD,$3D,$6D,$6E,$6F,$14,$17,  0,  0,  0,$92,  0,  0,$93,$94,$9B,  0,  0,  0,  0,  0,$50,$10,$10; 3808
		dc.b $10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3840
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3872
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10, $F,$15,$16,$10,$10,$21,  6,$2C,$2D,$85,  0; 3904
		dc.b   0,  0,$80,$A8,$17,  0,  0,  0,$AE,$9A,$35,$36,$37,$10,$84,  0,$11,$25,$3E,  0,  0,$3C,$46,$47,$49,$5F,$92,$9C,$48,$A7,$16,$10; 3936
		dc.b $10,$10,$10,  3,$A8,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3968
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4000
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$15,$16, $F,$10,$15,$16,$10,$84,  3,  3,$5B,$3E,  0; 4032
		dc.b   0,  0,$81,$A9,$17,  0,  0,$40,$41,$30,$38,$39,$45,$9B,$7D,$1B,$10,$23,  0,$91,$92,$91,$7E, $B,$11,  1,  6,$43,$23,$10,$10,$10; 4064
		dc.b $10,$10,$AF,  0,$24,$2E,  3,$2E,  2,$2E,  3,$2E,  2,$2E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4096
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4128
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$1F,$18,$2E,$7A,$7B,$8C,  0,  0,  0,  0,$91; 4160
		dc.b   0,$1B,$10,$10,$17,  0,  0,$4A,$4B,$4C,$9F,$42,$6B,$6C,  8,$22,$10,$10,$21,$26,  8,  9,  8,$76,$A9,$23,$10,$10,$10,$10,$10,$10; 4192
		dc.b $10,$10,$55,  0,$60,$61,$62,$63,$64,$61,$62,$63,$64,$61,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4224
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4256
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$2F,$28,$29,$8A,$8B,$89,$B7,$B8,$99,$2A,$2B; 4288
		dc.b   9,$22,  3,  3,$27,  0,  0,$24,$3D,$26,  5,$43,$44,$10,$10,$15,$16,$10,$10,$10,$10,$15,$16, $F,$15,$16,$10,$10,$10,$10,$10,$10; 4320
		dc.b $10,$54,$58,$59,$74,$71,$72,$73,$74,$71,$72,$73,$74,$71,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4352
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4384
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$15,$16,$10,$23,$10,$23,$7F,$91,$2E,$7C,$5A; 4416
		dc.b $86,$7B,  0,  0,  0,  0,  0,  0,$32,  3,  3,  2,$2E,  3,  3,$2E,$2E,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10; 4448
		dc.b $10,$56,$51,$53,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4480
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4512
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$8F,$4E,$4F,$8B,$B9; 4544
		dc.b $96,$7E,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10; 4576
		dc.b $54,$58,$52,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,  0,  0,$93,$94,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4608
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4640
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,$32,  3,$23,$10,$23; 4672
		dc.b $21,  7,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10; 4704
		dc.b $56,$51,$53,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,$82,$2A,$2B,  9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4736
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4768
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,$2E,  3,$A8; 4800
		dc.b $10,$17,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$10,$10,$54; 4832
		dc.b $58,$52,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$17,  0,  0,$83,$23,$10,$10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4864
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4896
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  5,$A0,$A1,$A2,  0,$A4,$A5,$B0,$B1,$B2,$B3,$B4,$B5,$C0,$C1,$C2,$C3,$C4,$C5; 4928
		dc.b $D0,$D1,$D2,$D3,$D4,$D5,$E0,$E1,$E2,$E3,$E4,$E5,$F0,$F1,$F2,$F1,$E4,$E5,  7,  8,$A3,$A3,$A3,$A3,$A3,$A3,$A3,$A3,$A0,$A1,$A0,$A1; 4960
		dc.b $A0,$A1,$A0,$A1,$C0,$C1,$C2,$C3,$C4,$C5,$C6,$C7,$D0,$D1,$D2,$D3,$D4,$D5,$D6,$D7,$E0,$E1,$E2,$E3,$E4,$E5,$E6,$E7,$B0,$B1,$B0,$B1; 4992
		dc.b $B0,$B1,$B0,$B1,$A2,$A2,$A2,$A2,$A2,$A2,$A2,$A2,$B2,$B2,$B2,$B2,$B2,$B2,$B2,$B2,$B2,$B2,$B2,$B2,$B2,$B2,$B2,$B2,  0,  0,  0,  0; 5024
;----------------------------------------------------
; leftover from	a previous build
;----------------------------------------------------
Leftover_Art_BigRing:dc.l	  0,	    0,	      0,	0,	 $D,	  $DD,	  $EDDC,   $EDDCC,	  0,	  $DD,	 $DDCCC, $DDCCC6C,$DCCCCCCC,$CCCCCCCC,$CCCDCDDD,$DDCCCCDD; 0
		dc.l   $CCCCCC,$CCC66666,$66666666,$CCCCCCCC,$CCCCCCCC,$CDDDDDDD,$DDDDDDDD,$DDDEEEEE,$CCCCCC00,$666666CC,$66666666,$66666666,$CCCCC666,$DDDDDCCC,$DDDDDDDD,$EEEEEEEE; 16
		dc.l	     0,$CC000000,$66CCC000,$66666CC0,$66666666,$CC666666,$DCCCC666,$DDDDCCC6,	     0,	       0,	 0,	   0,$C0000000,$66000000,$666C0000,$66666000; 32
		dc.l	     0,	       0,	 0,	  $E,	   $EE,	     $EE,     $EED,    $EEED,  $EEDDDD,	$EEDDDDC,$EEDDDDCC,$EDDDDCCC,$DDDDCCCD,$DDDCCCCD,$DDCCCCDE,$DCCCCDDE; 48
		dc.l $CCCCDDDD,$CCCDDDEE,$CDDDEEEE,$DDEEEEEE,$DEEEEE00,$EEEE0000,$EE000000,$E0000000,$EEEEEEEE,$EEEEEEEE,$EEE00000,	   0,	     0,	       0,	 0,	   0; 64
		dc.l $EEEEEEEE,$EEEEEEEE,     $EEE,	   0,	     0,	       0,	 0,	   0,$EEEDDDCC,$EEEEEDDD,$EEEEEEED,$EEEEEEEE,  $EEEEEE,	   $EEEE,      $EE,	  $E; 80
		dc.l $66666600,$CC666660,$DDC66666,$EDDC6666,$EEDDC666,$EEEDDC66,$EEEEDDC6,$EEEEEDC6,	     0,	       0,	 0,$60000000,$6C000000,$66000000,$66600000,$666C0000; 96
		dc.l	 $EEDD,	  $EEEDD,   $EEEDD,  $EEEDDC,  $EEEDDC,	 $EEEDCC, $EEEEDCC, $EEEDDCC, $EEEDCCC,	$EEEDCCC,$EEEEDCCC,$EEEEDCCC,$EEEEDCCC,$EEEEDCCC,$EEEEDCCC,$EEEEDCCC; 112
		dc.l $EEEEDCCC,$EEEEDCCC,$EEEEDCCC,$EEEEDDCC,$EEEEEDCC,$EEEEEDCC, $EEEEDCC, $EEEEEDC, $EEEEEDC,	$EEEEEDC,  $EEEEDC,  $EEEEED,  $EEEEED,	  $EEEEE,   $EEEEE,    $EEEE; 128
		dc.l $DCCCCDEE,$CCCCDEE0,$CCCCDE00,$CCCDEE00,$CCCDE000,$CCCDE000,$CCCE0000,$CCDE0000,$CCD00000,$CCD00000,$CCD00000,$CC000000,$C6000000,$C6000000,$C6000000,$C6000000; 144
		dc.l $66000000,$66000000,$66000000,$66000000,$66000000,$66600000,$66600000,$66600000,$66660000,$66660000,$C6666000,$C6666000,$C6666600,$DC666600,$EDC66660,$EDC66666; 160
		dc.l $EEEEEDDC,	$EEEEEDC,  $EEEEDD,  $EEEEED,	$EEEED,	  $EEEEE,    $EEEE,    $EEEE,	  $EEE,	    $EEE,     $EEE,	 $EE,	   $EE,	     $EE,      $EE,	 $EE; 176
		dc.l	   $EE,	     $EE,      $EE,	 $EE,	   $EE,	    $EEE,     $EEE,	$EEE,	 $EEED,	   $EEED,   $EEEDD,   $EEEDD,  $EEEDDC,	 $EEEDCC, $EEEDDCC,$EEEDDCCC; 192
		dc.l $66660000,$C666C000,$C666C000,$CC666C00,$DC666C00,$DC666C00,$DCC666C0,$DDC666C0,$EDC666C0,$EDC666C0,$EDC6666C,$EDDC666C,$EDDC666C,$EDDC666C,$EDDC666C,$EDDC666C; 208
		dc.l $EDDCC66C,$EDDCC66C,$EDDCC66C,$EDDCC66C,$EDDCC66C,$DDDCC6CC,$DDDCC6C0,$DDCCC6C0,$DDCCCCD0,$DDCC6CD0,$CDCCCC00,$CCCCCD00,$CDCCCD00,$CCCCD000,$DCCCD000,$DCCD0000; 224
		dc.l	 $EEEE,	    $EEE,      $EE,	 $EE,	    $E,	       0,	 0,	   0,$EEDC6666,$EEEDC666,$EEEEDC66,$EEEEEDC6,$EEEEEEDC,$EEEEEEED, $EEEEEEE,  $EEEEEE; 240
		dc.l $60000000,$66000000,$66660000,$66666600,$66666666,$CC666666,$DDC66666,$EEDCCC66,	     0,	       0,	 0,	   0,	     0,$66600000,$66666666,$66666666; 256
		dc.l	     0,	       0,	 0,	   0,	     0,	    $DDD,$6666CCCC,$CCCCCCCC,	    $E,	     $EE,    $EEED,  $EEEDDC,$EEDDDCCC,$DCCCCCCC,$CCCCCCCC,$CCCCCCCD; 272
		dc.l $EEDDCCCD,$DDCCCCDD,$DCCCCDDD,$CCCCDDDD,$CCCDDDDE,$CCDDDDEE,$CDDDDEE0,$DDDDEE00,$CCDD0000,$CDD00000,$DD000000,$DE000000,$E0000000,	       0,	 0,	   0; 288
		dc.l	$EEEEE,	   $EEEE,      $EE,	  $E,	     0,	       0,	 0,	   0,$EEEDDCCC,$EEEEEDDD,$EEEEEEEE,$EEEEEEEE, $EEEEEEE,	  $EEEEE,      $EE,	   0; 304
		dc.l $CCCCCCCC,$DCCCCCCC,$EDDDDCCC,$EEEEDDDD,$EEEEEEEE,$EEEEEEEE,$EEEEEEEE,  $EEEEEE,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$DDDDDDDD,$EEEEEEEE,$EEEEEEEE,$EEEEEEEE,$EEEEEE00; 320
		dc.l $CCCCCDDD,$CCCDDDDD,$DDDDDEEE,$DEEEEEEE,$EEEEEEE0,$EEEEE000,$EE000000,	   0,$DDEEE000,$EEEE0000,$EE000000,$E0000000,	     0,	       0,	 0,	   0; 336
		dc.l	     0,	       0,	$D,	$DDC,	 $DCCC,	  $DCCCD,  $DCCDDD, $DCDDDDD,	$CCCCC,	$DCCC666,$CC666666,$C6CCC666,$CCCCCCCC,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD; 352
		dc.l $CCCCC000,$66666CCC,$66666666,$66666666,$66666666,$CC666666,$DDCC6666,$DDDDC666,	     0,	       0,$CC000000,$66CC0000,$6666C000,$66666600,$66666660,$66666666; 368
		dc.l	     0,	      $E,      $ED,	 $ED,	  $EDD,	    $EDD,    $EDDE,   $EEDDE,$DDDDDDDD,$DDDDDEEE,$DDDEEEEE,$DDEEEEEE,$DEEEEEEE,$EEEEEEEE,$EEEEEEE0,$EEEEEDE0; 384
		dc.l $EEEEEEEE,$EEEEEEEE,$EEEE0000,$EE000000,$E0000000,	       0,	 0,	   0,$DDDDDC66,$EEDDDDC6,$EEEEDDDC,  $EEEDDD,	$EEEDD,	   $EEDD,     $EED,	 $EE; 400
		dc.l	   $EE,	      $E,	$E,	   0,	     0,	       0,	 0,	   0,$66666666,$66666666,$66666666,$C6666666,$DC666666,$DC666666,$DDC66666,$DDC66666; 416
		dc.l $DDDC6666,$EDDC6666,$EDDDC666,$EDDDC666,$EDDDCC66,$EEDDDC66,$EEDDDC66, $EDDDCC6,$60000000,$66000000,$66000000,$66600000,$666C0000,$66660000,$66666000,$66666000; 432
		dc.l $66666000,$66666C00,$66666C00,$666666C0,$666666C0,$666666C0,$66666660,$6666666C,	$EDDEE,	  $EDDEE,   $EDEEE,  $EEDEEE,  $EDDEEE,	 $EDDEED, $EEDDEED, $EEDEEDD; 448
		dc.l  $EDDEEDD,	$EDDEDDC,$EEDDEDCC,$EEDDEDCC,$EEDDEDCC,$EEDDDCCC,$EEEDDCCC,$EEEDDCC6,$EEEDDCC6,$EEEDDCC6,$EEEDDC66,$EEEDDC66,$EEEEDC66,$EEEEDC66, $EEEDC66, $EEEED66; 464
		dc.l  $EEEED66,	$EEEED66,  $EEEDC6,  $EEEEC6,  $EEEEC6,	  $EEEDC,   $EEEED,   $EEEED,$EEEDDD00,$EEDDDE00,$EDDDD000,$DDDDE000,$DDDD0000,$DDCD0000,$DCCD0000,$CCCD0000; 480
		dc.l $CCCD0000,$CCC00000,$CCC00000,$CC600000,$C6600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66600000,$66660000; 496
		dc.l $66660000,$66660000,$66660000,$66660000,$66666000,$66666000,$C6666600,$C6666600, $EDDDCC6,	$EDDDCC6, $EDDDCC6, $EDDDDCC,  $EDDDCC,	 $EDDDCC,  $EDDDCC,  $EDDDCC; 512
		dc.l   $EDDDCC,	 $EDDDCC,  $EDDDCC,  $EDDDCC, $EDDDDCC,	$EDDDCCC, $EDDDCCC, $EDDDCCC,$6666666C,$6666666C,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666; 528
		dc.l $6666666C,$C666666C,$C666666C,$CCC666CC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCD,	     0,	       0,	 0,	   0,	     0,	      $E,	$E,	 $ED; 544
		dc.l	   $ED,	    $EDD,    $DDDD,   $DDDDD,  $DDDDDC,$DDDDDCCD,$DDDCCDDD,$DDDDDDDD, $EDDDCCC,$EDDDDCCC,$EDDDDCCC,$EDDDCCCC,$EDDDCCCC,$DDDDCCCC,$DDDCCCCC,$DDDCCDCC; 560
		dc.l $DDCCDDCC,$DDCCDDDC,$DCCDDDDD,$CCDDDDDD,$CDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDEE,$CCCCCCCD,$CCCCCCC0,$CCCCCCC0,$CCCCCCD0,$CCCCCCD0,$CCCCCD00,$CCCCCD00,$CCCCD000; 576
		dc.l $CCCCD000,$CCDDE000,$DDDE0000,$DDDE0000,$DDE00000,$DE000000,$EE000000,$E0000000,	$EEEEE,	   $EEEE,     $EEE,	$EEE,	   $EE,	     $EE,	$E,	   0; 592
		dc.l $D6666660,$EC666660,$EDC66666,$EEDC6666,$EEED6666,$EEEEDD66,$EEEEDDDD,$EEEEEEDD,	     0,	       0,	 0,$60000000,$66000000,$66660000,$D6666DDD,$DDDDDDDD; 608
		dc.l  $EEEEEED,	$EEEEEEE,   $EEEEE,    $EEEE,	  $EEE,	      $E,	 0,	   0,$DDDDDDDD,$DDDDDDDD,$EEEDDDDD,$EEEEEEDD,$EEEEEEEE,$EEEEEEEE, $EEEEEEE,   $EEEEE; 624
		dc.l $DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDEEEEE,$EEEEEEEE,$EEEEEEEE,$EEEEEEEE,$EEEEE000,$DDDDDEEE,$DDDEEEE0,$EEEEEE00,$EEEEE000,$EEEE0000,$EE000000,	 0,	   0; 640
		dc.l	     0,	     $CC,     $CC6,    $DC66,	$DCC66,	  $DC666,  $DCC666,  $DCC666, $DDCC666,	$DCCC666, $DCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666; 656
		dc.l $DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$DDCC6666,$EDCCC666,$EDCCC666,$EDCCC666,$EDCCC666,$EDCCC666,$EDCCC666,$EDCCC666,$EDCCCC66; 672
		dc.l $CCCCCCCC,$C666666C,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666; 688
		dc.l $66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666,$66666666; 704
		dc.l $EDDCCC66,$EDDCCC66,$EDDCCCC6,$EDDCCCCC,$EDDCCCCC,$EDDCCCCC,$EDDCCCCC,$EDDCCCCC,$EDDCCCCC,$EDDDCCCC,$EDDDCCCC,$EEDDCCCC,$EEDDCCCC,$EEDDDCCC,$EEDDDCCC,$EEDDDDCC; 720
		dc.l $EEDDDDDC,$EEDDDDDD,$EEDDDDDD,$EEDDDDDD,$EEEDDDDD,	$EEDDDDD, $EEDDDDD, $EEEDDDD,  $EEDDDD,	 $EEEDDD,   $EEEDD,   $EEEEE,	 $EEEE,	    $EEE,      $EE,	   0; 736
		dc.l $66666666,$66666666,$66666666,$C666666C,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC,$CCCCCCCC; 752
		dc.l $CCCCCCCC,$DCCCCCCD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$DDDDDDDD,$EEEEEEEE,$EEEEEEEE,$EEEEEEEE,$EEEEEEEE; 768
;
; these	are some level mappings	(16x16 or 256x256)
;
Leftover_LevelMappings:dc.b   0,  0,$EE,$EE,$EE,$EE,  0,  0,  0,  0,  0,  0,  0,  0,$EE,$DC,$66,$66,$EE,$ED,$C6,$66,$EE,$EE,$DC,$66,$EE,$EE,$ED,$C6,$EE,$EE,$EE,$DC,$EE,$EE,$EE,$ED, $E,$EE,$EE,$EE,  0,$EE,$EE,$EE,$60,  0,  0,  0,$66,  0,  0,  0,$66,$66,  0,  0,$66,$66,$66,  0,$66,$66; 0
		dc.b $66,$66,$CC,$66,$66,$66,$DD,$C6,$66,$66,$EE,$DC,$CC,$66,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$66,$60,  0,  0,$66,$66,$66,$66,$66,$66,$66,$66,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 64
		dc.b   0,  0,  0,  0, $D,$DD,$66,$66,$CC,$CC,$CC,$CC,$CC,$CC,  0,  0,  0, $E,  0,  0,  0,$EE,  0,  0,$EE,$ED,  0,$EE,$ED,$DC,$EE,$DD,$DC,$CC,$DC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CD,$EE,$DD,$CC,$CD,$DD,$CC,$CC,$DD,$DC,$CC,$CD,$DD,$CC,$CC,$DD,$DD,$CC,$CD; 128
		dc.b $DD,$DE,$CC,$DD,$DD,$EE,$CD,$DD,$DE,$E0,$DD,$DD,$EE,  0,$CC,$DD,  0,  0,$CD,$D0,  0,  0,$DD,  0,  0,  0,$DE,  0,  0,  0,$E0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,$EE,$EE,  0,  0,$EE,$EE,  0,  0,  0,$EE,  0,  0,  0, $E,  0,  0; 192
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$EE,$ED,$DC,$CC,$EE,$EE,$ED,$DD,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE, $E,$EE,$EE,$EE,  0, $E,$EE,$EE,  0,  0,  0,$EE,  0,  0,  0,  0,$CC,$CC,$CC,$CC,$DC,$CC,$CC,$CC,$ED,$DD,$DC,$CC,$EE,$EE,$DD,$DD,$EE,$EE; 256
		dc.b $EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,  0,$EE,$EE,$EE,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$DD,$DD,$DD,$DD,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,  0,$CC,$CC,$CD,$DD,$CC,$CD,$DD,$DD,$DD,$DD,$DE,$EE,$DE,$EE,$EE,$EE,$EE,$EE; 320
		dc.b $EE,$E0,$EE,$EE,$E0,  0,$EE,  0,  0,  0,  0,  0,  0,  0,$DD,$EE,$E0,  0,$EE,$EE,  0,  0,$EE,  0,  0,  0,$E0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $D,  0,  0, $D,$DC,  0,  0; 384
		dc.b $DC,$CC,  0, $D,$CC,$CD,  0,$DC,$CD,$DD, $D,$CD,$DD,$DD,  0, $C,$CC,$CC, $D,$CC,$C6,$66,$CC,$66,$66,$66,$C6,$CC,$C6,$66,$CC,$CC,$CC,$CC,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$CC,$CC,$C0,  0,$66,$66,$6C,$CC,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66; 448
		dc.b $66,$66,$CC,$66,$66,$66,$DD,$CC,$66,$66,$DD,$DD,$C6,$66,  0,  0,  0,  0,  0,  0,  0,  0,$CC,  0,  0,  0,$66,$CC,  0,  0,$66,$66,$C0,  0,$66,$66,$66,  0,$66,$66,$66,$60,$66,$66,$66,$66,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0,$ED,  0,  0,  0,$ED,  0,  0; 512
		dc.b  $E,$DD,  0,  0, $E,$DD,  0,  0,$ED,$DE,  0, $E,$ED,$DE,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$EE,$DD,$DE,$EE,$EE,$DD,$EE,$EE,$EE,$DE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$E0,$EE,$EE,$ED,$E0,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,  0,  0,$EE,  0,  0,  0,$E0,  0; 576
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$DD,$DD,$DC,$66,$EE,$DD,$DD,$C6,$EE,$EE,$DD,$DC,  0,$EE,$ED,$DD,  0, $E,$EE,$DD,  0,  0,$EE,$DD,  0,  0, $E,$ED,  0,  0,  0,$EE,  0,  0,  0,$EE,  0,  0,  0, $E,  0,  0,  0, $E,  0,  0,  0,  0,  0,  0; 640
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$C6,$66,$66,$66,$DC,$66,$66,$66,$DC,$66,$66,$66,$DD,$C6,$66,$66,$DD,$C6,$66,$66,$DD,$DC,$66,$66,$ED,$DC,$66,$66,$ED,$DD,$C6,$66,$ED,$DD,$C6,$66,$ED,$DD; 704
		dc.b $CC,$66,$EE,$DD,$DC,$66,$EE,$DD,$DC,$66, $E,$DD,$DC,$C6,$60,  0,  0,  0,$66,  0,  0,  0,$66,  0,  0,  0,$66,$60,  0,  0,$66,$6C,  0,  0,$66,$66,  0,  0,$66,$66,$60,  0,$66,$66,$60,  0,$66,$66,$60,  0,$66,$66,$6C,  0,$66,$66,$6C,  0,$66,$66,$66,$C0,$66,$66; 768
		dc.b $66,$C0,$66,$66,$66,$C0,$66,$66,$66,$60,$66,$66,$66,$6C,  0, $E,$DD,$EE,  0, $E,$DD,$EE,  0, $E,$DE,$EE,  0,$EE,$DE,$EE,  0,$ED,$DE,$EE,  0,$ED,$DE,$ED, $E,$ED,$DE,$ED, $E,$ED,$EE,$DD, $E,$DD,$EE,$DD, $E,$DD,$ED,$DC,$EE,$DD,$ED,$CC,$EE,$DD,$ED,$CC,$EE,$DD; 832
		dc.b $ED,$CC,$EE,$DD,$DC,$CC,$EE,$ED,$DC,$CC,$EE,$ED,$DC,$C6,$EE,$ED,$DC,$C6,$EE,$ED,$DC,$C6,$EE,$ED,$DC,$66,$EE,$ED,$DC,$66,$EE,$EE,$DC,$66,$EE,$EE,$DC,$66, $E,$EE,$DC,$66, $E,$EE,$ED,$66, $E,$EE,$ED,$66, $E,$EE,$ED,$66,  0,$EE,$ED,$C6,  0,$EE,$EE,$C6,  0,$EE; 896
		dc.b $EE,$C6,  0, $E,$EE,$DC,  0, $E,$EE,$ED,  0, $E,$EE,$ED,$EE,$ED,$DD,  0,$EE,$DD,$DE,  0,$ED,$DD,$D0,  0,$DD,$DD,$E0,  0,$DD,$DD,  0,  0,$DD,$CD,  0,  0,$DC,$CD,  0,  0,$CC,$CD,  0,  0,$CC,$CD,  0,  0,$CC,$C0,  0,  0,$CC,$C0,  0,  0,$CC,$60,  0,  0,$C6,$60; 960
		dc.b   0,  0,$66,$60,  0,  0,$66,$60,  0,  0,$66,$60,  0,  0,$66,$60,  0,  0,$66,$60,  0,  0,$66,$60,  0,  0,$66,$60,  0,  0,$66,$60,  0,  0,$66,$60,  0,  0,$66,$60,  0,  0,$66,$66,  0,  0,$66,$66,  0,  0,$66,$66,  0,  0,$66,$66,  0,  0,$66,$66,  0,  0,$66,$66; 1024
		dc.b $60,  0,$66,$66,$60,  0,$C6,$66,$66,  0,$C6,$66,$66,  0, $E,$DD,$DC,$C6, $E,$DD,$DC,$C6, $E,$DD,$DC,$C6, $E,$DD,$DD,$CC,  0,$ED,$DD,$CC,  0,$ED,$DD,$CC,  0,$ED,$DD,$CC,  0,$ED,$DD,$CC,  0,$ED,$DD,$CC,  0,$ED,$DD,$CC,  0,$ED,$DD,$CC,  0,$ED,$DD,$CC, $E,$DD; 1088
		dc.b $DD,$CC, $E,$DD,$DC,$CC, $E,$DD,$DC,$CC, $E,$DD,$DC,$CC,$66,$66,$66,$6C,$66,$66,$66,$6C,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$6C,$C6,$66,$66,$6C,$C6,$66,$66,$6C,$CC,$C6,$66,$CC,$CC,$CC; 1152
		dc.b $CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CD,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $E,  0,  0,  0, $E,  0,  0,  0,$ED,  0,  0,  0,$ED,  0,  0, $E,$DD,  0,  0,$DD,$DD,  0, $D,$DD,$DD,  0,$DD; 1216
		dc.b $DD,$DC,$DD,$DD,$DC,$CD,$DD,$DC,$CD,$DD,$DD,$DD,$DD,$DD, $E,$DD,$DC,$CC,$ED,$DD,$DC,$CC,$ED,$DD,$DC,$CC,$ED,$DD,$CC,$CC,$ED,$DD,$CC,$CC,$DD,$DD,$CC,$CC,$DD,$DC,$CC,$CC,$DD,$DC,$CD,$CC,$DD,$CC,$DD,$CC,$DD,$CC,$DD,$DC,$DC,$CD,$DD,$DD,$CC,$DD,$DD,$DD,$CD,$DD; 1280
		dc.b $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$EE,$CC,$CC,$CC,$CD,$CC,$CC,$CC,$C0,$CC,$CC,$CC,$C0,$CC,$CC,$CC,$D0,$CC,$CC,$CC,$D0,$CC,$CC,$CD,  0,$CC,$CC,$CD,  0,$CC,$CC,$D0,  0,$CC,$CC,$D0,  0,$CC,$DD,$E0,  0,$DD,$DE,  0,  0,$DD,$DE,  0,  0,$DD,$E0; 1344
		dc.b   0,  0,$DE,  0,  0,  0,$EE,  0,  0,  0,$E0,  0,  0,  0,  0, $E,$EE,$EE,  0,  0,$EE,$EE,  0,  0, $E,$EE,  0,  0, $E,$EE,  0,  0,  0,$EE,  0,  0,  0,$EE,  0,  0,  0, $E,  0,  0,  0,  0,$D6,$66,$66,$60,$EC,$66,$66,$60,$ED,$C6,$66,$66,$EE,$DC,$66,$66,$EE,$ED; 1408
		dc.b $66,$66,$EE,$EE,$DD,$66,$EE,$EE,$DD,$DD,$EE,$EE,$EE,$DD,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$60,  0,  0,  0,$66,  0,  0,  0,$66,$66,  0,  0,$D6,$66,$6D,$DD,$DD,$DD,$DD,$DD, $E,$EE,$EE,$ED, $E,$EE,$EE,$EE,  0, $E,$EE,$EE,  0,  0,$EE,$EE,  0,  0; 1472
		dc.b  $E,$EE,  0,  0,  0, $E,  0,  0,  0,  0,  0,  0,  0,  0,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$EE,$ED,$DD,$DD,$EE,$EE,$EE,$DD,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE, $E,$EE,$EE,$EE,  0, $E,$EE,$EE,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$EE,$EE,$EE,$EE; 1536
		dc.b $EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$E0,  0,$DD,$DD,$DE,$EE,$DD,$DE,$EE,$E0,$EE,$EE,$EE,  0,$EE,$EE,$E0,  0,$EE,$EE,  0,  0,$EE,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$CC,  0,  0, $C,$C6,  0,  0,$DC,$66,  0, $D; 1600
		dc.b $CC,$66,  0, $D,$C6,$66,  0,$DC,$C6,$66,  0,$DC,$C6,$66, $D,$DC,$C6,$66, $D,$CC,$C6,$66, $D,$CC,$66,$66,$DD,$CC,$66,$66,$DD,$CC,$66,$66,$DD,$CC,$66,$66,$DD,$CC,$66,$66,$DD,$CC,$66,$66,$DD,$CC,$66,$66,$DD,$CC,$66,$66,$DD,$CC,$66,$66,$DD,$CC,$66,$66,$DD,$CC; 1664
		dc.b $66,$66,$DD,$CC,$66,$66,$DD,$CC,$66,$66,$DD,$CC,$66,$66,$ED,$CC,$C6,$66,$ED,$CC,$C6,$66,$ED,$CC,$C6,$66,$ED,$CC,$C6,$66,$ED,$CC,$C6,$66,$ED,$CC,$C6,$66,$ED,$CC,$C6,$66,$ED,$CC,$CC,$66,$CC,$CC,$CC,$CC,$C6,$66,$66,$6C,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66; 1728
		dc.b $66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66; 1792
		dc.b $66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$ED,$DC,$CC,$66,$ED,$DC,$CC,$66,$ED,$DC,$CC,$C6,$ED,$DC,$CC,$CC,$ED,$DC; 1856
		dc.b $CC,$CC,$ED,$DC,$CC,$CC,$ED,$DC,$CC,$CC,$ED,$DC,$CC,$CC,$ED,$DC,$CC,$CC,$ED,$DD,$CC,$CC,$ED,$DD,$CC,$CC,$EE,$DD,$CC,$CC,$EE,$DD,$CC,$CC,$EE,$DD,$DC,$CC,$EE,$DD,$DC,$CC,$EE,$DD,$DD,$CC,$EE,$DD,$DD,$DC,$EE,$DD,$DD,$DD,$EE,$DD,$DD,$DD,$EE,$DD,$DD,$DD,$EE,$ED; 1920
		dc.b $DD,$DD, $E,$ED,$DD,$DD, $E,$ED,$DD,$DD, $E,$EE,$DD,$DD,  0,$EE,$DD,$DD,  0,$EE,$ED,$DD,  0, $E,$EE,$DD,  0, $E,$EE,$EE,  0,  0,$EE,$EE,  0,  0, $E,$EE,  0,  0,  0,$EE,  0,  0,  0,  0,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$66,$C6,$66,$66,$6C,$CC,$CC; 1984
		dc.b $CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,$DC,$CC,$CC,$CD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD; 2048
		dc.b $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$EE,$40,$AC,$40,$A4,$40,$A4,  0,$AC,$40,$AC,$40,$AC,$C0,$AC,$40,$A4,  0,$AC; 2112
		dc.b $40,$A4,$40,$AC,$40,$AC,$40,$AC,$80,$A4,$40,$AC,$40,$AC,$40,$A4,  0,$AC,$40,$AC,  0,$A0,$80,$A4,$40,$AC,$40,$A4,$40,$A4,  0,$AC,$40,$A4,$40,$A4,$C0,$AC,  0,$A4,  0,$A4,  0,$AC,$40,$AC,  0,$AC,$40,$AC,$C0,$AC,$40,$A4,$40,$AC,$40,$A4,$40,$AC,  0,$AC,$40,$AC; 2176
		dc.b $C0,$AC,$40,$A0,$40,$A4,  0,$A4,  0,$AC,$40,$AC,$40,$A4,$40,$A4,$40,$A0,  0,$A0,$40,$A4,  0,$A8,  0,$AC,$40,$A8,$C0,$A4,$40,$A0,  0,$A0,$40,$A8,$40,$AC,  0,$A4,$40,$A8,$40,$AC,  0,$A0,$C4,$84,$44,$84,$44,$84,$44,$84,$40,$84,$44,$84,$44,$84,$44,$84,$C4,$84; 2240
		dc.b $44,$84,$C4,$84,$C4,$84,$C4,$84,$44,$84,$44,$84,$C4,$84,$44,$84,$44,$84,$C0,$84,$C4,$84,$44,$84,$C4,$84,$C4,$84,$C4,$84,$44,$84,$44,$84,$44,$84,$40,$84,$C0,$84,$40,$84,$44,$8C,$44,$84,$44,$84,$44,$84,$44,$84,$C4,$8C,$44,$84,$C4,$84,$C4,$8C,$40,$84,$44,$84; 2304
		dc.b $44,$84,$44,$84,$44,$84,$44,$84,$C4,$84,$44,$84,$40,$84,$44,$84,$44,$84,$44,$84,$44,$8C,$C4,$84,$C4,$84,$C4,$84,$C4,$84,$44,$84,$40,$8C,$44,$84,$44,$84,$44,$84,$C4,$84,$C4,$84,$44,$84,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2368
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2432
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2496
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2560
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2624
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2688
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2752
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 2816
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $C,$82, $C,$82, $C,$82, $C,$80, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82; 2880
		dc.b   0,$82, $C,$82, $C,$80, $C,$82,  4,$82, $C,$82, $C,$82, $C,$82, $C,$80, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$80, $C,$80, $C,$82,  4,$80, $C,$82, $C,$82, $C,$82, $C,$82, $C,$80, $C,$82, $C,$82, $C,$80, $C,$82, $C,$82, $C,$82,  4,$82,  4,$82; 2944
		dc.b  $C,$80, $C,$82, $C,$82,  4,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$80, $C,$82, $C,$82, $C,$82, $C,$80, $C,$82, $C,$82, $C,$82, $C,$82,  4,$82, $C,$82,  4,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80; 3008
		dc.b  $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80,  4,$81, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80; 3072
		dc.b  $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$81, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,  0, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$82, $C,$80, $C,$82, $C,$82,  4,$82, $C,$82, $C,$82, $C,$80; 3136
		dc.b  $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$80, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$80, $C,$82, $C,$82, $C,$82, $C,$80, $C,$82, $C,$82, $C,$80, $C,$82, $C,$80, $C,$82, $C,$80, $C,$82, $C,$82, $C,$82, $C,$82; 3200
		dc.b  $C,$80, $C,$82, $C,$80, $C,$82,  4,$82, $C,$82, $C,$82, $C,$82, $C,$80, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$82, $C,$80, $C,$82, $C,$80, $C,$82, $C,$82, $C,$82, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80; 3264
		dc.b  $C,$80, $C,$80,  4,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80; 3328
		dc.b  $C,$80, $C,$80, $C,$80, $C,$81, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$81, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80, $C,$80,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3392
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3456
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3520
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3584
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3648
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3712
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3776
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 3840
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8; 3904
		dc.b $C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$CA,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$CA; 3968
		dc.b $C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8; 4032
		dc.b $C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8; 4096
		dc.b $C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8; 4160
		dc.b $C8,$C8,$88,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$88,$C8; 4224
		dc.b $C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$88,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8; 4288
		dc.b $C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C0,$CC,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8; 4352
		dc.b $CC,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$CC,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,$C8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  0,  0,  8; 4416
		dc.b   0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  0,  0,  8,  0,  0,  0,  8,  0,  0,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0; 4480
		dc.b   0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  0,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  0,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8; 4544
		dc.b   0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8; 4608
		dc.b   0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  0,  0,  0,  0,  0,  0,  8,  0,  8; 4672
		dc.b   0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  0,  0,  0,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8; 4736
		dc.b   0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8; 4800
		dc.b   0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,$88,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8; 4864
		dc.b   0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88; 4928
		dc.b $80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88; 4992
		dc.b $80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,  0,$88,$80,$88; 5056
		dc.b $80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,  0,$88,$80,$88,$80,$88,  0,$88,$80,$88,  0,$88,$80,$88; 5120
		dc.b $80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88; 5184
		dc.b $80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,  0,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88; 5248
		dc.b $80,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88; 5312
		dc.b $80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88; 5376
		dc.b $80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,  0,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,$80,$88,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5440
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5504
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5568
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5632
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5696
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5760
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5824
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5888
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$88,  0,$C8,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0; 5952
		dc.b $88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$C8,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0; 6016
		dc.b $88,  0,$88,  0,$C8,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$C8,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$88,  4,$C8,  4,$88,  4,$C8,  4,$C8,  4; 6080
		dc.b $C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$88,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$88,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4; 6144
		dc.b $C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0; 6208
		dc.b $88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0; 6272
		dc.b $88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$88,  0,$C8,  4,$88,  4,$C8,  4,$C8,  4,$88,  4,$C8,  4,$C8,  4,$C8,  4,$88,  4; 6336
		dc.b $88,  4,$88,  4,$88,  4,$C8,  4,$C8,  4,$88,  4,$88,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$CC,  4,$C8,  4,$88,  4,$88,  4,$C8,  4,$C8,  4,$C8,  4,$88,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$CC,  4,$C8,  4,$88,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4; 6400
		dc.b $C8,  4,$C8,  4,$88,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$88,  4,$88,  4,$C8,  4,$C8,  4,$C8,  4,$C8,  4,$88,  4,$C8,  4,$88,  4,$C8,  4,$88,  4,$C8,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6464
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6528
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6592
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6656
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6720
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6784
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6848
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 6912
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$80,$8C,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84; 6976
		dc.b $80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$80,$80,$84,$80,$84,$80,$84,$80,$84; 7040
		dc.b $80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$80,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$80,$80,$84,$80,$84,$80,$84,$80,$84,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94; 7104
		dc.b $80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94; 7168
		dc.b $80,$94,$80,$94,$80,$D4,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$84,$80,$84,$80,$80,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,  0,$84; 7232
		dc.b $80,$80,$80,$84,$80,$84,$80,$80,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$80,$80,$84,$80,$84,  0,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$80,$80,$84,$80,$84,$80,$84,$80,$84; 7296
		dc.b $80,$84,$80,$84,$80,$84,$80,$84,$80,$84,$80,$80,$80,$84,$80,$84,$80,$80,$80,$84,$80,$84,$80,$84,$80,$84,$80,$80,$80,$84,$80,$80,$80,$84,$80,$84,$80,$84,$80,$80,$80,$84,$80,$84,$80,$84,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94; 7360
		dc.b $80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94; 7424
		dc.b $80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94,$80,$94; 7488
;
; leftover art - full 128 char ASCII table
;
Leftover_Art_Alphabet:dc.b   0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0,  0,	 0, $F,$FF,  0,	 0,$F0,	 0,$F0,	 0, $F,$FF,$F0,	 0,$FF,$FF,$F0,	 0,  0,$F0,  0,$F0,  0,$FF,$FF,$F0,  0,$F0,  0,$F0,  0,$F0,  0,$F0; 0
		dc.b  $F,$FF,  0,  0,$F0,  0,$F0,  0, $F,$FF,$F0,  0,$FF,$FF,$F0,  0,  0,$F0,  0,$F0,  0, $F,$FF,  0,  0,$FF, $F,$F0,  0,$F0,  0,$F0,$FF,$FF,$F0,  0,$F0,  0,  0,  0,$FF,$FF,  0,  0,$FF,$FF,$F0,  0,  0,$F0,  0,$F0,  0, $F,$FF,  0,  0,$FF, $F,$F0,  0,$F0,  0,$F0; 64
		dc.b $FF,$FF,$F0,  0,$F0,  0,  0,  0,$FF,$FF,  0,  0,$FF,$FF,$F0,  0,  0,$FF,$FF,$F0,  0,  0,$F0,  0,  0,  0,$F0,  0,  0,  0,$F0,  0,$FF,$FF,$F0,  0,$F0,  0,  0,  0,$FF,$FF,  0,  0,$FF,$FF,$F0,  0,  0, $F,$FF,  0,  0,$F0,  0,$F0,  0,$F0,$FF,$F0,  0, $F,$F0,$F0; 128
		dc.b  $F,$FF,  0,  0,$F0,  0,$F0,  0,$FF,$FF,$F0,  0,$F0,  0,$F0,  0,  0,$F0, $F,$F0,  0,$FF,$F0,  0,  0,$F0,$FF,  0,  0,$F0,  0,$F0,$FF,$FF,  0,  0,$F0,  0,$F0,  0,$FF,$FF,$F0,  0,$FF,$FF,$F0,  0,  0,$F0,  0,  0,  0,$F0,  0,  0,  0,$F0,  0,  0,  0,$FF,$FF,$F0; 192
		dc.b $FF,$FF,  0,  0,$F0,  0,$F0,  0,$FF,$FF,$F0,  0,$FF,$FF,$F0,  0,  0,$FF,$FF,$F0,  0,$FF,$FF,  0,  0,$F0,  0,$F0,  0, $F,$FF,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0,$FF,$FF,$F0,  0,$F0,  0,$F0,  0,  0,$FF,$FF,$F0,  0,  0,$F0,  0,  0,  0,$F0,  0,  0,  0,$F0,  0; 256
		dc.b $F0,  0,  0,  0,$F0,  0,  0,  0,$F0,  0,  0,  0,$FF,$FF,$F0,  0,  0,$FF,$FF,$F0,  0,$FF,$FF,  0,  0,$F0,  0,  0,  0,$F0,  0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0, $F,$FF,  0,  0,  0,$FF,$FF,$F0,  0,  0,$F0,  0,  0,  0,$F0,  0,  0,  0,$F0,  0; 320
		dc.b $FF,$FF,$F0,  0,$F0,  0,  0,  0,$FF,$FF,  0,  0,$F0,  0,  0,  0,  0,$FF,$FF,$F0,  0,$FF,$FF,  0,  0,$F0,  0,  0,  0,$F0,  0,  0, $F,$FF,  0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0, $F,$FF,  0,  0,  0,$FF,$FF,$F0,  0,$FF,$FF,$F0,  0,$F0,$FF,  0,  0,$F0,  0,$F0; 384
		dc.b  $F,$FF,  0,  0,$F0,  0,$F0,  0, $F,$FF,$F0,  0,$FF,$FF,$F0,  0,  0, $F,$FF,  0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0, $F,$FF,  0, $F,$FF,  0,  0,$F0,  0,$F0,  0, $F,$FF,$F0,  0,$FF,$FF,$F0,  0,  0, $F,$FF,  0,  0,  0,$F0,  0,  0,  0,$F0,  0,  0, $F,$FF,  0; 448
		dc.b $FF,$FF,  0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0,$FF,$FF,  0,  0,  0,$FF,$FF,$F0,  0,$FF,$FF,  0,  0,$F0,  0,  0,  0,$FF,$FF,$F0,$FF,$FF,  0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0,$FF,$FF,  0,  0,  0, $F,$F0,  0,  0,  0,$F0,  0,  0,  0,$F0,  0,  0, $F,$FF,  0; 512
		dc.b $FF,$FF,  0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0,$FF,$FF,  0,  0,  0,$FF,$FF,$F0,  0,  0,$FF,$F0,  0,$FF,  0,  0,  0,$FF,$FF,$F0,$FF,$FF,  0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0,$FF,$FF,  0,  0,  0,$FF,$FF,$F0,  0,  0,$FF,$F0,  0,$F0,  0,$F0,  0, $F,$FF,  0; 576
		dc.b $FF,$FF,  0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0,$FF,$FF,  0,  0,  0,  0,$FF,  0,  0,$FF, $F,  0,  0,$FF,$FF,$F0,  0,  0, $F,  0,$F0,  0,$F0,  0,$FF,  0,$F0,  0,$F0,$FF,$F0,  0,$F0,  0,$F0,  0,  0,$F0, $F,$F0,  0,$FF,$F0,  0,  0,$F0,$FF,  0,  0,$F0,  0,$F0; 640
		dc.b  $F,$FF,  0,  0,$F0,  0,$F0,  0, $F,$FF,$F0,  0,$FF,$FF,$F0,  0,  0,$F0,  0,$F0,  0,$FF,$F0,$F0,  0,$F0, $F,$F0,  0,$F0,  0,$F0,$FF,$FF,$F0,  0,$F0,  0,  0,  0,$FF,$FF,  0,  0,$FF,$FF,$F0,  0,  0,$FF,$FF,$F0,  0,$FF,$FF,$F0,  0,$F0,  0,$F0,  0,$FF,$FF,  0; 704
		dc.b  $F,$FF,  0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0, $F,$FF,  0,  0,  0,$F0,  0,$F0,  0,$FF,$F0,$F0,  0,$F0, $F,$F0,  0,$F0,  0,$F0,$FF,$FF,$F0,  0,$F0,  0,  0,  0,$FF,$FF,  0,  0,$FF,$FF,$F0,  0,  0,$F0,  0,$F0,  0,$FF,$FF,$F0,  0,$F0,  0,$F0,  0,$F0,  0,$F0; 768
		dc.b  $F,$FF,  0,  0,$F0,  0,$F0,  0, $F,$FF,$F0,  0,$FF,$FF,$F0,  0,  0,$FF,$FF,$F0,  0,$FF,$FF,$F0,  0,$F0,  0,$F0,  0,$FF,$FF,  0,$FF,$FF,$F0,  0,$F0,  0,  0,  0,$FF,$FF,  0,  0,$FF,$FF,$F0,  0,  0, $F,$FF,  0,  0,$F0,  0,$F0,  0,$F0,  0,$F0,  0, $F,$FF,  0; 832
		dc.b   0,  0,  0,  0,  0, $F,$F0,  0,  0,  0,$FF,  0,$FF,$FF,$FF,$F0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0,$FF,$FF,$FF,$F0, $F,$F0,  0,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 896
		dc.b   0, $F,  0,  0,  0,$FF,$F0,  0, $F,$FF,$FF,  0, $F, $F, $F,  0,  0, $F,  0,  0,  0, $F,  0,  0,  0, $F,  0,  0,  0,  0,  0,  0,  0, $F,  0,  0,  0, $F,  0,  0,  0, $F,  0,  0, $F, $F, $F,  0, $F,$FF,$FF,  0,  0,$FF,$F0,  0,  0, $F,  0,  0,  0,  0,  0,  0; 960
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,  0,  0,  0,  0, $F,$F0,  0,  0,  0,  0,  0; 1024
		dc.b  $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,  0,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F,  0, $F,  0,$FF,$FF,$FF,$F0, $F,  0, $F,  0, $F,  0, $F,  0, $F,  0, $F,  0,$FF,$FF,$FF,$F0, $F,  0, $F,  0,  0,  0,  0,  0; 1088
		dc.b   0, $F,  0,  0, $F,$FF,$FF,$F0,$FF, $F,  0,  0,$FF,$FF,$FF,$F0,  0, $F, $F,$F0,$FF,$FF,$FF,  0,  0, $F,  0,  0,  0,  0,  0,  0,$FF,$F0,  0,$F0,$F0,$F0, $F,  0,$FF,$F0,$F0,  0,  0, $F,  0,  0,  0,$F0,$FF,$F0, $F,  0,$F0,$F0,$F0,  0,$FF,$F0,  0,  0,  0,  0; 1152
		dc.b $FF,$F0,  0,  0,$F0, $F,  0,  0,$F0,$F0, $F,  0, $F,$FF,$FF,$F0,$F0,  0, $F,  0,$F0,  0, $F,  0, $F,$FF,$F0,  0,  0,  0,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0, $F,  0,  0,  0,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1216
		dc.b   0,  0,$FF,  0,  0, $F,$F0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0, $F,$F0,  0,  0,  0,$FF,  0,  0,  0,  0,  0, $F,$F0,  0,  0,  0,$FF,  0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0,  0,  0,  0,  0; 1280
		dc.b   0,  0,  0,  0,  0, $F,  0,  0, $F, $F, $F,  0,  0,$FF,$F0,  0,  0,$FF,$F0,  0, $F, $F, $F,  0,  0, $F,  0,  0,  0,  0,  0,  0,  0, $F,  0,  0,  0, $F,  0,  0,  0, $F,  0,  0,$FF,$FF,$FF,$F0,  0, $F,  0,  0,  0, $F,  0,  0,  0, $F,  0,  0,  0,  0,  0,  0; 1344
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0, $F,  0,  0,  0,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F,$FF,$FF,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1408
		dc.b   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,$F0,  0,  0, $F,$F0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0; 1472
		dc.b  $F,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0, $F,$FF,$FF,  0,  0,  0,  0,  0,  0, $F,$F0,  0, $F,$FF,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0, $F,$FF,$FF,$F0,  0,  0,  0,  0; 1536
		dc.b  $F,$FF,$FF,  0,$FF,  0, $F,$F0,  0,  0, $F,$F0,  0, $F,$FF,  0, $F,$F0,  0,  0,$FF,  0,  0,  0,$FF,$FF,$FF,$F0,  0,  0,  0,  0, $F,$FF,$FF,$F0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0,$FF,$FF,  0,  0,  0, $F,$F0,$FF,  0, $F,$F0, $F,$FF,$FF,  0,  0,  0,  0,  0; 1600
		dc.b   0,  0,$FF,  0,  0, $F,$FF,  0,  0,$FF,$FF,  0, $F,$F0,$FF,  0,$FF,  0,$FF,  0,$FF,$FF,$FF,$F0,  0,  0,$FF,  0,  0,  0,  0,  0,$FF,$FF,$FF,$F0,$FF,  0,  0,  0,$FF,$FF,$FF,  0,$FF,  0, $F,$F0,  0,  0, $F,$F0,$FF,  0, $F,$F0, $F,$FF,$FF,  0,  0,  0,  0,  0; 1664
		dc.b  $F,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0,  0,  0,$FF,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0, $F,$FF,$FF,  0,  0,  0,  0,  0,$FF,$FF,$FF,$F0,$FF,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,  0,  0,  0; 1728
		dc.b  $F,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0, $F,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0, $F,$FF,$FF,  0,  0,  0,  0,  0, $F,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0, $F,$FF,$FF,$F0,  0,  0, $F,$F0,$FF,  0, $F,$F0, $F,$FF,$FF,  0,  0,  0,  0,  0; 1792
		dc.b   0,  0,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0,$FF,  0,  0,  0, $F,  0,  0,  0,$F0,  0,  0; 1856
		dc.b   0,  0, $F,$F0,  0, $F,$FF,  0, $F,$FF,  0,  0,$FF,  0,  0,  0, $F,$FF,  0,  0,  0, $F,$FF,  0,  0,  0, $F,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F,$FF,$FF,$F0,  0,  0,  0,  0, $F,$FF,$FF,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 1920
		dc.b $FF,  0,  0,  0, $F,$FF,  0,  0,  0, $F,$FF,  0,  0,  0, $F,$F0,  0, $F,$FF,  0, $F,$FF,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,  0, $F,$F0, $F,$F0,  0,  0, $F,$F0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0,  0,  0,  0,  0, $F,$F0,  0,  0,  0,  0,  0; 1984
		dc.b  $F,$FF,$FF,  0,$FF,  0, $F,$F0,$F0,$FF,$F0,$F0,$F0,$F0,$F0,$F0,$F0,$F0,$F0,$F0,$FF, $F, $F,$F0, $F,$FF,$FF,  0,  0,  0,  0,  0,  0,$FF,$F0,  0, $F,$F0,$FF,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,$FF,$FF,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,  0,  0,  0,  0; 2048
		dc.b $FF,$FF,$FF,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$FF,$FF,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,$FF,$FF,$FF,  0,  0,  0,  0,  0,  0,$FF,$FF,  0, $F,$F0, $F,$F0,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0, $F,$F0, $F,$F0,  0,$FF,$FF,  0,  0,  0,  0,  0; 2112
		dc.b $FF,$FF,$F0,  0, $F,$F0, $F,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,  0,$FF,$FF,$F0,  0,  0,  0,  0,  0, $F,$FF,$FF,$F0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$FF,$FF,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$FF,$FF,$F0,  0,  0,  0,  0; 2176
		dc.b  $F,$FF,$FF,$F0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$FF,$FF,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,  0, $F,$F0, $F,$F0,$FF,  0,  0,  0,$FF,  0,$FF,$F0,$FF,  0, $F,$F0, $F,$F0, $F,$F0,  0,$FF,$FF,$F0,  0,  0,  0,  0; 2240
		dc.b  $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$FF,$FF,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,  0,  0,  0,  0,$FF,$FF,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,$FF,$FF,  0,  0,  0,  0,  0; 2304
		dc.b   0, $F,$FF,$F0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,$FF,  0,$FF,  0,$FF,  0,$FF,  0, $F,$FF,$F0,  0,  0,  0,  0,  0,$FF,  0,  0,$F0,$FF,  0, $F,$F0,$FF,  0,$FF,  0,$FF,$FF,$F0,  0,$FF, $F,$F0,  0,$FF,  0,$FF,  0,$FF,  0, $F,$F0,  0,  0,  0,  0; 2368
		dc.b  $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$FF,$FF,$F0,  0,  0,  0,  0,$FF,  0, $F,$F0,$FF,$F0,$FF,$F0,$FF,$FF,$FF,$F0,$FF, $F, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,  0,  0,  0,  0; 2432
		dc.b $FF,  0, $F,$F0,$FF,$F0, $F,$F0,$FF,$FF, $F,$F0,$FF, $F,$FF,$F0,$FF,  0,$FF,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,  0,  0,  0,  0, $F,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0, $F,$FF,$FF,  0,  0,  0,  0,  0; 2496
		dc.b $FF,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,$FF,$FF,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0, $F,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF, $F,$FF,  0,$FF, $F,$FF,$F0, $F,$FF,$FF,$F0,  0,  0,  0,  0; 2560
		dc.b $FF,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,$FF,$FF,  0,$FF, $F,$F0,  0,$FF,  0,$FF,  0,$FF,  0, $F,$F0,  0,  0,  0,  0, $F,$FF,$FF,  0,$FF,  0, $F,$F0,$FF,  0,  0,  0, $F,$FF,$FF,  0,  0,  0, $F,$F0,$FF,  0, $F,$F0, $F,$FF,$FF,  0,  0,  0,  0,  0; 2624
		dc.b  $F,$FF,$FF,$F0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,  0,  0,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,$FF,$FF,  0,  0,  0,  0,  0; 2688
		dc.b $FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0, $F,$F0,$FF,  0,  0,$FF,$F0,  0,  0, $F,  0,  0,  0,  0,  0,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF, $F, $F,$F0,$FF,$FF,$FF,$F0,$FF,$F0,$FF,$F0, $F,  0, $F,  0,  0,  0,  0,  0; 2752
		dc.b $F0,  0,  0,$F0,$FF,  0, $F,$F0, $F,$F0,$FF,  0,  0,$FF,$F0,  0, $F,$F0,$FF,  0,$FF,  0, $F,$F0,$F0,  0,  0,$F0,  0,  0,  0,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,$FF,$FF,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,  0,  0,  0; 2816
		dc.b  $F,$FF,$FF,$F0,  0,  0, $F,$F0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0, $F,$FF,$FF,$F0,  0,  0,  0,  0,  0,$FF,$FF,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,$FF,  0,  0,  0,  0,  0; 2880
		dc.b  $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,$FF,$FF,  0, $F,$FF,$FF,$F0,  0, $F,$F0,  0, $F,$FF,$FF,$F0,  0, $F,$F0,  0,  0,  0,  0,  0, $F,$FF,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0, $F,$FF,$F0,  0,  0,  0,  0,  0; 2944
		dc.b   0, $F,  0,  0,  0,$FF,$F0,  0, $F,$F0,$FF,  0,$FF,  0, $F,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,$FF,$F0,  0,  0,  0,  0; 3008
		dc.b  $F,  0,  0,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F,$FF,$FF,  0,  0,  0,$FF,  0, $F,$FF,$FF,  0, $F,  0,$FF,  0, $F,  0,$FF,  0, $F,$FF,$FF,$F0,  0,  0,  0,  0; 3072
		dc.b  $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$FF,$FF,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$FF,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,$F0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,  0,$FF,$FF,$F0,  0,  0,  0,  0; 3136
		dc.b   0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,$FF,$FF,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,$FF,$FF,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$FF,$FF,$F0, $F,$F0,  0,  0,  0,$FF,$FF,$F0,  0,  0,  0,  0; 3200
		dc.b   0, $F,$FF,  0,  0,$FF,  0,  0,  0,$FF,  0,  0, $F,$FF,$FF,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,$FF,$FF,$F0,  0,  0, $F,$F0,  0,$FF,$FF,  0,  0,  0,  0,  0; 3264
		dc.b  $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$FF,$FF,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F,$F0,  0,  0,  0,  0,  0,  0,$FF,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,$FF,$FF,  0,  0,  0,  0,  0; 3328
		dc.b   0,  0,  0,  0,  0,  0,$FF,  0,  0,  0,  0,  0,  0, $F,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,  0, $F,  0,$FF,  0, $F,$FF,$F0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0, $F,$F0, $F,$F0,$FF,  0, $F,$FF,$F0,  0, $F,$F0,$FF,  0, $F,$F0, $F,$F0,  0,  0,  0,  0; 3392
		dc.b   0,$FF,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F,$FF,$FF,  0, $F,$F0,$F0,$F0, $F,$F0,$F0,$F0, $F,$F0,$F0,$F0, $F,$F0,$F0,$F0,  0,  0,  0,  0; 3456
		dc.b   0,  0,  0,  0,  0,  0,  0,  0, $F,$FF,$FF,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,$FF,$FF,  0,  0,  0,  0,  0; 3520
		dc.b   0,  0,  0,  0,  0,  0,  0,  0, $F,$FF,$FF,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$FF,$FF,  0, $F,$F0,  0,  0, $F,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,$FF,$FF,$F0,  0,  0, $F,$F0,  0,  0, $F,$F0; 3584
		dc.b   0,  0,  0,  0,  0,$FF,  0,  0,  0,$FF, $F,$F0,  0,$FF,$F0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,$FF,  0, $F,$F0,  0,  0,  0,$FF,$FF,  0,  0,  0, $F,$F0, $F,$F0, $F,$F0,  0,$FF,$FF,  0,  0,  0,  0,  0; 3648
		dc.b   0,  0,  0,  0,  0,$FF,  0,  0, $F,$FF,$FF,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0,$FF,  0,  0,  0, $F,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,$FF,$FF,  0,  0,  0,  0,  0; 3712
		dc.b   0,  0,  0,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0, $F,$F0,$FF,  0,  0,$FF,$F0,  0,  0, $F,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF,  0, $F,$F0,$FF, $F, $F,$F0, $F,$F0,$FF,  0,  0,  0,  0,  0; 3776
		dc.b   0,  0,  0,  0,  0,  0,  0,  0, $F,$F0, $F,$F0,  0,$FF,$FF,  0,  0, $F,$F0,  0,  0,$FF,$FF,  0, $F,$F0, $F,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F,$F0, $F,$F0, $F,$F0, $F,$F0,  0,$F0, $F,$F0,  0, $F,$FF,  0, $F,$FF,$F0,  0; 3840
		dc.b   0,  0,  0,  0,  0,  0,  0,  0, $F,$FF,$FF,$F0,  0,  0,$FF,  0,  0, $F,$F0,  0,  0,$FF,  0,  0, $F,$FF,$FF,$F0,  0,  0,  0,  0,  0,  0,$FF,  0,  0, $F,  0,  0,  0, $F,  0,  0,  0,$FF,  0,  0,  0, $F,  0,  0,  0, $F,  0,  0,  0,  0,$FF,  0,  0,  0,  0,  0; 3904
		dc.b   0,  0,  0,  0,  0, $F,  0,  0,  0, $F,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, $F,  0,  0,  0, $F,  0,  0,  0,  0,  0,  0,  0,$FF,  0,  0,  0,  0,$F0,  0,  0,  0,$F0,  0,  0,  0,$FF,  0,  0,  0,$F0,  0,  0,  0,$F0,  0,  0,$FF,  0,  0,  0,  0,  0,  0; 3968
		dc.b $FF,$FF,$FF,$F0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0; 4032
; --------------------------------------------------------------------------------------
; Leftover level mappings and palettes from a previous build
; --------------------------------------------------------------------------------------

Leftover_31000:
		incbin	"misc/leftovers/31000.bin"

; --------------------------------------------------------------------------------------
; Object layouts
; --------------------------------------------------------------------------------------
ObjPos_Index:	dc.w ObjPos_GHZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_GHZ2-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_GHZ3-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_GHZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index

		dc.w ObjPos_LZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_LZ2-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_LZ3-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_LZ3-ObjPos_Index,ObjPos_Null-ObjPos_Index

		dc.w ObjPos_CPZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_CPZ2-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_CPZ3-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_CPZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index

		dc.w ObjPos_EHZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_EHZ2-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_EHZ3-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_EHZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index

		dc.w ObjPos_HPZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_HPZ2-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_HPZ3-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_HPZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index

		dc.w ObjPos_HTZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_HTZ2-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_HTZ3-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_HTZ1-ObjPos_Index,ObjPos_Null-ObjPos_Index

		dc.w ObjPos_S1Ending-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_S1Ending-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_S1Ending-ObjPos_Index,ObjPos_Null-ObjPos_Index
		dc.w ObjPos_S1Ending-ObjPos_Index,ObjPos_Null-ObjPos_Index

		; platform objects in LZ/SBZ (unused)
		dc.w ObjPos_S1LZ1pf1-ObjPos_Index,ObjPos_S1LZ1pf2-ObjPos_Index
		dc.w ObjPos_S1LZ2pf1-ObjPos_Index,ObjPos_S1LZ2pf2-ObjPos_Index
		dc.w ObjPos_S1LZ3pf1-ObjPos_Index,ObjPos_S1LZ3pf2-ObjPos_Index
		dc.w ObjPos_S1LZ1pf1-ObjPos_Index,ObjPos_S1LZ1pf2-ObjPos_Index
		dc.w ObjPos_S1SBZ1pf1-ObjPos_Index,ObjPos_S1SBZ1pf2-ObjPos_Index
		dc.w ObjPos_S1SBZ1pf3-ObjPos_Index,ObjPos_S1SBZ1pf4-ObjPos_Index
		dc.w ObjPos_S1SBZ1pf5-ObjPos_Index,ObjPos_S1SBZ1pf6-ObjPos_Index
		dc.w ObjPos_S1SBZ1pf1-ObjPos_Index,ObjPos_S1SBZ1pf2-ObjPos_Index

		dc.w $FFFF,    0,    0
ObjPos_GHZ1:	incbin	"level/objects/GHZ_1.bin"
		dc.w $FFFF,    0,    0
ObjPos_GHZ2:	incbin	"level/objects/GHZ_2.bin"
		dc.w $FFFF,    0,    0
ObjPos_GHZ3:	incbin	"level/objects/GHZ_3.bin"
		dc.w $FFFF,    0,    0
ObjPos_LZ1:	dc.w $FFFF,    0,    0
ObjPos_LZ2:	dc.w $FFFF,    0,    0
ObjPos_LZ3:	dc.w $FFFF,    0,    0
ObjPos_S1LZ1pf1:dc.w	 7,$1078, $21A	; 0 ; DATA XREF: ROM:ObjPos_Indexo
		dc.w	 0,$10BE, $291	; 3
		dc.w	 2,$10BE, $307	; 6
		dc.w	 2,$10BE, $37E	; 9
		dc.w	 2,$105C, $390	; 12
		dc.w	 4,$1022, $352	; 15
		dc.w	 5,$1022, $2DB	; 18
		dc.w	 5,$1022, $265	; 21
		dc.w	 5		; 24
ObjPos_S1LZ1pf2:dc.w	 7,$127E, $280	; 0 ; DATA XREF: ROM:ObjPos_Indexo
		dc.w   $10,$12CE, $305	; 3
		dc.w   $12,$12CE, $38A	; 6
		dc.w   $12,$12CE, $40F	; 9
		dc.w   $12,$12A7, $46E	; 12
		dc.w   $13,$1232, $40F	; 15
		dc.w   $14,$1232, $38A	; 18
		dc.w   $14,$1232, $305	; 21
		dc.w   $14		; 24
ObjPos_S1LZ2pf1:dc.w	 7, $D22, $483	; 0 ; DATA XREF: ROM:ObjPos_Indexo
		dc.w   $21, $D9C, $482	; 3
		dc.w   $20, $DAE, $4EA	; 6
		dc.w   $23, $DAE, $564	; 9
		dc.w   $23, $DAE, $5DD	; 12
		dc.w   $23, $D34, $5DE	; 15
		dc.w   $22, $D22, $576	; 18
		dc.w   $21, $D22, $4FC	; 21
		dc.w   $21		; 24
ObjPos_S1LZ2pf2:dc.w	 7, $D62, $3A2	; 0 ; DATA XREF: ROM:ObjPos_Indexo
		dc.w   $30, $DD4, $3A2	; 3
		dc.w   $31, $DEE, $3FA	; 6
		dc.w   $32, $DEE, $46C	; 9
		dc.w   $32, $DEE, $4DD	; 12
		dc.w   $32, $D7C, $4DE	; 15
		dc.w   $33, $D62, $486	; 18
		dc.w   $30, $D62, $414	; 21
		dc.w   $30		; 24
ObjPos_S1LZ3pf1:dc.w	$B, $CAD, $242	; 0 ; DATA XREF: ROM:ObjPos_Indexo
		dc.w   $41, $D2D, $242	; 3
		dc.w   $41, $DAC, $242	; 6
		dc.w   $41, $DDE, $28F	; 9
		dc.w   $42, $DDE, $30E	; 12
		dc.w   $42, $DDE, $38D	; 15
		dc.w   $42, $DB0, $3DE	; 18
		dc.w   $43, $D31, $3DE	; 21
		dc.w   $43, $CB2, $3DE	; 24
		dc.w   $43, $C52, $3BF	; 27
		dc.w   $44, $C52, $340	; 30
		dc.w   $44, $C52, $2C1	; 33
		dc.w   $44		; 36
ObjPos_S1LZ3pf2:dc.w	 8,$1252, $20A	; 0 ; DATA XREF: ROM:ObjPos_Indexo
		dc.w   $50,$12D2, $20A	; 3
		dc.w   $51,$1352, $20A	; 6
		dc.w   $51,$13D2, $20A	; 9
		dc.w   $51,$13DE, $27E	; 12
		dc.w   $52,$139E, $2BE	; 15
		dc.w   $53,$131E, $2BE	; 18
		dc.w   $53,$129E, $2BE	; 21
		dc.w   $53,$1252, $28A	; 24
		dc.w   $50,$FFFF,    0	; 27
		dc.w	 0		; 30
ObjPos_CPZ1:	incbin	"level/objects/CPZ_1.bin"
		dc.w $FFFF,    0,    0
ObjPos_CPZ2:	dc.w $FFFF,    0,    0
ObjPos_CPZ3:	dc.w $FFFF,    0,    0
ObjPos_EHZ1:	incbin	"level/objects/EHZ_1.bin"
		dc.w $FFFF,    0,    0
ObjPos_EHZ2:	incbin	"level/objects/EHZ_2.bin"
		dc.w $FFFF,    0,    0
ObjPos_EHZ3:	dc.w $FFFF,    0,    0
ObjPos_HPZ1:	incbin	"level/objects/HPZ_1.bin"
		dc.w $FFFF,    0,    0
ObjPos_HPZ2:	dc.w $FFFF,    0,    0
ObjPos_HPZ3:	dc.w $FFFF,    0,    0
ObjPos_HTZ1:	incbin	"level/objects/HTZ_1.bin"
		dc.w $FFFF,    0,    0
ObjPos_HTZ2:	dc.w $FFFF,    0,    0
ObjPos_HTZ3:	incbin	"level/objects/HTZ_3.bin"
		dc.w $FFFF,    0,    0
ObjPos_S1SBZ1pf1:dc.w 7			; DATA XREF: ROM:ObjPos_Indexo
		dc.w  $E14, $370,    0	; 0
		dc.w  $E5A, $34D,    1	; 3
		dc.w  $EA0, $32A,    1	; 6
		dc.w  $EE7, $307,    1	; 9
		dc.w  $EEF, $340,    2	; 12
		dc.w  $EA9, $363,    3	; 15
		dc.w  $E63, $386,    3	; 18
		dc.w  $E1C, $3A9,    3	; 21
ObjPos_S1SBZ1pf2:dc.w 7			; DATA XREF: ROM:ObjPos_Indexo
		dc.w  $F14, $2E0,  $10	; 0
		dc.w  $F5A, $2BD,  $11	; 3
		dc.w  $FA0, $29A,  $11	; 6
		dc.w  $FE7, $277,  $11	; 9
		dc.w  $FEF, $2B0,  $12	; 12
		dc.w  $FA9, $2D3,  $13	; 15
		dc.w  $F63, $2F6,  $13	; 18
		dc.w  $F1C, $319,  $13	; 21
ObjPos_S1SBZ1pf3:dc.w 7			; DATA XREF: ROM:ObjPos_Indexo
		dc.w $1014, $270,  $20	; 0
		dc.w $105A, $24D,  $21	; 3
		dc.w $10A0, $22A,  $21	; 6
		dc.w $10E7, $207,  $21	; 9
		dc.w $10EF, $240,  $22	; 12
		dc.w $10A9, $263,  $23	; 15
		dc.w $1063, $286,  $23	; 18
		dc.w $101C, $2A9,  $23	; 21
ObjPos_S1SBZ1pf4:dc.w 7			; DATA XREF: ROM:ObjPos_Indexo
		dc.w  $F14, $570,  $30	; 0
		dc.w  $F5A, $54D,  $31	; 3
		dc.w  $FA0, $52A,  $31	; 6
		dc.w  $FE7, $507,  $31	; 9
		dc.w  $FEF, $540,  $32	; 12
		dc.w  $FA9, $563,  $33	; 15
		dc.w  $F63, $586,  $33	; 18
		dc.w  $F1C, $5A9,  $33	; 21
ObjPos_S1SBZ1pf5:dc.w 7			; DATA XREF: ROM:ObjPos_Indexo
		dc.w $1B14, $670,  $40	; 0
		dc.w $1B5A, $64D,  $41	; 3
		dc.w $1BA0, $62A,  $41	; 6
		dc.w $1BE7, $607,  $41	; 9
		dc.w $1BEF, $640,  $42	; 12
		dc.w $1BA9, $663,  $43	; 15
		dc.w $1B63, $686,  $43	; 18
		dc.w $1B1C, $6A9,  $43	; 21
ObjPos_S1SBZ1pf6:dc.w	  7,$1C14, $5E0	 ; 0 ; DATA XREF: ROM:ObjPos_Indexo
		dc.w   $50,$1C5A, $5BD	; 3
		dc.w   $51,$1CA0, $59A	; 6
		dc.w   $51,$1CE7, $577	; 9
		dc.w   $51,$1CEF, $5B0	; 12
		dc.w   $52,$1CA9, $5D3	; 15
		dc.w   $53,$1C63, $5F6	; 18
		dc.w   $53,$1C1C, $619	; 21
		dc.w   $53,$FFFF,    0	; 24
		dc.w	 0		; 27
ObjPos_S1Ending:dc.w   $10, $170,$280C	; 0 ; DATA XREF: ROM:ObjPos_Indexo
		dc.w   $14, $1B2,$2812	; 3
		dc.w   $28, $1B0,$280C	; 6
		dc.w   $30, $1B2,$2812	; 9
		dc.w   $40, $170,$280F	; 12
		dc.w   $5B, $1B1,$2811	; 15
		dc.w   $64, $1B1,$2811	; 18
		dc.w   $68, $1B1,$280C	; 21
		dc.w   $D8, $1B0,$2813	; 24
		dc.w   $E4, $1B1,$280C	; 27
		dc.w   $E8, $1B0,$280F	; 30
		dc.w   $F4, $1B0,$2810	; 33
		dc.w   $F8, $1AF,$2814	; 36
		dc.w  $108, $1B0,$280E	; 39
		dc.w  $108, $1B4,$2813	; 42
		dc.w  $110, $173,$280C	; 45
		dc.w  $114, $1B0,$2810	; 48
		dc.w  $128, $174,$280E	; 51
		dc.w  $128, $1B0,$2814	; 54
		dc.w  $128, $1B2,$2813	; 57
		dc.w  $130, $1B8,$280C	; 60
		dc.w  $210, $1B0,$280A	; 63
		dc.w  $230, $1B2,$2813	; 66
		dc.w  $260, $1B0,$280D	; 69
		dc.w  $290, $1B6,$2813	; 72
		dc.w  $2B0, $150,$280A	; 75
		dc.w  $2B0, $180,$280A	; 78
		dc.w  $2B0, $1B0,$280A	; 81
		dc.w  $2F0, $1B2,$2813	; 84
		dc.w  $300, $1B0,$280A	; 87
		dc.w  $384, $1B0,$280D	; 90
		dc.w  $434, $1B8,$280D	; 93
		dc.w  $478, $1A4,$2813	; 96
		dc.w  $4D8, $176,$2813	; 99
		dc.w  $4F8, $170,$280A	; 102
		dc.w  $530, $170,$2810	; 105
		dc.w  $560, $170,$2810	; 108
		dc.w  $590, $170,$2810	; 111
		dc.w  $5C0, $170,$2810	; 114
		dc.w  $5D8, $170,$2810	; 117
		dc.w  $624, $170,$280A	; 120
		dc.w  $6C4, $1A4,$280D	; 123
		dc.w  $734, $1B8,$280A	; 126
		dc.w  $7F8, $174,$280A	; 129
		dc.w  $878, $178,$280D	; 132
		dc.w  $9B8, $158,$280A	; 135
		dc.w  $A00, $1B4,$280D	; 138
		dc.w  $A48, $152,$2812	; 141
		dc.w  $A78, $152,$2812	; 144
		dc.w  $AA8, $152,$2812	; 147
		dc.w  $AD4, $154,$2814	; 150
		dc.w  $B34, $138,$280A	; 153
		dc.w  $BF8, $174,$280A	; 156
		dc.w  $CC4, $1AB,$280D	; 159
		dc.w  $CC8, $148,$280A	; 162
		dc.w  $D34, $1BA,$280D	; 165
		dc.w  $DF8, $174,$280A	; 168
		dc.w $FFFF,    0,    0
ObjPos_Null:	dc.w $FFFF,    0,    0
; ---------------------------------------------------------------------------
; Leftover symbol tables due to compiler weirdness
; ---------------------------------------------------------------------------
Leftover_418A8:	incbin	"misc/leftovers/418A8.bin"
		even
; ---------------------------------------------------------------------------
; Ring layouts; one entry per act, four entries per zone
; ---------------------------------------------------------------------------
RingPos_Index:	dc.w RingPos_GHZ1-RingPos_Index
		dc.w RingPos_GHZ2-RingPos_Index
		dc.w RingPos_GHZ3-RingPos_Index
		dc.w RingPos_GHZ1-RingPos_Index

		dc.w RingPos_LZ1-RingPos_Index
		dc.w RingPos_LZ2-RingPos_Index
		dc.w RingPos_LZ3-RingPos_Index
		dc.w RingPos_LZ1-RingPos_Index

		dc.w RingPos_CPZ1-RingPos_Index
		dc.w RingPos_GHZ2-RingPos_Index
		dc.w RingPos_GHZ3-RingPos_Index
		dc.w RingPos_GHZ1-RingPos_Index

		dc.w RingPos_EHZ1-RingPos_Index
		dc.w RingPos_EHZ2-RingPos_Index
		dc.w RingPos_HTZ1-RingPos_Index
		dc.w RingPos_HTZ2-RingPos_Index

		dc.w RingPos_HPZ1-RingPos_Index
		dc.w RingPos_GHZ2-RingPos_Index
		dc.w RingPos_GHZ3-RingPos_Index
		dc.w RingPos_GHZ1-RingPos_Index

		dc.w RingPos_HTZ1-RingPos_Index
		dc.w RingPos_HTZ2-RingPos_Index
		dc.w RingPos_LZ3-RingPos_Index
		dc.w RingPos_LZ1-RingPos_Index

RingPos_GHZ1:	incbin	"level/rings/GHZ_1.bin"
		even
RingPos_GHZ2:	incbin	"level/rings/GHZ_2.bin"
		even
RingPos_GHZ3:	incbin	"level/rings/GHZ_3.bin"
		even
RingPos_LZ1:	incbin	"level/rings/LZ_1.bin"
		even
RingPos_LZ2:	incbin	"level/rings/LZ_2.bin"
		even
RingPos_LZ3:	incbin	"level/rings/LZ_3.bin"
		even
RingPos_HPZ1:	incbin	"level/rings/HPZ_1.bin"
		even
RingPos_EHZ1:	incbin	"level/rings/EHZ_1.bin"
		even
RingPos_EHZ2:	incbin	"level/rings/EHZ_2.bin"
		even
RingPos_HTZ1:	incbin	"level/rings/HTZ_1.bin"
		even
RingPos_HTZ2:	incbin	"level/rings/HTZ_2.bin"
		even
RingPos_CPZ1:	incbin	"level/rings/CPZ_1.bin"
		even

; ===========================================================================
; ---------------------------------------------------------------------------
; Now THIS is the biggest chunk of leftovers, you can find practically
; anything here, but most notably, some of the Debug Mode source code
; ---------------------------------------------------------------------------

Leftover_50A9C:
		incbin	"misc/leftovers/50A9C.bin"

; ===========================================================================
; ---------------------------------------------------------------------------
; Modified Type 1b 68000 Sound Driver
; Same as Sonic 1's, down to its location in the ROM
; ---------------------------------------------------------------------------
		include	"s2.sounddriver.asm"

; ---------------------------------------------------------------------------
; Primary object assets (players and common objects)
; ---------------------------------------------------------------------------
Art_Sonic:	incbin	"art/uncompressed/Sonic's art.bin"
		even
Map_Sonic:	incbin	"mappings/sprite/Sonic.bin"
Art_Tails:	incbin	"art/uncompressed/Tails' art.bin"
		even
SonicDynPLC:	incbin	"mappings/spriteDPLC/Sonic.bin"
		even
Nem_Shield:	dc.b $80,$20,$80,  4,  8,$14,  9,$25,$16,$34, $A,$45,$1A,$55,$17,$65,$1B,$72,  0,$81,  4,  4,$16,$39,$26,$3A,$37,$76,$82,  5,$18,$17,$79,$83,  4,  5,$17,$77,$28,$F5,$84,  4,  6,$17,$78,$28,$F4,$85,  5,$19,$28,$FA,$86,  6,$38,$87,  4,  7,$17,$7B,$28,$F8,$38,$F9; 0
					; DATA XREF: ROM:0001C0C4o
					; ROM:0001C188o
		dc.b $FF, $D,$E2,$F8,$4D,$61,$1E,$B0,$8F,$58,$47,$AC,$23,$CA,$5D,$27,  8,$E4,$21,$38,$47,$84,  2,$D8,$5F,$1F,$31,$FA,$2E,$D8,$EB,$E5,$3E,$29,$ED,$DA,$79,$AE,$42,$DE,$B6,$EF,$A5,$BA,$97,$50,$DF,$FD,$8D,$AD,$D5,$F4,$AE,$94,$AE,$94,$AE,$94,$AE,$92,$B7,$59,$57,$42; 64
		dc.b $14,$95,$74,$85,  2,$CA,$DF,$D5,$8F,$5F,$95,$F8,$EC,$FD,$52,$5B,$F6,$73,$DE,$BB,$85,$BD,$2D,$E3,$4D,$76,$2E,$C1,$BF,$F9,$1B,$6B,$B2,$69,$91,$69,$91,$69,$91,$69,$91,$65,$AE,$D2,$C8,$A4,$31,$2C,$8B, $C,  5,$9B,$3F,$D6,$8F,$4E,$CD,$D7,$EC,$D3,$D6,$96,$DF,$B4; 128
		dc.b $9F,$15,$E0,$2D,$D5,$B9,$D2,$5D, $B,$A0,$6F,$FE,$66,$F3,$7C,$AE,$B2,$AD,$59,$56,$AC,$AB,$56,$55,$A5,$2E,$93,$95,$62,$10,$9C,$AB,$42,  1,$6C,$F1,$E7,$F6,$D1,$F5,$FB,$3C,$FA,$FE,$D1,$7D,$29,$AD,$DA,$79,$AE,$42,$DF,$16,$F7,$A7,$BB,$97,$70,$DF,$FD, $D,$F1,$7E; 192
		dc.b $1B,$5C,$32,$57, $C,$95,$C3,$25,$70,$C9,$2F,$77,$9E,$19,  8,$72,$78,$64,$87,  2,$DC,$63,$BF,$EC,$A3,$F4,$DF,$B4,$E3,$D3,$B3,$75,$49,$6F,$99,$F7,$5E,$C2,$DD,$5B,$9D,$25,$D0,$BA,  6,$FF,$EA,  0,  0,  0,$6F,$17,$C2,$6B,  8,$6B,  9, $F,$6C,$21, $F,$6C,$24,$39; 256
		dc.b   9,$18,$42,$1E,$10,$23,  9, $F,  8,  1,$38,$EF,$E3,$E8,  0,  3,$78,$D7,$94,$B7,$9E,$6D,$8E,$6D,$E5,$27,$E3,$99,$7D,$7B,$9E,$61,$EC,$92,$F3,$CE,$92,$B3,  9,$59,$BE,$65,$2D,$9B,$E6,$F9,$2F,$90,$BE,$40,  0,  0,$27,$FE,$5F,$F1,$3F,$EE,$7F,$C4,$23,$F6,$B1,$F5; 320
		dc.b $59,  0,  0,  0,$36,  0; 384
Nem_Stars:	dc.b   0,$22,$80,  6,$3C,$16,$3D,$25,$1A,$35,$1C,$45,$1D,$55,$1B,$64, $B,$72,  0,$83,  4, $C,$84,  3,  4,$85,  2,  1,$17,$7C,$86,  4, $A,$17,$7D,$FF,  0,  3,$88,  0,  0,  0,$17,$40,  0,  0,  1,$6E,$DA,$76,$80,  0,  0,$5E,$5B,$DC,$69,$CE,$B7,$80,  0,  1,$79,$6E; 0
					; DATA XREF: ROM:0001C0CAo
		dc.b $F2,$B3,$58,$FE,$99,$CD,$65,$66,$DB,$C0,  0,  0, $F,$5E,$63,$F6,$D0,  0,  0,$CB,$6E,$AE,$9D,$FE,$99,$CD,$53,$BA,$B6,$F0,  0,  0,$DB,$73,$AC,$7C,$FC,$A3,$FB,$6E,$B1,$B9,$68,  1,$2E,$5B,$75,$74,$EE,$A6,$E9,$8F,$3F,$8C,$FE,$52,$98,$F2,$A6,$E9,$DD,$5B,$72,$E0; 64
		dc.b   0,  0,  0,  1,$FA,$46,$34,  0,  0,  0,  0,  0,  0,$7A,$8E,$B3,$8C,$F2,$72,$54,$7B,$29,$D6,$4F,$9F,$F6,$AD,$64,$F9,$5D,$94,$F2,$54,$78,$CF,$26,$9D,$67,$A8,  0,  0,$76,$5C,$B9,$6D,$B6,$DD,$5D,$5D,$5D,$75,$F2,$B3,$4F,$B5,$3C,$8E,$A9,$95,$35,$4D,$4E,$7D,$F9; 128
		dc.b $33,$DF,$FB,$7D,$F9,$33,$DA,$6A,$72,$99,$53,$55,$3C,$8E,$AB,$34,$FB,$5D,$7C,$AB,$AB,$AB,$6D,$B6,$E5,$CB,$80,  0,  0,  0,$17,$F5,$8F,$E9,  0,  0,  0,  0,  0; 192
Art_SplashDust:	incbin	"art/uncompressed/Dust and water splash.bin"
		even
Map_Tails:	incbin	"mappings/sprite/Tails.bin"
TailsDynPLC:	incbin	"mappings/spriteDPLC/Tails.bin"
		even
; ---------------------------------------------------------------------------
; Sega and title screen assets
; ---------------------------------------------------------------------------
Nem_SegaLogo:	dc.b $80,$7D,$80,  5,$16,$15,$1B,$26,$3A,$35,$1C,$45,$19,$54,  9,$64,  7,$72,  0,$81,  5,$18,$15,$1A,$27,$77,$37,$76,$47,$78,$58,$F8,$77,$79,$82,  4, $A,$83,  4,  8,$84,  4,  6,$17,$7A,$85,  4,  5,$86,  4,  4,$17,$7B,$87,  5,$17,$FF,  0,  0,$F1,$FA,$20,  0,$3F; 0
					; DATA XREF: ROM:0000310Ao
		dc.b $27,$FA,$2D,$20,  0,$1E,$FF,$2F,$FA,$6C,  0,  1,$FF,$20,  0,$3F,$FC,  0,  7,$FC,$80,  0,$FF,$B0,  0,$1F,$F2,  0,  3,$F7,$FF,$BD,  0,  3,$F6,$5F,$B6,  0,  3,$F6,$DF,$B2,  0,  3,$F6,$5F,$BE,  0,  3,$F7,$DF,$B2,  0,  3,$F6,$5F,$B6,  0,  3,$F6,$DF,$B2,  0,  3; 64
		dc.b $F6,$5D,$80,  0,$FD,$9F,$EC,$80,  3,$3F,$A3,$FE,$16,$BF,$1E,$FF,$8E,  0, $F,$DF,$FE,$F8,  0,  0,  0,$1D,$9D,$80,$E5,$35,$F1,$68,$AB,$C2,$A5,$95,$A1,$39,$49,$37,$FF,  8,$52,$B5,$FB,$43,$2A,  1,$CF,$21,$E4,  3,$C8,  3,$D4,$D2,$CA,$A4,$DF,  1,$D5,$35,$F5,$66; 128
		dc.b $C4,$2A,$6E,$EB,$28,$3F,$90,$F8,  0,$DF,$C0,$16,$AC,$B6,$23,$AA,$BA,$F2,$95,$32,$A9,$37,$F0, $D,$7F,$85,$40,$27,$C8,$68,  2,$74,  1,$95,$CC,$5D,$B8,$AC,$9C,$5A,$4C,$AD,$FB,$86,$DB,$F2,$FA,$FC,$BE,$17,$DE,$FD,$83,$F9, $B,$B4,$A2,$E2,$EB,$28,$D7,$89,$46,$59; 192
		dc.b $4A,$FF, $D,$C0,$E7,$6E,$77,$2C,$AE,$B3,$80,$3B,$EF,$1B,$EF,$D6,$1F,$4F,$8C,$E0, $C,$E2,$71,$3A,$CE,$A7,$1B,$C6,$DB,$19,$65,$CB,$46,$6A,$13,$3E,$F3,$51,$3E,$E6,$33,$A4,  0,$E9,$5B,$8B,$E9,$7A,$54,$5B,$46,$D5,$2A,$DE,$B6,$B1,$A5,$40,$B2,$B4,$76,$86,$5A,$E5; 256
		dc.b $59,$5A,$FD,$DA,$EC,$A9,$D2,$A0,$13,$E4,$F2,$1E,$15,$E2,$69,$26,$EF,$87,$81,$D3,$AE,$C0,$1D,$24,$A3,$4F,$E4,$E6,$EF,$58,  4,$5A,$F1,$EA,$33,$16,$BF,$8B,$61,$32,$AE,$D9,$D0,$7C,$1B,$F8, $D,$E1,$79,$AB,$44,$D2,$4D,$DF, $F,  3,$A0,  5,$91,$6B,$BD,$93,$D4,$74; 320
		dc.b $8D,$16,$BF,$7F,$C9,$DB,  9,$D5,$EC,$B9,$AC,$2F,$80,$D1,$3A,  9,$D0,  1,$98,$7C,$3D,$F7,$17,$EE,$DB,$64,$CA,$A6,$62,$A7,$DC,$D3,$A0,  0,  6,$D1,$74,$BD,$2B,$6D,$BA,$8E,$C0,  2,$3A,$BA,$D7,$8B,$23,$3A,$2B,$D4,$75,$8D,$FB,$7A,$89,$4C,$3D,$FA,$EC,$B8,  7,$C0; 384
		dc.b   6,$70, $F,$80, $C,$D7,$C5,$91,$E1,$D0,  2,$71,$66,$D2,$F5,$F9,$5B,$32,$F5,$8B,$7E,$4F,$97,$B5,$D3,$95,$68,$74,$1D,$33,$A4,  0,$7F,  7,$5D,$AE,$E8,  1,$E4,$65,$AC,$B2,$D5,$BB,  0,  1,$DB,$7A,  0,  1,$33,$A4,  0,$CE,$89,$D0,  1,$E4,$F3,$3A,  0,$F8,$37,$A9; 448
		dc.b $D5,$FC,$6D,  0,  3,$3A,  0,$3E, $E,$76,$E7,$60, $D,$13,$A9,$D7,$22,$F3,$84,$9B,$CC,$54,$E1,$26,$F3,$15,$38,$4D,$E9,$6D,$7D,$B6,$D2,$CD,$B6,$DC,$4B,$59,$72,$96,$6C,$C4,$B5,$97,$29,$66,$CC,$2B,$A3,$C4,$AD,$9B,$2D,$64,$78,$95,$B3,$65,$AC,$93,$8A,$4A,$D7,$13; 512
		dc.b  $F,$77,$A8,$94,$C3,$DD,$EA,$25,$35,$31,$64,$78,$74,$7A,$47,$87,$F7,$35,$1C,$C5,$3D,$ED,$74,$E6,$2D,$F9,$3E,$7E,$56,$CC,$BC,$C5,$59,$95,$36,$A9,$56,$F5,$D2,$A2,$DA,$38,$BE,$96,$55,$80,$15,$25,$AE,$CA,$9D,$55,$95,$AF,$88,$68,$EF,$76,$B2,$F1,$16,$2E,$E8,  0; 576
		dc.b $AE,$DF,$E1,$A8,$98,$65,$94,$A6,$94,$56,$75,$67,$86,$94,$8A,$94,$80,  0,$F3,$A0,  0,$9D,$4E,$B7,$D8,  0,$39,$DB,$7F,  0,  1,$A9,$F2,  0,  6,$B6,$BD,$FA,$8A,$9C,$24,$DE,$62,$A7,  9,$37,$98,$AC,$E2,$90,$E3,$3A,$3C,$4B,$3A,$3C,$4B,$59,$75,$D3,$61,$AC,$AE,$C4; 640
		dc.b $AB,$B0,$16,$D4,$AD,$9B,$2D,$64,$78,$95,$B3,$65,$AC,$8F,$12,$B6,$6C,$B6,$3D,$3D,$3A,  0,$1E,$61,$F0,$F7,$7A,$89,$4C,$3D,$DE,$A3,$38,$BC,$55,$FB,$F5,$50,$92,$D0,$EC,$AE,$CA,$EC,$1E,$40,$47,$A4,$95,$68,$4C,$C5,$5E,$15,$2D,$86,$5F,$C9,$35,$F1,$65,$68,$C5,$D9; 704
		dc.b $72,$8A,$C0,  6,$A1,$97,$AA,$B5,$2F,$A5,$B4,$5D,$A2,$CA,$8B,$64,$5F,$56,$A4,$E9,$15,$AD,$59,$56,$7F,$C9,$CA,$5C,$78,$74,$57,$C3,$FE,$55,$F0,$F7,$7A,$D7,$29,$D1,$E1,$D2,$9D,$1E,$1D, $D,$F6,  0,$78,$7C,$3D,$F1,$1E,$1A,$D7,$98,$A9,$C2,$4D,$DE,$9D,  3,$95,$89; 768
		dc.b $89,$6B,$2E,$52,$CD,$98,$96,$B2,$E5,$2C,$D9,$87,$D0,  7,$B9,$F5,$3F,$93,$CB,$6D,$B8,$D6,$86,$98,$95,$B3,$65,$AC,$8F,$12,$AE,$C1,$80,  6,$74,$78,$7C,$5A,$3C,$6E,$EF,$51,$29,$87,$BB,$D4,$4A,$61,$EF,$D7,$65,  9,$F0,  1,$4A,$C9,$CA,$56,$BF,$63,$C8,  3,$A3,$A0; 832
		dc.b $E8,$F1,$29,$79,$FC,$9E,$55,$AD,$AE,$97,$40,$5A,$9E,$EF,$89,$FC,$AC,$B5,$B4,  1,$94,$78,$74,$78,$DE,$A9,$27,  9,$37,$7A,$98,$49,$C3,$A4,$FE,$4F,$8B,$6F,$7C,$4B,$36,$62,$5A,$CB,$94,$B3,$66,$25,$AC,$B9,$4B,$36,$6B,$1B,$AD,$57,$23,$71,$D3,$3B,$76,  0,$76,$7F; 896
		dc.b $4E,$C0, $F,$DC, $F,  7,$5E,  3,$B8,$74,$8B,$F1,$76,$7A,$FF, $C,  7,$48,$BA,$8B,$22,$FA,$B5,$23,$5D,$A2,$CA,$9F,$95,$B5,$2F,$A5,$B2,$B4,$32,$F4,$CA,$12,$AE,$A4,$A3,$C4,$FB,$CA,$45,$66,$1B,$2A,$DB,$4E,$EB,$DE,$3A,$4E,$91,$EB,$A8,$7C,$3D,$DE,$91,$E3,$9D,$D4; 960
		dc.b   3,$7A,  3,$50,$F7,$98,$C4,$E2,$26,$E9,$9F,$C9,$4D,$D2,$6B,$3A,$49,$57,$63,$8B,$4B,$9C,$43,$65,$1E,$25,$B9,$AB,$36,$B6,$B6,$6C,$B5,$93,$AE,$F6,$81,$B7,$E1,$80,  0,$B2,$7F,$86,$E1,$E4,$74,$E2,$2C,$5D,$5A,$31,$76,$AB,$32,$D0,$67,$57,$6C,$A5,$37,$21,$97,$35; 1024
		dc.b   0,$13,$E2,$2D,$8C,$C4,$B5,$97,$29,$66,$CC,$75,$DB,$7A, $F,$10,$F1,$2A,$F7,$78,$EB,$B0,$73,$54,$F7,$7A,$89,$4C,$3D,$F9,$DD,$40,  0, $E,$2B,$D4,$4A,$33,$A2,$BD,$44,$FB,$7A,$89,$4C,$3D,$FA,  0; 1088
Eni_SegaLogo:	dc.b   7, $F,  0,$13,  0,$13,$AE,$80,$6B,$C0,$1A,$F8,$26,$BA,  1,$AF,  0,$6B,$E0,$9A,$E8,  6,$BC,  1,$AF,$82,$6B,$A0,$1A,$F0,  6,$BE,  9,$AE,$80,$6B,$C0,$1A,$F8,$26,$BA,  1,$AF,  0,$6B,$E0,$9A,$E8,  6,$BC,  1,$AF,$82,$6A,$A0,$1E,$28,$45,  4,$56,$80,$3C,$20,$95; 0
					; DATA XREF: ROM:0000311Ao
		dc.b $7C,$12,  3,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EB,  7,  0, $B,$83,  8, $B,$85,  8, $B,$80,$80,$AF,$87,  0,$13,$85,  4,$13,$85,  8,$13,$8E,$F8,$70,  8,$B8,$70,  1,$E8,$10,  0,  0,$30,$41,$E8,$30,  0,  0,$4F,$A2,$25,$10; 64
		dc.b $74,  4,$10,$96,  7,$10,  0,$2E,$C0,$80,$12,$C7,$7D,  1,$78,  3,$B8,$45,$2F,$A9,$4C,  0,  2,$EC,$A6,$94,$B1,$76,$33,$E8,  1,  0, $B,$87,$E4,$1D,$93,$C2,$7A,$4F,$49,$F0,  0,$27,$E5,  0,  0, $B,$B0,$20,  0,  0,$A8,$84,$47,$D0,  2,  0,$27, $E,$89,$29,$82,  9; 128
		dc.b $FA,  2,$B2,$58,$4B,$41,$38,$27,  6,  0,$51,  2,  8,$27,  2,$88,$54,$7F,$89,$63,$22,$E1,$51,$23,$10,$88,$BD,$22,$35, $C,$8B,$83, $C,$8B,$80,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FB,$EF,$BE,$FA,$E0,$22,  2,$3F,$C0,  0; 192
Eni_TitleMap:	dc.b   8, $D,$60,  1,  0,  0,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F4,$C2,$91,$80,  3,$E1,$81,$F1,$70,$69,$18,  3,$17,  3,$83,$80,$15, $E,$8E,  2,$87,$80,  5,$E1,$84,$72,$71,  8,$78,  3, $F,  3,$C7,$C2,$E0,$E0,  5,$43,$81,$85,$4A,$E5,$88,$38,$FE,$1E,$CF,$C7,$60,$E1,$5C; 0
					; DATA XREF: ROM:000032FEo
		dc.b $5C,$52, $E,  0,$56,  6,  0, $A,$26,$15,$1B,$37,$2A,$89,$85,$71,$72,$38,$58,  1,$58,$38,  0,$38,$38,$54,$68,$58,$D7,$2F,$34,$83,$85,$71,$F2,$E8,$78,  1,$58,$38,  0,$38,$38,$54,$38,$F8,$D7,$1F,$3D,$83,$85,$71,$F3,$98,$78,  1,$58,$38,  2,  6,$21,  2,$8E,$14; 64
		dc.b $81,$85,$41,$81,$87,$81,$8F,$8D,$70,$F4,$2E,$F8,$7B,$A0,$73,$FC,$2B,$85,$78,$A7,$3E,$E4,$30,$F0,  2,$B0,$B0,  0,$3C,$71,$1E,$15, $E,$4E,$35,$C7,$D2,$39,$E1,$5E,$47,$D1,$3A,$1C,$4C,  0,$AC,$3C,  0,$34,$9C,$6B,$9B,$A7,$C5,$C0, $A,$C3,$C0,  7,$89,$8B,$A9,$45; 128
		dc.b $C0, $A,$C4,$C0,  7,$87,$87,$B3,$46,$C0, $A,$C5,$C0,  7,$85,$C3,$BC,$C7,$C0, $A,$C5,$C0,  7,$85,$C3,$C6,$47,$C0, $A,$C2,$C0,  7,$8B,$8F,$D1,$44,$C0, $A,$C1,$C0,  7,$85,$CB,$DE,$EB,$CD,$77,$97,$DD,$43,$C0, $A,$C2,$C0,  0,$40,$C2,$A1,$42,$C0,  3,$E1,$F9,$B0; 192
		dc.b $B0,  6,$2F,$97,$C7, $A,$FC,$88,$98,  1,$58,$38,  0,$58,$78,  0,$6E,$1F,$6A,$1E,  0,$CB,$F6,$61,$E0,  5,$60,$E0,  0,$20,$6B,$10,$A2,$E0,  1,$62,$E0, $C,$5F,$93,$8E,$B1,$FC,$30,$F0,  2,$B0,$70,  0,$32,$30,  0,$B2,$30,  6,$1F,$D9, $F,  0,$2B,$33,  0,  5,  7; 256
		dc.b $7A,$81,$3B,  0,$2B,$3F,  0,$4F,$C0,$10,$70,  2,$B3,$F0,  4,$8C,  0,$43,$EF,$BE,$FB,$E8,$FF,  0; 320
Eni_TitleBg1:	dc.b   9, $D,  0,$1E,  1,  0,$7D,$F7,$DF,$7A,$8A,$80,$F1,$70,$15,  3,$7D,$BA,$6A,  8,$FB,$56,$14,$21, $A,$2A,$23,$C1,$40,$DF,$4A,$8A,$89,$C2,$41,$5A,$6A,$2A,$85,$25,$19,$7D,$2A,$2A,$39,  5,  5,$78,$28,$F4,$24,$15,$E8,$A3,$EA,$1C,$A4,  8,$2A,$A3,$F4,$94,$39,$FA; 0
					; DATA XREF: ROM:00003326o
		dc.b $2A,$43,  5,  5,$78,$29,$1C,$24,$15,$E8,$A4,$8A,$2C,$A4,$A8,$2A,$A4,$94,$94,$59,$DC,$2E,$21,$CD,$49,$90,$55,  5,$54,$7A,$1A, $A,$F3,$52,$74,$15,$41,$57,$1E,$84,$82,$BC,$9C,$75,$43,$94,$3D,$BC,$2E,$31,$CD,$4A,$10,$55,  5,$54,$8E,$1A, $A,$F3,$52,$94,$15,$41; 64
		dc.b $57,$23,$84,$82,$BF,$1C,$89,$45,$94,$5E,$4A,$A4,$AE,$4A,$A4,$AE,$4A,$A4,$AE,$4A,$A4,$AE,$4A,$A4,$AE,$94,$95,$70,$B2,$CA,$52,$5B,$FA,$4B,$EC,$BE,$CB,$A4,$BE,$4B,$AC,$BE,$CB,$E4,$C2,$4B,$AC,$BE,$4B,$AC,$BE,$4B,$A4,$BE,$CB,$66,$C8,$1D,$29,$31,$FD,$26,$76,$67; 128
		dc.b $66,$52,$69,$26,$B6,$69,$66,$92,$6D,$26,$F6,$69,$27,$16,$69,$27,$12,$73,$66,$33,$C0,  2,$8C,$9D,$71,$93,$B9,  3,$9E,  0,$12,$C0,  2,$1C,$81,$CB,  0, $B,$E2,$79,$44,$4F,$30,$99,$ED,$61,$40,$C4,$68,$54,$44,$F2,$A0,$A6,$41,$14,$EA,$22,$A3,$C0,$54,$6A,$8A,$9D; 192
		dc.b $11,$4C,$C2,$69,$BE,$C5,$40,$53,$85,$38,$54,$45,$48,$54,$45,$64,$D3,$8D,$38,$D4,  5,$30,$53,$69, $A,$D5,$21,$5C,  2,  8, $F,$51,$15,$AE,$22,$BE,$2B,$94,$85,$72,$28, $F,$51,$15,$AA,$22,$BB,$10,  7,$B9, $A,$D0,$B0, $B, $C,$60,$1E,$A2,$2C,$12,$80,$7A,$88,$B0; 256
		dc.b $46,  1,$EF,$C2,$C0,$2C,$42,$C6,$2C,$42,$C6,$2C,$42,$C6,$2C,$42,$C6,$2C,$42,$C6,$2C,$42,$C6,$2C,$42,$C7,$44,$58,$A8,$8B,$15,$11,$62,$A2,$2C,$54,$45,$8A,$88,$B1,$51,$16,$2A,$22,$C5,$4C,$58,$A8,$8B,$25,$11,$64,$A2,$2C,$94,$45,$92,$88,$B2,$51,$16,$4A,$22,$C9; 320
		dc.b $44,$59,$28,$8B,$25,$11,$64,$A2,$2C,$94,$45,$92,$88,$B2,$51,$16,$4A,$62,$C9,$44,$59,$A8,$8B,$35,$11,$66,$A2,$2C,$D4,$45,$9A,$88,$B3,$51,$16,$6A,$22,$CD,$44,$59,$A8,$8B,$35,$11,$66,$A2,$2C,$D4,$45,$9A,$88,$B3,$53,$16,$6A,$22,$D1,$44,$5A,$28,$8B,$45,$11,$68; 384
		dc.b $A2,$2D,$14,$45,$A2,$88,$B4,$51,$16,$8A,$22,$D1,$44,$5A,$28,$8B,$45,$11,$68,$A2,$2D,$14,$45,$A2,$98,$B4,$51,$16,$AA,$22,$D5,$44,$5A,$A8,$8B,$55,$11,$6A,$A2,$2D,$54,$45,$AA,$88,$B5,$51,$16,$AA,$22,$D5,$44,$5A,$A8,$8B,$55,$11,$6A,$A2,$2D,$54,$C5,$AA,$88,$B6; 448
		dc.b $51,$16,$CA,$22,$D9,$44,$5B,$28,$8B,$65,$11,$6C,$A2,$2D,$94,$45,$B2,$88,$B6,$51,$16,$CA,$22,$D9,$44,$5B,$28,$8B,$65,$11,$6C,$A6,$2D,$94,$45,$BA,$88,$B7,$51,$16,$EA,$22,$DD,$44,$5B,$A8,$8B,$75,$11,$6E,$A2,$2D,$D4,$45,$BA,$88,$B7,$51,$16,$EA,$22,$DD,$44,$5B; 512
		dc.b $A8,$8B,$75,$31,$6E,$A2,$2E,$14,$45,$C2,$88,$B8,$51,$17, $A,$22,$E1,$44,$5C,$28,$8B,$85,$11,$70,$A2,$2E,$14,$45,$C2,$88,$B8,$51,$17, $A,$22,$E1,$44,$5C,$28,$8B,$85,$11,$6E,$A2,$2D,$D4,$45,$BA,$88,$B7,$51,$16,$EA,$22,$DD,$44,$5B,$A8,$8B,$75,$11,$6E,$A2,$2D; 576
		dc.b $D4,$45,$BA,$88,$B7,$51,$16,$EA,$22,$DD,$44,$5B,$A9,$8B,$75,$11,$70,$A2,$2E,$14,$45,$C2,$88,$B8,$51,$17, $A,$22,$E1,$44,$5C,$28,$8B,$85,$11,$70,$A2,$2E,$14,$45,$C2,$88,$B8,$51,$17, $A,$22,$E1,$44,$5C,$3F,$80; 640
Eni_TitleBg2:	dc.b   9, $D,  0,$1E,  1,  0,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$DF,$7D,$F7,$D1,$A2,$2E,$4D,$F2,$50,$27,  1,$50,$37,$29,$8B,$A6,$13,$75,$A2,$2F, $B,$D2,$50,$57,$29,$8B,$D6,$13,$7B,$A8,$2F,$DF,$86,  4,$E0,  6,  0,$60,$86,  6,$60,$EE, $E,$61,$24,$AE,$4A,$A4,$AE,$4A; 0
					; DATA XREF: ROM:0000334Eo
		dc.b $A4,$AE,$4A,$A4,$AE,$8C,$95,$51,$92,$AA,$32,$55,$4E,$61,$68,$CC,$2D,$19,$85,$A3,$31,$34,$66,$26,$8C,$C4,$D1,$98,$99,$F2,  7,  6,$40,$F8,$4C,$5C,$C9,  3,$9E,  0,$13,$C0,  2,$78,  0,$4F,  0, $C,$26,$7B,$44,$4F,$30,$99,$ED,$B1,$40,$A2,$27,$98,$4C,$F6,$88,$A0; 64
		dc.b $61,$34,$1A,$22,$79,$84,$CF,$70,$99,$EE,$13,$4D,$A2,$29,$98,$4D,$37,$A8,$A8, $A,$70,$A7, $A,$88,$A9, $A,$8D,$51,$53,$A2,$29,$98,$4D,$37,$E8,$A8, $A,$71,$A7,$1A,$80,$A6, $A,$69,$A6,$9A,$61,$A6,$9A,$60,$AD,$8A,$F8,$AE,$8A,$F0,$10,$80,$7A,$90,$AD,$52,$15,$C8; 128
		dc.b $40,$3D,$44,$56,$B8,$8A,$F8,$AE,$52,$15,$C8,$A0,$3D,$44,$56,$B8, $B, $C,$60,$1E,$A2,$2C,$11,$80,$7A,$88,$B0,$4A,  1,$EA,$62,$C1,$44,$58,$A8,$8B,$15,$11,$62,$A2,$2C,$54,$45,$8A,$88,$B1,$51,$16,$2A,$22,$C5,$44,$58,$A8,$8B,$15,$11,$62,$A2,$2C,$54,$45,$8A,$88; 192
		dc.b $B1,$53,$16,$2A,$22,$C9,$44,$59,$28,$8B,$25,$11,$64,$A2,$2C,$94,$45,$92,$88,$B2,$51,$16,$4A,$22,$C9,$44,$59,$28,$8B,$25,$11,$64,$A2,$2C,$94,$45,$92,$98,$B2,$51,$16,$6A,$22,$CD,$44,$59,$A8,$8B,$35,$11,$66,$A2,$2C,$D4,$45,$9A,$88,$B3,$51,$16,$6A,$22,$CD,$44; 256
		dc.b $59,$A8,$8B,$35,$11,$66,$A2,$2C,$D4,$C5,$9A,$88,$B4,$51,$16,$8A,$22,$D1,$44,$5A,$28,$8B,$45,$11,$68,$A2,$2D,$14,$45,$A2,$88,$B4,$51,$16,$8A,$22,$D1,$44,$5A,$28,$8B,$45,$11,$68,$A6,$2D,$14,$45,$AA,$88,$B5,$51,$16,$AA,$22,$D5,$44,$5A,$A8,$8B,$55,$11,$6A,$A2; 320
		dc.b $2D,$54,$45,$AA,$88,$B5,$51,$16,$AA,$22,$D5,$44,$5A,$A8,$8B,$55,$31,$6A,$A2,$2D,$94,$45,$B2,$88,$B6,$51,$16,$CA,$22,$D9,$44,$5B,$28,$8B,$65,$11,$6C,$A2,$2D,$94,$45,$B2,$88,$B6,$51,$16,$CA,$22,$D9,$44,$5B,$29,$8B,$65,$11,$6E,$A2,$2D,$D4,$45,$BA,$88,$B7,$51; 384
		dc.b $16,$EA,$22,$DD,$44,$5B,$A8,$8B,$75,$11,$6E,$A2,$2D,$D4,$45,$BA,$88,$B7,$51,$16,$EA,$22,$DD,$4C,$5B,$A8,$8B,$85,$11,$70,$A2,$2E,$14,$45,$C2,$88,$B8,$51,$17, $A,$22,$E1,$44,$5C,$28,$8B,$85,$11,$70,$A2,$2E,$14,$45,$C2,$88,$B8,$51,$17, $A,$22,$E1,$44,$5B,$A8; 448
		dc.b $8B,$75,$11,$6E,$A2,$2D,$D4,$45,$BA,$88,$B7,$51,$16,$EA,$22,$DD,$44,$5B,$A8,$8B,$75,$11,$6E,$A2,$2D,$D4,$45,$BA,$88,$B7,$51,$16,$EA,$62,$DD,$44,$5C,$28,$8B,$85,$11,$70,$A2,$2E,$14,$45,$C2,$88,$B8,$51,$17, $A,$22,$E1,$44,$5C,$28,$8B,$85,$11,$70,$A2,$2E,$14; 512
		dc.b $45,$C2,$88,$B8,$51,$17, $F,$E0; 576
Nem_Title:	dc.b $81,$8C,$80,  4,  2,$14,  5,$25,$10,$35,$11,$46,$2E,$56,$30,$66,$32,$73,  0,$81,  4,  3,$16,$2F,$28,$E9,$38,$E6,$78,$EC,$82,  5, $E,$18,$E3,$83,  4,  4,$16,$34,$28,$E8,$84,  5,$12,$18,$E2,$85,  5,$16,$18,$EB,$86,  5, $C,$17,$70,$87,  5, $F,$17,$6C,$28,$ED; 0
					; DATA XREF: ROM:0000328Eo
		dc.b $88,  6,$35,$89,  6,$26,$17,$6D,$28,$EE,$8A,  5,$14,$17,$6E,$8B,  6,$33,$17,$72,$8C,  5,$15,$18,$EA,$8D,  6,$27,$18,$E7,$8E,  6,$31,$8F,  5, $D,$17,$6F,$FF,  0,  0,  0,  1,$D2,$71,$C5,$38,$53,$39,$38,$EE,$6C,$D4,$34,$63,$4B,$F5,$B7,$4E,$20,$6E,$97,$2E,  0; 64
		dc.b   9,$38,$EE,$6C,$D4,$93,$8D,$7F,$5A,$D9,$A9,$27,$43,$F5,$AD,$9B,$FA,$DC,$80,  0,$1E,$54,$93,$8E,$39,$C9,$C6,  0,  0,$13,$A4,$C8,$3B,$89,$D6,$83,$A5,$C1,  0,$C9,$D0,$74,$B8,$49,$D2,$64,$9D,$FA,$59,$3B,$F4,$BD,$BD,$7D,$BD,$3A,$7E,$93,$F4,$A2,$2E,$97,  9,$7E; 128
		dc.b $9A,$4E,$EB,$77,$F1,$76,$5B,$F6,$EC,$BD,$9C,$CC,$D8,$CF,$E3,$EE,$4F,$D9,$4B,$F3,  3,$FE,$DF,$F5,$FF,$BF,$67,$FD,$FF,$F5,$F9,$89,$A9,$5D,$31, $A,$68,$C6,$94,$E2,  6,$8C,$6D,$C6,$8C,$68,$B8,$D3,$FC,$CF,$90,  2,$70,$27,$C1,$A5,$3D,$CE,$59,$DD,$27,$B0,$BF,$5A; 192
		dc.b $D9,$A9,$28,$FE,$B5,$B9,$4E,  0,$1F,$F6,$71,$E1,$35,$24,$E3,$87,$3B,$66,$A4,$9C,$6B,$FA,$D6,$CD,$4B,$BF,$5A,  7,$FD,$80,  0,$64,$EC,$1C,$CC,$1D,$2C,$9D,$73,$B8,$A0,$EE,$26,$D9,$5C,$C6,$DB,$57,$BA,$53,$3B,$5D,$84,$C6,$EB,$67,$A9,$B7,$5D,$85,$7B,$F3,$32,$E3; 256
		dc.b $FD,$37,$13,$BA,$F6,$13,$BA,$F6,$15,$F6,$D8,$57,$B3,$61,$5E,$CD,$94,$BD,$9B,$29,$52,$66,$CA,$56, $F,$A5,$61,$BC,$AB,$FA,$DC,$FA,$EF,$67,$6E,$E6,$6C,$DD,$55,$7D,$2B,$75,$6E,$DF, $F,$D7,$CE,$C2,$DF,$FA,$D2,$CD,$BC,$F7,$27,$F8,$AA,$16,$75,$DE,$4D,$9D,$93,$B7; 320
		dc.b $9D,$B3,$B0,$99,$3A,$B9,$AC,$26,$6F,$CE,$4F,$61,$31,$F2,$E4,$F2,$71,$3F,$32,$74,$F9,$CD,$9C,$FC,$63,$FF,$FF,$FD,  0, $F,$F5,$67,$91,$80,  0, $E,$97,$2F,$DB,$23,$1A,$53,$88,$1A,$31,$A5,$3C, $D,$18,$D2,$9E,  6,$8C,$69,$4F,  3,$46,$36,$E3,$46,$37,$F8,$CF,$93; 384
		dc.b $80,  0,$4E,$27,$C3,$9C,  0,  0,$19,$7E,$F5,$D2,$79,$7E,$F5,$B3,$52,$EF,$D6,$80,  0,$FF,$B6,$72,$71,$C6,$76,$CD,$4C,$E4,$E3,$2F,$DE,$B6,$6A,$5D,$FA,$D0,  7,$FD,$80,$CE,$4E,$38,$CE,$D9,$A9,$9C,$9C,$65,$FB,$D6,$CD,$4B,$BF,$5A,$3F,$EC,  0,$19,$C9,$C7,$19,$DB; 448
		dc.b $35,$39,$49,$C5,$FC,$D6,$CD,$FD,$6E,$40,  1,$93,$8E,$E7,$32,$9C,$A5,$C6,$C6,$FE,$AE,$44,$C6,$C5,$CC,$6F,$E6,$15,$CC,$6E,$BB,  9,$CC,$6E,$AF,$57,$31,$BA,$BD,$4D,$8D,$D5,$E5,$7B,$DB,$AB,$C8,$D8,$FA,$6A,$F2,$36,$1D,$22,$6C,$3A,$13,$CA,$FD,$94,$53,$63,$E9,$55; 512
		dc.b $3D,$94,$83,$5F,$4A,$C1,$AE,$A4,$37,$B9,$90,$6F,$3B,$20,$D6,$6F,$64,$1B,$37,$1B,$66,$83,$79,$E1,$BE,$78,$B7,$9E,$E9,$F2,$6E,$4C,$C9,$9B,$F3,$8F,$EB,$F3,  0,  0,  4,$77,$E6,$59,$EF,$59,$66,$59,$C9,$65,$9C,$33,$91,$67,$76,$60,$56,$1F,$BC,$B7,$EB,$3F,$6A,$FF; 576
		dc.b $D6,$7E,$E7,$10,  0,$FF,$E7,$FD,$7F,$EF,$FD,$4B,$33,  3,$4C,$8C,  0,  4,$B9,$7F,$59,$A5,$3C,$51,$8D,$29,$E0,$68,$C6,$97,$3A,$9A,$31,$AB,$3A,$9A,$33,$7C,$4D,$38,$36,$27,$A7,$F5,$B6,$48,  0,$27,$1C,$F7,$35,$67,$8B,$B9,$CB,$F5,$B6,$87,$39,$6A,$F8,$CF,$AB,$C4; 640
		dc.b $67,$D5,$E4,$6B,$3E,$AF,$23,$79,$4F,$AB,$D5,$F4,$9F,$57,$A9,$AB,$5E,$6F,$64,$F4,$53,$61,$D1,$5A,$6C,$3A,$2B,$67,$23,$A2,$B6,$72,$7D,$15,$B3,$AD,$15,$B3,$DC,$D9,$EE,$6C,$F7,$36,$19,$EB,$B7,$9D,$73,$79,$3A,$2D,$27,$67,$74,$B3,$BA,$59,$E1,$98,$10,$9B,$5C,$F0; 704
		dc.b $7E,$77,$38,$9B,$76,$72,$BA,$A5,$9C,$A1,$5B,$2E,$65,$D5,$67,$C0,$FA,$DF,  3,$D7,$61,$1A,$9C,$D8,$F1,$A4,$3A,$BF,$4A,$5D,$5D,$7D,$B5,$EB,$D8,$57,$DB,$61,$5E,$F9,$3C,$AF,$7C,$A7,$C6,$F7,$CA,$7C,$55,$F2,$4C,$62,$7C,$7F,$CB,$ED,$FE,  9,$5E,$FF,$DA,$1B,$E4,$9F; 768
		dc.b $BE,$94,$FF,$9E,$8E,$20,$65,$FF,$A7,$FF,$92,$7F,$F7,  0,  0,$FF,$7E,$39,$18, $E,$93,$8E,$29,$C2,$9C,$A4,$EB,$A7,$6C,$C6,$8C,$69,$7E,$B5,$D6,$63,$62,$9C,$1A,$B3,$91,$E8,$CD,$E5,$39,$5E,$9C,$1B,$13,$D1,$8D,$38,$5E,$8C,$A6,$72,$71,$91,$A7,$3B,$66,$A7,$2B,$2F; 832
		dc.b $F3,$5C,$27,$1C,$F7,$35,$79,$E0,$CD,$EB,$CE,$49,$C3,$7A,$CF,$D1,$C3,$79,$4B,$67,$17,$1C,$E0,  0,$27,$1C,$F7,$7E,$B4,$46,$71,$84,$FA,$8B,$A7,$D5,$E2,$33,$EA,$F2,$9E,$DC,$78,$9F,$56,$AF,$57,$D2,$E3,$83,$5E,$46,$FA,$13,$67,$57,$D0,$9B,$3A,$9C,$27,$26,$93,$E8; 896
		dc.b $4D,$56,$1A,$B5,$9B,$D8,$ED,$5D,$3E,$7F,$AF,$9C, $C,$9B,$93,$1B,$93,$32,$66,$FC,$E1,$37,$EB,$F3, $A,$78,$1E,$B7,$1E,$AF,$89,$EA,$F1,$13,$D5,$E4,$6A,$7A,$BC,$8D,$F7,$EA,$F2,$35,$FC,$C3,$C8,$DF,$29,$F6,$11,$BD,$31,$81,$BD,$31,$81,$BD,$31,$81,$BD,$31,$8B,$D3; 960
		dc.b $1B,$93,$11,$86,$20,  0,  0,  0,  0,  6,$4D,$C6,$7C,$F8,$B6,$91,$A3,$1A,$53,$88,$1A,$31,$A5,$3C, $D,$18,$D1,$71,$A3,$1B,$71,$A7,$F9,$9F,$36,$53,$81,$38,$13,$E0,$D2,$9E,$E6,$AE,$CE,$27,$7E,$B7,$67,$13,$80,  0,  7,$7E,$F6, $E,$FD,$E8,  0,  1,$94,$F6,$E3,$84; 1024
		dc.b $FA,$BC,$13,$16,$7D,$5E,  1,$32,$85,$3E,$AF,  4,$CA,$14,$93,$3F,$CF,$25,$33,$56,$AE,$6F,$2A,$14,$EA,$D2,$71,$36,$32,$CC,$A7,$84,$B3,$26,$C7,$35,$9C,$65,$B7,$5C,$E2,$E2,$7E,$71,$CD,$C4,$DB,$B3,$94,$4D,$73,$96,$59,$A9,$EA,$2E,$3D,$5E,$47,$37,$EB,$8E,$D1,$37; 1088
		dc.b $A6,$27,$AB,$D5,$31,$2D,$5E,$46,$FC,$6E,$7A,$41,$EA,$98,$DC,$CC,$93,$1B,$9B,$4F,$E4,$B1,$A5,$3C,$51,$8D,$29,$E0,$68,$C6,$94,$F8,$62,$53,$A9,$A3, $F,$12,$9D,$4D,$18,$78,$C4,$D1,$87,$8F,$ED,$9F,$27,$20,  0,$65,$38,$CB,$12,$9E,$DC,$72,$C5,$D3,$EA,$F2,$65, $A; 1152
		dc.b $7C,$1B,$94,$F8,$35,$75,$79,$32,$93,$80,$B3,$7E,$7B,$57,$1C,$D8,$C4,$F5,$78,$11,$3D,$5E,  9,$99,$22,$9E,$AF,$26,$16,$3A,$CA,$BC,$A7,$C4,$93,  6,$63,$82, $C,$B1,  3,$2F,$E7,$E3,$3E,$77,$1A,$33,  3,$4C,$8C,  0,$2D,$CB,$F8,$C7,$89,$4F,$16,$1E,$25,$3C,$11,$86; 1216
		dc.b $D2,$9D,$4D,$38,$34,$B9,$C8,$F4,$63,$63,$7A,$33,$7C,$4D,$3F,$CC,$F9,$3C,$60,$8C,  0,  1,$6E,$39,$1D,$5B,$30,$79,$32,$93,$80, $B,$36,$C1,$AB,$9C,$B2,$CF,$F3,$DA,$CE,$30,$6E, $D,$63,$6E,$61,$32,$2D,$61,$33,$7E,$64,$F6,$13,$1F,$2C,$C9,$E4,$E2,$7E,$6A,$D9,$A8; 1280
		dc.b $47,$8E,$76,  0,$8F,$57,$82,$60,$C7,  4, $B,$4C,$D3,$88,$FF,$3D,$85,$E1,$D2,$E5,$27,$19,$23,$1A,$4D,$9A,$99,$9A,$31,$AB,$CE,  8,$D1,$8D,$29,$C9,$D2,$B4,$CD,$29,$C9,$38,$6F,$29,$C8,$F4,$E0,$D2,$9C,$AF,$D1,$9B,$F3,$93,$8B,$14,$E1,$3B,$66,$A4,$A9,$A1,$7F,$37; 1344
		dc.b $60,  2,$71,$CF,$76,$F2,$E7,$87, $D,$E5,$CE,$5C,$5C,$7F,$AD,$19,$25,$80,  0,  1,$C7,$23,$EA,$6B,  6,$52,$CB,$30,  0,$3B,$6A,$CD,$EB,$2C,$CB,$39,$43,$38,$67,$2C,$B3,  0,  8,$1C,$DF,$9E,$CF,$AC,  0,  0,$14,$CD,$2C,$CB,$71,$40,$D1,$8D,$B8,$D1,$8D,$B8,$D1,$98; 1408
		dc.b $1A,$64,$60,$7F,$DA,$71,$3E, $D,$29,$EE,$63,$4A,$78,$A3,$1A,$5C,$EA,$68,$CD,$E5,$3A,$9A,$70,$69,$4F,$C1,$FC,$4E,$E7,  0,  1,$77,$EA,$A7,$5D,$D0,$9D,$7F,$55,$33,$40,$11,$DD,$33,$7F,$74,  1,$7E,$AB,$F3,$18,$E6,$CF,$D6,  0,$B8,$E7,$FB,$6F,$CC, $C,$3F,$F5,$FF; 1472
		dc.b $5F,$FC,$88,$7F,$D8, $B,$BF,$55,$77,$E9,$7F,$54,$B3,$6A,$5C,$6F,$D2,$1B,$6B,$C6,$C7,$B7,$F8,$20,  0,$3F,$E6,$EF,$F1,$98,  2,$1F,$BA,$5D,$DF,$B5,$2A,$75,$C5,$26,$FE,$66,$3F,$E3,$30,$3F,$D4,$5F,$E5,$A6,$56,$1F,$FE,$EC,  0,$7E,$AA,$EF,$D2,$EE,$C1,$D6,$A2,$E3; 1536
		dc.b $BF,$56,$D1,$4C,  0,  0,  0, $C,$BF,$F5,$37,$F9,$41,$7F,$9D,$3F,$D0,  0,$DD,$87,$5A,$65,$54,$8F,$6D,$DF,$A8,$48,$1E,$46,  4,$3F,$95,  9,$BF,$6A,$A9,$82,$2F,$ED,$CF,$F4,$5F,$B9,$EC,  3,$F9,$50,$FD,$AC,$C2,$1F,$B7,$8C,$DF,$AB,$2E,$83,$FF,$18,$17,$7E,$AA,$29; 1600
		dc.b $37,$5C,$10,$2E,$CE,$88,$72,$FF,$1B,$B2,$31,$FF,$AF,$FA,$8F,$FB,$F2,$B2,$BD,$B8,$F1,$D7,$6C,$3F,$82,$D7,$B0,$53,$29,$80,$CA,$DF,$E6,$1F,$C6,$1F,$A6,  0,$65,$4F,$DB,$67,$8E,$AE,  3,$F6,$D9,$E2,$3F,$30,$21,$FF,$AF,$EA,$A1,$7F,$14,  0,$D9,$B7, $F,$ED,$61,$D7; 1664
		dc.b $FD,$AD,$19,$B2,$4E,$9E,$17,$A3,$1B,$71,$A3,$30,$34,$C8,$C0,$1C,$AB,$3F,$EF,$1A,$F3,$B9,$99,$62,$60,  1,$97,$4A,$7E,$BE,  9,$5B,$93,$3F,$DB,$92,$66,$2E,$4A,$7F,$44, $A,$FF,$98,$7F,$DC, $E,$6F,$DD,$C2,$82,$3F,$A6,$FD,$61,$26,$49,$FD,$7C,$B3, $B,$FC,$B0,$21; 1728
		dc.b $FF,$30,$98,$26,  9,$41,$72,$53,$2F,$CF,$17,$EE,$A1,$37,$EC,$B3,$DF,$36,$59,$E5,$D8,  7,$FF,$B2,$97,$FB,$F3,  3,$B2,$1F,$CA,$2D,$D7,$50,$43,$F7,$3F,$BB,$47,$15,$30,$72,$46,$F5,$FE, $E,$27,$4B,$BF,$3C,$54,$14,$FD,$F1,$24,$D9,$51,$3F,$8F,$40,$81,  2,$5D,$45; 1792
		dc.b $FE,$56,$2B,$30,$8C,$BF,$57,$FB,$20,$5F,$E1,  0,$BF,$DC,  6,$7F,$AF,$97,$6C,$73,$45,$FE,  8,$A2,$65,$44,$FF,$70,$90,$FD,$A7,$EF,$C4,$79,$80,$8F,$EF,$84,$B2,$6F,$EA,$E5,$DA,$39,$80,$8F,$EF,$81,$7E,$A8,$76,$C8,$A6,$E3,$18,$5E,  6,$1F,$9E,$FD,$50,$BB,$F4,$5F; 1856
		dc.b $AB,$DE,$3B,  0,$FF,$F0,$12,$FF,$38,  0, $C,$90,$BF,$B4,$49,$FB,$A5,$AC,$68,$EB,$45,$1C,$5B,$15,$33,$B9,$30,$42,$A7,$F0,$41,$53, $A,$FF,$98,$7F,$DC, $E,$CC,$37,$47,$72,$FE,$DB,$F5,$80,$BF,$CE,$32,$CD,$3F,$A2,$BF,$BA,$1B,$90,$93,$F4,$5A,$5D,$51,$88,$2D,$D7; 1920
		dc.b $36,$26,$A7,$3D,$88,$E7,$84,$C6,$52,$C3,$4D,$DF,$B9,  9,$2C,$28,$53,$E1,$B7,$F7,$A5,$C5,$3C,$D0,$9E,$1D,$DB,$D6,$45,$31,$70,$DB,$3E,$D5,$9A,$12,$84,$D1,$FD,$A0,$87,$EF,$4B,$F5,$B1,$9F,$F5,$DF,$AF,$C4,$FB,$78,$11,$E3,$FC,$9F,$D7,$ED,$C3,$8B,$BA,$EF,$D2,$6D; 1984
		dc.b $C2,$62,$9B,$F9,$A5,$36,  7,$89,$7F,$3F,$13,$7F,$EF,$D9,$C6,$82,$E9,$C7,$3C,$C2,$68,$6F,$C6,$33,$30,$8C,$71,$7E,$B6,$5C,  5,$D2,$C2,$78,$7E,$F6,$26,$A7,$8C,$31,$DF,$89,$86,$2F, $F,$DF,$ED,$29,$86,$13,  1,$84,$D8,$4C,$C8,$ED,$62,$CD,$CF,$C5,$C6,  6,$D9,$C7; 2048
		dc.b $F3,$59,$89,$E0,$78,$FF,$3C,$35,$DF,$A6,$FD,$78,$E7,$C2,$7C,$8F,$11,$86,$2F,$18,$33,$F6,$9F,$AD,  5,$38,$FE,$E9,$62,$71,$32,$3C,$7F,$7F,$88,$23,$C2,$49,$FD,$21,$39,$7E,$B6,$32,$87,$EB,$71,$29,$9B,$89,$A9,$C0,$F1,$DF,  6,$44,$E0,$C3,$54,$84,$93,$8C,$A4,$24; 2112
		dc.b $BF,$DD,$9A,$7C,$8F,$1F,$EF,$E2,$62,$EF,$E0,$FE,$89,$1F,$FA,$E8,$4F,$1F,$D6,$8C,$63,$FA,$F3,$C8,$C4,$7A,$6E,$FD,$73,$CA,$6E,$71,$84,$E2,$7C,$31,$3C, $F,$11,$81,$97,$EB,$7F,$48,$8E,$18,$7F,$F7,$23,$C7,$FB,$F8,$98,$CA,$F6,$7F,$3F,$60,$BA,$60,  0,$10,$FD,$EF; 2176
		dc.b $E9,  4,$80,$CB,$9E,$E9,$D7,$F9,$A4,$DC,$4E,$E7,$25,$7B,$B7,$2C,$8B,$6E,$E2,$91,$4D,$84,$D7,$48,$4C,  6,  9,$4F,$DC,$FE,$E9,$15,$23,$4D,$B4,$1B,$A1,$2B,$4F,$74,$AB,$37,$14,$26,$C2,$67,$94,$96,$9F,$9E,$9A,$79,$2E,$73,$5C,$62,$58,$19,$4D,$84,$84,$66,$B9, $E; 2240
		dc.b $79,$4D,$2C,$5F,$2B,$14,$D2,$B5,$D3,$43,$F9,$25,$65,$FE,$41,$DB,$2A,$EA,$2E,$32,$E9,$85,$4B,$BB,$5F,$CF,$60,$78,$6A,$47,$FC,$82,$68,$68,  3,$FB,$DB,$E3,$7A,$F3,$41,$B7,$6F,$2F,$E7,$AE,$B8,$1E,  7,$34,$3A,$66,$5F,$CC,$4D, $D,$97,$4C,$F0,$DC,$26,$D7,$29,$82; 2304
		dc.b $A7,$F2,$87, $F,$D2,$F1,$27,$F0,$55,$FB,$F0,$32,$FE,$FC,$C7,$94,$D7,$C5, $B,$6F,$31,$22,$FE,$E7,$45,$ED,$67,$ED,$E0,$63,$FF,$E0,$65,$D9,$37,$FB,$D9,$D9,$87,$FF,$CB,$5B,$8F,$58,$DF,$32,$F4,$ED,$87,$75,$CF,$8F,$73,$E1,$30,$18,$4D,$97,$EA,$8E,$8A,$90,$E4,$49; 2368
		dc.b $97,$F5,$1A,$4D,$1F,$DF,  4,$60,$7F,$44,$BF,$D2,$F8,$F6,$B6,$2F,$DE,$30,$D4,$8F, $D,$44,$52,$13,$45,$17,$F6,$FC,$5B,$23,$FF,$F9,$C4, $D,$79,$EE,$E7,$8C,$C7,$5F,$E0,$97,$FA,$7B,$75,$2E,$EF,$D7,$80, $C,$17,$EA,$BA,$6E,$FD,$CC,$7B,$95,$38,$B0,$68,$68,$C0,$CB; 2432
		dc.b $F5,$42,$27,$86,$DF,$D2,$7F,$1F, $F,$FF,$80,$46,$3F,$C2,$5F,$F9,$2F,$DC,$80,$26,  2,$1F,$CA,$40,$BF,$D5,$60,$2E,$9B,$9E,$BC,$CB,$FA,$FB,$B5,$32,$FD,$7C,$26,$3C,$A6,$BD,$7F,$72,$A6,$C9,$AE,$98,$DF,$FC,$97,$AF,$F1,$C1,$7F,$FC,  3,$D7,$F3,$DA,$DF,$29,$98,$AC; 2496
		dc.b $98,$AC,$F3,$1D,$2B,$62,$FD,$FA,$9B,$63,$AC,$D8,$18,$23,$FE,$3B,$1A,$80,  0,  5,$DF,$AC,$BB,$F5,$80, $C,$3A,$A1,$FA,$C5,$FD,$60,$BB,$FF,$98,$75,$47,$AA,$F2,$FD,$65,$EB,$52,$3C,$AF,$C2,$FC,$2F,$8E,$72,$9E,$AC,$FD,$5C,$67,$1F,$AA,$8D,$30,$A8,$BA,$D5,$BB,$3C; 2560
		dc.b $A8,$CE,$34,$FD,$D3,$D1,$7B,$A0,$83,$A0,$20,  3,$FF,$5F,$F9,  3,$FE,$60, $D,$DF,$D3,$DB,$72,$60,$91,$E8,$5E,$80,  5,$C9,$92,  0,  0,  1,$7F,$87, $D,  7,$40,$FE,$D2,$50,$6D,$5D,$AA,$91,$45,$42,$DA,$48,$53,  1,$FF,$3A,$69,$B9,$37,  2,$DA,$2E,$FE,$49,$4D,$4B; 2624
		dc.b $B4,$87,$44,$34,$C3,$F5,$49,$1E,$EB,$B6,$92,$47,$6E,$1D,  0, $C,$13,$76,$9B,$84,$76,$85,$CC,$BF,$B2,$49,$87,$2F,$E9,$84,$3F,$DD,$25,$21,$DD,$76,$DC,$36,$C7,$69,$68,$53,$60,$85,$FB,$38,$3E,$EE,$26,$FE,$E9,$36,$19,$6D,$29,$8A,$60, $A,$65,$DA,$5B,$46,$AF,$FE; 2688
		dc.b $9B,$72,$FC,$F6,$E4,$FD,$57,$EE,$61,$31,$77,$42,$62,$9A,$E9,$97,$6A,$6E,$48,$24,$7A,  5,$DB,$93,$76,$94,$DB,$84,$D1,$DA,$53,$65,$D1,$FC,$91, $F,$E1,$8A,$69,$FB,$A4,$59,$8B,$69,$4C,  4,$C5,$B5,$76,$E5,$FF,$30,$5A,$7F,$29, $A,$62,$FD,$CD,$DD,$D7,$4D,  4,$DD; 2752
		dc.b $A6,$E4,  0,  0,  7,$F8,$E8,$98,$4C,$5A, $D,  7,$40,  3,$F5,$5F,$CB,$EE,$FE, $C,$3F,$92,  7,$FC,$C0,$E5,$FB,$A4,$A5,$FF,$B9,$4A,$6D,$82,$5D,$A4,$3A,  0,$17,$7F,$F2,$EF,$D6,$2F,$EB,$2E,$A8,$A8,$A8,$A8,$AA,$FF,$70,$AA,  0,  0,  0,  0,$17,$6E,$87,$EA,$97,$F5; 2816
		dc.b $57,$6E,$CE,$9F,$BB,$5B,$F0,$BE,$14,$5B,$CB,$73,$4A,$9C,$A8,$5B,$E8,$57,$AE,$F5,$BD,$77,$AD,$EB,$BE,$9C,$A9,$FA,$B9,  1,$23,$53,  0,  8,$48,$BA,$40,  0,  5,$AA,$BB,$AC,$AB,  7,$75,$97,$50,  0, $F,$FE, $F,$FE,  0,  7,$FF,  0,$FF,$E0,  3,$26,$FE,$F2,$7D,$5B; 2880
		dc.b $71,$DB,$65,$C7,$D7,$56,$F0,$6D,$71,$78,$5D,$B0,$98,$BF,$66,$5A,$63,$37,$F5,$4D,$FD,$57,$1E,$CA,$95,$EF,$2B,$DF,$59,$C9,$DD,$56,$95,$13,$11,$32,$ED,$2D,$BF,$F3,$FF,$AA,$F6,$61,$FF,$FE,$9D,$7F,$76,$3B,$AE,$FD,$9C,$7F,$EB,$D8,$3F,$FF,$9E,$B7,$FE,$62,$F0,$BB; 2944
		dc.b $57,$69,$7F,$8F,$FE,$BD,$83,$FF,$FA,$FF,  7,$53,  5,$FC,$92,$9B,$F8,$6F,$D3,$F8,$A7,$22,$FE, $E,$2E,$CE,$2D,$9C,$A7,$FD,$FC,$EB,$5E,$6A,$DA,$B7,$4C,$53,$17,$EE,$4B,$52,$99,$36,$7E,$60,$9E,$85,$C5,$FA,$B3,$B7,$F6,$EF,$FE,$69,$34,$BF,$58,$B3,$93,$61,$5B,$54; 3008
		dc.b $F5,$CB,$F9,$25,$DD,$FF,$3F,$FA,$F6, $F,$FF,$FE,$A2,$FF,$CC,$1E,$DC,$36,$96,$D5,$9B,$FE,$7F,$F5,$EC,$1F,$FF,$3D,$7F,$A2,$B3,$47,$6A,$FE,$E4,$BF,$E7,$FF,$5F,$E8,$8B,$FF,$FF,$AF,$F4,$75,$29,$B0,$42,$FE,$4A,$FF,$8F,$FA,$B3,$63,$1E,$A7,$F4,$95,$76,$1A,$CF,$57; 3072
		dc.b $DE,$4F,$96,$DC,$5B,$D6,$EA,$97,$EA,$A3,$5A,$65,$5A,$65,$5A,  1,$85,$69, $E, $F,$A5,$F8,$9A,$DE,$BB,$D6,$F5,$DE,$B7,$AE,$F5,$BD,$77,$AD,$EB,$BD,$6F,$5D,$EB,$7A,$EF,$C6,$99,$D3,$96,$AC,$29,$11,$E8,$70,$34,$23,$11,$92,$64,$E4,$E3,$BB,$F6,$45,$D7,$17,$33,$4D; 3136
		dc.b $8E,$FC,$F0,  0, $E,$8D,$90,$4E,$3D,$20,$DE,$5F,$AE,$75,$8E,$DB, $A,$F7,$91,$BB,$B4,$8D,$4D,$D6,$7F,  8,$5E,$E9,$32,$EB,$DD,$91,$8D,$9F,$DA,$E3,$C3,$66,$F8,$FE,$DA,$F5,$32,$D9,$F9,$8B,$DF,$79,$6C,$FC,$C3,$A4,$FB,$CB,$61,$1B,$A4,$FB,$CB,$F5,$59,$EB,$BF,$10; 3200
		dc.b $32,$AE,$15,$7F,$4D,$DF,$A8,$BE,$AF,$4E,$DF,$CC,$43,$F5,$DD,$64,$F9,$17,$57,$F1,$EB,$B2,$DC,$5B,$9E,$8E,$7D,$FF,$9E,$42,$BF,$65,$F1,$BF,$66,$17,$8F,$FA,$7F,$DF,$F5,$5F,$C7,$FC,$F1,$73,$C0,$CB,$F3,$C5,$3A,$BF,$A7,$F3,$DC,$E7,$B0,$8D,$71,$23,$53,$FC,$F1,$F1; 3264
		dc.b $59,$C9,$3A,$3B,$FE,$FF,$D7,$DD,$96,$23,$F9,$A5,$39,$7F,$3A,$72,$C4,$E3,$8A,$4E,$EF,$D9,$EF,$AF,$F1,$FA,$8B,$8B,$F4,$BB,$2A,$46,$5B,$38,$DE,$64,$F2,$E9,$71,$3C,$8E,$17,$BC,$60,$DC,$66,$FE,$40,$15,$C9,$E6,$21,$D2,$94,$E9,$FD,$44,$3F,$31,$DA,$E3,$CF,$4F,$D2; 3328
		dc.b   0,  0,$19,$56,$15,$FD,$35,$16,$B4,$17,$56,$82,$EA,$D2,$EA,$43,$F7,$4B,$BA,$EF,$FD,  1,$86,$E8,$7E,$A9,$7F,$54,  5,$DB,$B3,$A7,$29,$1A,$DF,$BA,$CB,$4E,$51,$A1,$5F,$85,$F8,$5F,$85,$F8,$5F,$1E,$9F,$E1,$80,  0,$C9,$D7,$71,$D7,$47,$5E,$55,$81,$82,$4A,$8B,$92; 3392
		dc.b $B1,$E3,$AC,$5D,$D5,$75,$44,$2F,$75,$A3,$7B,$A5,$91,$80,  0,$EB,$FD,$23, $D,$D2,$7F,$4C, $D,$DC,$4F,$BA,$F4,  0,$A9,$34,$4E,$6E,$21,$FC,$2F,$D6,$81,$94,$C3,$FD,$25,$FF,$4B,$BF,$49,$CF,$5C,$E8,$58,$B6,$3F,$9E,$32,$DB,$AB,$A7,$C7,$7F,$E9,$36,$FE,$90,$2F,$F7; 3456
		dc.b $A3,$CD,$B7,$77,$EE,$F8,$FF,$7F,$F9,$EF,$EB,$DF,$FD,$86,$BB,$FC,$93, $F,$EF,$2F,$F4,$57,$FB,$7C,$45,$8E,$BF,$C9,$FC,$F6,  7,$8B,$2E,$73,$CD,$91,$9C,$98,$4C,$C1,$83,$86,$4C,$32,$99,$26,$FD,$B3,$E1,$D2,$F9,$41,$FC,$4E,$38,$25,$E0,$5C,$71,$3C,$90,$F3,$8D,$70; 3520
		dc.b $A8,$C2,$A3, $A,$8C,$2B,$1F,$D6,  0,  0,  5,$FF,$C8,$F5,$4F,$5F,$DE,$AD,$F8,$5E,$B7,$A9,$95,$FD,$50,$FD,$62,$FE,$B0, $B,$BF,$5B,$D5,$1B,$FA,$A0,$7D,$57,$54,  0,  5,$DB,$F0,$DE,$32,$60,$C1,$8F,$19,$27,$EB,$D9,$99,$BD, $B,$6B,$E9,$D1,$36,$CD,$20,$FD,$22,$C0; 3584
		dc.b $97,$70,$17,$1B, $B,$F8,$6E,$D2,$5F,$E3, $F,  0, $C,$BF,$E7,$FF,$30,  0,  1,$32,$40,  0,  0,$24,$DF,$C2,  0,  2,$A4,$85,$D3,$49,$B7,$66,$D2,$FE,$62,$D6,$35,$5F,$E6,  0,  0,$2F,$DE,$47,$F7,$80,  0,  0,$26,$1B,$80,  0,$5D,$38,$5F,$E1,$6A,$97,$5E,$2E,$BC,$5D; 3648
		dc.b $78,$BA,$FC, $F, $F,$EA,$4D,$2F,$EC,$CA,$6F,$FE,$80,  0,$9A,$5D,$D2,$9B,$8A,$6F,$D2,$4D,$29,$BF,$FA,  0,$18,$6D,$97,$F2,$4A,$79,$BF,$A9,$37,$FF,$40,  3,$9F,$FA,$5B,$59,$76,$DC,$27,$C4,  0,$27,$B9,$C7,$9A,$E6,$6E,  2,$E9,$E9,$35,$D3,$71,$5C,$D0,$D0,$D7,$27; 3712
		dc.b $F4,$88,$C6,$1F,$F9,$FF,$A0,$1F,$FF,$FF,$90,$1F,$F9,$FF,$A0,$1F,$FF,$71,$E6,  5,$D3,$53, $F,$D2,$64,$DC,$1B,$83,$41,$7E,$99,$B0,$67,$EE,$5A,$4C,$9A,$9F,$B9,$6A,$A6,$DB,$93,$6C,$36,$D3,$F7,$3B,$FF,$92,$D5,$6F,$73,$63,$DC,$C6,$AB, $B,$42,$99,$B0,$DC,$53,$34; 3776
		dc.b $A6,$2E,$E6,$AF,$71,$4C,$D2,$61,$6E,$8C,$C5,$A1,$4C,$D2,$6F,$EE,$5B, $A,$F7,$70,$69,$32,$33,$AE,$2B,$B6,$44,$93,$AC,$D2,$26,$B1,$76,$C9,$71,$5D,$A4,$D2,$9E,$13,$C3,$F7,$32,$83,$6B,$49,$6D,$93,$49,$89,$3A,$B8,$B4,$2D,$BD,$64,$C2,$98,$A6,$EB,$2C,$60,$D2,$9E; 3840
		dc.b $1B,$5B,$3C,$9B,$25,$E7,$93,$49,$BB,$78,$9B, $D,$F4,$9A,$CD,$26,$96,$85,$8C,$58,$B3,$AB,$74,$DA,$55,$69,$30,$B6,$93, $B,$48,$E2,$4C,$2E,$E2,$9C,$A9,$34,$36,$97,$FB,$E5,$94,$F9,$4F,$82,$4F,$83,$32,$C7,$29,$F2,$DB,$C1,$AA,$CD,$A5,$3A,$B0,$91,$71,$8D,$15,$8B; 3904
		dc.b $62,$98,$A7,$AB,$6C,$5B,$4B,$15,$4B,$14,$C4,$C5,$98,$A6,$2B,$55,$A4,$DE,$EA,$D1,$AB,$DD,$44,$56,$12,$12,$5D,$45,$9D,$6C,$53,$14,$F8,$95,$8B,$69,$63,$46,$A5,$8A,$62,$A2,$CC,$53,$15,$89,$A4,$DE,$EA,$EF,$26,$6D,$A4,$18,$56,$D2,$8D,$5B,$56,$E6,$14,$DA,$51,$A4; 3968
		dc.b $96,$29,$A8,$D2,$6D,$8A,$68,$36,$CB,$DC,$B6,$FE,$4E,$F7,$7F,$75,$C0,  0,  0,$FF,$98,  0,  1,$77,$E8,$AE,$FD,$10,  0, $F,$E1,$13,$AE,$7B,$8B,$F8,$56,$FD,$10,  0,  0,$22,$E2,$E3,$83,$89,$D0,$E3,$57,$93,$DD,  7,$93,$E3,$B1,$4D,$7B,$4A,$F5,$D8,$B7,$B8,$B6,$2D; 4032
		dc.b $EE,$2E,$D2,$61,$3C,$BB,$49,$EA,$F2,$7C,$2F,$23,$2E,$95,$32,$30,$5D,$11,$4C,$B4,$5F,$E3,$4B,$F8,$EA,$E8,$19,$6C,$27,$11,$95,$E4,$F5,$E8,$23,$57,$43,$43,$78,$C1, $C,$BF,$AF,$27,  0,  2,$FE,$C9,$78,$CB,$B7,$8D,$5F,$1F,$D1,$7E,$D4,$9D,$17,$5B,$61,$38,$9C,$F2; 4096
		dc.b $BC,$B8,$DF,$7C,$1C,$F1, $D,$1C,$A7,$91,$C7,$62,$99,$68,$5C,$CA,$87,$1D,$21,$D1, $D,  0,$11,$42,$4B,$90,$92,$3D,$17,$74,  0,  0,$C3,$FC,$64,$85,$A4,$10,$91,$74,$54,$B9,$15,$2E,$40,  9,$2D,$FA,$2E,$B6,$59,$FD,$3C,$36,$19,$68,$B7,$E8,$BF,$B3,  0, $B,$3E,$DB; 4160
		dc.b $3A,$DC,$4E,$2E,$37,$AF,$69,$76,$95,$E5,$FB,$72,$D0,$CB,$B6,$EF,$DB,$92,$11,$FE,$DE,$E7,$AB,$8F,$87,$ED,$48,$DE,$4E,$2E,$32,$38,$38,$9E,$BB, $B,$61,$AF,$69,$5E,$BB,$16,$F5,$7C,$3F,$A2,$5D,$32,$FD,$33,$E5,$69,$59,$FC,$1E,$E5,$BD,$4D,$EE,$C0,$E0,$71,$7B,$AF; 4224
		dc.b $C3,$A5,$4D,$6F,$2B,$C9,$E5,$69,$7E,$D7,$8C,  0,  9,$D9,$7E,$8A,$3C,$6B,$C6,$BF,$D2,$18,$7E,$D5,$5D,$6E,$62,$73,$CC,$16,$84,$E7,$99,$22,$A0,$75,$B8,$BF,$6E,  7,$ED,$5D,  3,$23,$27,$F1,$A9,$91,$96,$C7,$44,$E3,$D0,$46,$4F,$67,$1A,$29,$BA,  7,  4,$85,$E4,$6A; 4288
		dc.b $F2,$FE, $A,$BC,$BA,$49,$C5,$B0,$8C,$9E,$4E,$79,$7E,$DD,$78,$E3,$FB,$7F,$D3,$3B,$F6,$6A,$8A,$64,$64,$8B,$CD,$75,$E4,$91,$3C,$8F, $B,$D5,$20,$91,$FD,$9C,$3A,$21,$A4,$10,$93,  4,  0,$65,$FC,$37,$23,$AE,$E9,$4B,$8D,$50,$64,$97,$68,$49,  4,$2D,$30,$47,$24,$1D; 4352
		dc.b $62,$38,$9B,  0,$FE,$98,$40,$81,$D6,$75,$9D,$6D,$84,$F2,$ED,$71,$74,$93,$F0,$38,$3A,$27,$1D,$20,$F2,$45,$42,$38,$E9,$1B,$39,$74,$75,$80,$53,$24,$8B,$F0,$71,$3F,  7,$41,$2E,$35,$D3,$65,$9C,$B7,$E0,$77,$20,$C9,  6,  9,  3,$86,$90,$FE,$3F,$E9,$1C,$38,$EE,$ED; 4416
		dc.b $74,$6F,$27,$BA,$E3,  0,$DF,$FA,$2F,$DA,$59,$C0,$9F,$73,$9E,$62,$2E, $A,$71,$70,$87,$5F,$E9,$18,$6E,$BE,$1A,$5C,$83,$24,$10,$38,$E8,$47,$87,$F4,$CB,$4B,$B4,  8,$12,$28,$BF,$C3,$11,$4C,$91,$6F,$61,$92,  5,$30,$5B,  6,$4F,$89,$8E,$9D,$92,$64,$10,$71,$C0,$C9; 4480
		dc.b $36,$39,$F1,$32,$79,$5E,$48,$46,$46,$A9,  3,$B9,$22,$8A,$FF,$DA,$59,$C9,$91,$C5,$D8,$38,$9E,$46,$AE,$D9,$17,$42,$F2,$71,$3C,$8C,$43,$85,$E5,$A4,$74,$B9,  4,$50,$2E,$83,$F6,$63,$A0,$24,$12,  9,$82,$43,$F6,$70,$FD,$9C,$7A, $B,$A0,$BF,$C6,$48,$5D,$19,$24,$3A; 4544
		dc.b $22,$90,$40,$A8,$22,$81,  9,$2E,$4C,$90,$21,$26,$1A,  0,  4,$3A,$F8,$FF,$67,$B2,$F2,$E8,$23,$54,$81,$AA,$44,$F2,$30,$32,$45,$D0,  0,$81,$52,$E4,  8,$49,$82,$43,$F6,$6A,$84,$98,$68,  0,  3, $F,$E1,$88,$20,  8,$A9,$14,$C1,$15, $B,$A3, $A,$1B, $A,$96,$74,$B1; 4608
		dc.b $CD,$C6,$4E,$5F,$CF,$4A,$D8,$91,$96,$25,$22,$C4,$A4,$B6,$5A,$46,$CB,$20,$24,$58,$CA,$D8,$BA,$46,$EA,$48,$F1,$AC,$8E,$B2,$B3, $B,$12,$96,$25,$67,$15,$AE,$91,$59,$6C,$B2,$27,$2D,$8A,$CA,$E8,$DB,  9,$63,$67,$4B,$17,$58,$F9,$3C,$C9,$E4,$CE,$46,$59,$91,$94,$EC; 4672
		dc.b $79,$66,$47,$A3,  9,$94,$E0,$B6,$D2,$5A, $C,$24,$52,$C6,$CE,$96,$2C,$B1,$F2,$79,$93,$D7,$91,$96,$64,$6C,$CC,$8C,$B3,$23,$26,$42,$8A,$85,$C0,$8E,$1A,$13,$30,$42,$61,$96,$32,$B6,$26,$F3,$7D,$2F,$CE,$B7,$D4,$C9,$85,$99,$1E,$6A,$FC,$8F,$23,$27,$E4,$F1,  3,$CC; 4736
		dc.b $9E,$79,$BC,$8F,$93,$CC,$9E,$BC,$8C,$B3,$23,$2C,$C8,$CB,$32,$3B,$A9,$91,$80,$64,$79,$93,$CF,$36,$11,$F2,$79,$93,$D7,$91,$96,$64,$65,$99,$19,$66,$47,$75,$32,$30,$AC,$B8,$C9,$3F,$4A,$C2,$3C,$19,$82,$17, $B,$B4,  8,  0,$FF,$A8,$66,$49,$FA,$6B,$91,$78,$13,$17; 4800
		dc.b $45,$65,$DA, $D,$3F,$EA,  0,$26,$61,$FA,$6B,$BF,$6C,$4C,$56,$13,  9,$85,$FF,$6F,$D3,$13,  9,$84,$C5,$61,$30,$98,$4C,$FD,$99,$26,  8,$5A,  0,$3F,$EA,$CC,$B8,$13,  9,$8A,$C2,$61,$30,$B8,$7F,$CC,  1,$64,$FE,$AF,$E9,$B0,$61,$30,$98,$A9, $F,$D3,$61,$FA,$62,$E8; 4864
		dc.b $56,$5D,$FB,$31,$FF,$50,$2E,$61,$30,$98,$5C,  9,$84,$C2,$61,$7F,$CC,$47,$F6,$76,$4B,$24,$58,$4C,$54,$2F,$D9,$92,$12,$45,  0,  3,$FE,$A3,$86,  8,$5F,$D6,$2F,$F1,$80, $B,$FE,$79,$26,$5A,$12,$12,$17,$F4,$C9,$15,  9,  0,$8F,$F4,$C9,$2E,$E8,$24,$2D,  9,  9,  9; 4928
		dc.b   0,  2,$EE,$C0,  0,$1C,$B7,$72,$DD,$FD,$15,$DD,$CB,$F7,$40,  0,  7,$2D,$DC,$B7,$72,$DD,$CB,$70,  0,  1,$86,$EC,$37,  0,  6,$1B,$97,$F7,$57,$F2,$5E,$6E,$5B,$B9,$6E,  0,$47,$FF,$58,$5E,$BD,$9B,$39,$6E,$E5,$D4,$32,$FE,$57,$EA,$CD,$6F,$FD,$BD,$FF,$B7,$5F,$FB; 4992
		dc.b $EC,$5D,$8B,$FF,$BC,$3F,$55,$FC,$BF,$D3,$7F,$1C,$7E,$DD,$76,$47,$66,$17,$AD,$FC,$B7,$72,$DD,$FF,$C1,$1D,$91,$FF,$BA,$EC,$11,$BD,$6F,$E5,$BB,$96,$EF,$FE, $D,$8B,$B1,$7F,$6E,$BF,$B7,$C2,$F5,$BD,$7B,$39,$6E,$E5,$BB,$AB,$F5,$74,$E5,$13,$87,$ED,$F9,$97,$67,$32; 5056
		dc.b $F6,$73,$2F,$34,$79,$7F,$6B,$F5,$7B,$A1,$DB,$C2,$BC,$B6,$61,$7E,$C5,$D9,$1F,$DB,$AD,$F1,$BD,$6F,$5E,$5F,$BA,$E4,$3F,$88,$3F,$49,$BF, $D,$9B,$E3,$B1,$77,$8D,$FF,$FB,  3,$F4,$83,$F8,$83,$23,$C8,$FF,$E8,  0,$FE,$A4, $E,  7,$C4,$46,$47,  3,$23,$C2,$56,$95,$A5; 5120
		dc.b $69,$58,  0,$25,$6F,$DA,$6E,$81,$91,$E2,$DC, $C,$A5,$69,$5A,$5F,$A5,  0, $D,$DC,$B7,$2B,$71,$6F,$4E,$E2,$71,$D7,$16,$E2,$4D,$AB,$6B,$8B,$71,$87,$34,$6F,  0,  0,$16,$F8,$F3,$2F,$65,$EB,$CC,  0,$17,$AF,$67,$32,$F3,$47,$9A,$37,$80,$23,$7A,$F6,$73,$2F,$36,$17; 5184
		dc.b $80,  2,$F6,$5E,$BC,$CB,$CD,$1E,$65,$E6,$8D,$E0,  5,$BE,$3C,$CB,$CD,$1B,$C0,  3, $B,$F0,$BC,  0,  0, $B,$7C,$79,$A3,$78,  0,  8,$DE,$BD,$9D,$97,$AD,$EB,$78,  0,$47,$F7,$D7,$AF,$EF,$B9,$A3,$CD,$1E,$6C,$2F,  2,$3F,$AE,$6E,$2D,$C5,$B0,$38,$FE,$F8,$8C,$BA,$57; 5248
		dc.b $F7,$DC,$CB,$7A,$FF,$46,$37,$85,$C5,$B8,$B7,$1F,$D7,$8C, $C,$B1,$69,$19,$19,$1A,$FF,$7A,$FC,$39,$B0,$BE,$2D,$FE,$63,$71,$54,$82,$38,$D2,$3A,$29,$F4,$13,$7F,$3D,$FA,$FF,$CF,$2F,$F4,$61,$FC,$18,$5E,$57,$C0,$E1,$D9,$D9,$1B,$C0,  0,  0,$16,$F8,$DE,$46,$BF,$C1; 5312
		dc.b $2E,$65,$E6,$5E,$68,$99,$70,$5B,$D8,$F5,$BD,$7F,$6E,$B7,$AF,$67,$61,$95,$E4,$65,$D2,$46,$BD,$24,$C7,$B1,$E6,$5C,$17,$FE,$EB,$B2,$37,$AF,$64,$3A,$63,$7E,  7,$91,$97,$44,$4D,$17,$40,$8A,$7A,$2A,$19,$74,$F4,$17,$F0,$49,$16,$F2,$BE,$26,$A6,  1,$26,$5D,$18,$7E; 5376
		dc.b $CF, $D,  0,$87,$ED,$AF,$E0,$BF,$F7,$5D,$91,$BD,$7B,$23,$78,$19,$1E,$46,  0,  0,$44,$C8,$C8,$E0,$63,$9B,  3,$8D,$E3,  3,  1,$4D,$4D,$4E,$73,$27,$19,$5F,$CE,$6E,$32,$BC,$AB,$D2,$E3,$AA,$9D,$4D,$C5,$39,$55,$27,$4B,$E7,$39,$D1,$C5,$57,$55,$27,$34,$2A,$BA,$AE; 5440
		dc.b $A9,$55,$D7,$CF,$7B,$A7,$29,$FA,$67,$71,$4F,$53,$5A,$99,$4E,$85,$58,$38,$C8,$DB,$7D,$5D,$54,$72,$11,$CE,$EA,$9A,$2D,$4C,$AF,$42,$3A,$A1,$5E,$95,$34,$76,$8E,$4A,$A1,$38,$90,$90,$D1,$7A,$B4,$3A,$B5,$CD,$AC,$3A,$9C,$BA,$75,$2B,$6A,$B3,$B4,$93,$A9,$22,$75,$D0; 5504
		dc.b $A7,$53,$AA,$9D,$49,$2A,$5A,$2B,$91,$A4,$75,$71,$4F,$5D, $E,$A4,$85,$5D,$2A,$68,$4D,$27,$23,$4E,$A8,$E2,$73,$52,$AD,$BD,$67,$4A,$91,$95,$52,$76,$92,$11,$B4,$9A,$46,$49,$3B,$4D,$1A,$70,$AB,$B4,$A9,$A5,$53,$7A,$54,$FA,$8A,$76,$A1,$1A,$A1,$D8,$92,$76,$95,$51; 5568
		dc.b $86,$5F,$AF,$54,$9D,  9,$AE,$DE,$93,$AA,$39,$AA,$E2,$6A,$14,$F5,$E8,$6B,$91,$D5,$6A,$35, $D,$15,$B6,$24,$27,$23,$51,$ED,$57,$C2,$7D,$EA,$96,$4A,$93,$4A,$8D,$B2,$13,$48,$E0,$6C,$D1,$CD,$A9,$19,$75,$35,$C5,$62,$79,$34,$9C,$C2,$47,$51,$1B,$66,$59,$2D,$C1,$D6; 5632
		dc.b $54,$62,$31,$E4,$8E,$82,$31,$2D,$3B,$4D,$74,$B2,$B8,$9A,$E4,$B3,$67,$4B,$11,$F0,$47,$56,$8D,$4A,$54,$AD,  6,$95, $A,$D3,$B5,$29,$5B,$29,$D8,$98,$56,$46,$D7,$85,$4C,$91,$59,$42,$9F,$87,$55,$96,$A9,$66,$13,$A8,$D2,$6A,$2B,$D6,$A5,$5B,$7E,$9A,$D5,$2A,$A1,$31; 5696
		dc.b $18,$4D,$62,$6E,$B7,  5,$6D,$68,$C2,$62,$D4,$ED,$C2,$A9,$62,$7A,$32,$A5,$52,$4E,  9,$52,$AA,$35,$18,$85,$44,$A9,$35,  9,$19,$6A,$93,$51,$84,$84,$CA,$A7,  2,$4B,$30,$AB,$66,$13,$11,$95,$26,$93,$68,$85,$52,$AB,$16,$CC,$4A,$1B,$2A,$DE,  9,$63,$62,$59,$29,$5D; 5760
		dc.b   9,$3A,$D5,$2C,$95,$6B,$37,$93,$11,$B4,$2B,$12,$32,$1C,$2C,$4C,$42,$B7, $B,$12,$2A,$32,$88,$49,$D6,$94,$2A,$A1,$59,$96,$A9,$54,$98,$85,$62,$A6,$8C,$D2,$CC,$EB,$54,$6D,$18,$84,$85,$55,$AB,$2C,$4C,$A2,$B7,$AC,$BA,$E8,$D4,$B3,$2D, $B,$21,$32,$DA,$30,$90,$98; 5824
		dc.b $DA,$92,$12,$5A,$AA,$C6,$D3,$AE,$B4,$AD,$16,$96,$4E, $D,$5A,$AB,$15,$B4,$65,$90,$98,$48,$B4,$AC,$19,$6A,$2D,$11,$52,$36,$6B,$11,$AB,$5B,$75,$34,$AA,$55,$6D,$55,$A9,$4C,$98,$DA,$35,$5B,$68,$23,$69,$D7,$A1,$31,$58,$A9,$62,$4B,$2A,$12,$41,$88,$C2,$65,$18,$56; 5888
		dc.b $42,$4B,$36,$CB,$62,$61,$25,$90,$AC,$C8,$52,$A5,$65,$B5,$55,$B6,$4C,$10,$B8,$55,$68,$96,$62,$B6,$A5,$FA,$56,$4D,$49,$B7,$EE,$6C,$76,$47,$66,$48,$22,$F4,  9,  6,  6,$3D,$38,$B6,$70,  0,  8,$CB,$61,$81,$19,$6C,$30,$30,$7C,$A2,$F6,  0,$82,$E7,$B3,$88,$60,$F0; 5952
		dc.b $F0, $D,$E3,$81,$A2,$DA,$5C,$6C,$95,$E3,$23,$C1,$EA,$EB,$90,$98,$96,$42,$7A,$A1,$39,  1,$38,$B8,$89,$C8,$49,$6B,$C0,  6,$2E,$D9,$61,$77,  4,$39,$3C,$98,$22,$F9,  0,$22,$F3,$18,$3C,$DF,$2D,$80, $E,  0,$2E,$C5,$7D,$CC,$23,$65,$E4,$6E,$91,$3C,  5,$37,$F1,$91; 6016
		dc.b $AB,$F5,$6D,$57,$6E,$A4,$92,$D7,$15,$BD,$CF,$FE,$99,$1D,$2B,$CF,$4D,$77,$E0,$60,$C9,$91,$D8,$DD,$7F,$3D,$17,$DD,$B6,$F5,$9B,$3B,$BF,$87,$D4,$DD,$7A,$B7,$E8,$65,$7A,$9B,$1F, $D,$3F,$5F,$35,$75,$E0,$F9,$16,$8F,$FC,$C3,$11,$E5,$CC,$5D,$31,$FF,$9F,$3E,$B4,$6F; 6080
		dc.b $55,$22,$99,$70,  6,$5B,$23,$8E,$BB,$56,$6D,$5C,$F5,$CE,$62,$37,$33,$FE,$7C,$AB,$4A,$B6,$B3,$8E,  4,$E1,$81,$C0,$FF,$6E,$58,$D3,$F9,$14,$ED,$2E,$66,$74,$CD,$8C,$D9,$EF,$C7,$51,$13,$53,$27,$88,$1B,$FF,$31,$32,$E2,$DD,$50,$8E,$6C,$C8,$C9, $D,$DD,  4,$6E,$D7; 6144
		dc.b $F7,$7F,$98,$CF, $D,$CB,$BB,$6E,$9B,$B4,$11,$D1,$7B,$23,$FF,$37,$7F,  5,$D9,$A4,$10,$92,$90,$42,$E8,$54,$85,$FA,$2D,$E1, $B,$98,$90,$BF,$A7, $F,$F5,$BB,$6C,$26,$A2,$2F,$70,  5,$A2,$DE,$BC,$D8,$7E,$CF,$8F,$4A,$B2,$7A,$55,$94,$9F,$19,$67,$A9,$96,$A5,$37,$16; 6208
		dc.b $2D,$91,$19,$4F,$33,$CA,$45,$8E,$8C,$29,$A9,$B5,$6D,$A4,$B4,$18,$48,$9D,$69,$3B,$1B,$16,$35,$3C,$6B,$23,$7D,$27,$7C,$D3,$CD,$C2,$5D, $C,$47,$58,$AC,$B6,$29,$2D,$95,$C5,$2B,$9C,$B6,$CA,$C5,$C5,$6F,$D2,$3A,$5F,$98,$CC,$8E,$98,$99,$3A,$85,$33,$88,$C9,$D0,$71; 6272
		dc.b $6B,$D4,$6B,$48,$DA,$42,$B2,$2A,$E1,$A9,$63,$2B,$49,$C4,$72,$A1,$19,$54,$8E,$9A,$9B, $A,$92,$D5,$C5,$33,  8,$E4,$BA,$AC,$AC,$B3,$4A,$B2,$27,$15,$6C,$56,$57,$46,$D8,$71,$58,$B8,$9D,$25,$CC,$8E,$98,$9E,$B4,$74,$A6,$71,$1E,$B4,$83,$8A,$5A,$94,$CB,$48,$CC,$BA; 6336
		dc.b $D4,$AB,$1A,$DD,$AA,$C8,$B1,$29,$AB,$8C,$8E,$54,$D4,$CA,$A4,$74,$29,$98,$54,$2D,$68,$46,$E9,$1F,$EA,$3F,$48,$53,$16,$B3,$2F,$16,$2B,$62,$B2,$BA,$36,$87,$51,$71,$5B,$F4,$8E,$92,$E6,$47,$46,$1C,$B7,$11,$D0,$8C,$B1,$92,$D2,$36,$E2,$A7,$12,$D9,$64,  4,$8B,$19; 6400
		dc.b $5A,$4E,$91,$CA,$84,$65,$52,$3A,$11,$B0,$A8,$B8,$91,$B0,$8F,$88,$B8,$8A,$56,$5B,$2C,$89,$CB,$62,$B2,$BA,$36,  5,$D4,$30,$EA,  0,  1,  0; 6464
Nem_TitleSonicTails:dc.b $80,$C1,$80,  4,  4,$14,  5,$25, $E,$35, $F,$45,$12,$55,$15,$66,$32,$73,  0,$81,  3,  1,$15,$11,$27,$75,$38,$F1,$82,  6,$36,$83,  4,  6,$17,$6E,$28,$F4,$84,  6,$2E,$18,$EF,$85,  5,$18,$86,  5,$14,$17,$74,$28,$F6,$87,  5,$10,$17,$72,$88,  6,$38,$89,  6,$34; 0
					; DATA XREF: ROM:000032A2o
		dc.b $18,$F3,$8A,  6,$33,$8B,  6,$35,$18,$F0,$8C,  7,$6F,$18,$F2,$8D,  6,$2F,$17,$76,$8E,  5,$13,$17,$73,$8F,  5,$16,$18,$EE,$FF,  0,  0,  6,$44,  0,  0,  3,$22,  0,$1E,$32,$DB,$17,$46,$BD,$F1,$77,$5F,$C9,$2C,$2B,$B2,$7E,$9D, $A,$FF,  5,$CC,$3F,$87,$2F,$D2,$BF; 64
		dc.b   9,$CB,$C7,$BF,$70,  0,  0,$23,$23,$BA,$2A,$59,$F1,$D8,$A3,$39,$AB,$B1,$56,$5D,$9F,$FA,$55,$8A,$C1,$C5,$6E,$6B,$BD,$36,$60,$2B,$17,$C5,$B6,$71,$4D,$A2,$87,$F4,$48,$50,$B1,$52,$AC,$52,$2E,$28,$6A,$45,$48,  3,$2F,$F9,  0,  0,$19,$17,$F5,$64,$EA,$9B,$32,$14; 128
		dc.b $FC,$93,$15,$6D,$A2,$F8,$D4,$80,  0,  0,  1,$97,$FC,$80,  0,$3B,$FE,$3F,$F3,  0,  0,$1D,$BA,$4D,$97,$A0,  1,$FE,$2A,$69,$FB,$74,$A2,$7E,$DD,$68,$53,$AC,$3F,$44,$DF,$A2,$60,  0,$FF,$8A,$7F,$4D,$1A,$AC,  0,  0,$7F,$CE,$5F,$A4,$77,$7F,$4B,$B7,$25,$D4,$4D,$B5; 192
		dc.b $5D,$DB,$69,$A9,$7B,$78,$57,$76,$66,$AD,  3,$5E,$55,$6B,$BF,$A4,  0,  3,$FA,$2B,$FC,$34,$8C,$BD,  0, $F,$F4,$A6,$EE,$9F,$A4,$3D,$E5,$23,$DD,$ED,$FA,$E8,$ED,$E7,$D5,$75,$8A,$FB,$14,$F6,$77,$47,$75,$74,$57,$3D,$F1,$76,$68,$D0,$4F,$D5,$26,$A9,$A5,$F9,$BF,$F2; 256
		dc.b $47,$7F,$B5,$E0,  0,  1,$11,$97,$A4,$6B,$B8,$AF,$F0,$D0,$A6,$3B,$F9,$5C,$91,$5D,$CA,$DF,$BF,$8A,$F5,$E2, $E,$F6,$58,$3E,$8B,$B3,  5,$A3,$D8,$32,$E8,$6F,$75,$1F,$61,$DC,$99,$E4,$C6,$F0,$BC,$F4,$4B,$D3,$9C,$A7,$2D,$E2,$62,$5B,$4C,  0,  0,  0,  0,$2A,$72,$63; 320
		dc.b $93,$1C,$98,$8C,$98,$87,$33,$98,$BB,$70,$64,$63,$26,$77,$EB,$D5,$90,$FE,$BB,$C4,$10,  0,$1E,$37,$6E,$D9,$D8,$82,$1A,$9D,$C5,$60,$EB,$9E,$5A,$ED,$B2,$2F,$6B,$9C,$76,$2A,$CF,$6B,$B6,$C8,$80,$2B,$B0,  2,$4C,$13,$60,$32,$A1,$91,  9,$B5,$76,$C8,$A1,$AD,  6,$D5; 384
		dc.b $E1,$1A,$5A,$F3,$AE,$A1,$36,$DD,$76,$ED,$B4,$6F,$C9,$72,$42,$BD,$F4,$83,$AE,$D9,$A8,$F6,$20,  4,$23,$28,$D7, $E,$32,$35,$29,$17,$EA,$C3,$73,$E9,$59,$A5,$9B,$2C,$33,$A8,$B6,$DF,$53,$94,  0,$83,$A1,$95,$9D,$67,$C1,$21,$7A,$7E,$A2,  9, $C,$70,$9A,$7E,$63,$4A; 448
		dc.b $41,$74,$9D,$A7,$48,$61,$69,$C9,$D8,$94,$17,$F6,$AD,$77,$F6,$7B,$80,  0,$64,$D5,$6A,$B0,$4B,$9E,$D5,$65,$B9,$95,$96,$ED,$93,$73,$CC,$AE,$DB,$23,$2B,$B6,$73,$77,$EC,$5D,$76,$E2,  0,  0,$3E,$FF,$D5,$BF, $C,$BF,$AB,$73,$3F,$3A,$95,$83,$29,$56,$B9,$4C,$A2,$FE; 512
		dc.b $EF,$EF, $A,$F2,$7F,$2D,$99,$5A,$1F,$92,$29,$BA,$ED,$90,$BA,$ED,$A2,$EB,$B6,  6,$5B,$1A,$90,  0,$15,$98,$C8,$D6,$62,  0,  1,$94,$2B,$60,$73,$91,$B2,$6B,$9B,$CA,$14,$D7,$3A,$94,$CF,$C2,$B1,$FF,$F7,$F5,$D7,$FA,$5C,$BF,$A3,$F9,$2A,$C4,  0,  0,  9,$CC,$BE,$7D; 576
		dc.b $26,$F2,$B0,$B3,$A0,$BC,$A5,  3,$95,$B2,$B5,$60,$72,$80,$86,$44,$56,$19,$19,$85,$68,$24,$26,$AC,$86,$96,$77,$E6,$39,$AF,$84,$7F,$77,$15,$F1,$74,$2D,$C7,$F3,$B4,$DA,$86,$5B,$8D,$1C,$61,$BA,$89,$14,$68,$6E,$74,$11,$A1,$B8,$A1, $A,$D0,$71,$7B,$2C,$1C,$D0,$42; 640
		dc.b  $C,$98,  0,$32,$61,$26,$80,$12,$68,  9,$34,$1A, $E,$64,$6B,$B8,$FD,$7A,$43,$7E,$9D,$52,$16,$29,$FA,$AD,$6C,$53,$37,$90,$B9,$8F,$DD,$1C,$AD,$3B,$E0,$9F,$9A,$2A,$D9,$C3,$34,$A7,$5D,$B3,$86,$69,$FA,$74,$D9,$DD,$60,$99,$C1,$59,$61,$B6,$7A,$32,$33,$99,$19,$19; 704
		dc.b $20,$E3,$B1,$52,$BF,$B7,$CA,$2E,$EA,  0,  0,  0,  0,  2,$5D,$D2,$62,$96,$96,$64,$25,$95,$93,$30,$ED,$18,$2C,$F7,$F6,$D7,$A8,$4D,$8D,$61,$74,$5F,$43,$73,$45,$4C,$3A,$61,$8A,$94,$E5,$46,$74,$52,$14,$94,$61,$91,  0,  0,  0,$DC,$18,$7E,$CC,$30,$FF,$88,  0,$1C; 768
		dc.b $98,$8C,$98,$CB,$F2,$44,  0,  4,$8E,$4C,$6A,$58,$D4,$B1,$79,$42,$18,$BC,$A1,$62,$F2,$10,$D4,$A3,$11,$28,$E4,$58,$81,$E8,$19,$FD,$53,$74,$BA,$B6,$44,$10,  0,$15,$F3,$96,$9C,$DF,$A4,$E3,$22,  0,$C8,$D7,$49,$90,$65,$A4,$C4,$DD,$FA,$97,$E9,$FC,$F4,$D2,$C0,$3C; 832
		dc.b $A6,$9F,$CF,$9F,$9F,$F7,$D2,$C0,$48,$E9,$FD,$F9,$AF,$F3,$E6,$2A,$57,$4B,$75,$4B,$3B,$F9,$CB,$A2,$7E,$BC,$BE,$D1,$7E,$89,$3E,$E7,$E8,$91,$D1,$FF,$A9,$3A,$56,$C7,$41,$23,$60, $E,$99,$1D,$1C,$43,$8E,$8B,$DC,$E3,$A6,$47,$4E,$B2,$B4,$FA,$A9,$5B,$75, $A,$7B,$A5; 896
		dc.b $3F,$17,$5A,$71,$53,$28,$84,$33,$B3,$8A,$FF,  5,$DC,$E2,$FE,$E9,$17,$45,$DE,$2A,$53,$99,  9,$14,$29,$64,$8B,$AD,$D5,$22,$C5,$63,$BB,$3F,$E1,$72,$BD,$F4,$76,$AB,$49,$6A,$35,$A6,$5A,$D3,$2D,$7A,$57,$C2,$99,$6A,  0,$1A, $A,$E7,$5C,$E3,$A3,$B3,$20,$BF,$38,$88; 960
		dc.b $AE,$71,  5,$D9,$C4,$2D,  1,$42,$A5,$4E,$CF,$A0,$4D,$9D,$C1,$53,$2A,$2F,$5F,$CC,$1A,$7E,$E9,$F7,$FE,$B2,$93,$A4,  8,  0,$64,$41,$AF,$4E,$AE,$F0,$A2,$97,$EB,$ED,$15,$DB,$45,$E8,$9B,$6E,$F1,$CF,$8F,  7,$C7,$22,$EF,$15,$8A,$D1,$4A,$7B,$24,$52,$95,$A5,$69,$23; 1024
		dc.b $45,$F1,$58,$80,  5,$48,$22,$23,$AD,$32,$87,$F8,$40, $F,$8F,$27,$C7,$90,  0,$1C,$A9,$FE,$14,$FF,$37,$FC,$57,$FE,$29,$FF,$67,$44,$3E,$3F,$9A,$96,$6B,$E2,$13,$31,$F9,$A0,$32,$32,$8B,$E2,$F8,$BB,$A1,$7D,$13,$67,$74,$4D,$A6,$9D,$17,$69,$A1,$FD,$BE,$3C,$32,$84; 1088
		dc.b $BF,$4E,$BF,$C7,$4F,$E3,$BB,$90,  0,$3B,$AA,$78,$A7,$42,$BE,$D1,$F6,$8E,$3B,$E3,$9F,$85,$AE,$4F,  7,$F1,$76,$6F,$65,$86,$6A,$CB,$C2,$43,$3C,$A1,$9B,$F3,$73,  6,$5C,$D6,$19,$84,$DC,$E3,$9B,$E3,$4F,$D5,$70,$5F,$F9,$29,$A7,$4F,$C9,$73,$4A,$26,$C9,$34,$8F,$E4; 1152
		dc.b $B9,$C5,$79,$84,$21,$FB,$F3,$D7,$F9,$50,  4,  7,$C5,$F1,$4A,$38,$AD, $A,$45,$3A,$1B,$8A,$D1, $D,$D6,$4A,$40,$E2,$EB,$25, $F,$7B,$CD,$CE,$B2,$DC,$FB,$2F,$7F,$E9,$6E,$D5,$4F,$4E,$47,$32,$F3,$C8,$BA,$2F,$A3,$8A,$71,$18,$74,$42,$9F,$A4,$8F,$24,$B2,$FF, $D,$39; 1216
		dc.b $78,$FE,$61, $A,$5B,$9B,$A3,$38,$AF,$5F,$E7,$5B,$99,$EE,$48,$C8,$80,  6,$5F,$9A,$D6,$FE,$5D,$1C,$51,$8A,$9A,$6A,$CB,$1A,$17,$32,$50,$EA,$CE,$63,$AD,$6E,$56,$7D,$9D,$B8,$30,$60,  0,$CF,$C2,$50,$A1,$CF,$C1,$FC,$A8,$73,$D6,$5C,$A9,$FC,$17,$7B,$2F,$5D,$A3, $E; 1280
		dc.b $8A,$7D,$23,$D2,$7D,$C9,$BA,$5D,$C9,$B5,$2C,$FE,$77,$7E,$BE,$2F,$B7,$37,$4D,$4F,$3F,$D7,$B8,$CC,$80,$85,$E6,$65,$3F,$49, $A,$43,$CC,$32,$B1,$7B,$2B,  2,$F6, $A,$C5,$EC,$FD,$6B,$1C,$FC,$19,$DC,$BA,$67,$C5,$61,$4C,$F5,$3C,$9D,$7C,$3D,$BA,$A1,$A4,$B3,$2F,$8B; 1344
		dc.b $E2,$91,$7C,$52,$96,$B9, $F,$4B,$F3,$64,$E9,$E0,$91,$4F,  0,$25,$A0,  0,  0,  0,  0,$65,$98,$C8,$8C,$B3,  0,$64,$40,  1,$DF,$BA,$7F,$EA,$86,$60,  0,$3F,$F7,$FF,$1F,$FD,  0,  0,$FD,$DE,$90,$E9,$14,$DA,$6B,$6F,$CD,$6D,$34,$29,$35,$9A,$14,$B2,$E8,$85, $C,$A2; 1408
		dc.b $FD,$3F,$7C,$85,$7F,$52,$93,  6,$B6,  2,$BA,$1B, $A,$E8,$72,$F3,$FF,$30,$9D,$62,$25,$62,$24,$6A,$47,$39,$59,$7C,$66,$23,$65,$EE,$7F,$72,$97,$F5,$F3,$2B,$FA,$95,$D2,$3F,$D6,$EE,$20,$64,$40,$74,$CD,$6C,$85,$E5,$C5,$22,$9D,$CA,$56,$C5,$3B,$96,$D1,$77,$74,$5C; 1472
		dc.b $52,$2E,$F1,$58,$E8,$BD,$7C,$D3,$8F,$DF,$D2,$1A,  1,$22,  5,$4A,$59,$E5,$2C,$E8,$B8,$E8,$FB,$3E,$D3,$B4,$A2,$A7,$45,$2A,$6A,$53,$47,$45,$34,$7F,$EA,$40,  0,  0,$97,$FE,$B2,$5D,$35,$19,$6B,$95,$A5,$78,$CA,$77,$8D,$2B,$6B,$C4,$B1,$5B,$CA,$5A,$A4,$65,$8A,$DF; 1536
		dc.b $11,$5B,$F4,  0,  1,$BF,$2C,$79,$4A,$7A,$E3,$C9,$DA,$A4,$F5,$C7,$92,$5B,$C1,$27,$76,$37,$A7,$77,$82,$1B,$B9,$27,$77,$7B,$B9,$27,$75,$D0,$74,$16,$D2,$E4,$21,$58,$EB,  5,$8F,$30,$E2,$12,$6E,$D6, $F,$81,$52,$B0,$C6,$9C,$35,$D8,$D7,$7E,$80,  0,$32,$69,$6E,$E1; 1600
		dc.b $ED,$F9,$89,$B9,$A9,$CD,$CD, $F,$14,$68,$27,$ED,$D7,$97,$F0,$D3,$74,$98,$55,$80,  2,$5B,$A4,$DD,$1E,$D4,$93,$50,$29,$56,$A2,$9A,$94,$83,$CA,$41,$A5,  6,$73,$51,$1A,$B0,$15,$DC,  0,$AF,$FC,$FF,$EB,$FB,$D4,$FD,$6B,$EF,$FD,$74,$A2,$9F,$BE,$77,$8A,$4F,$F4,$EE; 1664
		dc.b $8F,$A4,$32,$68,$64,$D0,$C9,$A1,$93,$40,$2F,$F0,$D3,$77,$27,$F2,$8D,$1D,$17,$50,$3B,$AA,$D1, $B,$A2, $D,$3F,$6E,$E3,$FB,$38,$64,$D0,$CA,$7E,$72,$BC, $E,$C0, $F,$D9,$BF,$F6,$BE,$92,$FD,$2B,$76,$96,$17,$B0,$EC,$B3,$95,$EB,$CE,$51,$4E,$6B,$7A,$95,$9C,$8A,$CE; 1728
		dc.b $45,$67,$22, $A,$40,$54,$80,$12,  1,$78,$AC,$12,$19,$59,$20,$E9,$AC,$33,$84,$E0,$EB,  4,$D1,$26,$FC, $F,$DE,$FE,$B0,$81,$95,$E1,$5A,$4C,$9E,$8E,$C3,$23,$61,$9D,$86,$4F,$CA,$B3,$B0,$D8,$77,$64,$C2,$E1,$AF,  9,$7B,$F0,$EB,$DF,$78,$CA,$6E,$BD,$F3,$96,$2B,$88; 1792
		dc.b $2C,$D7,$1C,$9F,$C7,$2B,$3A,$69, $B,$60,$BE,$D7,$66,$9D,$16,$E4,$E4,$99,$D3,$54,$D4,$FE,$69,$DA,$C2,$8E,$F0,$E5,$9C,$A1,$9E,$14,$AD,$D8,$2F,$BB,$53,$34,$29,$65,$CD,$F6,$4D,$5F,$AE,$FF,$C9,$4F,$55,$D6,  9,$A2,$1C,$15,$D3, $A,$57,$59,$62,$38,$97,$E5,$40,$7D; 1856
		dc.b $E4,$65,$79,$4C,$39,$82,$5E,$53,  3,  9,$86,$4B,$CA,$DE,$AD,$BF,$4E,$34,$38,$4A,$69,$14,$9C,$28,$57,$9A,$9A,$FE,$9C,$A4,$D7,$37,$CD,$73,$85,$2D,$37,$40,$A7,$EF,$90,$AD, $A,$4D,$7A,$40,$CD,$69,$34,$3F,$DE,$A7,$34,$E9,$3A,$24,$FA,$32,$41,$3A,$73,$68,$1A,$73; 1920
		dc.b $74,$75,$C2,$CE,$89,  4,$B9,$27,  4,$3A,$A5,$D0,$C6,$D6,$67,$5F,$E5,$7A,$15,$B7,$64,$B3,$FF,$5E,$A4,$11,$FC,$10,  0,  0,$7F,$F4,$FF,$BE,$61,$3F,$FA,  0,$AD,$E2,$FA,$CD,$3B,$4B,$F5,$CE,$BE,$85,$19,$3B,$24, $B,$76,$FD,$71,$9B,$73,$5A,$24,$D3,$AD,$26,$91,$FD; 1984
		dc.b $3C,$E3,$CB,$74,$D7,$7F,$87,$1B,$FC,$33,$75,$D9,$81,$C3,$EE,$CF,$8B,$F8,$42,$EE,$30,$A4,$5D,$98,$4C,$6D,$5B,$E0,$A5,$F7,$80,$EB,$B3,$A9,$5E,$13,$84,$ED,$76,$69,$85,$B1,$BF,$46,$4F,$D6,$B7,$EB,$BF,$5A,$BD,$92,$FA,$F6,  0,$3B,$B4,$AF,$5B,$C7,$EB,$53,$FD,$CD; 2048
		dc.b $FD,$65,$9F,$F3,$FA,$15,$BB,$C2,$E5,$C5,$D6,$EC,$97,$60,$DA,$FF,$2B,$D2,$DC,$F6,$E7,$B5,$96,$C4,$5A,$B6,  2,$FE,$A1,$FB,$CE,$5B,  0,  2,$5F,$23,$B1,$7D,$E9,$7B,$27,$64,$EC,$BF,$AD,$95,$F2,$D7,$87,$EB,$C6,$E7,$70,$C8,$D2,$E5,$73,$F8,$C2,$DC,$FC,$FF,$2B,$5C; 2112
		dc.b $D3,$15,$FC,$D0,$FD,$6B,$EF,$FD,$73,$7E,$B5,$28,$EF,$D7,$70,$9F,$D6,$4B,$65,$AE,$76,$7D,$21,$A6,$FF,$D9,$E0, $F,$3A,$94,$F3,$7D,$D1,$4D,$13,$CA,$D7,$21,$4D,$3F,$2A,$96,$EF,$8B,$EC,$97,$21,$4E,$16,$C9,$72,$14,$E1,$6C,$97,$3B,$8E,$EE,$F5,$E5,$DE,$E8,$62,$E4; 2176
		dc.b $FD,$7A,$60,$A5,$BB,$25,$8A,$DF,$E5,$7A,$7E,$A3,$3E,$99,$C0,  0,$9F,$FC,$FF,$AB,$BC,$56,$32,$22,$A4,  0,$25,$DF,$2B,$BF,$35,$FC,$8D,$F4,$D6,$B7,$99,$5E,$65,$79,$5F,$DE,$17,$7F,$D7,$C4,$75,  4,  0,  0,$9D,$D5,$A6,$FF,$EC, $A,$F6,$95,$F1,$77,$62,$97,$2D,$F1; 2240
		dc.b $EF,$D5,$2F,$29,$72,$6A,$97,$97,$6A,$96,$29,$DF,$AF,$76,$AE,$DF,$6B,$B5,$B2,$77,$DF,$44,$9E, $D,$D8,$64,$37,$68,$70,$D7,$B5,$DA,$26,$1A,$F5,$3F,$98,$46,$E7,$8C,$B0,$BA,$C5,$D8,$4D,$54,$BB, $F,$2E,$C0,$7F,$E5,$72,$D3, $F,$BB,$40,$D8,$71,$46,$4D,$F8,$76,$99; 2304
		dc.b $6B,$C2,$32,$99,$8C,$DE,$52,$7B,$65,$B3,$B3,$76,$6E,$6F,$D4,$F3,$E9,$8E,$DB,$E5,$1C,$BB,$F7,$BE,$ED,$6B,$AB,$FF,$58,$96,$B9,$37,$DD,$F9,$5B,$77,$FE,$97,$CF,$5B,$B1,$76,$97,$AE,$7D,$5F,$CE,$E0,$25,$DD,$72,$7E,$F3,$FE,$B3,$F4,$F1,$D7,$F4,$FF,$A5,$B9,$31,$D7; 2368
		dc.b $B6,$F4,$B6,$B4,$4F,$D6,$63,$54,$BF,$5A,$62,$E5,$FD,$54,$2E,$29,$83,$FB,$DC,$65,$BC,$1C,$88,  3,  0,$57,  9,$BD,$3F,$7D,$E4,$BF,$BE,  0, $F,$D6,$4B,$F4,$BE,$4E,$FD,$4F,$90,  0,  0,$EF,$E6,$3B,$F8,$BE,$49,$FC,$54,$BB,$FD,$97,$6F,$AE,$F4,$DF,$95,$DE,$52,$B9; 2432
		dc.b $2E,$DE,$FF,$2E,$FD,$F2,$DF,$72,$6F,$97,$90,$DE,  0,  1,$67,$94,$3C,$F9,$FB,$65,$B3,$EF,$FC,$AC,$17,$3B,$FF,$6D,$DB,$A3,$FB,$BF,$7C,$BF,$DD,$69,$E5,$7E,$76,$E3,$1B,$2E,$36,$82,$5F, $F,$CA,$DE,$FF,$D6,$A6,$63,$F9,$57,$CC,$83,$59,$BE, $B,$8D,$7F,$49,$B8,$2C; 2496
		dc.b $EB,$30,  0,$CB,$FE,$DE,$19,$11,$2B,$D3,$30,$FB,$E6,$FB,$DA,$74,$5E,$D3,$34,$6D,$6F,$E6,$60,$C9,$7C,$D0,$C1,$96,$68,$60,$CF,$A4,$19,$F4,$E7,$7B,$E6,$EB,$DD,$CD,$D7,$A3,$42,$9F,$BE,$6E,$2C,$94,$E4,$BA,$D5,$9C,$52, $E,$99,$48,$23,$29,$48,$23,$3E,$1B,$9F,  6; 2560
		dc.b $AB,  0,$1C,$D5,$6E,$19,$ED,$49,$BD,$A8,$94,$65,$6A,$25,$19,$19,$28,$9B,$91,$97,$F2,$B4,$46,$46,$93,$23,$57,$D3,$26,  0, $A,$F6,$AD,$E8,$D9,$30,$AD,$E0, $F,$DE,$FE,$F0,  7,$90, $A,$DE,$2F,$79,$75,$EF,$2E,$BC,$5E,$3F,$5A,  0,$1E,$7F,$98,$87,$E6,$98,$62,$BA; 2624
		dc.b $29,$4B,$5E,$2F,$5C,$21,$4B,$25,$EB,$84,$29,$6A,$94,$B3,$B0,$A5, $D,$4B,$FF,$73,$7F,$EB,  0,  1,$F0,$F2,$BD,$BF,$48,$A6,$E4,$3C,$97,$19,$C2,$96,$9A,$6B,$5B,$D2,$C9, $C,$F0,$7F,$5A,$9A,$94,$C2,$76,$B9,$4C,$BB,$90,$F7,  4,$FD,$3F,$EE,$20,  0,  2,$4D,$D9,$7B; 2688
		dc.b $69,$39,$17,$DE,  5,$EB,$83,$22,$98,$39,$60,$BF,$AD,$7F,$31,$BF,$F9,$A0,  0,  6,$9C,$43,$3E,$99,$C1,$FE,$52,$FD,$EA,$9B,$64,$6D,$5B,$B1,$FB,$FC,$27,$7E,$22,$87, $B,$FA,$42,$87,$F4,$8E,$FF,$6E,$80,  0,  4,$3C,$F7,$B7,$E9,$10,$A6,$2D,$22,$98,$E2,$45,$31,$C1; 2752
		dc.b $B3,$8A,$63,$78,$79,$71,$48,$C8,$D7,$FF,$20,  0,  7,$7E,$3F,$77,$84,$29,$CD,$27,$2E,$6A,$5D,$35,$9C,$B9,$A6,$F7,$FE,$B9,$37,$8D,$F5,$F3,$FE,$2E,$80,  0,  6,$5F,$95,$F4,$C3,$2C,$FF,$31,$87,$4D,$CC,$8C,$F9,$A5,$17,$F5,$C1,$28,$D2,$A4,$EF,$17,$A7,$E9,$5B,$F5; 2816
		dc.b $A0,  0,  0,$40	; 2880
; ---------------------------------------------------------------------------
; Green Hill Zone stage assets
; ---------------------------------------------------------------------------
S1Nem_GHZFlowerBits:dc.b   0,  4,$80,$24, $B,$34, $A,$43,  3,$55,$1E,$74, $D,$8E,  2,  0,$34, $C,$8F,  3,  4,$13,  2,$24, $E,$FF,$9B, $F,$63,$99,$7F,$DE,$B9,$95,$3F,$5D,$58,$D0,$D0,$D0,$D0,$D7,$EB,$AD,$7F,$3B,$F0,  8,$FE,$69, $D,$DD,$F1,$1F,$5F,$F3,$FF,  1,$FE,$FF,$E1,$75,$7E,  9; 0
		dc.b $AA,$11,$5C,$D0,$E1,$E9,$FE,  3,$FC,  0; 64
Nem_SwingPlatform:dc.b $80, $E,$80,  4,	 2,$14,	 3,$24,	 4,$36,$37,$45,$1A,$56,$39,$66,$2C,$74,	 5,$81,	 3,  0,$15,$19,$26,$3C,$75,$14,$82,  5,$15,$75,	$C,$83,	 5, $D,$17,$7B,$84,  4,	 7,$17,$7C,$85,	 6,$2D,$77,$7A,$86,  5,$17,$87,	 4,  8,$16,$38,$76,$3A,$88,  6,$36,$89,	 5,$12;	0
					; DATA XREF: ROM:0001C106o
		dc.b $16,$3B,$8E,  5,$13,$18,$FA,$8F,  5,$18,$18,$FB,$FF,$D7,$17,$48,$B8,$20,$77,$CF,$EB,$8A,  8,$4C,$76,$59,$9F,$67,  5,$8D,$79,$25,$55,$D6,$65,$BD,$CB,$16,  9,$F6,$97,$21,$31,$2D,$8E,$F9,$9F,$DA,$45,$FE,$B1,$1B,$48,$FF,$50,$5F,$7B,$49,$3E,$C7,$D4,$8F,$F3,$18; 64
		dc.b $F2,$49,$B4,$14,$C6,$81,$CB,$78,$2C,  5,$5B,  6,$F0,$58,$D7,$92,$3D,$A0,$B0,$7B,$44,$CA,$62,$45,$32,$FA,$12,$3C,$4C,$76,$9F,$AD,$FE,$25,$18,$AC,$A7,$4C,$F5,$46,$2B,$29,$D3,$3D,$51,$85,$FC,$5F,$C5,$95,$4B,$F7,$A5,$50,$6D,$41,  6,$D4,$8A,$F3,$5B,$79,$B4,$72; 128
		dc.b $2A,$6D,$4A,$A3,$77,$AC,$FF,$66,$55,$1F,$D8,$1D,$33,$D5,$18,$AC,$A7,$4C,$F5,$46,$2B,$29,$D3,$3F,$83,$6F,$C4,$7B,$46,$EE,$3D,$A3,$86,$E5,$A6,$1A,$3F,$2A,$1A,$F6,  3,$1F,$95, $D,$3F,$79,$6E,$BD,$A9,$8B,$1D,$45,$8E,$2C,$71,$63,$DB,$E5,$BF, $F,$F4,$84, $B,$E6; 192
		dc.b $B3, $F,$CF, $F,$A0,$BC,$3A,$D8,$15,$77,$1C, $E,$43,$A0,$30,$80,$A2,$EE,$59,$2E,$2D,$3F,$D3,$B5,$D0,  0; 256
Nem_GHZ_Bridge:	dc.b   0, $A,$80,  5,$1A,$15,$19,$24,  9,$46,$39,$74, $B,$81,  5,$1B,$82,  5,$1D,$83,  3,  2,$15,$1E,$28,$FA,$48,$FB,$84,  3,  1,$17,$7C,$85,  3,  0,$14, $A,$86,  3,  3,$15,$18,$87,  4,  8,$16,$38,$FF,$E7,$EA,$7C,$F8,$CA,$7D,$8A,$D2,$7D,  5,$6F,$4B,$A0,$EE,$93; 0
					; DATA XREF: ROM:0001C100o
		dc.b $83,$B1,$D8,$50,$10,$EC,$15,  3,$62, $F,$53,  8,$41,$6B,  8,$60,$A0,$C2,$18,$D1,$C1,$55,$A4,$70,$3D,$94,$7F,$4C,$27,$C6,$B9,$FE,$9F,$38,$3E,$9A,$60,$AC,$FB,$F4,$A5,$6A,$90,$61,$6A,$18,$45,$94,$70,$53,  9,$96,$15,$20,$58,$50,$11,$C1,$50,$56,  2,$10,$50,$28; 64
		dc.b $74,$2D,$78,$74,$15,$AF,$D3,$82,$B2,$3E,$7A,$7E,$AE,$EE,$C8,$7C,$49, $F,$89,$23,$F4,$D9,$DF,$DE,$53,$FD,$BD,$DD,$C3,  5,$4C,$30,$54,$E0,$15,$3F,$B3,$FC,$8E,$70,$6B,$66,$7F,$A9,$95,$4F,$8C,$EF,$EE,$7E, $C,$49, $F,$89,$21,$F1,$24,$3E,$24,$87,$C3,$F9,$F4,$44; 128
		dc.b $30,$56,$FE,$7D,$EF,$2C,$1F,$4C,$30,$54,$C3,  5,$4C,$30,$54,$C3,  5,$4B,$FF,  0,$87,$C9,$A8,$7C,$9A,$87,$C9,$A8,$FE,$81,$17,$77,$77,$6F,$FC,  2,$1F,$26,$A1,$F2,$6A,$1E,$80,  0,$80,  4,$80,  2,  1,$13,  6,$24, $E,$72,  0,$81,$55,$1E,$82,  3,  5,$83,  3,  4; 192
		dc.b $FF,$FF,$BE,$F3,$F9,$1F,$F0,$7B,$F6,$1F,$B2,  0,  3,$A7,$ED,$B5,$7F,$6E,$DF,$E8,$4F,$F3,$CF,$EA,$3E,$FC,$97,$F0,$27,$E1,$9F,$D8,$CF,$C3,$6F,$D9,$7E,$10,  0, $E,$FD,$B7,$E1,$7B,$F6,$EF,$E1,$CF,$C3,$BF,$E7,$A0; 256
S1Nem_GHZRollingBall:dc.b $80,$26,$80,	5,$17,$14,  9,$25,$16,$34, $A,$45,$19,$54,  5,$65,$1A,$72,  0,$81,  4,	4,$16,$38,$82,	4,  6,$16,$39,$26,$3C,$83,  5,$18,$16,$3B,$84,	6,$3A,$17,$7A,$85,  4,	7,$17,$7B,$86,	5,$1B,$18,$F8,$87,  4,	8,$18,$FA,$28,$F9,$FF,	0, $D,$61,$70,$B8; 0
		dc.b $17, $B,$81,$70,$2E,  0,$5C,  0,$6B,$FE,$7A,$C6,$7B,$AE,$F3,$8C,$F6,  0,  0,  0,  0, $B,$FA,$3C,$FE,$8C,  0,  0,  0,  0,  0,$33,$FF,$30,  0,$D6,$15,$1B,$28,$A8,$2A, $A,$82,$A1,$6E,$5E,$79,$7F,$9B,$45,$20,$C0,$A9,$DF,$ED,$30,$2F,$14,$98,$E6,$53, $D,$2D,$74; 64
		dc.b $6B,$35,$F0,$D6,$69,$FD,$94,$7E,$96,$CE,$AF,$49,$9E,$25,$E5,$15,$15,$32,$E2, $A,$9A,$FF,$B0,$6A,  3,$F6,$7E,$3F,$EC,$67,$CA,$69,$6A,$F9,$A7,$15,$EB,$F4,$BF,$C7,$BF,$19,$40,$2F,$B0,$27,$E6,$DF,$59,$8C,$ED,$3F,$A5,  0,$1A,$F5,$FD,$60,  0,$D2,$2A,$2A,$2A,$5F; 128
		dc.b $9A,$E6,$F1,$64,$98,$A6,$54,$98,$A6,$54,$6B,$C1,$64,$57,$B3,$59,$A9,$EE,$EA,$E3,$EC,$FE,$8F,$4E,$2F,$15,$C5,$71,$94,$54,$15,$D5,$EE,$D4,$F7,$48,$FD,$2D,$F8,$A7,$6D,$E5,$A7,$E2,$60,$58,$57,$D3,  0,$2C,$1F, $B,$EF,$BF,$1F,$8E,$FF,$65,$3E,$1E,$57,$ED,$67,$DD; 192
		dc.b $7B,$2F,$FC,$1B,$F1,$94,  3,$5F,$19,$49,$F8,$94,$8A,$DA,$5E,$2D,$F5,$E4,$C5,$DA,$A1,$62,$59,$58,$56,$15,$FE,$7F,$6D,$E5,$FF,$63,$7E,$72,$C6,$9C,$F7,$4F,$FA,$1E,$9A,$EE,$AD, $F,$6D,$D9,$A7,$6B,$B5,$D8,$6B,$E4,$FA,$B7,$36,$8A,$E6,$63,$2D,$31,$9E,$46, $F,$FB; 256
		dc.b $1C,$18,$4D,$36,$12,$7D,$D9,$92,$DF,$56,$4A,$82,$D0,$FA,$68,$96,$CC,$10,$74,$F9,$DC,$BA,$A5,$6C,$B2,$4E,$C5,$DA,$C1,$B3,$E2,$BA,$FD,$1F,$ED,$40,  1,  4,$13,$4C,$9A,$63,  6,$62,$71,$3F,$A5,$39,$BA,$2F,$3A,$6B,$A0,$A8,  3,$F5,$FD,$11,$7D,$57,$AB,$A5,$BA,$BF; 320
		dc.b $18,$A4,$ED,$27,$AB,$23,$D9,$30,$8F,$6E,$9F,$71,$C9,$E9,$52,$FE,$AB,$1C,$5F,$AB,$27,$69,$4E,$96,$EA,$CE,$98,$4B,  0,  0; 384
S1Nem_GHZRollingSpikesLog:dc.b $80,$2C,$80,  3,	 2,$15,$16,$26,$32,$37,$77,$46,$38,$55,$1A,$65,$14,$73,	 3,$81,	 4,  8,$17,$76,$28,$F8,$47,$7B,$75,$15,$82,  5,$17,$17,$79,$27,$7A,$76,$3A,$83,	 2,  0,$16,$39,$28,$FA,$76,$37,$84,  5,$18,$85,	 5,$13,$86,  6,$36,$87,	 5,$12,$17,$78,$76,$33;	0
		dc.b $FF,$A4,$A9,$3D,$62,$91,$42,$7C,$4D,$C7,$13,$1E,$88,$B7,$D4,$FB,$FE,$9E,$2F,$5F,$42,$11,$F0,$84,$2F,$A6,$C4,$21,$16,$10,$84,$57,$3E,$AA,$F1,$48,$A7,$34,$93,$63,$D4,$48,$74,$96,$BB,$63,$F6,$76,$85,$FA,$7A,$FC,  8,$5F,$B3,$42,$1B,$42,$10,$8B,  8,$42,$2B,$9F; 64
		dc.b $55,$6D,$B6,$E9,$2A,$4F,$5B,$4F,$58,$D4,$D4,$7F, $E,$53,$3F,$4E,$B6,$50,$BB,$2F,$13,$32,$F2,$A1,$47,$2B,$13,$D4,$E0,$E3,$9C,$BE,$BB,$52,$3F,$2D,$2F,$79,$FE,$9F,$AA,$B6,$DB,$63,$73,$74,$89,$B8,$FD,$9A,$94,$61,$7E,$9E,$D2,$CB,$B6,$51,$B4,$B8,$96,$47,$7D,$AF; 128
		dc.b $AF,$3C,$79,$92,$3F,$65,$2C,$BD,$4A,$DD,$B2,$FE,$3F,$55,$6D,$EF,$FC,$7D,$B1,$EE,$F2,$FC,$A8,$B9,$C4,$D4,$D0,$A2,$6A,$7C,$76,$70,$84,$47,$D6,$C8,$5C,$A8,$97,$EC,$6F,$97,$F1,$F6,$B7,$F4,$A7,$7A,$B6,$F7,$C4,$D7,$F1,$ED,$35,$FB,$1B,$17,$84,$65,$CF,$6E,$66,$8E; 192
		dc.b $36,$BF,$C6,$5E,$32,$94,$16,$92,$95,$A2,$D2,$9F,$79,$29,$AB,$AF,$13,$BE,$5E,$AA,$DB,$DF,$3A,$88,$47,$71,$73,$E4,$C8,$BA,$82,$C5,$E3,$51,$DF,$98,$E6,$E8,$ED,$2D,$BB,$F8,$57,$8C,$BD,$29,$E5,$FD,$13,$58,$71,$4C,$32,$93,$6D,$B6,$F7,$CE,$A2,$10,$85,$78,$B8,$84; 256
		dc.b $65,$73,$28,$52,$50,$71,$25,$B1,$C4,$AF,$B1,$DE,$F6,$8A,$4B,$2B,$DB,$CA,$92,$F7,$61,$E8,$D4,$53, $D,$B6,$DD,$37,$CE,$A2,$10,$8B,  8,$42,$1B,$10,$84,$58,$42,$11,$5F,$E3,$C5,$E3,$D4,$B6,$2D,$F1,$86,$E0,$D6,$1C,$23,$8C,$32,$91,$4C,$32,$93,$7B,$E7,$52,$C2,$10; 320
		dc.b $B9,$42,$1B,$42,$10,$8B,  8,$42,$3F,$4D,$EF,$F2,$DF,$D7,$50,$BC,$7A,$B7,$8C,$7C,$36,$A4,$87,$DE,$10,$DE,$87,$AC,$3A,$6F,$9D,$5E,$ED,$BD,$EB,$9F,$5E,$F1,$F9,$5E, $A,$6D,$14,$29,$B3,$8A,$4D,$B6,$DE,$F9,$D5,$EE,$DB,$DE,$B9,$F5,$75,$7F,$76,$97,$1E,$71,$A9,$6A; 384
		dc.b $F8,$7A,$1B,$6D,$D3,$7C,$EA,$21,  8,$B0,$84,$21,$B1,  8,$45,$84,$21,$15,$CF,$AA,$B6,$F7,$CE,$A5,$84,$21,$72,$84,$36,$84,$21,$16,$10,$84,$57,$3E,$AA,$DB,$6E,$92,$A4,$F5,$B4,$DF,$1B,$76,$7F,$C3,$9E,$27,$9D,$44,$23,$B8,$85,$F4,$DB,$DE,$B9,$F5,$56,$DB,$63,$A4; 448
		dc.b $87,$49,$14,$BF,$1E,$2F,$FC,$3C,$EA,$21,  8,$B0,$84,$21,$B7,$BD,$73,$EA,$AC,  0; 512
S1Nem_GHZLogSpikes:dc.b	$80,$12,$80,  4,  7,$14, $C,$25,$16,$35,$1B,$44, $A,$55,$1A,$65,$1C,$74,  2,$81,  3,  2,$15,$1D,$27,$78,$82,  5,$17,$16,$3D,$83,  3,  0,$17,$79,$27,$7C,$84,  4,  8,$18,$FA,$85,  4,  3,$86,  4,  9,$87,  4,  6,$18,$FB,$FF,$B3,$46,$8D,$54,$3F,$9D,$AC,$6D,$83; 0
		dc.b $A3,$D8,$B2,$A3,$16,$4C,  8,$2A,$6D,$76,$7C, $C,$37,$FD,$17,$8C,$FE,$8E,$7F,$54,$89,$B8,$7A,$93,$D4,$68,$DD,$6C,$31,$8B,  9,$75,$BF,$B3,$1B,$BB,$A7,$56,$83,$D1,$A1,$5E,$75, $B,$91,$F9,$66,$AF,$84,  8,$8C,$B8,$8C,$95,$32,$81,$4D,$91,$4A,$5A,$9B, $E,$A6,$FA; 64
		dc.b $F6,$BD,$6C,$FD,$93,$39,$BF,$E8,$87,$D6,$7C,$22,$22,$C3,$6B,$EE,$5B,$F2,$B6,$98,$37,$3B,$23,$73,$AE,$92,$DA,$F9,$36,$90,$E9,$B7,$24,$65,  0,$88,$88,$9A,$47, $E,$34,$2F,  7,$BF,$3D,$37,$37,$15,$37,$F1,$6F,$BB,$32,$B3,$3B,$53,$1E,$43,$B3,$9B,$DC,$64, $F,  4; 128
		dc.b $44,$45,$FA,$5D,$9F,$A2,$C7,$77,$43, $E,$EB,$4B,$4B,$CD,$DC,$63,$4E,$85,$D6,$94,$12,$1A,$82,$5C,$82,$1C,$32,$93,$9A,$BA,$BC,$F2,$E7,$64,$EC,$E8,$E9,$9E,$4E,$9A,$F3,$57,$27,$1B,$1D,$B3,$10,$2D, $D,$2E,$41,$11,$7E,$93,$E6,$2B,$AF,$CB,$33,$98,$B2,$78,$D7,$D9; 192
		dc.b $21,$A8,$DB,$38,$74,$E2,$A3,$13,$8B, $E,$2E,$46, $A,$1C,$38,$2B,$1F,$D0,$43,  6,$DB,$25,$3F,$B1,$61,$8D,$B9,$7B,$C5,$2E,$5F,$87,$A9,$36,  5,$69,$EB,$B0,$E5,$F2,$5A,$7E,$91,$60; 256
Nem_GHZ_Rock:	dc.b $80,$18,$80,  4,  7,$14, $A,$25,$16,$36,$36,$45,$17,$55,$18,$65,$1A,$72,  0,$81,  3,  4,$18,$FB,$82,  4,  6,$16,$3C,$83,  5,$19,$87,  6,$3D,$88,  7,$7C,$89,  6,$39,$8B,  8,$FA,$8C,  6,$37,$8D,  6,$3A,$8E,  6,$3B,$8F,  3,  2,$16,$38,$FF,  0,  0, $D,$7B,$A6; 0
					; DATA XREF: ROM:0001C112o
		dc.b $BF,$E5,$EF,$EF,$9B,$7A,$D7,$FC,$2B,$61,$A9,$9D,$AC,$C6,$1A,$CD,$5E,$94,$C0,$5D,$8C,$2D,$45,$BE,$DF,$4F,$1F,$75,$D2,$7C,$E2,$3B,$56,$5F,$3F,$9A,$FC,$9E,$FD,$F5,$BB,$FC,$5D,$7E,$C9,$D3,$F8,$AB,$9B,$F9,$31,$C0,  1,$C6,$A7,  5,$95,$4D,$96,$95,$A0,$EA,$D2,$A0; 64
		dc.b $42,$5A,  0,  6,$B3,$B6,$6C,$CF,$9A,$69,$78,$ED,$4C,$ED,$D2,$FD,$F2,$ED,$8C,$75,$FD,$2E,$A7,$F7,$E1,$78,$40,  0,  2,$5E,$10,  1,$FB,$85,$D6,$16,$10,$52,$7F,$B7,$DD,$D5,$33,$C7,$EF,$ED,$E3,$53,$3B,$6E,$BB,$DF,$F3,$DB,$F7,$E3,$B3,$B5,$70,$C9,$97,$85,$D0,  0; 128
		dc.b $E8,$FB,$56,$45,$F8,$DA,$6C,$9F,$EF,$F7,$EF,$1D,$5B,$87,$45,$91,$4A,$C8,$A9,$64,$15,$2C,$B0,$B0,$8A,$CB,$CA,$CD,$B2,$F9,$A6,$97,$8E,$D4,$CE,$DC,$7E,$BB,$76,$FA,$B7,$8A,$BF,$45,$C3,$CA,$E2,$A3,$F2,  2,$2D,$2A,  0, $A,$61,$3C,  0,$BC,$A8,  5,$A0,  1,$B3,$6C; 192
		dc.b $DA,$8D,$4C,$ED,$CF,$E2,$BE,$B9,$FC,$DF,$3F,$40,  1,$E9,$F3,$9C,$28,$69,$5D,$57,$CD,$23,$E6,$97,$CC,$27,$E4,$A4,$E9,$E1,$B2,$1E,  0,$18,$9A,$6D,$B3,$66,$7C,$D3,$4B,$C7,$6A,$67,$FA,  0; 256
S1Nem_GHZBreakableWall:dc.b $80, $C,$80,  2,  1,$15,$17,$25,$19,$72,  0,$81,  5,$1B,$25,$1C,$82,  4,  8,$15,$18,$25,$1E,$37,$7D,$83,  6,$3B,$84,  4, $A,$85,  4,  9,$16,$3A,$27,$7C,$86,$75,$1A,$87,  5,$16,$FF,$AD,$DB,$F2,$D3,$F9,$40,$96,$3F,$26,$F5,$F8,$6A,$E5,$7E,$5B,$FC,$1B,  0,$21; 0
		dc.b $F8,$C7,$7B,$AF,$D3,$57,$E4,$73,$F9,$10,$FD,$84,$F7,$6D,$F7,$80,$F8,$C7,$E8,$FF,$4D,$5F,$E1,  0,$3F,$81,$FA,$37,$F6,$BC,$AF,$DB,$7F,  3,$81,$CF,$CA,$7C,  3,$40,  0,$68, $D,  1,$A0,  0,$34,  5,$AF,$1F,$86,$FD,$20,$4E,$18,$CF,$DF,$DA,$BE,$7F,$4E,  0,$7E,$C2; 64
		dc.b $7D,$6E,$9F,$AF,$E5,$EF,$E0,$98,$B4,$5E,  3,$33,$8C,$CB,$F5,$8B,$5F,$C0,  5,$E3,$FC,$18,$B7,$59,$C3,$F9,$7B,$C0,  0,  0; 128
S1Nem_GHZWall:	dc.b $80, $C,$80,  4,  9,$14, $B,$25,$1E,$37,$7C,$71,  0,$82,  4, $C,$15,$1B,$57,$7D,$65,$1C,$75,$1D,$83,  4, $A,$85,  4,  8,$87,  5,$1A,$FF,$FD,$9F,$EC,$47,$40,$74,$6E,$F6,$2F,$A0,$3A,$3F,  8,$4C,$7F,$42,$3D,$17,$F8,$1A,$DE,$B3,$58,$F4,$3D,  1,$35,$F4,$7E,$57; 0
		dc.b $5F,$A5,$D0,$9E,$69,$13,$13, $F,$91,$31,$30,$47,$CC,$F9,$CF,$C2, $B,$DD,$E5,  9,$AF,$A0,$26,$BE,$8B,$DD,$E5, $E,$50, $E,$50,  0; 64
Nem_EHZ_Fireball:dc.b $80,$10,$80,  3,	2,$13,	3,$24,	8,$35,$1A,$46,$39,$56,$38,$65,$1B,$75,$19,$81,	3,  0,$16,$3C,$28,$F9,$83,  5,$18,$84,	4, $B,$16,$3D,$87,  4,	9,$18,$F8,$8C,	4, $A,$18,$FA,$8D,  3,	1,$15,$1D,$28,$FB,$FF,$CF,  6, $E,$60,$1D,$84,$46,$87,	2,  2,$A4,$59; 0
					; DATA XREF: ROM:0001C156o
					; ROM:0001C21Eo
		dc.b $82,$8B,$19,$E6,$95,$31,$C0,$46, $F,$21,$96, $B,$22,  7,$58,$58,$62,$84,$E8,$21,$18,$47,$67,$83,$16,$C2, $B,$19,$58,$D8,$D4,$C0,$E3,$E6,$2F,$89,$8F,$48,$53,$78,$F8,$61,$4A,$F1,$77,$E7,$B1,$F7,$9C,$9D,$8D,$D4,$1C,$EA,$95,$14,$76,$51,$1A,$3A,$C1,$81,$C8,$D6; 64
		dc.b $15,$30,$58,$52,$60,$40,$E6,$58,$54,$1D,$EB,$1B,$FC,$9F,$B2,$E6,$25,$9B,$C2,$B5,$6C,$6A,$D0,$41,$5C,$B1,$9E,$67,$2F,$C5,$72,$87,  1,$DB,$B4,$11,$9F,$D2,$68,$7E,$9C,$6B,$E4,$88,$FB,$5F,$63,$92,$2B,$93,$91,$5B,$AE, $E,$60,$E6, $C, $E, $A,$2C,$B3,  6, $D,$70; 128
		dc.b $20,$14,$7E,$8A,$A6,$7F,$58,$AB,$63,$55,$28,$40,$5F,$8B,$FA,$28,$BF,$D6,$16,$42,$FC,$5A, $C,$A9,$B5,$86,$33,$F8,$67,$3C,$CA,$BE,$70,$BC,$EE,$44,$DA,$F3,$BB,$28,$4F,$B8,$65, $F,$80,$8A,$EF,$85,$18,$EF,  7,$60,$E7,$81,$A3,  6,  3,$3F,$8F,$DE,$23,$1B,$B6,$75; 192
		dc.b $28,$F9,$15,$1D,$8E,$F3,$D6,$59, $C,$18,$FA,$46,  2,$AE,$D1,$8A,$46,$91,$10,$69, $F,$C1,$18,$10,$10,$31,$6A,$71,$40,$AB,$F8,$54,$E4,$5B,$AE,$65,$D2,$FC,$2B,$B5,$34,$C3,$B9,  8,$6F,$DE,$4F,$C7,$B3,$1E,$7C,$20,$57,$7E,$4B,  0; 256
Nem_BurningLog:	dc.b $80,$18,$80,  4,  9,$15,$1C,$24,  8,$35,$16,$44, $C,$55,$17,$64,  6,$72,  0,$81,  4, $A,$82,  8,$FA,$83,  5,$1D,$84,  6,$3D,$87,  6,$3C,$88,  3,  2,$89,  4,  7,$8A,  5,$1A,$8C,  7,$7C,$8F,  5,$1B,$FF,  0,$BA,$6D,$AB,$D5,$FC,$A6,$DA,$CA,$84,$DB,$8A,$DF,$3C; 0
		dc.b $8F,$23,$CB,$6F,$53,$BF,$21,$71,$59,$66,$A6,$8C,$EE,$A7,$BC,$DC,$7C,$B3,$DE,$A3,$DB,$7C,$5D,  9,$51,$EC,$A2,$C8,$64,$CE,$52,$67,$FD,  8,  0,  0,  4,$26,$DB,$6F,$CB,$29,$46,$7D,$73,$64,$6B,$AD,$F3,$95,$1D,$97,$C4,$73,$F3,$36,$F5,  2,$19,$33,$E2,$AC,$A7,  0; 64
		dc.b $15,$BC,$E6,$DB,$C6,$56,$DF,$14,$7E,$62,$11,$C5,$64,$17,$F0,$BA,$DF,$35,$65,$67,$9A,$9D,$4F,$4D,$2B,$3F,$C8,$78,$F7,$B1,$AE,$FC,$6F,$73,$AB,$88,$84,$32,$67,$29,$33,$FE,$86,$51,$74,$DB,$15,$FC,$B2,$6D,$B6,$EF,$F9,$82,$E8,$19,$11,$A8,$A2,$FF,$99,$2C,$F2,$E5; 128
		dc.b $DF,$3A,$AE,$A7,$E3,$7A,$E3,$21,$93,$3E,$2A,$CA,$71,$37,$D3,$68,  0,  0,  1,$42,$84,$29,$D7,$D3,$6A,$1E,$8E,$3C,$75,$F5,$DC,$79,$58,$BB,$67,$EC,$A9,$50,$8B,$A1,$93,$39,$4A,$E9,$FF,$43,$CF,$CC,$10,$B9,$56,$FA,$E3,$C3,$EA,$EE,  0,$12,$81,$BE,$9B,$48,$59,$A9; 192
		dc.b $59,$D1, $E,$5D,$D9,$4B,$DD,$62,$38,$86,$4C,$F8,$AB,  0; 256
Nem_EHZ_Waterfall:dc.b $80,$18,$80,  2,	 0,$24,	$A,$44,	$D,$65,$1D,$73,	 2,$81,	 3,  3,$82,  5,$1C,$85,	 7,$7C,$86,  8,$FA,$87,	 4, $B,$88,  8,$FB,$89,	 6,$3C,$8A,  3,	 4,$8B,	 6,$3D,$8C,  4,	$C,$FF,$3E,$8F,$A3,$F0,$87,$D5,$78,$70,$E1,$C3,$CD,$87,	$F,$9D,$B2, $D,$10,$95,$83,$A7;	0
					; DATA XREF: ROM:0001C15Co
		dc.b $AC,$C2,$CC,$AB,$21,$66,$6C,$2C,$9B,$35,$D3,$1D,$34,$61,$E0,$CF,$7B,$C3,$E1,$C1,$9F,$67,  9,$B2,$B1, $C,$63,$2D,$19,$58,$88,$5D,$5D,$44,$61,$15,$32,$C6,$35,$50,$F0,$F0,$F4,$FB,$AF, $E,$1C,$38,$79,$B0,$E1,$F3,$B6,$41,$A2,$12,$B0,$74,$F5,$98,$59,$95,$64,$2C; 64
		dc.b $CD,$85,$93,$66,$BA,$63,$A6,$8C,$3C,$19,$EF,$78,$7C,$38,$33,$EC,$E1,$36,$56,$21,$8C,$65,$A3,$2B,$11, $B,$AB,$A8,$8C,$22,$A6,$58,$C6,$AA,$1E,$98,$7A,$44,$42,$D2,$A8,$AA,$6B,$D7,$B1,$25,$AD,$2A,$C5,$AD,$25,$DC,$45,$A4,$8C,$4B,$B6,$91,$85,$AA,$85,$D5,$A5,$53; 128
		dc.b $5A,$43,$AB,$49,$6C,$49,$75,$91,$24,$8C,$4B,$5D,$66,$DA,$49,$56,$54,$2D,$56,$24,$42,$CB,$2D,$10,$B4,$AA,$2A,$9A,$F5,$EC,$49,$6B,$4A,$B1,$6B,$49,$77,$11,$69,$23,$12,$ED,$A4,$61,$6A,$A1,$75,$69,$54,$D6,$90,$EA,$D2,$5B,$12,$5D,$64,$49,$23,$12,$D7,$59,$B6,$92; 192
		dc.b $55,$95, $B,$55,$89,  0; 256
Nem_HTZ_Fireball:dc.b	0,$10,$80,  3,	3,$15,$17,$25,$19,$35,$1B,$47,$7B,$58,$FB,$68,$FA,$74, $A,$86,	6,$39,$8A,  6,$3A,$8B,	5,$18,$8C,  3,	2,$15,$16,$27,$7A,$8D,	2,  0,$16,$38,$28,$F8,$8E,  4,	9,$16,$3B,$28,$F9,$8F,	4,  8,$15,$1A,$26,$3C,$FF,$F6,$23,$22,$C6,$AE,$28,$EE; 0
					; DATA XREF: ROM:0001C224o
		dc.b $18,$A7,$F4,$D8,$64,$4F,$3D,$C0,$A2,$79,$EE,  5,$FD,$F1,$62,$30,$BF,$37,$F1,  8,$B3,$2D,$82,$CC,$5C,$3E,$2E,$2C,$95,$F4,$55,$71,$F7,$63,$DC,$61,$1B,$8F,$5B,$58,$5F,$17,$C2,$E1,$F0,$E2,$DC,$65,$42,$37,$88,$B1,$93,$D1,$95,$F0,$B2,$87,$C2,$BF,$17,$47,$D1,$ED; 64
		dc.b $55,$71,$EC,$F4,$5C,$5A,$98,$62,$8E,$F9,$86,$62,$27,$99,$81,$47,$EF,$A0,$5F,$DF,$14,$7E,$6F,$58,$2D,$16,$84,$D7,$C5,$B0,$C4,$F8,$B5,$C4,$31,$64,$BA,$3E,$8A,$AA,$47,$DC,$58,$DE,$17,$1B,$C4,  8,$CC,$60,$6B,$38,$B1,$B8,$B1,$B5,$84,$6D,$16,$32,$8B,$19,$1D,$8C; 128
		dc.b $8C,$5B,$43,$16,$4A,$AA,$AA,$AA,$DE,$22,$72,$B5,$3D,$5D,$6A,$7A,$E5,$DA,$3E,$7A,$76,$D7,$C8,$ED,$8F,$18,$FD,$3C,$26,$34,$D5,$D3,$10,$C4,$D3,$19,$74,$D3,$4D,$55,$55,$54,$C6,$3D,$F5,$3A,$59,$E7,$A9,$D2,$BF,$5F,$31,$67,$F3,$AB,$3F,$31,$66,$61,$FA,$65,$D3,$4C; 192
		dc.b $68,$62,$1A,$B8,$C6,$9D,$9A,$69,$AA,$AA,$DE,$B7,$37,$9A,$BC,$66,$72,$A3,$32,$E6,$EB,$53,$79,$6B,$C9,$72,$35, $A,$3B,$63,$85,$E0,$FF,$79,$17,$19,$67,$66,$31,$97,$4D,$31,$95,$55,$9D,$7D,$CD,$E5,$C7,$D2,$CC,$EE,$5C,$E6,$26,$F3,$A4,$E5,$CF,$89,$F7, $A,$13,$3C; 256
		dc.b $50,$CB,$C7,$EF,$18,$9D,$86,$5C,$63,$1A,$18,$D3,$4C,  0; 320
Nem_EHZ_Bridge:	incbin	"art/nemesis/EHZ bridge.bin"
		even
Nem_HTZ_Lift:	dc.b $80,$30,$80,  4,  4,$14,  8,$25,$17,$36,$37,$45,$15,$56,$35,$67,$73,$73,  0,$81,  3,  1,$15,$18,$77,$79,$82,  5,$16,$18,$F5,$83,  4,  5,$78,$F4,$84,  5,$12,$16,$38,$85,  5,$13,$16,$3A,$86,  6,$32,$17,$78,$87,  4,  6,$17,$77,$88,  7,$7B,$89,  5,$14,$8A,  4; 0
					; DATA XREF: ROM:0001C256o
		dc.b   7,$16,$34,$8B,  6,$36,$8C,  7,$76,$8E,  6,$33,$8F,  7,$72,$FF,  0,$69,$AF,$5A,$27,$E6,$DF,$F4,$85,$F8,$FD, $C,$F7,$96,$9F,$A1,$AE,$97,$3B,$E3,$9D,$8D,$B7,$56,$9D,$69,$62,$D5,$FC,$9D,$B5,$5E,$66,$3B,$5D,$F6,$A7,$E7,$35,$6E,$DB,$57,$6C,$93,$B5,$5C,$A3,$DD; 64
		dc.b $D1,$D8,$EF,$4E,$6B,$4B,$1B,$94,$FD,$1D,$7A,$57,$82,$9C,$75,$A2,$2E,$38,$E8,$A2,$BE,$38,$B2,$51,$34,$C7,$E6,$77,$D0,$5D,$FB,$38,  0,  0,  0,$FC,$E5,$7F,$4D,$5C,$B4,  0,  0,  0,  0,  0,$9F,$9C,$AB,$F6,$F1,$BB,$A3,$E4,  0,$1A,$BF,$87,  0,  0,  0,  0,$5E,$57; 128
		dc.b $58,$91,$5C,$95,$A4,$B8,$45,$82,$D1,$FA,$99,$62,$72,$DE,$53,$1C,$FF,$55,$BF,$69,$4E,$5A,$27,$24,$CE,$53,$8C,$D3,$2A,$61,$31,$F9,$36,$D1,$1B,$57,$8C,$96,$7B,$95,$AB,$22,$EB,$62,$A6,$FB,$32,$2D,$76,$28,$F5,$D0,$46,$DA,$F6,$DB,$56,$ED,$AB,$76,$D5,$9F,$59,$97; 192
		dc.b $A9,$9F,$32,$AE,  6,$90,$B7,$CA,$7A,$42,$A3,$4B,$A6,$42,$F8,$E3,$7D,$31,$AE,$83,$6E,$5F,$9B,$E5,$B0,  0,  0,  0,  2,$FF,$9F,$AE,$DC,$B8,$DF,$64,$DA,$40,  0,  0,  0,  0,  0,$8F,$CF,$D7,$F4,$95,$97,$E6,$C0,  0,  0,  6,$E4,$73,$B5,$65,$79,$24,$A7,$62,$D8,$91; 256
		dc.b $5B,$21,$4C,$2D,$A5,$FA,$A8,$B1,$FD,$A9,$BF,$E8,$53,$17,$E2,$24,  0,$17,$F1,$19,$41,$FC,$9A,$15,$12,$CB,$FA,$28,$BF,$D7,$45,$FE,$BA,$B7,$F4,$55,$BF,$A2,$8B,$FD,$7E,$BF,$89,$33,$1E,$A9,$65,$92,$1E,$A2,$75,$20,  8,$CA,$3B,$C3,$2C,$61,$14,$C7,$F4,$FC,$F7,$D7; 320
		dc.b $BF,$F8,$7D,$7F,$86,$7D,$7F,$87,$DF,$FA,$3C,$2D,$BF,$47,$EA,$96,$5B,$25,$96,$71,$D4,$4D, $D,$C8,  2,$1A,$3B,$C3,$14,$5C,$22,$9F,$4F,$23,$CF,$A7,$A7,$9F,$D1,$DB,$F4,$7E,$A9,$65,$B2,$59,$67,$1D,$44,$D0,$DC,$80,$21,$A3,$BC,$31,$45,$C2,$29,$F4,$F2,$3C,$FA,$7A; 384
		dc.b $79,$FD,$23,$21,$65,$85,$63,$94,$AF,$46,$39,$4A,$C8,$E6,$8C,$50,$DF,$2F,$7C,$A9,$9A,$39,$EF,$29,$98,$73,$94,$96,$57,$FC,$C9,$69,$6E,$D4,$F6,$6A,$C9,$9D,$4A,$10,  0,$13,$59,$F7,$9A,$CD,$3C,$16,$58,$5F,  5,$96,$14,$21,$AE,$74,$CE,$B2,$EB,$95,$1E,$24,$A9,$29; 448
		dc.b $9D, $B,$70,$AD,$D6,$7E,$F1,$93,$70,$53,$3F,$CC,$DB,$16,$86,$4F,$C9,$BC,$1B,$DA,$B4,$C6,$EC,$8D,$5A,$1B,$43,$2C,$E9,$CB,$6A,$4C, $E,$67,$76,$34,$CD,$34,$A7,$BE,$59,$4D,$FC,$4F,$85,$86,$BA,$F0,$E5,$B8,$6C,$23,$FE,$C6,$99,$C3,$FE,$67,$3D,$5A, $D,$48,  0,  0; 512
		dc.b   0,  0,  0,  0,  2,$19,$65,$4F,$7B,$52,$65,$33,$3E,$B0,$B4,$2C,$99,$3A,$72,$2C,$B6,$B9,$92,$CB,$27,$89,$24,$8D,$2F,$C6,$3D,$E7,$18,$A6,$25,$9A,$67,$46,$CE,$8F,$2E,$C5, $D,$DD,$97,$99,$AE,$C6,$AE,$5E,$AE,$5C,$6A,$5F,$57,  0,  0,  0,  0,$6B,$4E,$6A,$F5,$A1; 576
		dc.b $AB,$23,$64,$EC,$B3,$57,$FC,$E3,$8B,$AC,$A6,$AD, $A,$C7,$29,$5D,$58,$E5,$20,  2,$69,$AF,$4F,$46,$28,$78,$EA,$99,$D1,$71,$C7,$E9,$79,$69,$8F,$D2,$4F,$7F,$D0,$C9,$1F,$24,$A6,$74,$31,$63,$42,$9C,$91,$F3,$D9,$E6,$B3,$13,$59,$C9,$77,$F0,$59,$6F,$E0,$B2,$80,  0; 640
		dc.b $82,$85,$91,$E3,$3A,$33,$D0,$BA,$4E,$5C,$AC,$5A,$24,$8B,$3E,$F0,$78,$9B,$17,$4C,$E9,$FA,$17,$89,$2B,$A6,$4E,  0,$15,$54,$50,$35,$60,$39,$9A, $A,$D0, $E,$7B,$4F,$60,  0,$E6,$6A,$41,  3,$9C,$C3,$8A,$B8,$1B,$80; 704
Nem_HTZ_AutomaticDoor:dc.b $80,	 4,$80,	 4,  8,$15,$1C,$33,  1,$44, $A,$54, $D,$76,$3E,$81,  3,	 0,$14,	 9,$83,	 4,  7,$85,  5,$17,$86,	 5,$18,$87,  5,$19,$89,	 4,  6,$8A,$15,$1D,$8B,	 5,$16,$8C,  3,	 2,$8F,	 5,$1E,$FF,$FC,$47,$F5,$FF,$10,$3D,$FB,$1F,  8,$FC,$17,$E8,$63,$F0,$55,$35; 0
					; DATA XREF: ROM:0001C22Ao
		dc.b $35,$30,  8,$89,$A9,$A9,$80,$44, $D,$1A,$38,$34,$68,$DF,$7E,$BB,$F4, $E,$5F,$9F,$93,$1F,$8E, $E,$39,$7C,$3D,$8A,$EA,$2C,$9B,$3F,$1B,$E1,$EC,$57,$51,$64,$D9,$F8,$DF, $F,$62,$BA,$8B,$26,$CF,$C6,$F8,$7B,$15,$D4,$59,$36,$78,  0; 64
Nem_HTZ_Seesaw:	incbin	"art/nemesis/See-saw in HTZ.bin"
		even
Nem_HPZ_Bridge:	dc.b $80,$15,$80,  3,  1,$14,  8,$26,$33,$36,$36,$46,$39,$56,$3A,$66,$3B,$73,  2,$81,  3,  0,$15,$1A,$82,  4, $A,$83,  3,  3,$14, $B,$84,  5,$18,$85,  6,$38,$86,  6,$32,$18,$FA,$87,  4,  9,$88,  7,$7A,$89,  7,$79,$8A,  6,$37,$8C,  8,$F8,$8E,  7,$78,$8F,  7,$7B; 0
					; DATA XREF: ROM:0001C1AEo
		dc.b $FF,$D9,$FE,$8A,  3,  6,$C8,$A0,$CB,$CF,$2C,$32,$C8,$A1,$8B,$8A,$39,$35,$C8,$7C,$85,$DB,$5D,$8B,$E8,$5F,$42,$90,$CF,$F4,$31,$FA,$1C,$C2,$A1,$D5,$8E,$AC,$2E,$DA,$EC,$72,$C2,$E5,$E4,$6A,$2F,  2,$81,$65,$E3,$2C,$D9,$62,$81,$B2,$18,$8F,$D1,$3F,$D8,$C6,$A2,$C8; 64
		dc.b $BF,$CA,$40,$38,$E3,$EB,$46,$86,$36,$A3,$8D,$A4,$E5,$B4,$C4,$E7,$24,$40,$E6,$B6,$92,$33,$11,$30,$E0,$44,$82,$E0,$72,$E3,$44,$45,$ED,$A8,$BF,$F8,$DC,$6B,$6B,$80,$75, $F,$91, $C,$89,$81, $E,$26,  6,$60,$CE,$D5,$C8,$80,$67,$39,$89,$DB,$23,$3B,$60,$D6,$D8,$14; 128
		dc.b $75,$F5,$C6,  8,$8F,$CA,$58,$37,$1A,$8F,$D0,$91,$FA,$22,$2B,$89,$19,  2,$E5,$F1,$26,$46,$54,$E4,$E8,$EA,  4,$31,$44,$1B,$CC,$17,  3,$A0,$87,$41,$C9,  5,$E6,$24,$83,$60,$89,$3A,$87,$13,  0,$87,$43,$F4,$F0, $B,$A0,$5D,  8,$14,$C8,$A6,$44,$7E,$9C,$53,  4,$44; 192
		dc.b $C3,$8D,$19,  4,$59,  6,$46,$6C,$83,$2C,$74,$10,$E8,$43,$23,$3B,$20,$D0,$70,$23,$47,$46,$5D,$64,$24,$CF, $E,$59,$19,  9,$E2,$81,$F5,$F1,$C7,$BF,$DD,$E1,$9B,$FD,$2C,$A4,$97,$7E,$37,$3B,$E3,$F4,$7C,$3A,$3B,$FA,$F3,$ED,$24,$92,$49,$24,$92,$5E,$B7,$AF,$3F,$8D; 256
		dc.b $F1,$EF,$CE,$19,$BF,$D2,$CA,$49,$77,$E3,$73,$BE,$3F,$47,$97,$18,$7E,$7C,$7B,$F8,$49,$24,$92,$49,$24,$97,$E2,$FE,$31,$BF,$8F,$5E,$77,$C3,$37,$FA,$59,$49,$2E,$FC,$6E,$77,$C7,$E8,$FE,$BF,$2B,$F9,$FF,$CE,$24,$92,$49,$24,$92,$48; 320
Nem_HPZ_Waterfall:dc.b $80,$35,$80,  3,	 0,$15,$19,$23,	 1,$35,$17,$45,$1A,$56,$3B,$67,$78,$74,	 4,$81,	 4,  6,$34,  9,$48,$F8,$82,  6,$38,$83,	 4,  5,$17,$7A,$85,  4,	 8,$86,	 6,$39,$87,  4,	 7,$89,	 5,$16,$17,$7B,$8A,  5,$1B,$8B,	 5,$18,$8C,  4,	$A,$8D,	 6,$3A,$8E,  7,$79,$FF;	0
					; DATA XREF: ROM:0001C1B4o
		dc.b $14,$30,$30,$30,$5C,$BA,$69,$CC,$20,$83,  9,$A8,$42,$A8,$81,$4A,$86,$2A,$85,$C3,$16,$4D,$36,$9C,$BA,$69,$CC,$20,$83,  9,$A8,$42,$A8,$81,$4A,$86,$2A,$85,$C3,$16,$40,$E8,$5B,$4E,$5D,  3,$A1,$7D,$41,$84,$10,$86,$34,$A8,$55,  2,$A1,$50,$C5,$B4,$C8,$5B,$4E,$5D; 64
		dc.b   3,$A1,$7D,$41,$84,$10,$86,$34,$A8,$55,  2,$A1,$50,$C5,$B5,$C9,$E5,  3,$97,$41,  6,$10,$42,$21,$8D,$29,$54,$40,$A5,$74,$C5,$B4,$C5,$83,$97,$44,$D3,$97,$41,  6,$10,$42,$21,$8D,$29,$54,$40,$A5,$74,$C5,$B4,$C5,$83,$97,$40,$ED,$4D,$8B,$CD,$E6,$F3,$79,$11,$99; 128
		dc.b $31,$37,$9B,$C8,$5C,$CD,$E6,$F2,$18,$2C,$9F,$80,$F9,$9B,$C9,$79,$BC,$DE,$6F,$37,$91,$19,$93,$13,$79,$BC,$85,$CC,$DE,$6F,$21,$82,$C9,$F8, $F,$99,$BC,$88,$14,$18,$72,$14,$79,$16,$1E,$47,$5A,$F2,$3A, $A,$3C,$8E,$83, $E,$87,$43,$A3,$D1,$E8,$38,$62,$C8,$28,$60; 192
		dc.b $6C,$60,$5B,$C7,$9F,$1E,$46,$FC,$75,$A5,$1D, $B,$78,$F3,$A6,$1D,  7,$1B,$18,$1B,$1E,$7C,$79,$D6,$FC,$74,$3A,$3B,$14,$3A,$3D,$1A,$18,$14,$28,$D1,$C1,$F2,$38,$14,$D8,$1E,$4F,$E4,$75,$FA,$1C,$F4,$3C,$C8,$61,$D4,$9E,$A4,$38,$A9,$BC,$8A,$18, $C,$19,$11, $D,$85; 256
		dc.b $6A,$C2,$85,$B3,$46,$C6,$87,$E6,$BD,$1A,$CB,$6B,$F2,$2F,$CE,$68,$7E,$5F,$9B,$BF,$E5,$57,$91,$68,$E0,$7A,$6C,$C7, $B,$F9,$17,$1C,$73,$97,$E3,$2E,$AE,$B0,$AE,$2A,$D5,$EF,$78,$AB,$FE,$F3,$3F,$9C,$1F,$95,$1B,$B7,$E5,$79,$F5,$65,$CA,$EB,$D5,$FD,$65,$87,$E8,$47; 320
		dc.b $E4,$43,$7E,$9D,$BF,$6E,$3F,$10,$1F,$F2,$C2,$3F,$11,$C4,$72,$3F,$2D,$D7,$10,$AD,$C8,$C7,$10,$39,$78,$E4,$B5, $B,$30,$83,$CE,$1B,$F1,$1C,  6, $D,$80,$AD,$F9,$21,$81,$F9,$A1,$F9,$14,$EE,$DE,$2D,$AC,$5E,$B3,$8B,$D5,$EB,  6,$B1,$BA,$C1,$AC,$36,$FB,$C0,$B5,$7E; 384
		dc.b $6C,$A8,$AC, $F,$CD, $B,$1C,$7A,$CD,$8D,$87,$BA,$18,$CD,$B3,  3,  7,$F5,$29,$DF,$E7,$33,$F9,$C1,$8F,$CE,$66,$A3,  3,$D9,$B7,$E6,$FD,$9F,$CE,$66,$8F,$E7,$3F,$37,$5A,$FC,$DA,$22,$22,$77,$6C,$EE,$F6,$CB,$6F,$BE,  7,$BB,$DB,$9B, $B,$56,$33,$58,$B4,$38,$D9,$DD; 448
		dc.b   6,$E7,$3C,$67,$81,$18,$DD,$96,$AC,$A3, $B,$BB,$3E,$ED,$9B,$2D,$B0,$C2,$C2,$AC,$77,$9A,$16,$1C,$73,$FA,$BB,$56,$16,$3F,$45,$6A,$C3,$28,$FE,$4F,$19,$AC,$70,$3D,$A8,$AC,  5,$DD,$AF,$8F,$5F,$A9,$3E,$D1,$11, $D,$78,$7C,$77,$86,$DF,$7B,$16,$18,$35,$B1,$66,$C1; 512
		dc.b $C5,$B3,$F9,$B3,$BB,$2E,$77,$5C, $B, $A, $A,$2D,$CF, $B,$9F,$62,$B8,$6E,$5E,$F1,$C0,$8A,$E3,  2,$2C,$A3,$9E,  6,$D6,$D1,$C3,$2F,$1E,$84,$7E,$4B,$9D,$41,$8F,$C9,$43,$88,$BF,$2C,$63,$81,$EA,$C3,$D8,$E1,$73,$F8,$80,$D9,$51,$2A,$66,$F2,$14,$2F,$C0,$51,$37,$97; 576
		dc.b $61,$F1,$79,$CB,  9, $E,$1E,$6F,$39,$71,$30,$64,$40,$89,$BC,$E6,  4,$DE,$54,$CD,$E4,$28,$5F,$80,$A2,$6F,$2E,$C3,$E2,$F3,$96,$12,$1C,$3C,$DE,$72,$E2,$60,$C8,$81,$13,$79,$CC, $F,$C4,$5B,$AB,$77,$1D,$AA,  5, $A,$8A,$14,$AE,$57,$2A,$C1,$8B,$5D,$83,$16,$D3,$5D; 640
		dc.b $83,$87, $F,$DB,$87, $F,$DB,$E5,$FB,$81,  2,$13,$F4,$A6,$35,$1D,$AA,  5, $A,$8A,$14,$AE,$57,$2A,$C1,$8B,$5D,$83,$16,$D3,$5D,$83,$87, $F,$DB,$87, $F,$DB,$E5,$FB,$81,  2,$13,$F2,$BC,$DA,$AD,$5F,$A9,$DA,$78,$AF,$14,$89,$BF,$1B,$4E,$ED,$E2,$C8,$88,$31,$E3,  8; 704
		dc.b $88,$88,$88,$88,$9A,$B7,$8B,$22,$20,$C7,$8C,$27,$74,$30,$30,$30,$5C,$BA,$69,$CC,$20,$83,  9,$A8,$42,$A8,$81,$4A,$86,$2A,$85,$C3,$16,$40,$E8,$5B,$4E,$5D,  3,$A1,$7D,$41,$84,$10,$86,$34,$A8,$55,  2,$A1,$50,$C5,$B5,$C9,$E5,  3,$97,$41,  6,$10,$42,$21,$8D,$29; 768
		dc.b $54,$40,$A5,$74,$C5,$B4,$C5,$83,$97,$40,$ED,$4D,$8B,$CD,$E6,$F3,$79,$11,$99,$31,$37,$9B,$C8,$5C,$CD,$E6,$F2,$18,$2C,$9F,$80,$F9,$9B,$C8; 832
Nem_HPZ_Emerald:dc.b $80,$20,$80,  3,  2,$13,  3,$24, $A,$35,$18,$45,$17,$55,$19,$66,$3A,$75,$1B,$81,  3,  0,$16,$38,$82,  4,  8,$17,$78,$83,  3,  1,$16,$39,$84,  7,$77,$85,  5,$1A,$18,$F7,$86,  5,$16,$18,$F6,$87,  4,  9,$17,$79,$8C,  7,$76,$8E,  7,$7A,$FF,$E8,$64,$4D,$C4,$9C; 0
					; DATA XREF: ROM:0001C1CCo
		dc.b   9,$38,$12,$70,$35,  6,$86,$9E,$B9,$11,$E5,$4F,$2B,$F4,$5E,$FE,$45,$CB,$17,$2C,$6C,$6C,$6C,$6C,$6C,$55,$B3,$63,$18,$B1,$70,$EC,$71, $B,$5D,$1B,$60,$87,$64, $D,$15,$69,$B8,$53,$18,$81,$D4, $D,$A8,$BC, $E,$88,$8B,$82,$3D,$FD,$BC,$DB,$4F,$87,$C2,$FD,$12,  8; 64
		dc.b $20,$E0,$38,$2C,$10,$83, $F,$BA,$28,$39,$5D,$D8,$F1,$AF,$CA,$5B,$CF,$E9,$7F,$29,$C2,$15,$6D,$9E,$10,$C1,$A1,$8E,$28,$33,$53,$8E,$32,$5C,$D8,$54, $A,$1B, $E,$2E,$36,$E3,$B3,$D2, $C,$2D,$28,$7F,$8F,$5A,$A1,$F8,$F1,$72,$1D,$AB,$F1,$B5,$1E,$C4,$6C,$54,$7E,$71; 128
		dc.b $87,$EA,$E3,$D2,$17,$FC,$C7,$E2,$7F,$15,$FA,$9F,$C4,$57,  8,$16,$17,$1C,$A0,$B8,$E5,  5,$C7,$35,$C7,$35,$C7,$37,  7,$F4,$2C,$41,$8E,$7F,$44,$58,$C4,$16,$36,$2A, $D,$E6,$E2,$CE, $D,$E5,$41,$DB, $E,$54,$14,$3D,$63,$9E,$D1,$E9,$4A,  8,$23,$EA,$8D,$1F,$52,$86; 192
		dc.b  $F,$AE,$8F,$E2,$7A,$3F,$89,$DF,$47,$A3,$93,$93,$93,$41,$9C,$7E,$27,$F1,$1F,$89,$FD,$57,$E6,$E3,$F8,$2B,$F4,$75,$CD,$1E,$84,$50,$2E,$74,$43,$12,$FB,$C0,$31,$FA,$69,$31,$EF,$FC,$61,$B9,$BD,$8A,$9C,$1A,$9D,$CA,$B1,$43,  7,$33,$80,$C1,$C0,$47,$22,$85,$73,$46; 256
		dc.b $E1,$15,$CE,  7,$2C,$54,$30,$FC,$A1,$71,$28,$39,$62,$6E,$50,$9B,$94,$25,$85,$D8,$A1,$38,$ED,$C8,$BF,$64,$1C,$FE,$6F,$F1,$1D,$ED,$3A,$E6,$38,$B4,$77,$42,$AD,$A4,$1C,$8B,$57,$9F,$6A,$95,$ED,$41,$7B,$50,$5A,$5F,$B6,$F3,$AF,$DB,$7E,$9F,$A1,$6A,$1B,$5C,$2B,$21; 320
		dc.b $B5,$C5,$C6,  5,$98,$63,$6A,$D3,$79,$B9,$DC,$B9,$B3,$3D, $C,$4F,$B0,$62,$AC,$C3,$16,$47,$25,  7,$C6,$CE,$38,$47,$F3,$D4,$3F,$3B,$8F,$CE,$63,$F3,$B9,$FC,$57,$E6,$FF,$15,$F9,$BF,$CE,$59,$4D,$A6,$DC,$2F,$28,$32,$85,$A5,$94,$1F,$B1,$B9,$F7,$C1,$7E,$EA,$6D,$FA; 384
		dc.b $58,$98,$FD,$B6,$A0,$20,$CB,$B6,$4E, $B,$B6,$AE,$70,$5D,$B5,$78,$B5,$17,$26,$F1,$6C,$C9,$BF,$BD,$E2,$DD,$1C,$C6,$F2,$3A,$39,$FC,$F6,$3F,$3C,$83,$FC,$F3, $B,$F3,$D4,$32,$32,$32,$32,$33,$DB,$F1,$BF,$AC,$FC,$6F,$E7,$3C,$72,$11,$C4,$28,$BC,$C3,$2E,$35,$78,$CC; 448
		dc.b $28,$CC,$F8,$D7,$83,$1A,$F1,$AF,  3,$30,$37,$78,  7,  5,$1C,$1E,$3A,$38,$22,$2E,$22,$E4,$60,$10,$68,$31,$41,$82,$C5,  6,$30,$6B,$C5,$E1,$11,$45,$16,$3B,$2E,$5E,$9F,$6A,$EF,$8E,$CB,$B8,$D6,$3B,$77,$EB,$B6,$91,$BF,$6D,$F6,$5D,$BF,$BB,  8,$6C,$5C,$B8,$D8,$AF; 512
		dc.b $D1,$B1,$72,$C2,$2C,$D0,$7C,$DC,$DC,$1B,$8C,$8C,$8C,$8C,$8C,$8C,$8D,$D5,$B3,$A5,$18,$D6,$74,$8E,$84,$28,$DD,$B6,$B4,$CD,$59,$78,$18,$19,  5, $E,$AC,$F8,$2A,$48,$65,$49,$44,$42,$EE,$68,$C6,$25,$80,  0; 576
Nem_HPZ_Platform:dc.b $80,$10,$80,  4,	9,$15,$19,$37,$7C,$72,	0,$83,	5,$18,$16,$3B,$84,  2,	1,$26,$3D,$85,	5,$1A,$87,  4,	8,$16,$3C,$36,$38,$89,	4, $B,$8A,  4, $A,$16,$37,$77,$7D,$8B,	6,$39,$8D,  6,$3A,$8E,	6,$36,$FF,$AD,$A3,$6A,$FD,$5B,$89,$EF,$F4,$B0,	1,$FE, $D,$AA; 0
					; DATA XREF: ROM:0001C1BAo
		dc.b $69,$FD,$1F,$15,$34,  0,  4,$FE,$3F,$9F,$CF,$FE,$23,$F0,$5C,$FE, $B,$FA,$B1,$A0,  3,$FA,$7A,$C3,$5F,$B4,$C3,$F1,$CA,  0,$1F,$81,$E7,$F2,$3A,$FC,$8E,$B8,$C7,$98,  0,$3F,$EB,$FB,$38,$EE,$3F,$40,$80,  7,$CF,$D0,$EB,$F6,$3C,$63,$CC,  0,$1F,$F5,$FD,$9C,$77, $E; 64
		dc.b $59,$F4,  0,$2F,$F3,$B7,$53,$B0,  0,  0,$1F,$D0,$65,$3F,$81,$BF,$F0,$22,$77,$B8,$BE,$AF,$7B,  0,  0,  1,$97,$E4,$4D,$65,$CA,$7D,$DE,$EB,$F7,$20,  0,  0,$66,$27,$8C,$B3,$FB,$43,$EF,$5F,$99,$EA,$FF,$5A,  0,  0,  3,$E3,$1E,$C7,$E5,$21,$FD,$3B,$96,$7D,$FA,  0; 128
Nem_HPZ_PulsingBall:dc.b $80,$22,$80,  3,  2,$14,  6,$25,$12,$34, $A,$45,$18,$55,$1A,$66,$3C,$74,  7,$81,  3,  0,$15,$17,$36,$3B,$82,  4,  8,$83,  3,  1,$15,$19,$27,$7A,$84,  6,$3A,$18,$F8,$85,  5,$16,$15,$1C,$86,  5,$1B,$87,  5,$13,$17,$7B,$FF,$7D,  3,$40,$C0,$90,$8B,$ED,$84,$34; 0
					; DATA XREF: ROM:0001C1C0o
		dc.b $ED,$5B,$EA,$65,  8,$11,$D2,$32,$D9,$45,  8,$43,$66,$BD,$EA,$7E,  4,$5E,$83,$A3,$83,$A0,$EC,$70, $B,$E7,  1,$67,  1,$1D,$5D,$FB,$8F,$E0,$E5,$1D,$66,$B7,$EA,$B6,$51,$C6,$70,$5D,$DD,$DD,$DD,$DD,$DD,$F4,$71,$9C,$14,$77,$5E,$B7,$59,$D1,$59,$FE, $C,$76,$F7,$D1; 64
		dc.b $43,$19,$43,$19,$72,$30,$5D,$86,$8E, $B,$A0,$F4,$50,$F2,$7A,$F7,$47,$61,$40,$45,$1D,$C8,$AE,$A0,$40,$46,$7D,$6E,$AD,$36,$80,$DB,$BC,  9,  8,$22,$88,$77,$A0,$68,$18,$12,$11,$79,$B0,$86,$F8,$AE,$74,$50,$8B,$DB,$13,$89,  8,$46,$6C,$1B,$7D,$6B,$72,$12, $F,$A0; 128
		dc.b $E8,$B0,$62,$C6,$43,$42,$45,$19,  3,$23,$59,$62,$C1,$67,  1,$1D,$5D,$FB,$8F,$E0,$E5,$1D,$66,$A7,$EA,$A6,$5B,$D3,$96,$ED,$AF,$57,$6F,$DB,$CA,$75,$35,$36,$BB,$4D,$83,  7,$A0,$C1,$A6,$D7,$69,$A9,$D4,$E5,$FB,$76,$BD,$5D,$BB,$62,$FE,$98,$CE,$BD,$4E,$B3,$A2,$B3; 192
		dc.b $FC,$18,$ED,$EF,$A2,$86,$32,$83,$16,$CD,$19,$11,$22,$8C,$86,$84,$8B,$16, $C,$5D,  7,$D0,$90,$96,$F5,$D6,$D8,$34,$CA,$81,$28,$9E,$2D,$78,  8,$F5,$CA,$F8,$68, $D,$3B,$C0,$90,$82,$28,$87,$77,$77,$C5,$B5,$CC,$73,$1C,$42,$5C,$42,$DE,  6,$E2,$16,$1A,$11,$42,$C8; 256
		dc.b $2E,$4B,$3A,$3E,  6,$B3, $F,$D2,$63,$F4,$AD,$FF,$5F,$D2,$CB,$8D,$72,$18,$1B,$42,$80,$7A,$9A,$9D,$ED,$31,$F9,$29,$FE,$58,$23,$68,$9B,$46,$67,$83,$5F,$A1,$95,$DA,$18,$36,$70,$68,$22,$C3,$41,$7C,$73,$F2,$DE,$FF,$4B,$8F,$EA,$E3,$F8,$BD,$B7,$32,$D7,$AF,$4B,$FA; 320
		dc.b $28,$C2,$FD,$3A,$FD, $C,$4B,$DA,$EE,$53,$41,$AE,$D3,$59,$61,$83,$53, $C,$50,$90,$D7,$BF,$CB,$73,$E1,$DD,$ED,$E7,$3C,$E6,  2,$E6,  2,$E4,$A1,$E0,$2E,$30,$F0,$4D, $D,$43,$71,$4D,$D4,$F1,$FA,$40,$D6,$77,$7B,$6A,$C7,$16,$3B,$AB,$1D,$D5,$8E,$D0,$91,$DA,$10,$D6; 384
		dc.b $F0,$ED,  8,$D1,$56,$56,$6B,$EC,$36,$E5,$9A,$28,$F8,$1A,$CD,$1B,$BC,$B9,$56,$DE,$7F,$6A,$7F,$4D,$2B,$6D,$AF,$F9,$26,$19,$8F,$D0,$98,$43,$F4,$F0,$DC,$C7,$5F,$92,$FD, $F,$C1,$BA,$CA,$21,$65,$AE,$8B,$5E,$11,$57,$60,$E5,  7,$C6,$7F,$8F,$EB,$92,$FD,$36,$79,$5F; 448
		dc.b $96,$B2,$B7,$E4,$AE,$DC,$BC,$1B,$B7,$E9,$C4,$1E,$D7,$B1,$19,$57,$53,$41,$65,  5,$3A,$28,$29,$DD,$8A,$12,$BA,$2E,$85,  4,$5D,$7F,$1F,$F2,$D6,$77,$7E,$6A,$CA,$DA,$B2,$B5,  5,$6C,$10,$B9,$20,$F0,$17,$1A,$68,$EA,$68,$35,$A4,$1A,$D8,$2F,$40,  0; 512
Nem_HPZ_Various:dc.b $80,$16,$80,  3,  1,$14,  8,$26,$38,$36,$3A,$45,$1B,$56,$3D,$66,$3B,$74,  9,$81,  3,  0,$14, $A,$82,  4, $B,$18,$F8,$83,  3,  2,$15,$1A,$84,  6,$3C,$85,  5,$18,$86,  5,$19,$18,$F9,$87,  3,  3,$16,$39,$38,$FA,$FF,$FC,$7F,$E2,$FF,$7F,$F8,$CF,$C7,$FF,$55,$E2; 0
					; DATA XREF: ROM:0001C1C6o
		dc.b $66,$66,$7F,$A7,$85,$81,$FB,$5B,$C7,$D2,$E5,$4C,$CC,$CF,$FD,$7F,$65,$9F,$8C,$A3,$A9,$99,$99,$EB, $F,$F2,$BF,$59,$7F,$3F,$4B,$95,$F5,$33,$33,$3F,$F5,$C5,$8C,$56,  6,$1F,$F5,$66,$66,$65,$63,$FA,$77,$8B,$4F,$F1,$DA,$FD,$2E,$8A,$F3,$B7,$33,$33,$FA,$3F,$3F,$14; 64
		dc.b $7F,$15,$F8,$EF,$DE,$7E,$DB,$8D,$7E,$88,$42,$22,$78,$10,$88,$9E,  4,$22,$27,$81, $A,$76,$21,$4E,$C4,$C8,$93,$6B,$F4,$54,$B9,$F9,$17,$80,$68,$BC,$F4, $D,$38,  6,$99,$A3,$4C,$88,$A6,$44,$53,$22,$11,$64,$11,$1E,$30,$6B,$8C,$66,$8A,$E3,$10,$B7,$63,$BF,$8E,$EE; 128
		dc.b $48,$C7,$F5,$9F,$FC,$72,$87,$40,$8B,$11,$50,$2C,$D4,$32,$10,$E9,$90,$8A,$2C,$B2,$15,$8E,$4B,$35,$1C,$96,$3C,$20,$F3,$96,$A0,$43,$5D,$3C,$AE,$BE,$56,$F2,$BD,$5B,$FC,$AF,$E9,$B9,$C1,$FD, $D,$A3,$50,$8E,$84,$23,$A1,  8,$E8,$16,$8E,$81,$71,$A0,$5C,$68,$17,  0; 192
		dc.b $82,$CB,$8F,  3,$3C,$C2,$79,$E4,$88,$4E,  7,$4B,$2F,$D5,$F3,$EA,$CF,$6A,$3F,$A7,  3,$FC,$C0,$DF,$EC,$6C,$BB,$51,$A8,$76,$75,  0,$B0,$BA,  5,$82,  8,$20,$B1,$6A,$88,$2D,$45,$10,$FC,$28,$D6,$71,$C2,$8C,$6C,$5E,$FE,$3D,$BD,$8E,$C7,$7F,$A2,$D6,$C1,$50,$24,$82; 256
		dc.b $A0,$49,  5,$40,$9E,$14,  9,$E1,$40,$9F,$44,$FA,$27,$D5,$FE,$21,$FE,$60,$6F,$F6,$36,$5D,$A8,$D4,$3B,$3A,$80,$58,$5D,  2,$C1,  4,$10,$58,$B5,$44,$16,$A2,$88,$7E,$14,$6B,$38,$E1,$46,$36,$2F,$7F,$1E,$DE,$C7,$7F,$1F,$A3,$85,$CF,$C8,$BC,  3,$45,$E7,$A0,$69,$C0; 320
		dc.b $34,$CD,$1A,$64,$45,$32,$22,$99,$10,$8B,$20,$88,$F1,$83,$5C,$63,$34,$57,$18,$85,$BB,$1D,$FC,$77,$72,$40; 384
Nem_UnusedDust:	dc.b   0,$18,$80,  5,$17,$14,  8,$25,$1B,$35,$19,$45,$1C,$56,$3A,$67,$7A,$72,  0,$83,  4,  6,$14, $A,$28,$F9,$38,$FA,$84,  3,  2,$14,  9,$25,$18,$37,$7B,$58,$F8,$85,  4,  7,$15,$16,$26,$3C,$35,$1A,$46,$3B,$58,$FB,$FF,$CF,$CE,$EB, $D,$7A,$9F,$29,$77,$4B,$B6,$9D; 0
		dc.b $26,$5F,$77,$69,$D5,$26,$C3,$DE,$A7,$CA,$5A,$57,$69,$7C,$57,$C5,$7C,$5F,$F8,$73,$1F,$D3,$3F,$A7, $A,$BD,$B3,$CE,$A7,$C5,$A5,$FE,$5C,$7F,$D7,$FE,$B6,$5F,$E5,$4E,$B5,$8D,$7F,$D1,$3A,$79,$AC,$7F,$CE,$EC,  7,$A5,$EA,$7A,$B4,$E7,$C9,$BA,$BB,$E3,$3E,$7F,$11,$D3; 64
		dc.b $E2,$25,$D6,$6C,$DC,$4C,$B8,$C0,  6,$EB,$2D,$8A,$85,$69,$6B,$AD,$4D,$D6,$93,$DD,$69,$3D,$D9,$77, $D,$36,$5B,$6F,$79,$FA,  0,  3,$33,$FC,$3F,$86,$F7,$DC,$FD,$AE,$D3,$AE,$D7,$DC,$F9,$86,$F8,$6B,$B6,$2B,$7F,$40,  4,$37,$A5,$F3,$9B,$2A,$DE,$93,$47,$78,$7F,$7F; 128
		dc.b $33,$F5, $C,$9B,$94,  0,  0,$43,$AE,$6B,$6B,$B8,$5D,$C3,$2B,$26,$DC,$D6,$69,  2,$F4,$E0,  3,$F5,$68,$78,$56,$BA,$75,$76,$4F,  9,$A1,$90,$10,$9D,$42,$8B,$28,$50,$C9,$80, $D,$DB,$AF,$39,$65,$94,$F5, $A,$28,$2F,$2C,$9E,$EF,$D2,$B7,$2C,$9B,$32,  0,$1E,$AC,$B9; 192
		dc.b $65,$CC,$43,$F5,$60,$37,$6E,$A4,$2E,$80, $B,$74,$9F,$2E,$43,$C3,$81,$D2,$7D,$BE,$D1,$74,  0,  6,$6D,$D4,$C2,$38,$83,$A4,  0,$70; 256
Nem_CPZ_FloatingPlatform:dc.b	0,$10,$80,$73,	0,$81,	4,  5,$15,$12,$26,$2E,$36,$3A,$46,$3B,$74,  6,$82,  5,$14,$26,$34,$36,$33,$83,	4,  2,$16,$39,$25, $F,$35,$10,$84,  4,	3,$15,$16,$26,$32,$37,$78,$46,$35,$85,	4,  4,$15,$13,$86,  5, $E,$28,$FA,$87,	6,$36,$88,  5,$11,$16,$3D,$89; 0
					; DATA XREF: ROM:0001C12Eo
		dc.b $27,$79,$8A,$15,$18,$28,$FB,$8B,  7,$7C,$16,$2F,$8C,  5,$15,$8D,  6,$37,$8E,  6,$38,$FF,$7E,$BA,$15,$1F,$9C,$34,$2A,$3E,$F9,$5F,$2F,$92,$BF,$BB,$EE,$F8,$B7,$DD,$7E,$70,$D0,$A8,$FC,$E1,$A1,$53,$93,$CD,$F9,$95,$1F,$9C,$34,$2A,$3D,$BF,$21,$2C,$FF,$61,$D7,$F4; 64
		dc.b $24,  0,  0,  0,  0,$19,$7F,$16,  6,$56,$79,$96,$50,$32,$B2,$DF,$D7,$E2,$AF,$EB,$1F,$3A,$FB,$EB,$F7,$50,$32,$B3,$CC,$B2,$81,$95,$9E,$65,$64,$81,$91,$C0,$CB,$28,$19,$59,$E6,$59,$37,$37,$68,$CC,$DF,$C0,$F3,$FE, $F,$C4,$80,  0,  0, $F,$DA,$FE,$DB,$C2,$1C,$F5; 128
		dc.b $43,$4F,  8,$73,$FB,$EF,$1D,$E3,$BC,$77,$F7,$E1, $E,$7A,$A1,$A6,$55,$B9,$35,$43,$4C,$AB,$72,$6A,$86,$9E,$10,$E7,$AA,$1A,$31,$5A,$6C,$CD,$77,$F2,$63,$BC,$7C,$C6,$BC,$7B,$F8, $F,$DC,$FE,$A3,$F6,$1E,$78,$FF,  7,$E2,$40,  0, $F,$A9,$D9,$66,$E9,$1C,$A6,$EA,$A9; 192
		dc.b $CA,$6E,$AB,$90,$97, $E,$54,$FD,$7E,$1C,$A7,$76,$1D,$53,$FD,$7E,$1D,$52,$6B,$B9,$5F,$D2,$AF,$2A,$85,$42,$49,$21,$3A,$8E,$24,$54,$FC,$B5,$3F,$2C,$8A,$7F,$C6,$32,$52,$FA,$25,$E5,$5E,$D2,$2B,$4F,$E9,$99,$A3,$C4,$77,$8E,$D1,$DA,$BF,$C8,$D9,$DB,$FB,$BF,$BB,$3B; 256
		dc.b $88,$D6,$3C,$7B,$B7,$9F,$D4,$6F,$1F,$D0,$7F,$24,  0,  0; 320
Nem_HPZ_WaterSurface:dc.b   0,$18,$80,	3,  4,$16,$38,$26,$3C,$37,$7A,$73,  5,$86,  5,$1A,$16,$3A,$87,	4, $C,$16,$3B,$88,  2,	1,$16,$39,$27,$7B,$38,$F8,$89,	2,  0,$15,$1B,$FF,$B6,$DB,$FE, $D,$79,$FF,$6F,$D3,$76,$EB,$F6,$FE,$F1,$EF,$9D,$A6,  9,$C8,$88,$EE,$10,$83,  8,$42,$6E,$10; 0
					; DATA XREF: ROM:0001C1D2o
		dc.b $B6,$D9,$D7,$AF,$DB,$4F,$EB,$67,$ED,$B3,$F8,$DD,$F5,$CF,$7A,$E7,$3F,$B1,$8E,$72,$23,$8E,$D1,$13,$92,  9,$37,  4,$4E,  8,$42,$1E,$88,$5B,$67,$7F,$D0,$C7,$3F,$81,$9E,$F3,$C7,$3E,$3B,$18,$CF,$70,$4F,$81,$13,$E0,$44,$77,  4,$83,  4,$49,$B8,$42,$1C,$1E,$10,$E0; 64
		dc.b $F0,$B6,$DB,$6C,$73,$AF,$5F,$C8,$D6,$68,$FE,$47,$48,$8F,$68,$CF,$67,$22,$41,$DC,$21, $E,  8,$42,$1C,$10,$87,$A2,$DB,$6D,$BE,$75,$9A,$CD,$67,$59,$D3,$FB,$7F,$E4,$7E,$9C,$44,$F8,$11,$1D,$A4,$11,$84,$20,$EE,$10,$87,$A2,$DB,$6D,$FF,$B7,$5D,$EB,$35,$FB,$77,$F8; 128
		dc.b $EF,$7F,$C8,$13,$91,$13,$91,$11,$DA,$24,$38,$12, $E,$E1,  8,$70,$5B,$6D,$FE,$86,$BF,$4F,$EB,$FE,$EE,$73,$8F,$62,$38,$E7,$22,$23,$B4,$44,$88,$88,$EE,$10,$48,$89,  9,$BE,$1E, $B,$6D,$B6,$CC,$FF,  7,$ED,$F5,$9A,$C3,$E3,$4E,$93, $E,$73,$46,$18,$23,  4,$83,$BF; 192
		dc.b   8,$70,$41,$21,$E8,$85,$B6,$DB,$6C,$CF,$DB,$77,$D6,$3F,$A7,$F7,$A7,$39,$CD,$A2,$43,$21,$86,$13,$70,$F0,$E0,$84,$38,$3F,$80,$52,$DB,$6D,$99,$D6,$71,$D7,$E9,$F5,$9D,$38,$F7,$F0,$7B,$26,$D1,$11,$84,$21,$C1,  8,$43,$D1, $E, $F,$E0,$16,$DB,$6D,$9A,$CF,$E8,$7F; 256
		dc.b $1D,$CF,$66,$39,$EC,$4C,$73,$68,$88,$C2,  9,$37,  4,$87,$F4,  8,$7A,$2D,$B6,$DB,$E6,$6B,$FA,$1C,$E6,$9D,$38,$67,$3A,$CE,$91,$C7,$1D,  9,$86, $C,$21,$83,$B8,$42,$1C,$1E,$10,$E0,$84,$2C,  0,  0; 320
Nem_Button:	dc.b $80,$10,$80,  3,  2,$24, $A,$34, $C,$72,  0,$81,  4, $D,$13,  3,$26,$3C,$86,  6,$3B,$78,$FB,$87,  7,$7A,$27,$7C,$88,  7,$7B,$28,$FA,$89,$76,$3A,$8E,  6,$38,$16,$39,$8F,  4, $B,$13,  4,$FF,$FA,$F9,$DF,$AF,$38,$9B,$74,$D4,$A6,$A5,$35,$29,$A9,$4D,$4A,$D4,$F8; 0
		dc.b $E8,  0, $F,$B6,$B7,$2D,$3C,$B4,$F2,$D3,$CB,$4F,$2D,$3C,$DE,$7F,$9F,$F8,$9F,$F4,$57,$BF,$CC,$FE,$58,$5F,$98,$D5,$6C,  3,$B9,$CE,$FF,$43,$53,$C6,$AF,$1A,$BC,$6A,$F1,$AB,$C6,$BF,$BF,$CE,$FF,$A3,$F1,$3F,$96,$FC,$CF,$B2,$9D,$AD,$FC,$C0,  2,$DF,$C8,$47,$EE,$F6; 64
		dc.b $71,$E4,$4E,$A2,$75,$13,$A8,$9D,$44,$EB,$86,$B6,$BA,  0,  0,  0,  3,$EB,$E7,$7E,$BC,$E2,$6D,$D3,$52,$9A,$94,$D4,$A6,$A5,$35,$2B,$53,$E3,$A0,  0,$3E,$DA,$DC,$B4,$F2,$D3,$CB,$4F,$2D,$3C,$B4,$F3,$79,$FE,$7F,$40,  0,$7D,$E6,$A7,$8D,$5E,$35,$78,$D5,$E3,$57,$8D; 128
		dc.b $7F,$7F,$9D,$E8,  0, $F,$5D,$FC,$FA,$BD,$9C,$79,$13,$A8,$9D,$44,$EA,$27,$51,$3A,$E1,$AD,$A0,  0; 192
Nem_VSpring2:	incbin	"art/nemesis/Vertical spring.bin"
		even
Nem_HSpring2:	incbin	"art/nemesis/Horizontal spring.bin"
		even
Nem_DSpring:	incbin	"art/nemesis/Diagonal spring.bin"
		even
Nem_HUD:	dc.b $80,$18,$80,  4,  6,$14, $A,$24, $C,$34, $B,$48,$FB,$55,$1D,$65,$1C,$72,  0,$81,  3,  2,$18,$F9,$25,$1B,$36,$3D,$8C,  4,  7,$16,$3C,$38,$FA,$8D,  3,  4,$15,$1A,$38,$F8,$FF,$2B,$E9,$53,$DC,$59,$AE,$C6,$D2,$67,$A8,$C8,$C7,$A8,$9B,$C4,$FD,$8F,$6F,$73,$3E,$3E; 0
					; DATA XREF: ROM:0001C0A4o
		dc.b $6B,$D0, $F,$BF,$A5,$4F,$71,$66,$B8,$8D,$33,$B4,$4D,$BB,$F1,$19,$1E,$DE,$E2,$AF,$85,$9E,$80,$7D,$FD,$2A,$7B,$8B,$35,$C4,$63,$B4,$4E,$D1,  5,$47,$B7,$B8,$AB,$E1,$67,$A0,$17,$FC,$C5,$C8,$B3,$5C,$5D,$8E,$D1,$3D,$C5,$9A,$68,$AD,  5,$EA,$B5,$5B,$6D,$80,$57,$F3; 64
		dc.b $17,$22,$CD,$71,$76,$3B,$46,$7B,$9F,$35,$1D,$A2,  1,$B5,$5A,$AD,$B6,$C0,$33,$C5,$4E,  0,$CE,$D1,$33,$80,$56,$B3,$4D,$BA,$F9,  0,$75,$9E,$21,$A0,$E3,$DC,$C7,$68,$9A,$71,$4E,$29,$C4,$6A,$96,$6C,  3,$3E,$95,$3D,$C5,$9A,$E2,$34,$CE,$DA,$78,$C8,$C7,$EC,$7B,$7B; 128
		dc.b $8A,$BE,$16,$7A,  1,$7F,$DC,$43,$79,$5A,$E7,$C9,$4E,$D1,  0,$5E,$BB,$B0, $B,$F1,$57,$80, $E,$D1,$33,$B4,  0,$D6,$69,$B7,$5B,  0,$57,$E2,$26,$3D,$BB,$3F,$5C,$95,$14,$68,$AD,$45,$D4,$15,$AE,$EC,  2,$BF,$B8,$8C,$F8,$FB,$F7,$27,$89,$9E,$E2,$CF,$D6,$F7,$77,$3F; 192
		dc.b $58,$86,$FE,$ED,$7F,$84,  6,  0; 256
Nem_Lives:	incbin	"art/nemesis/Sonic lives counter.bin"
		even
Nem_Ring:	incbin	"art/nemesis/Ring.bin"
		even
Nem_Monitors:	incbin	"art/nemesis/Monitor and contents.bin"
		even
Nem_VSpikes:	dc.b $80,  8,$80,  4, $B,$24, $C,$35,$1C,$57,$7D,$71,  0,$81,  5,$1D,$82,  4, $A,$87,  5,$1E,$88,  7,$7C,$8A,  3,  4,$8F,  4, $D,$FF,$E7,$BF,$C1,$D3,$EC,$B8,$7F,  2,$AE,$8E,$4C,$8E,$6D,$E8,$C9,$59,$53,$3B,$7D,$73,$73,$45,$C1,$5F,$C0,$A0,$4F,$9E,$FD,$37,$BE,$33; 0
					; DATA XREF: ROM:0001C0EEo
					; ROM:0001C136o ...
		dc.b $E3,$FC,$1A,$FB,$2E,  1,$C9,$57,$50,$FB,$A3,$27,$2A,  1,  0,  0; 64
Nem_Points:	dc.b $80,$12,$80,  3,  3,$14, $C,$25,$1A,$36,$3D,$47,$7C,$56,$3C,$67,$7D,$72,  0,$81,  3,  2,$15,$1C,$26,$3B,$35,$1B,$86,  3,  4,$87,  4, $A,$14, $B,$26,$3A,$FF,  0, $E,$3D,$BF,$C4,$D2,$97,$17,$E3,$B1,$62,$75,$AB,  3,$CB,$F8,$B1,$65,$29,$73,$B7,$B0,  3,$DE,$3E; 0
					; DATA XREF: ROM:0001C0B6o
					; ROM:0001C18Eo
		dc.b $62,$B5,$2B,$C5,$ED,$6A,$B1,  1,$ED,$78,$BE,$52,$95,$AE,$3E,  0,$1C,$7B,$75,$14,$B8,$9A,$6B,$13,$AD,$58,$19,$5A,$BD,$26,$B1,$3A,$8A,$5C,$ED,$EC,  0,$CD,$BE,$FA,$8A,$57,$A9,$A6,$BA,$D5,$29,$7F,$11,$D7,$CE,$B2,$BC,$4D,$7E,$DD,$4A,$7B,$7C,  0,$38,$F6,$EA,$29; 64
		dc.b $71,$34,$D6,$27,$5A,$B0,$32,$B5,$7A,$4D,$62,$75,$14,$B9,$DB,$D8,  0,$FF,$E2,$FF,$6E,$E5,$78,$B5,$D6,$56,$5C,$FA,$B4,$BA,$F5,$75,$AA,$F5,$35,$9D,$47,$2B,$FE,$20,  7,$1E,$DD,$45,$2E,$26,$9A,$C4,$EB,$56,  6,$56,$AF,$49,$AC,$4E,$A2,$97,$3B,$7B,  0,$1E,$DF,$72; 128
		dc.b $E2,$96,$B1,$35,$AB,$D5,$80,$EF,$56,$B1,$35,$92,$E2,$97,$B7,$D8,  0,$BE,$C5,$E2,  0,$3E,$AF,$B1,$78,  0; 192
Nem_Lamppost:	dc.b $80, $A,$80,  3,  2,$14,  9,$24, $A,$72,  0,$81,  3,  3,$15,$1D,$83,  6,$3D,$85,  5,$1B,$87,  7,$7C,$89,  4,  8,$8A,  4, $B,$8B,  5,$1C,$8C,  5,$18,$8D,  6,$3C,$8E,  7,$7D,$8F,  5,$19,$15,$1A,$FF,$FE,  4,$7E,$6A,$A3,$78,$FC,$BC,$EF, $B,$F1,  9,$A8,$9C,$A7; 0
					; DATA XREF: ROM:0001C09Eo
		dc.b $6B,$1F,$D0,$8A,$F9,$58,  0,  0,$3F,$C1,$FB,$5F,$13,$E5,$7E,$77,$F8,$1E,$57,$57,$85,$39,$F0,  0,  0,$3F,$C1,$FC,$DD,$FE,$5A,$BF,$32,$BF,$25,$31,$2D,$65,$44,$FA,$B2,$C8,$AF,$C1,  0,  0,  5,$3F,$CF,$67,$F3,$CD,$3D,$75,$30,$51,$F9,$8F,$9F,$75,$F6,$A3,$BA,$98; 64
		dc.b $6B,$29,$A8,$7A,$61,$FB, $D,$DF,$2F,$96,  4,$EE,$F9,$7C,$B0,$27,$DF,$D4,$46,  9,$F7,$F5,$11,$80,  0,$50,$F4,$F2,$FF,$11,$F3,$F5,$CF,$EF,$75,$D4,$C1,  0; 128
Nem_Signpost:	incbin	"art/nemesis/Signpost.bin"
		even
Nem_Crocobot:	dc.b   0,$2C,$80,  5,$11,$16,$2A,$26,$30,$36,$33,$47,$76,$58,$EF,$67,$70,$74,  4,$81,  3,  0,$14,  6,$26,$2E,$36,$35,$48,$F2,$57,$6C,$77,$78,$82,  4,  2,$15,$13,$27,$74,$38,$F7,$83,  4,  3,$15, $B,$26,$2B,$47,$6F,$58,$F6,$84,  5,$14,$17,$6E,$85,  6,$31,$17,$6D; 0
					; DATA XREF: ROM:0001C1E6o
		dc.b $86,  5,$16,$17,$71,$87,  5, $F,$16,$34,$88,  5, $A,$17,$72,$89,  5,$12,$17,$7A,$8A,  5, $E,$17,$73,$8C,  6,$32,$18,$F3,$8D,  5,$10,$16,$2F,$27,$75,$38,$EE,$FF,$44,$44,$44,$44,$44,$38,$AF,$30,$63,$78,$30,$7F,$B4,$9E,$FB,$47,$F8,$56,$7C,$7F,$C3,$56,$3F,$CD; 64
		dc.b $C3,$F8,$A8,$88,$88,$88,$89,$DF,$3E,$C4,$BC,$C9,$74,$CD,$F3,$3C,$F4,$DB,$98,$B6,$30,$CC,$5B,$6E,$7F,$F3,$5D, $F,$FE,$9B,$EC,$BF,$7B,$3E,$7E,$3F,$FB,$8F,$F7,$72,$8F,$F1,$6F,$EF,$DA,$88,$88,$99,$F4,$CC,$AB,$23,$89,$7F,$50,$A9,$FF,$3D,$B3,$AF,$17,$F1,$79,$6D; 128
		dc.b $FD,$B6,$97,$B7,$1D,$2F,$6B,$7E,$9F,$6F,$1F,$D3,$A9,$78,$AB,$45,$17,$EC,$FD,$D7,$62,$5C,$CE,$CF,$FE,$17,$8F,$FE,$FF,$F3,$FF,$BF,$F5,$C3,$CB, $F,$2C,  7,$EA,$46,$7A,$A2,$24,$FB,$65,$43,$2C,$32,$81,$D0,$CA,$AB,$D7,$43,$28,$F4,$5D, $C,$2E,$6B,$A1,$83,$E8,$74; 192
		dc.b $32,$1D,$17,$31,$35,$93,$C8,$7F, $A,$E2,$17,$96,$D6,$86,$5D,$C2,$19,$5B,$2B,$F1,$19,$5B,$CE,$18,$D9,$FF,$AC,$86,$8A,$97,$55,$39,$4E,$7F,$E9,$5D,$25,$49,$5E,$36,$73,$FF, $C,$BC,$22,$E2,$BC, $C,$18,$5D,$46, $C,$2E,$AE,$8B,$A1,$D4,$40,$97,$43,$89,$31,$2E,$95; 256
		dc.b $13,$12,$F0,$B9,$78,$29,$9E,$75,$68,$38,$97,$6B,$BB,$29,$B3,$D1,$B8, $E, $A,$EF,$D1,$11,$11,$11,$13,$BD,$FC,$1E,$AA,$9F,$55,$D5,$3D,$42,$CD,$1B,$AC,$FB,$F2,$BB,$F9,$B9,$77,$6D,$44,$44,$44,$3E,$14,$3E,$F3,$A1,$F6,$5D, $E,$1E,$70,$AE,$87,$94,$2C,$4B,$DC,$70; 320
		dc.b $67,$AF,$71,$97,$12,$5E,$E3,$B8,$97,$BB,$57,$AE,$97,$71,$25,$C7,$C8,$8E,$2A,$F2,$FD,$3E,$BC,$6A,$D9,$87,$96,$7A,$D4,$F8,$EB,$53,$D4,$2C,$D1,$BA,$CF,$86,$42,$CD,$7F,$9D,$9E,$21,$E7,$FF,$DD,$BD,$76,$DD,$FA,$51,$FA,$91,$9E,$A8,$88,$88,$88,$91,$AF,$3B,$D6,$58; 384
		dc.b $7E,$99,$65,$50,$B6,$8B,$2C,$86,$9C,$8C,$A0,$4F,$E4,$E3,$28,$1F,$B9,$CE,$87,$33,$21,$ED,$31,$EC,$43,$A2,$E6,$3F,$84,$F2,$6F,$70,$57,$75,$28,$5D, $F,$3B,$DA,$19,$5B,$28,$62,$21,$95,$B2,$86,$36,$7F,$EB,$21,$A2,$A5,$D5,$4E,$53,$9F, $D,$AE,$92,$A4,$AF,$1B,$39; 448
		dc.b $FF,$86,$5E,$12,$39,$67,$FA,$C8,$61,$97,$75,$59,$7F,$37,$F8,$50,$9E,$F2,$3D,$D6,$FE,$A7,$E9,$BF,$48,$74,$FF,$9F,$F8,$DB,$78,$A1,$8A,$DE,$BA,$10,$58,$23,$1A,$5C,$41,$F6,$7A,$84,$1B,$4B,$38,$41,$21,$C2,$1C,$21,$C2,$15,$79,$E1,$3C,$AF,$C1,$65,$7E,$1B,$8C,$A1; 512
		dc.b $81,$EE,$32,$BE,$35,$D0,$CA,$11,$F6,$28,$D6,$F5,$94,$6B, $B,$9E,$C2,$3E,$EC,$6B,$EB,$8A,$E6,$74,$FF,$9F,$F8,$DB,$78,$A1,$8A,$DE,$BA,$10,$58,$23,$1A,$5C,$41,$F6,$7A,$84,$1B,$4B,$38,$41,$4D,$CC,$5F,$C5,$43,$F6,$6A,$96,$C7,$6C,$55,$DC,$D4,$CE,$6E,$4F, $A,$F4; 576
		dc.b $CF,$12,$F0, $E,$9F,$F3,$FF,$1B,$6F,$14,$31,$5B,$D7,$42, $B,  4,$63,$4B,$88,$3E,$CF,$50,$83,$69,$67,  8,$29,$B9,$8B,$F8,$A8,$7E,$CD,$52,$D8,$ED,$8A,$BB,$9B,$D9,$CC,$E5,$3C,$2B,$D3,$28,$4B,$C0,$3D,$C6,$57,$C6,$BA,$19,$42,$3E,$C5,$1A,$DE,$B2,$8D,$61,$73,$D8; 640
		dc.b $47,$DD,$8D,$7D,$71,$5C,$EF,$C4,$E6,$D5,$93,$7A,$D7,$F5,$2E,$D7,$90,$53,$28,$72, $A,$67, $F,$DD,$2A,$42,$43,$F5,$5B,$24,$E4,$44,$4D,$F8,$19,$5C,$55,$16,$A5,$53,$17,$66,$91,$66,$D2,$9E, $E,$65,$90,$8A,$98,$8E,$4F, $A, $E,$98,$54,$9C,$1D,$D0,$45,$A7,$98,$E0; 704
		dc.b $7B,$8C,$AF,$8D,$74,$32,$84,$7D,$8A,$35,$BD,$65,$1A,$C2,$E7,$B0,$8F,$BB,$1A,$FA,$E2,$B9,$DF,$89,$CD,$AB,$26,$92,$B5,$F5,$CB,$5F,$41,$CC,$A1,$27,  7,$33,$83,$B9,$39,$52,$12, $A,$E7,$E5,$26,$44,$44,$DF,$81,$95,$C5,$51,$6A,$55,$31,$76,$69,$16,$77,$19,$60,$E1; 768
		dc.b $25,$90,$8B,$83,$88,$C3,$E4,$E6,$9C,$94,$1C,$DD,  4,$43,$BB,$DD,$C0,$F7,$19,$5F,$1A,$E8,$65,  8,$FB,$14,$6B,$7A,$CA,$35,$85,$CF,$61,$1F,$76,$35,$F5,$C5,$73,$BF,$13,$9B,$56,$4C,$A9,$6B,$2E,$4E,$D7,$D0,$73,$28,$49,$C1,$CC,$E1,$CF,$F5,$12,$12, $E,$E5,$E5,$E8; 832
		dc.b $22,$22,$6F,$C0,$CA,$E2,$A8,$B5,$2A,$98,$BB,$5C,$59,$B4,$8B,$37,  9,$19,$60,$E6,$59,$4A,$2E,$62,$30,$F0,$E0,$E9,$85,$33,$BD,$E5,$11,$C0; 896
Nem_Buzzer:	incbin	"art/nemesis/Buzzer.bin"
		even
Nem_Bat:	dc.b   0,$3A,$80,  5,$14,$14,  8,$25,$15,$35,$16,$45,$12,$56,$35,$67,$77,$73,  1,$81,  3,  0,$14,  7,$26,$33,$37,$7A,$86,  5,$13,$16,$37,$87,  5,$17,$16,$34,$27,$72,$36,$36,$48,$F6,$57,$78,$88,  4,  6,$15,$18,$26,$38,$89,  3,  2,$16,$32,$26,$3A,$38,$F8,$8B,  7; 0
					; DATA XREF: ROM:0001C1E0o
					; ROM:0001C1F2o
		dc.b $76,$18,$F7,$8C,  7,$73,$8E,  7,$79,$FF,$A3,$C8,$7B,$8B,$76,$FC,$F7,$61,$5F,$DF,$76,$CE,$9F,$9E,$7C,$9A,$3D,$62,$1E,$6D,$94,$3C,$DD,$42,$13,$75,$54,$37,$55,$1F,$16,$7C,$AA,$2E,$EA,  3,$5F,$38,  9,$A6,$F0,$13,$5F,$79,$3C,$87,$B8,$A8,$ED,$F9,$EE,$D9,$F6,$FD; 64
		dc.b $F3,$64,$FF,$9E,$A6,$3D,$46,$4D,$37,$84,$F3,$78,$4F,$30,$A1,$6E,$15,$7E,  5,$72,$7B,$27,$B8,$AE,$77,$61, $F,$36,$42,$37,$BB,$21,$60,$9A,$EA,$75,  9,$B4,$A8,$CB,$16,$1D,$59,$F2,$B0,$4F,$20,$9B,$57,$92,$69,$CB,$39,$26,$9C,$B9,$F9,$9C,$B9,$F9,$9E,$BC,$FC,$EB; 128
		dc.b $F9,$CE,$FC,$E6,$AE,$C8,$46,$8C,$85,$71,$90,$AF,$42,$D9,$3D,$9D, $B,$26,$12,$7D,$66,$CA,$59,$CA,$6C,$A5,$3F,$3C,$E5,$3F,$3C,$E5,$E7,$9E,$BF,$9C,$D7,$99,$24,$93,$A8,$D5,$E4,$ED,$67,$C5,$5F,$88,$7C,$5D,$A9,$9B,$72,$A0,$60,$DC,$A8,$2E,$36,$A0,$98,$DA,$82,$E3; 192
		dc.b $6A,  6,$1B,$53,$3D,$A8,$3C,$50,$78,$A0,$F0,$3C,$4C,$6D,$BD,  7,$29,$D4,$5F,$7B,  9,$EA,  9,$24,$9A,$DD,$4A,$EA,$53,$5C,$A1,$5D,$53,$A7,$4F,$50,$C1,$9E,$30,$30,$F4,$C0,$E1,$F8, $C,$98,$32,$61,$A7,$F2,  7,$2F,$E4, $D,$B8,$1B,$32,$61,$ED,$C0,$F6,$C0,$F6,$C0; 256
		dc.b $F6,$58,$1E,$18,$78,$61,$B6,$F7,$61,$FA,$68,$9B, $E,$E0,$92,$49,$24,$92,$49,$24,$8E,$EF,$AB,$3C,$93,$3D,$B8,$7A,$E9,$87,$8E,$49,$9E,$9B,$61,$F6,$DE,$83,$4D,$ED,$79,$EB,$32,$49,$24,$92,$49,$24,$93,$6C,$E9,$EB,$26,$A0,$60,$B8,$A0,$B8,$C6,$94,$13, $D,$CA,$82; 320
		dc.b $E3,$6A,  6,$1B,$53,$3D,$A8,$3C,$50,$78,$A0,$D3,$F6,$C3,$F4,$C4,$9A,$67,$4F,$E0,$E0,$2F,$DC, $F,$E4,$2C, $F,$6E,$3C,$26,$FF,$3B,$7F,$DF,$FE,$FF,$F7,$DB,$FE,$C4,$EB,$C9,$46,$FD,$54,$2E,$4A,$3D,$2A,$FE,$E3,$D6,$8A,$FF,$B8,$1E,$CA,$EC,$3C,$60,$7B,$2C, $D,$37; 384
		dc.b $D3,  2,$71,$FB,$66,  4,$92,$49,$30,$3B,$B7,$AA,$E9,$C6,$7A,$2D,$EB,$FA,$62,$49,$24,$92,$75,$FE,$8C,  6,$1D, $A, $B,$8E,$15,  4,$C3,$68,$D4,$17,$1B,$50,$30,$DA,$99,$ED,$41,$FD,$62,$49,$24,$92,$FA,$E5,$9D,$71,$D6,$7A,$71,$D7,$B7,$1F,$F7,$FF,$BF,$FD,$89,$24; 448
		dc.b $92,$63,$92,$8D,$FA,$AE,$5C,$94,$67,$21,$8C,$E1,$9F,$87,$BE,$1F,$8E,$58,$76,$FF,$30,$24,$92,$49,$24,$91,$DD,$B3,$B7,$ED,$B3,$A0,$24,$92,$49,$B0,$5D,$C3,$48,$21,$DC,$49,$D5,$86,$42,$1F,$20,$A8,$30,$86,$56,$1C,$12,$49,$32,$CE,$BE,$AB,$9A,$8C,$FA,$87,$F8,$8F; 512
		dc.b $EC,$C7,$F6,$45,$3E,$38,$A7,$EE,  9,$24,$93,$6C,$E4,$E9,$EA,$ED,$90,$87,$BE,$17,$AE,$4D,$93,$ED,$87,$F0,$3F,$4D,$B5,$BF,$6C,$49,$24,$93,$4B,$A9,$4D,$6A,$AE,$A4,$3B,$B3,$C8,$60,$59,$86,$1E,$2E,$C1,$B7,$14,$FD,$30,$24,$92,$6C,$3B,$BC,$5E,$A1, $A,$2A,$86,$42; 576
		dc.b $F5,$17,$65,$61,$A3, $A,$8E,$4C,$23,$7D,  3, $A,$EF,$89,$CA,$60,$93,$60,$9A,$EA,$75,  9,$B4,$A8,$CB,$16,$1D,$59,$F2,$B0,$4F,$20,$9B,$57,$92,$69,$CB,$39,$26,$9C,$B9,$F9,$9E,$BC,$FC,$F7,$E7,$DF,$99,$9A,$BB,$21,$1A,$32,$15,$C6,$42,$BD, $B,$64,$F6,$74,$2C,$98; 640
		dc.b $49,$F5,$9B,$29,$67,$29,$B2,$94,$FC,$F3,$97,$9E,$7A,$F3,$EF,$CC,$9C,$E5,$EE,$25,$EE,$F6,$F7,$FE, $C,$76,$18,$CA,  7,$EE,$14,$37,$4D,$38,$C2,$6D,$E1,$82,$76,$84,$13,$A8,$1F,$C9,$81,$F0,$2A,$32,$7A,$FF,  6,  6,$3F,$4D,  1,$B9,$4E,$1D,$B4,$50,$13,$68,$D0,$32; 704
		dc.b $E2,$A3,$E2,$A3,$E2,$DE,$A4,$19,$6A,$F2,$4D,$39,$67,$24,$D3,$24,$93,$5C,$EC,$3F,$56,$20,$7B,$FE,$7B,$B5,  7,$BF,$EF,$A8,$3B,$7E,$FB,$B5,$10,$ED,$F9,$EE,$D1,$97,$A8,$E9,$EB,$96,$75,$C9,$EC,$9E,$4F,$71,$61,$36,$42,$B3,$BE,$10,$8D,$1B,$21,$17,$C6,$42,$2E,$DD; 768
		dc.b   8,$6E,$85,$7A,$16,$E8,$5B,$21,$2C,$E4,$C8,$49,$F5,$9B,$29,$67,$29,$B2,$24,$93,$20,  0; 832
Nem_Octopus:	dc.b   0,$3A,$80,  6,$31,$16,$2B,$26,$32,$36,$33,$48,$F3,$56,$37,$66,$30,$73,  0,$81,  3,  1,$14,  6,$26,$36,$37,$74,$58,$F6,$68,$F2,$82,  4,  4,$14,  7,$25,$11,$37,$75,$58,$F7,$83,  4,  5,$15,$16,$26,$35,$37,$72,$47,$76,$57,$77,$84,  5,$12,$16,$34,$85,  7,$73; 0
		dc.b $86,  5,$10,$16,$38,$87,  5,$13,$88,  6,$2F,$89,  6,$2E,$8C,  5,$14,$8D,  6,$2A,$8E,  7,$7A,$17,$78,$FF,  0,  0,$30,$4C,$13,  9,$EE,$87,$14,$CD, $A,$49,$32,$42,$86,$11,$B2,$19,$6B,$A2,$95,$F7,$2A,$9D,  0,$F3,$8D,$71,$D7,$14,$EE,$9F,$F3,$FF,$1C,$ED,  9,$F6; 64
		dc.b $FD,$34,$F9,$37,$1C,$9B,$8E,$4D,  9,$EA,$9F,$A6,$9D,$A0,$57,$F2,$FA,$A1,$EE,$87,$B8,$11,$F3,$D6,$35,$F2,$8E,$3D,$DD,$7F,$49,$AA,$69, $D,$2C,$92,$FD,$34,$AC,$9A,$43,$48,$2A,$2F,$E9,$14,$AA,$7F,$8D,$3F,$C6,$9D,$A0,$A9,$D8,$BF,$77,  0,  0,$13,  4,$C1,$30,$7D; 128
		dc.b $DF,$77,$DD,$F7,$7D,$DF,$74,$C2,$27,$23,$8B,  0,  0,  3,$24,$97,$9D,$93,$2E,$A6,$B8,$B5,$6E,$D5,$C4,$E4,$8A,$D9,$BC, $E,$70,$64,$EE,$63,$CB,$13,$EF,$5B,$75,$CD,$9E,$BF,$6A,$A9,$C5,$2A,$A5,$5F,$95,$A7,$E9,$69,$54,$90,$CA, $A,$92,$42,$92,$54,$28,$56,$4A,$8C; 192
		dc.b $F2,$7D,$91,$5C,$E2,$D1,$39,$B9,$1B,$F6,$8D,$BF,$E5,$7C,$EF,$BA,$37,$F0,$67,$73,$DF,  3,$3B,$EE,$6B,$8C,$EF,$B9,$BF,$5B,$4A,$9A,$AF,$D2,$D2,$AF,$D2,$F1,$69,$41,$4E,$88,$51,$64,$92,$54,$64,$5D,$15,$36,$4D,$51,$B1,$28,$AF,$99,$7D,$E0,$77,$4C,  8,  3, $E,$77; 256
		dc.b $6F,$4E,$7B,$D0,$EF,$A1,$F3,$28,$A7,$34,$2E,$72,$92,$17,$35,$D9, $B,$9C,$51,$53,$12,$EC,$F5,$94,$38,$C0,$E5,  2,  0,  0,  1,$9F,$2C,$97,$AE,$50,$E8,  0,  2,$27,$23,$8B,  0,  0,$C2,$C8,$CB,$16,$B4,$93,$65,$D1,$7A,$43,$60,  0,  5,$3B,$98,$F2,$C4,$FB,$D6,$DD; 320
		dc.b $73,$67,$AF,$DA,$AA,$71,$4A,$A9,$52,$F1,$25,$4A,$55,$2D,$5C,$C9,$7A,$B2,$FF,$C4,  0,  7,$68,$DB,$FE,$57,$CE,$FB,$A3,$7F,  6,$77,$3D,$F0,$33,$BE,$E6,$B8,$CE,$FB,$9B,$F5,$B4,$A9,$AA,$E3,$9D,$2A,$84,$B9,$C9,$59,$3F,$68,$AD,$19,$43,$C8,  0,  2,$60,$40,$18,$73; 384
		dc.b $C2,$9C,$F7,$A7,$F0,$6B,$92,$A7,$F0,$79,$27,$94,$F6,  0,  0,  0,  0,  1,$D7,$33,$D7,$2E,$93,  0,  0,  0,  0,  0,$36,$CF,$69,$67,$79,$81,  0,  1,$13,$91,$C5,$80,  0,$61,$B2,$E8,$DA,$6A,$65,$AC,$7F,$E2,$40,  0,$14,$EE,$63,$CB,$13,$EF,$5B,$75,$CD,$9E,$BF,$6A; 448
		dc.b $A9,$C5,$2A,$A5,$4C,$B2,$82,$A3,$2C,$96,$25,$24,$BD,$4C,$3C,$80,  0,$76,$8D,$BF,$E5,$3B,$A7,$74,$67,  3,$3B,$EE,$7B,$E6,$7F,$31,$73,$5D,$79,$BE,$E6,$FD,$6D,$2A,$6A,$97,$48,$39,$D7,$48,$2A,$1E,$5A,$2A,$79,$40,  0,  2,$60,$40,$18,$73,$C2,$9C,$F7,$7E,$95,$97; 512
		dc.b $5F,$64,$D7,$FE,$26,$F0,  0,  0,  0,  0,$1B,$79,$F4,$CF,$6F,$C5,  0,  0,  0,  0,  0,$1A,$A6,$56,$8E,$53,$E8,  0,  2,$27,$23,$8B,  0,  0,$C1,$F6,$54,$DB,$4B,$1F,$D2,$6A,$90,$F2,  0,  0,$53,$B9,$8F,$2C,$4F,$BD,$6D,$D7,$36,$7A,$FD,$AA,$A7,$14,$AA,$95,$6A,$57; 576
		dc.b $45,$72,$B2,$B3,$94,$59,$2B,$F4,$86,$C0,  0,$3B,$46,$DF,$F2,$9C,$27,$74,$66,$61,$F9,$7B,$9E,$F8,$19,$DF,$73,$5D,$7C,$CD,$CD,$FA,$DA,$54,$D5,$32,$2E,$88,$51,$92,$D2,$8B,$3D,$BF,$E2,  0,  1,$30,$20, $C,$39,$E1,$4E,$7B,$C7,$6A,$D9,$EC,$C9,$B4,$56,$1E,$40,  0; 640
		dc.b   0,  0,  0,$3A,$66,$BD,$32,$9E,$D3,  0,  0,  0,$C5,$F2,$8D,$AB,$4E,$D8,$A7,$74,$FF,$1A,$6A,$F6,$4B,$46, $A,$96,$7E,$14,$D9,$B8,$53,$66,$84,$F5,$4F,$D3,$4D,$65,  2,$BF,$97,$B3,$9E,$C5, $F,$60,  0,  0,  1,$5F,$EF,$32,$FE,$E5,$7F,$DC,$AF,$FB,$95,$FF,$73,$2F; 704
		dc.b $DE,  0,  0,  0, $F,$3F,$19,$F8,$E3,$C5,$7E,$BF,$6D,$EB,$1F,$5F,$D6,$F1,$FD,$6F,$58,$FA,$FD,$B7,$AA,$FC,$71,$E3,$3F,$19,  0,  0; 768
Nem_Triceratops:dc.b   0,$32,$80,  5,$15,$16,$30,$26,$2E,$36,$33,$47,$71,$57,$75,$67,$76,$74,  6,$81,  3,  1,$15,$13,$27,$74,$36,$36,$46,$2D,$78,$F3,$82,  6,$2F,$17,$6E,$83,  4,  8,$17,$6B,$26,$34,$84,  5,$12,$16,$2C,$27,$70,$38,$F5,$48,$F6,$85,  7,$77,$86,  5,$14,$17,$72,$87; 0
					; DATA XREF: ROM:0001C1F8o
		dc.b   4,  7,$17,$73,$88,  4,  4,$17,$6F,$48,$F7,$89,  3,  0,$16,$31,$27,$6A,$38,$F2,$8A,  4,  5,$16,$32,$27,$78,$8C,$18,$F4,$FF,$AB,$E6,$A9,$57,$B9,$51,$51,$F0,$54,$5D,$F4,$4F,$E5,$25,$10,$7E,$E9,$39,$A0,$51,$97,$F5,  7,$F5,$23,$82,$72,$49,$44,$9F,$F4,$CE,$B2; 64
		dc.b $89,$FE,$99,$25,$13,$E4,$E9,$2B,$D3,$F4,$E8,$B2,$BE,$17,$7A,$CA,$37,$47,$A9,$FE,$1C,$A6,$A8,$A3,$34,$F0,$2E,$F0,$14,$E1,$FB,$A0,$A5,$14,$28,$50,$8E,$14,$28,$4A,$3A,$85,  9,$47,$D4,$A9,$47,$53,$25,$4E,$6A, $C,$2F,$35,$C4,$C4,$B2,$D4,$75,$D8,$14,$18,$E0,$B8; 128
		dc.b $ED,$20,$A0,$EF,$21,$71,$A2,$15,$21,$41,$C1,$3A,$A2,$F1,$47,$1C,$5D,$70,$A5,$C8,$32,$22,$CC,$55,$39, $F,$55,$A3,$A0,$B3,$5B,$A5,$16,$51,$BB,$22,$B1,$FB,$27,$51,$1F,$B2,$7C,$7F,$86,$A1,$E5,$FB,$35,  7,$D9,$71,$A7,$FB,$3F,$8D,$E9,$46,$66,$69,$76,$E1,$C7,$5D; 192
		dc.b $99,$EE,$89,$66,$37,$44,$AE,$1B,$A2,$57, $F,$D1,$44,$B0,$12,$D2,$58, $B,$34,$95,$47,$AC,$4A,$BF,$AC,$FD,$6F,$79,$7F,$33,$F3,$BD,$FA,$D0,$60,$B8,$53,$9D,$55,$30,$2F,$2A,$BD,$1E,$A5,$E2,$A9,$47,$B2,$2F,$AE,$5A,$6E,$AC,$B4,$FD,$15,$46,$52,$D0,$26,$5E,$AB,$CF; 256
		dc.b $2B, $A,$51,$D0,$4F,$7D,$11,$48,$C9,$28,$8A, $E,$2A,$EA,$30,$38,$B8,$EB,$8F,$1F,$69,$A5,$A8, $F,$B8,$3E,$39,$3A,$6E, $E,$81,$E9,$B8,$82,$F4,$4D,$75,$28,$E8,$BA,$E7,$FD,$46,$66,$66,$66,$62,$EA,$45,$F0,$72,$22,$F3,$12,$2A,$12,$24,$65,$B9,$28,$F6,$17,$4B,$DD; 320
		dc.b $3A,$20,$84,$DB,$4B,$65,$85,$B7,$5B,$75,$B7,$5B,$9E,$D9,$ED,$C7,$A7,$62,$DE,$D3,$4B,$50,$1F,$7D,$5F,$DA,$FF,$C8,$BC,$82,  8,$BD,$F0,$E1,$B9,$2B,$C3,$76,$BC,$4A,$A6,$80,$A7,$3A,$6B,$C5,$C5,$10,$5C,$2B,$45,$EA,$8C,$CD,$71,$75,$22,$F8,$39,$11,$79,$89,$6A,$48; 384
		dc.b $91,$96,$28,$E9,$61,$BD,$28,$9B,$24,$25,$A3,$5D,$BA,$EB,$6C,$61,$6D,$D6,$DD,$6E,$7B,$67,$B7,$1E,$9D,$8B,$7B,$4D,$2D,$40,$7D,$F5,$7F,$68,$2F,$FE,$48,$20,$82,$19,$99,$99,$99,$99,$8B,$A9,$17,$C1,$C8,$8B,$E0,$CA,$78,$C1,$B0,$2E,$29,$61,$D4,$51,$D2,$62,$69,$44; 448
		dc.b $35,$B0,$A3,$A1,$AD,$87,$F4,$47,$85,$EE,$90,$62,$CB,$D0,$41,$8B,$37,$6B,$3A,$E5,$FB,$33,$E4,$8A,  8,$21,$E8,$EA,$6A, $B,$8A,$29,$CD,$C3,$B3,$33,$33,$37,$6B,$38,$D9,$18,$2E,$14,$B2,$AA,$98,$17,$95,$5E,$8F,$52,$F1,$54,$A3,$D9,$17,$D7,$2D,$37,$56,$5A,$7E,$8A; 512
		dc.b $A3,$29,$68,$13,$2F,$55,$E7,$95,$85,$28,$E8,$27,$BE,$88,$A4,$64,$94,$45,  7,$15,$75,$18,$1C,$5C,$75,$C5,$99,$99,$99,$9B,$AB,$E6,$A9,$57,$B9,$51,$51,$F0,$54,$5D,$F4,$4F,$E5,$25,$10,$7E,$E9,$39,$A0,$51,$92,$7B, $B,$23,$84,$4A,$F8,$B2,$89,$2D,$76,$72,$75,$E0; 576
		dc.b $7F,$4C,$92,$89,$F2,$74,$95,$E9,$FA,$74,$59,$5F, $B,$BD,$65,$1B,$A3,$D4,$FF, $E,$53,$F6,$9A,$5A,$80,$FB,$EA,$FE,$D0,$5F,$FC,$90,$41,  4,$33,$33,$33,$33,$33,$2A,$28,$CD,$3C, $B,$BC,  5,$38,$7E,$E8,$29,$45, $A,$14,$23,$85, $A,$12,$8E,$A1,$42,$51,$F5,$2A,$51; 640
		dc.b $D4,$C9,$53,$9A,$83, $B,$CD,$71,$31,$2C,$B5,$1D,$76,  5,  6,$38,$2E,$3B,$48,$28,$3B,$C8,$5C,$68,$85,$48,$50,$75,$4F,$79,$E4,$BF,$C2,$C8,$7F, $B,$92,$7F, $B,$7A,$FF, $C,$6C,$E8,$6E,$B6,$EB,$6E,$B6,$EB,$6E,$B7,$3D,$B3,$DB,$8F,$4E,$C5,$8F,$E3,$7D,$3F,$7B,$3F; 704
		dc.b $EE,$CF,$FA,$BE,$73,$13,$D5,$30,$71,$20,$89,$89,$82,$27,$A9,$48,$9E,$39,$6C,$26,$BB,  5,$29,$68,$54,$FE,$8A,$3F,$9F,$9D,$D6,$FF,$F7,$FF,$BF,$F5,$F3,$FE,$4F,$4C,$4E,$A9,$E5,$35,$13,$CB,$F5,  2,$7E,$E2,$7B,$E7,$4E,$9B,$CF,$22, $A,$3D,$1C,$83,$57,$A3,$91,$3A; 768
		dc.b $F4,$13,$C2,$DB,$BA,$71,$EF,$DB,$BF,$6E,$F2,$EA,$6F,$97,$19,$45,$F2,$CE,$C8,$BE,$45,$6B,$C2, $A,$3A,$F0,$29,$CD,$6C,$3E,$55,$9F,$93,$33,$33,$36,  7,$F1,$BE,$9F,$BD,$9F,$F7,$67,$FD,$5E,$83,$FA,$22,$7A,$A6, $E,$A9,$89,$F9,$11,$30,$42,$EC,$26,$BB,  3,$BF,$61; 832
		dc.b $FA,$8B,$42,$FF,$87,$2F,$3F,$3B,$AD,$FF,$EF,$FF,$7F,$EB,$E7,$FC,$9B,$7C,$BA,$78,$41,$3F,  5,$C4,$D5,$27,$41,$3F,$D4,$1A,$6D,$BE,$8F,$6F,$22, $D,$7F,$4E,$44,$EB,$D0,$4F,  3,$8C,$EE,$E9,$C7,$BF,$6E,$FD,$BB,$CB,$A9,$BE,$5C,$65,$17,$CB,$3B,$22,$F9,$15,$AF,  8; 896
		dc.b $28,$EB,$C0,$A7,$35,$B0,$F9,$56,$7E,$4C,$CC,$CC,$CC,$CC,$CC,$CC,$CD,$76,$BE,$31,$F8,$CD,$2E,$A7,$EB,$35,$E1,$CB,$F1,$9F,$B3,$AC,$7E,$33,$4C,$F5,$B3,$33,$33,$33,$33,$75,$D3,$38,$F4,$D3, $E,$5E,$9A,$56,$9F,$BC,$FD,$9F,$A6,$97,$68,$D9,$80,  0; 960
Nem_Redz:	incbin	"art/nemesis/Redz.bin"
		even
Nem_HPZ_Piranha:dc.b   0,$40,$80,  5,$10,$15,$14,$25,$12,$36,$34,$46,$30,$56,$2F,$66,$2D,$74,  3,$81,  3,  0,$15,$13,$26,$31,$37,$75,$82,  5,$11,$17,$6B,$28,$F4,$83,  6,$33,$84,  7,$73,$86,  5, $C,$17,$71,$28,$F7,$87,  4,  5,$16,$2C,$27,$74,$88,  4,  4,$15, $D,$27,$72,$37,$70; 0
					; DATA XREF: ROM:0001C204o
		dc.b $89,  4,  2,$16,$2A,$27,$64,$36,$36,$48,$F3,$8A,  7,$6A,$18,$F5,$27,$78,$48,$EC,$8B,  5, $E,$17,$6E,$27,$6F,$8C,  6,$2E,$18,$ED,$28,$F2,$8D,  6,$2B,$17,$65,$8E,  5, $F,$17,$77,$FF,$33,$33,$33,$33,$33,$BE,$AD,$2A,$6C,$8B,$85,  9,$B5,$F6,$D0,$92,$BF,$28,$12; 64
		dc.b $2D,$D3,$64,  9,$16,$E9,$DC,$48,$AC,$AF,$C8,$91,$78,$FE,$B4,$93,$F6,$DD,$C9,$3F,$AF,$46,  4,$9A,$68,$C1,  6,$49,$93,$60,$A3,$D6,$6A,$25,$DF,$F5,$B8,$7E,$B8,$CC,$CC,$CC,$CE,$D6,$5F,$CE,$38,$73,$D7,$A6,$71,$AA,$59,$C7,$25,$33,$FF,$4B,$57,$DD,$B6,$7E,$D9,$BF; 128
		dc.b $C7,$67,$F2,$3A,$56,$FF,$EC,$5D,$5B,$F8, $B,$AB,$7A,$2A,  7,$65,$7A,$B4,$3B,$2B,$D5,$A4,$CA,$DE,$AD,$26,$2B,$EC,$42, $C,$45,$69,$4D,$31,$4E,$AA,$20,$CC,$6B,$78,$66,$37,$56,$F0,$A3,$B7,$FF,$B5,$BC,$7F,$7A,$77,$CE,$D7,$99,$9D,$B9,$CB,$F6,$65, $F,$CA,$47,$20; 192
		dc.b $64,$76,$10,$8E,$C2,$9B,  9,$6C,$25,$B0,$97,$98,$A2,$79,$88,$71,$56,$D4,$19,$67,  2,$6F,$FC,$5D,$E3,$7F,$EE,$99,$FE,$A2,$F5,$DD,$FD,$A6,$2B,$BC,$33,$52,  5, $E,$D4,$5A,$82,$A4,$F7,$AB,$67,$BD,$B3,$DC,$8E,$C7,$F9,$6F,$1F,$DB,$1B,$D3,$FE,$33,$87,$F0,$64,$36; 256
		dc.b $95,$5C,$A5,$AD,$2C,$C3,$38,$D9,$7F,$A4,$3D,$30,$99,$99,$99,$E9,$12,$D3,$5D,$54,$D7,$52,$52,$39,$D4,$D8,$47,$3A,$B9,$43,$3A,$9A,$A5, $C,$89,$52,$2B,$B2,$58,$50,$D5,$B8,$AC,$28,$78,$70,$52,$87,$EE,$9C, $A,$1E,$BF,$C1,$86,$A0,$4A,$C5,$A3,$81,$72,$A6,$EF,$E0; 320
		dc.b $C3,$78,$45,$28,$6E,  5,$61,$41,$C1,$B5,$22,$88,$92,$58,$54,$D6,$48,$A9,$2D,$64,$DC,$35,$92,$5F,$AC,$CC,$CC,$CC,$CC,$CC,$CC,$EF,$AB,$4A,$9B,$22,$E1,$42,$6D,$7D,$B4,$24,$AF,$CA,  4,$8B,$74,$D9,  2,$45,$BA,$77,$12,$2B,$2B,$F2,$24,$5E,$3F,$AD,$24,$FD,$B7,$72; 384
		dc.b $4F,$EB,$D1,$81,$26,$9A,$30,$41,$86,$67,$7B,$34,$7E,$50,$9A,$77,$CB,$7F,$73,$33,$33,$B5,$97,$F3,$8E,$1C,$F5,$E9,$9C,$6A,$96,$71,$C9,$4C,$FF,$D2,$D5,$F7,$6D,$9F,$B6,$6F,$F1,$D9,$FC,$8E,$95,$BF,$FB,$17,$56,$FE,  2,$EA,$DE,$8A,$81,$D9,$5E,$AD, $E,$CA,$F5,$69; 448
		dc.b $32,$B7,$AB,$49,$8A,$FB,$10,$83,$11,$5A,$53,$4C,$53,$AA,$88,$33,$1A,$DF,$29,$DD,$96,$8C,$9D,$D5,$BD,$93,$4B,$B2,$BC,$20,$BB,$2B,$E7,$77,$EB,$5F,  1,$97,$BC,$BF,$5C,$66,$78,$67,$2F,$D9,$94,$3F,$29,$1C,$81,$91,$D8,$42,$3B, $A,$6C,$25,$B0,$96,$C2,$5E,$62,$89; 512
		dc.b $E6,$21,$C5,$5B,$50,$65,$9C,  9,$BF,$F1,$77,$8D,$FF,$BA,$67,$FA,$8B,$D7,$77,$F6,$98,$AE,$F0,$CD,$48,$14,$3B,$51,$6A, $A,$93,$DE,$AD,$9E,$F6,$CF,$72,$3B,$1F,$E5,$BC,$7F,$6D,$FB,$D3,$FE,$33,$87,$F0,$64,$36,$95,$5C,$A5,$AD,$2C,$C3,$38,$D9,$7F,$A4,$3D,$30,$99; 576
		dc.b $99,$99,$C3,$D3,$48,$82,$D2,$22,$A9,$6B,  4,$92,$88,$26,$CB,$3F,$3A,$64,$6C,$9D,$91,$25,$AB,$75,$52,$F0,$E1,$2F,$DD,$38,$53,$D7,$F8,$30,$D4,  9,$58,$B4,$70,$2E,$54,$DD,$FC,$18,$6F,  5,$2D,$C0,$92,$4E,  4,$D9,  8,$ED,$28,$86,$E9,$10,$49,$86,$B2,$B7,$59,$99; 640
		dc.b $9D,$B9,$25,$53,$56,$84,$DE,$90,$26,$AF,$1B,$A8,$4B,$C7,$B6,$8C,$25,$66,$59,$15,$8F,$AD,$EC,$83,  5,$9D,$D6,$70,$16,$77, $C, $C, $B,  7,$D6,$BD,$60,$FC,$B8,$B2,$8F,$CA,$B3,$93,$EB,$BA,$7A,$3E,$BE,$DC,$1F,$96,$F7,$D7,$68,$B4,$5A,$FB,$4A,$D8,$DB,$13,$33,$33; 704
		dc.b $33,$3D,$B4,$E1,$55,$3F,$B1,$57,$95,$7C,$27,$DB,$5B,$56,$6C,$BA,$B7,$A2,$F9,$65,$7B,$7F,$9A,$F6,$FE,$F5,$FC,$BF,$7D,$67,$2B,$38, $F,$E4,$10,$70,$E5,$B7,$52,$F7,$EA,$CE,$9E,$4F,$EB,$DB,$5B,$F8,$65,$EE,$15,$BD,$5D,$FD,$1F,$E5,$96,$3F,$BB,$42,$C5,$37,$22,$A7; 768
		dc.b $57,$2B,$15,$24,$23,$C7,  8,$B2,$F8,$B2,$D8,$99,$99,$99,$DF,$FB,$2F,$D1,$F3,$4C,$9E,$99,$AA,$7F,$65,$78,$F9,$D9,$C7,$6E,$8C,$5C,$88,$BE,$E9,$53,$55,$96,$55,$8A,$58,$85,$BE,$7C,$BB,  3,$5D,$D8,$11,$5D,$E1,$8E,$9B,$BD,$4B,$56,$E4,$77,$63,$83,$B5,$33,$C3,$83; 832
		dc.b $8B,$B3,$7F,$62,$6F,$D5,$3D,$5F,$BB,  4,$A3,$F7,$61,$15,$8E,$1B,$A6,$8B,$10,$85,$8C,$22,$5C,$27,$12,$42,$45,$28,$44,$91,$49,$64,$5D, $A,$51,$B3,  8,$95,$F1,$33,$BD,$96,$F3,$67,$3C,$32,$73,$FC,$9D,$3F,$B3,$9C,$3F,$D3,$9D,$58,$90,$A8,$5E,$42,$F2,$17,$95,$A5; 896
		dc.b $69,$5A,$5F,$93,$D7,$2F,$3D,$70,$AB,$F9,$11,$C8,$DE,$8E,$24,$2E,$90,$71,$34,$96,$8E,$1F,$B7,$A3,$BA,$68,$2A,$BC,$19,$99,$99,$99,$99,$CB,$24,$AA,$6A,$D0,$9B,$D2,  4,$D5,$E3,$75,  9,$78,$F6,$D1,$84,$AC,$CB,$22,$B1,$F5,$C9,$82,$C7,$E0,$2C,$C1,$81,$6F,$9D,$AC; 960
		dc.b $B4,$41,$9A,  6,$5C,$94,$64,$D2,$BB,$A6,$93,$B9,$F5,$FF,$32,$B8,$77,$FE,$6C,$BF,$9D,$6B,$ED,$2B,$63,$6C,$4C,$CC,$CC,$CC,$F6,$D3,$85,$54,$FE,$C5,$5E,$55,$F0,$9F,$6D,$6D,$59,$B2,$EA,$DE,$8B,$E5,$95,$ED,$FE,$6B,$DB,$FB,$D7,$F2,$FD,$F5,$9C,$AC,$E0,$3F,$90,$41; 1024
		dc.b $DC,$36,$EA,$5E,$F8,$93,$3A, $B,$AB,$7F,$5B,$B2,$BF,$87,$EB,$5E,$15,$BF,$AE, $E,$FE,$8F,$F2,$CB,$1F,$DD,$A1,$62,$9B,$91,$53,$AB,$95,$8A,$92,$11,$E3,$84,$59,$86,$B6,$61,$18,$47,  8,$99,$99,$99,$FE,$CB,$F4,$7C,$D3,$27,$A6,$6A,$9F,$D9,$5E,$3E,$76,$71,$DB,$A3; 1088
		dc.b $17,$22,$2F,$BA,$54,$D5,$65,$95,$62,$96,$21,$6F,$9F,$2E,$C0,$D7,$76,  4,$57,$78,$63,$A6,$EF,$52,$D5,$B9,$1D,$D8,$E0,$ED,$4C,$F0,$E0,$E2,$EC,$DF,$D8,$9B,$F5,$4F,$57,$EE,$C1,$28,$FD,$D8,$45,$63,$86,$E9,$A2,$C4,$55,$8C,$2A,$E5, $C,$50,$93,$42,$69,$69,$14,$BE; 1152
		dc.b $36,$C4,$CC,$ED,$65,$BC,$D9,$CF, $C,$9C,$FF,$27,$4F,$EC,$E7, $F,$F4,$E7,$56,$24,$2A,$17,$90,$BC,$85,$E5,$69,$5A,$43,$F6,$54,$AB,$12,$D7,$FE,$98,$6C,$DA,$54,$84,$92,$71,$34,$A4,$E2,$4C,$1C,$2F,$75,$A0,$C1,$99,$99,$99,$9D,$E0; 1216
Nem_Seahorses:	dc.b   0,$3E,$80,  5,$13,$15,$12,$25,$16,$36,$32,$46,$33,$56,$2E,$66,$38,$74,  4,$81,  3,  0,$15, $E,$27,$78,$38,$F3,$82,  6,$2F,$83,  7,$76,$84,  6,$3A,$85,  5, $F,$16,$36,$28,$F2,$38,$F6,$86,  4,  6,$16,$37,$87,  4,  8,$17,$73,$88,  4,  5,$17,$77,$89,  3,  1; 0
		dc.b $15,$18,$27,$7A,$8A,  8,$F7,$8C,  5,$15,$16,$35,$8D,  5,$14,$16,$34,$27,$72,$FF,$44,$44,$44,$44,$BB,$13,$F6,$30,$B3,$7E,$AD,$50,$64,$FD,$1E,$6C,$FA,$3C,$66,$F0,$88,$89,$C7,$EE,$6C,$77,$85,$91,$76,$F1,$22,$ED,$E2,$6F,$3B,$FE,$9D,$F4,$A9,$8F,$D4, $F,$D6,$1D; 64
		dc.b $B1,$FE,$D7,$7B,$69,$76,$DC, $E,  5,$CF,$6C,$DF,$4A,$F1,$1E,$CD,$CC,$F2,$6F,$53,$1A,$1A,$D1,$F3,$51,$5D,$EB,$B2,$8A,$6B,$A3,$D4,$6B,$A6,$C3,$F5,$9A,$6D,$FA,$CA,$79, $A,$56,$8E,$DA,$7A,$79,$BE,$6F, $D,$DF,$CD,$A0,$88,$F1,  4,$32,$87,$BA,$3B,$87,$86,$F3,$A0; 128
		dc.b $9C,$77,$39,$61,$24,$A7,$38,$39,$B1,$C8,$31,$CC,$1B,$82,$24,$A1,$4D,$B9,$E2,$CD,$8C,$CA,$22,$22,$22,$22,$6D,$73,$EB,$B6,$4F,$DE,$83,$79,$BF,$5A, $C,$4D,$F4,$DB,$2D,$91,$11,$11,$11,$27,$FB,$9B,$1D,$68,$64,$75,$C2,$C8,$BB,$78, $F,$2E,$6E,$63,$53,$1F,$A8,$14; 192
		dc.b $D4,$ED,$42,$F3,$4D,$69,$5B,$79,$69,$76,$DC, $E,  5,$CF,$6C,$DF,$4A,$A7,$F1,$6D,$C9,$97,$F4,$E7,$4F,$E4,$A8,$AE,$F5,$D9,$45,$35,$D1,$EA,$35,$E4,$FE,$55,$D3,$6D,$74,$F6,$AB,$56,$83,$CB,$5A,$3C,$79,$51,$ED,$DC,$3D,$CC, $A,$C7,$88,$60,$54,$3D,$D0,$AE,$78,$6F; 256
		dc.b $3A,  4,$49,$F7,$F5,$6C,$25,$C2,$51,$DE,$43,$7F,$52,$18,$CC,$70,$12,$5D,$EC,$DC,$FD,$4B,$D2,$22,$22,$22,$22,$67,$E5,$9F,$E9,$A8,$37,$1A,$6A,$FC, $F,$64,$44,$44,$44,$44,$FD,$CD,$8E,$B4,$32,$3A,$E1,$64,$5D,$BC,  7,$97,$37,$31,$A9,$8F,$D4,$69,$A9,$DB, $F,$34; 320
		dc.b $FD,$65,$2D,$E5,$A5,$DB,$70,$38,$17,$3D,$B3,$7D,$2A,$9F,$C5,$B7,$26,$5F,$D3,$9D,$3F,$92,$A2,$BB,$D7,$65,$14,$D7,$47,$A8,$D7,$93,$C7,$EB,$34,$DA,$BC,$BD,$B9,$3B,$CB,$4F,$1E,$C1,$BB,$87,$B9,$81,$58,$F1, $C, $A,$87,$BA,$15,$CF, $D,$E7,$41,$9B,$F4,$AD,$9F,$C9; 384
		dc.b $A4,$FE,$55,$A4,$DF,$CA,$B4,$7C,$DF,$CA,$B4,$2F,$E5,$5A,$3C,$BF,$95,$69,$E5,$A5,$5A,$BA,$3E,$9A,$EF,$50,$FA,$57,$77,$33,$EA,$CE,$8D,$E8,$EF,$D3,$96,$99,$FD,$47,$36,$91,$EF,  4,$5B, $E,$8C,$CF,$36,$D7,$47,$89,$D3,$D8,$4B,$66,$87,$8D,$DE,$CE,$2E,$2F,$87,$11; 448
		dc.b $2D,$B0,$E9,$17,$B9,$E2,$4F,$F4,$F1,$36,$15,$F6,  5,$E2,$9B,$3A,$6C,$FF, $F,$13,$67,$8D,$9D,$32,$36, $F, $C,$19,$E3,$60,$F8,$DC,$6C,$26,$60,$37,$90,$B2,$E2,$5C,$F1,$96,$11,$12,$6B,$8B,$73,$39,$46,$33,$28,$89,$DD,$F9,$46,$D9,$BD,$11,$2D,$7F,$E4,$FA,$B5,$FF; 512
		dc.b $A3,$69,$5F,$FA,$3E,$BB,$4E,$FF,$D1,$F5,$DA,$F9,$DF,$FA,$3E,$BB,$1B,$FF,$47,$D7,$6B,$CD,$FF,$A3,$EB,$B7,$E8,$BF,$27,$D3,$75,$F9,$3B,$FB,$7E,$53,$7E,$85,$FD,$BA,$DD,$CD,$7F,$4C,$E8,$DF,$B3,$BF,$4E,$5A,$67,$F5,$1C,$DA,$47,$BC,$11,$6C,$3A,$33,$3C,$DB,$F2,$9F; 576
		dc.b $93,$BC,$4F,$B7,$EC,$84,$BF,$24,$D1,$78,$99,$BD,$9C,$7C,$5F, $E,$20,$AF,$E4,$B1,$E6,$6F,$75,$EE,$9D,$FE,$AF,$12,$1D,$7E,$C8,$4E,$F1,$DB,$F2,$4E,$9B,$5F,$E2,$F1,$36,$BC,$7E,$49,$D3,$23,$F2,$42,$F1,$30,$D7,$8F,$C9,  9,$C6,$E3,$F2,$42,$66,  3,$7E,$88,$7A,$CC; 640
		dc.b $B2,$9C,$97,$75,$36,$EE,$CA,$6C,$63,$F5,  6,$42,$16,$14,$C8,$15,$85,$32,  5,$79,$9B,  2,$B0,$A2,$40,$AC,  3,$20,$5D,  0,$C8,$15,$1E,$E2,$40,$86,$EB,$DE,$4E,$F7,$FC,$A7,$BE,$5F,$9A,$EB,$DE,$EF,$CD,$7A,$CC,$B2,$9C,$97,$75,$36,$EE,$CA,$6C,$63,$F5,  6,$42,$16; 704
		dc.b $14,$C8,$15,$85,$32,  5,$79,$9B,  2,$B0,$A2,$40,$AC,  3,$20,$5D,  0,$C8,$15,$1E,$E2,$40,$8E,$BD,$EC,$EF,$D5,$22,$70,$57,$82,$88,$89,$2B,$F8,$BE,$E1,$DA,$FC,$C7,$5D,$AE,$1D,$76,$CC,$75,$DA,$E1,$7B,  3,$93,$B9,$DC,$E4,$51,$CD,$85,$EE,$58,$30,$2F,$13,$3D,$C2; 768
		dc.b $DE,$24,$42,$C5,$E2,$45,$4B, $B,$15,$86,$19,$18,$23,$23,$17,$8C,$8A,$8C,$8A,$DE,$32,$2A,$32,$2B,$78,$B1,$5B,$C6,$4A,$EC,$C2,$22,$22,$5D,$5B,$AA,$73,$A9,$5C,$98,$AC,$5A,$A5,$61,$A5,$52,$B0,$D4,$9D,$1A,$BC,$8C,$EB,$A6,$21,$A7,$8F,$D3,$6B,$6F,$E4,$A2,$24,$A9; 832
		dc.b $75, $E,$74,$2B,$99,$5B,$96,$2E,$85,$B9,$96,$ED,$F4,$CB,$4B,$A1,$6E,$65,$BB,$F5,$99,$FA,$44,$44,$44,$44,$44,$B6,$B9,$55,$B1,$2D,$70,$B1,$3A,$61,$79,$B4,$E8,$DA,$F2,$95,$69,$85,$89,$62,$B4,$E7,$96,$35,$BB,  8,$88,$89,$6A,$E9,$2A,$E8,$56,$D8,$58,$C9,$61,$B3; 896
		dc.b $DE,$E6,$E3,$4B,$A3,$86,$E2,$BC,$1A,$F0,$51,$13,$C6,$4E,$2A,$2D,$FC,$1C,$BC,$22,$22,$22,$22,$22,$26,$65,$C6,$C5,$C4,$19,$38,$A9,$12,$F0,$5D,$23,$E6,$6C,$5C,$51,$11,$11,$11,$13,$22,$E3,$6F,$32,$26,$7C,$15,$C7,$F0,$4F,$FC,$5C,$7F,$A2,$67,$FD,$1B,$17,$14,$44; 960
		dc.b $44,$44,$49,  4,$4E,  4,$86,$63,$87,$4C,$66,$E9,$89,  9,$79,$DB,$FA,$33,$13,$FE, $C,$8F,$F4,$6C,$7C,$64,$66,$EE,  2,$22,$22,$22,$22,$22,  3,$73,$B1,$97,$9E,$25,$FD,$1C,$7F,$C7,$1F,$D1,$CB, $E,$44,$44,$44,$44,$44,$B8,$8C,$8F,$89,$61,$D8,$FF, $C,$FF,$83,$67; 1024
		dc.b $22,$22,$22,$22,$5C,$2C,$32,$17,$3A,$E1,$30,$88,$89,$98; 1088
Nem_UnusedRollingBall:dc.b   0,$1B,$80,	 5,$14,$15,$15,$26,$34,$36,$31,$57,$73,$76,$32,$82,  4,	 6,$17,$75,$27,$71,$83,	 3,  0,$16,$2F,$27,$79,$37,$7A,$47,$77,$84,  3,	 1,$15,$13,$26,$33,$37,$6E,$47,$72,$58,$F7,$86,	 7,$74,$17,$76,$87,  6,$30,$17,$78,$88,	 5,$12,$17,$6F,$89,  3,	 2; 0
		dc.b $17,$70,$8A,  4,  8,$17,$6A,$8B,  4,  7,$16,$2E,$26,$36,$37,$6B,$48,$F6,$78,$F8,$8D,  5,$16,$FF,$CB,$9E,$AC,$77,$69,$3E,$C6,$BE,$F5,$23,$75,  8,$20,$83,$4F,$24,$1B,$DB,$C9,$BD,$83,$7F,$4D,$83,  6,$BD,$AC,$C1,$83,$10,$D6,$E2,$1C,$D9,$AC,$C5,$E1,$F7,$3C,$2F; 64
		dc.b $68,$51,$47,$4E,$9F,$85,$2E,$4E,$9D,$56,$E4,$E9,$EB,$B1, $B,$4B,$81,$18,$CC,$1E,$64,$65,$FC,$AF,$31,$FB,$84, $F,$EA,$3C,$4B,$81,$DF,$87,$4F,$11,$39,$61,$DB,  9,$4E,$51,$87,$4F,$13,$94,$7E,$9E,$53,$8F,$1B,$9E,$25,$9F,$42,$A3,$DD,$4B,$93,$CB,$30,$46,$A9,$82; 128
		dc.b  $A,$83,$DE,$11,$60,$D7,$A8,$21,$83,  5, $F,$C4,$37,  7,$1C,$6C,$9D,$38,$6B,$33,$A7,$5A,$CB,$A7,$5B,  9,$A7,$57,$7B,$DD,$CB,$6C,$AF,$E6,$7C,$E2,$A7,$7E,$92,$84,$6F,$AE,$12,$85,$3A,$FE,$A2,$3F,$53,$4C,$D4,$3A,$A7,$4D,$CA,$EE,$4E,$9F,$DE,$E2,  8,$9A,$70,$41; 192
		dc.b   6,$EE,$E5,$3F,$73,$73,  6,$BD,$D3,$8E,$21,$CD,$1A,$CD,$B1,$A5,$9B,$63,$5D,$73,$AE,$D3,$D2,$E9,$E3,$76,$59,$65,$88,$38,$FA,$D3,$BD,$43,  6, $D,$51,$D4,$30,$A2,$6B,$35,$BA,$D1,$43,$5B,$AF, $F,$D5,$7E,$A6,$16,$A9,$44,$A2,$4B,$F5,$52,$8D,$EB,$35,$28,$97,$25; 256
		dc.b $AA,$7D,$A7,$A8,$83,$79,$51,$3F,$46,$29,$7B,$5E,$62,$85,$83,  2,$AA,$18,$30,$55,$21,$AF,$7D,  8,$60,$F8,$CE,$EE,$77,$65,$EF,$C2,$7D,$B3,$44,$6E,$DE,  8,$9A,$C2,$5E,$97,$E9,$DA,$F5,$87,$E9,$99,$47,$F1,$D4,$4B,$94,$4B,$3E,$C6,$5F,$E4,$97,$FD,  8,$20,$89,$82; 320
		dc.b   8,$22,$7F,$D3,$21,$83,$79,$2C,$18,$30,$62,$38,$86,$10,$43,$59,$AC,$C9,$C8,$6B,$35,$B8,$7F,$6D,$3A,$75,$F1,$F1,$F1,$B6,$48,$F3,$84,$46,$32,$84,$46,$9B,$E1,$11,$5C,$25,$A9,$1A,$CA,$25,$AA,$74,$9F,$EA,$9C,$D3,$38,$75,$76,$70,$9D,$3E,$E7,$57,  2, $A,$74,$E4; 384
		dc.b $10,$EA,$EF,$57,$23,$E9,$D3,$90,$C3,$59,$E3,$B1,$A7,$51,$B1,$A3, $D,$8D,$75,$CE,$BA,$CE,$9A,$F1,$BB,$2C,$B2,$C5,$36,$3C,$3A,$E8,$A3,$F5,$15,$5A,$B7,$E1,$55,$9E,$FA,$4F,$B4,$E5,$4F,$FA,$10,$46,$E0,$41,$13,  4,$10,$44,$C1,  4,$1F,$F9,$DE,$C1,$83,$5E,$C1,$83; 448
		dc.b   6,$BF,$88,$EA,$68,$2C,$D6,$EA,$F4,$22,$CD,$60,$F5,$F6,$55,$D6,$9F,$4F,$6C,$75,$F3,$73,$97,$AD,$C3,$B0,$6F,$3F,$B2, $D,$7F,$F5,$E5,$84,$B0,$FD,$37,$89,$7E,$9F,$A7,$89,$61,$BF,$F4,$F9,$C6,$FC,$33,$E8,$A2,$5C,$94,$A3,$92,$8C,$C1, $F,$29,$82, $B,$C1,$EE,$F0; 512
		dc.b $58,$35,$EF,  4,$30,$60,$E9,$C7,$EC,$B8,$39,$16,$6B,$7E,$A5,$C8,$B3,$3A,$75,$AD,$3A,$F8,$F8,$F6,$FF,$A7,$FD,$32,$9F,$33,$1C,$31,$FD,$44,$2D,$30,$DF,$A9,$57,$F7,$10,$AB,$9C,$B5,$2A,$74,$DD, $A,$9C,$A1,$7F,$91,$4C,$11,$37,$20,$82, $A,$3D,$CB,$9E,$E5,$16, $D; 576
		dc.b $7D,$C7,$F6,$42,$E3,$C4,$6D,$4B,$30,$D7,$4F,$ED,$D7,$FB,$75,$F6,$D3,$5E,$33,$CB,$98,  0; 640
Nem_UnusedMotherBubbler:dc.b $80,$18,$80,  3,  0,$14, $A,$24,  7,$36,$30,$46,$38,$57,$78,$66,$39,$74,  5,$81,  4,  3,$16,$36,$27,$7A,$82,  4,  8,$17,$76,$83,  5,$13,$84,  7,$74,$85,  7,$79,$86,  4,  4,$87,  4,  2,$16,$37,$88,  5,$19,$89,  5,$17,$8A,  7,$75,$8B,  6,$31,$17,$7B,$8C,  5; 0
		dc.b $1A,$17,$77,$8D,  5,$12,$8E,  4,  6,$8F,  5,$16,$18,$F8,$FF,$55,$55,$5F,$1F,$94,$C3,$F2,$88,$4F,$D0,$93,$6C,  9,  8,$E8,$BF,$44,$D9,  8,$6F,$23,  5,$6C,$25,$C1,$86,  9,$6D,$83,$4C,$13, $F,$89,$98,$4B,$4A,$1B,$52,$40,$72,$D3,$90,$31,$BF,$16,$73,$B9,$DA,$3F; 64
		dc.b $2C,$63,$32,$89,$EA,$CF,$B4,  9,$F7,$3F,$F6,$D7,$F0,$68,$FC,$1B,$70,$62,$ED,$CD,$DB,$9B,$97,$E9,$B8,$F4,$AA,$AA,$BC,$9A,$FF, $C,$7F,$86,$71,$37,$FC,$F7,$EC,$43,$7E,$69,$97,$6C,$9B,$7E,$69,$BB,  2,$3F,$CF, $F,$38,$18,$31,$E6,$8B,$D0,$2B,$57,$AD,$E5,$60,$47; 128
		dc.b $44,$D1,$6C,$32,$1A,$88,$17,$82,$B4,$85,$9E,$DD,$45,$A6,$3E,$3A,$A1,$CE,$BA,$E9,$24,$25,$DD,$3F,$3A,$24,$24,$24,$F1,$48,$F1,$7A,$C7,$83,$D0,$90,$8B,$F9,$74,$8B,$F5,$B2,$16,$22,$FD,$7D,$FF,  7,$15,$55,$A3,$5E,$4D,$57,$C1,$74,$E5,$3F,$67,$D3,$71,$FB,$14,$1D; 192
		dc.b $3F,$83,$E6,$65,$B7,$EB,$CE,$C5,$F9,$36,$1F,$9A,$24,$F3,$4C,$3F,$5C,$50,$7D,$23,$6B,$17,$E6,  8,$7E,$9E,$DF,$9D,$46,$79,$19,$26,$2C,$E8,$49,$7A,$FD,$38,$3B,$44,$88,$6D,$56,$9C,$B3,$61,$B0,$89,$88,$F8,$64,$BE,$2D,$38,$17,$74,$CC,$E3, $F,$CA,$C4,$F9,$8C,$DD; 256
		dc.b  $B,$E3,$DD,$F2,$49,$ED,$55,$55,$79,$CA,$F8,$FC,$C2,$F8,$CA,$AA,$F3,$D3,$92,$E8,$3F,$72,$37,$BC,$CD,$AD,$74,$29,$C5,$8C,$59,  1,$B1,$8D,$AA,$D2,$D8,$5B,$7A,$FD,$7B,$90,$B3,$18,$20,$41, $B,$23,$7A,$F7,$78,$21,$68,$98,$81,$2B,$75,$1F,$93,$1F,$93,$8A,$FD,$18; 320
		dc.b $C6,$63,$22,$62,$E2,$2B,$22,$E1,$33,$EA,$F4,$4A,$AA,$AA,$AA,$BC,$F7,$5D,$71,$15,$DF, $E,$CA,$B0,$25,$5F,$98,$73,$C3,$22,  6,$87,$EA,  4,$1E,$B0,$81,$27,$ED,$B3,$C0,$31,$27,$D8,$4B, $F,$D6,$AA,$F1,$DD,$7B,$E1, $F,$AC,$3B,$56,$B8,$85,$81,$A1,$FB,$81,  2,$4F; 384
		dc.b $97,$3F,$D4,$54,$1E,$B0,$81,$27,$ED,$B5,$76,  6,$25,$5E,$BF,$3A,$FF,$AD,$55,$24,$2C, $B,$4D,$A2,$73,$9C,$A6,$6E,$73,$94,$CD,$CB,$4D,$A2,$C0,$90,$95,$70,$24,  8,$4E,$6D,$8B,$1B,$A4,$DA,$68,$E9,$36,$9A,$39,$B6,$2C,$6E,$48,$10,$96,$B7,$7D,$E8,$D0,$21,$D1,  6; 448
		dc.b $C5,$81,$52,$4D,$A6,$8E,$93,$69,$A5,$10,$6C,$58,$15,$1A,  4,$3A,$DD,$F7,$7F,$D3,$F0,$46,$4E,$43,$16,$C4,$15,$24,$E5,$34,$74,$9C,$A6,$94,$43,$16,$C4,$13,$91,$97,$1F,$A7,$A0,  0; 512
Nem_UnusedBubbler:dc.b	 0,$18,$80,  3,	 0,$14,	 9,$25,$18,$36,$38,$46,$3B,$56,$3A,$67,$7A,$75,$19,$86,	 4, $B,$17,$7B,$87,  4,	 6,$16,$39,$88,	 4,  7,$16,$3C,$89,  4,	 8,$15,$1A,$28,$FA,$8A,	 3,  2,$16,$36,$28,$F8,$8E,  3,	 1,$16,$37,$8F,	 4, $A,$18,$F9,$FF,$CE,	$D,$76,$65,$F8;	0
		dc.b $AE,$8B,$8D,$DC,$38,$DD,$81, $F,$4E,$99,$3D, $A,$D9,$D3,$E7,$3C,$1A,$EC,$CB,$F1,$42,$9F,  7,$E5,$8D, $A,  7,$90,$FF,$23,$67,$F8,$EB,$DF,$67,$58,$BA,$30,$F2,$7C,$AD,$A4,$BA,$86,$20,$BB,$3E,$98,$A8,$7D,$18,$7F,$A5, $F,$15,$87,$52,$F4,$1E,$50,$54,$10,$34,$13; 64
		dc.b $40,$4F, $E,$CB,$F9,$2E,$CF,$FB,$94,$34,$F1,$B4,$E9,$D6,$96,$73,$EB,$DF,$77,$CF,$77,$E7,$16,$69,$62,$D9,$DA,$A4,$FE,$9F,$C9,$AE,$7C,$42,$F7,$F1,$45,$F2,$A9,$43,$16,$DB,$9A,$8A,$DA,$1D,$A1,$83,$79,  9,$94,$AD,$26,$80,$A3,$6D,$3E,$73,$7E,$9E,$FA,$57,$3F,$2C; 128
		dc.b $15,$C1,  4,$37,$D3,$27, $E,$DA,$79,$4E,$D1,$BD,$27, $D,$7C,$A7,$42, $B,$3A,$79,$62,$CA,$14,  6,$8E,$54,$6D, $F,$FB,$95,$AF,$ED,$42,$8F,$8F,$AC,$FA,$BE,$AA,$F8,$DA,$94,$A6,$D8,$A9,$4C,$B9,$43,$95,$50,$98,$32,$A8,$B8,$41,$94,$35,$C2,  9,$E3,$DF,$E0,$63,$6B; 192
		dc.b $8F,$7F,$81,$B4,$DA,$6B,$8B,$4D,$B4,$35,$AB,$78,$7A,$F8,$67,$4D,$1F,$BA,$67,$6F,$DD,$66,$E8,$B4,$2A,$61,$A6,$85,$4C,$A3,$66,$AF,$8E,$53,$B2,$A6,$5A,$75,$AE,$7C,$50,$D6,$BC,$50,$DE,$FE,$21,$BF,$4C,$A3,$F2,$3F,$B6,$86,$FC,$8F,$ED,$A2,$FF,  3,$1F,$B6,$D7,$ED; 256
		dc.b $BF,$4F,$FC,$A8,$64,$EB,$F5,$1F,$49,$F4,$9E,$32,$1B,$A7,$9A,$38,$71,$F2,$5E,$76,$A8, $F,$30,$9A,$36,$96,$8F,$86,$9B,$68,$55,$C8,$F7,$15,  1,$85,$B4,$34,$3B, $B,$6D,$27,$96,$8B,$AB,$87,$11,$7B,$3D,$F8,$5D,$3A,$84,$ED,  9,$F4,$84,$34,$28,$5A,$96,$E1,$B3,$DB; 320
		dc.b $76,$D3,$EF,$A6,$9E,$41,$93,$8B,$F5,$7D,$37,$BE,$1A,$77,  7, $C,  8,$7E,$2F,$B3,$83,$83,$E8,$E1,$D6, $F,$9D,$7E,$BA,$9A,$4E,$1A,$4F,$6C, $A,$E8,$A1,$5C,$19,$F9,$46,$24,$CB,$4B,$62,  1,$81,$4D,$18,$89,$2D,$31,$86,  9,$97, $F,$D2,$C2,$70,$BD,$2C,$B6,$71,$52; 384
		dc.b $EC,$65,  7,$C1,  8,$38,$60,$42,$60,$F2,$E1,$B4,$E1,$D8,$E1,$67,$36,$CF,$2C,$23, $B,$D6,$D1,$DB,$E1, $D,$B1, $F,$2E,$18,$1A, $F,$C3,$43,$8A,$CF,$A3,$D1,  7,$A3,$82,$37,  4,$6E,  8,$32,$41,  4,$19,$20,$83,$24,$11,$FA,$E9,$23,$70,$41,  4,$6F,$C6,$E3,$7F,$47; 448
		dc.b $39,$CE, $E,$64,$F0,$78,$20,$F4,$46,$F8,$20,$83,$82,$37,  6,$77,$1B,$F0,$41,  6,$48,$20,$E3,$70,$64,$82,  8,$38,$23,$70,$7B,$DF,$39,$C0; 512
Nem_Snail:	incbin	"art/nemesis/Snail badnik from EHZ.bin"
		even
Nem_Masher:	incbin	"art/nemesis/Masher.bin"
		even
Nem_BossShip:	dc.b $80,$60,$80,  3,  0,$14,  4,$25, $F,$35,$13,$46,$31,$56,$32,$66,$34,$74,  2,$81,  4,  3,$15,$16,$38,$F2,$82,  6,$2E,$17,$77,$83,  6,$30,$17,$6E,$84,  7,$72,$85,  7,$73,$86,  5,$11,$17,$78,$87,  5,$10,$17,$6F,$88,  5,$15,$17,$75,$89,  4,  5,$16,$38,$28,$F7; 0
					; DATA XREF: ROM:0001C278o
					; ROM:0001C28Ao
		dc.b $8A,  5,$14,$8B,  5,$12,$17,$74,$8C,  5, $E,$16,$33,$28,$F3,$38,$F6,$8D,  6,$36,$17,$7A,$8E,  6,$2F,$17,$76,$8F,  4,  6,$16,$35,$FF,$7F,$14,$AC,$34,$64,$54,$C2,$D3,$C3,$F4,$2F,$C2,$E1,$AB,$EE, $C,$F5,$30,$C4,$4F,$5C,  3,$3C,$DF,$FA,$60,$68,$BF,$AB,$BC,$92; 64
		dc.b $E4,$BB,$2B,$85,$CF,$BA,$78,$76,$DA,$2F,$C0,$6A,$35,$1D,$AD,$D9,$83,$6C,$7F,$AE,$3B,$96,$4C,$2D,$7E,$1C,  3,$43,$BE,$E6,$7D,$86,$16,  6,$35,$37,$5B,$57,$E0,$19,$F7,$A3,$4E,$1A,$2E,$97,$E9, $D,$17,$4B,$D0,$EE,$5B,$83,$AE, $B,$82,$5D,$3E,$B3,$C0,$1D,$70,$7E; 128
		dc.b   8,$75,$FD,$1C,$CC,$96,$BA,$1D,$74,$35,$22,$22,$22,$2F,$E4,$1D,$56,$E9,$AA,$4A,$E7,$F7,$EB,$2F,$D1,  9,$25,$7A, $E,$95,$4A,$8E,$98,$4F,$AE,  4,$3F,$F1,$FF,$12,$22,$22,$21,$BE,$96,$EB,$4D,$A3,$25,$8A,$5D,$2E,$35,$7A,$8D,$67,$A9,$33,$F5,$9E,$A8,$63,$53,$48; 192
		dc.b $8F,$2F,$10,$C7,$79,$BC,$C1,$C2,$33,$F1,  5,$43,$1B,$EF,$B8,$1A,$76,$C5,$A6,$61,$87,$E8,$86,$BD,$F1,$B9,$FF,$A3,$5F,$DD,$FE,$A0,$BF,$51,$A5,$71,$EB,$A7,$E8,$66,$6F,$32,$B1,$19,$11,$11,$7E,$A8,$FF,$55,$57,$F4,$DC,$73,$95,$52,$E9,$F5,$4E,$E9,$84,$86,$B7, $F; 256
		dc.b $D1,$18,$61,$77,$EF,$E3,$DD,$A7,$2B,$87,$F0,$51,$B4,$3C,$6E,$6F,$21, $C,$8E,$39,$1A,$7F,$3E, $D,$92,$DC,$3F,$A4,$2E,$CB, $F,$F5,$D4,$88,$88,$88,$8C,$AC,$5E,$44,$64,$55,$FF,$3D,$DF,$DD,$6C,$31,$B9,$30,$9D,$CF,$C1,$F7, $F,$D0,$DC,$97, $D,$55,$A5,  9,$2A,$2C; 320
		dc.b $79,$39,$22,$14,$72,$47,$45,$87,$EA,$16,  1,$53,$77,$74,$AE,$E1,$DE,$29,$B8,$77,$7E,$E1,$DD,$FB,$87,$77,$EE,$1D,$D2,$B2,$AC,$96,$43,$F7,$1F,$AB,$1F,$B8,$FD,$59,$11,$11,$11,$11,$17,$FC,$48,$BF,$8D,$BE,$96,$16,$D4,$33,$DA,$6C,$64,$4F,$B8,$2F,$2E,$9C,$4A, $E; 384
		dc.b $4D,$91,$CF,$D9,$1C,$9C,$E5,$E1,$61,$CE,$18,$F7,$CB,$BE,$5D,$F2,$EF,$97,$79,$63,$74,$A0,$BF,$A6,$59,$44,$F8,$F0,$9E,$38,$F1,$58,$AC,$9F,$2B,$33,$EA,$18,$C5,$D3,$D4,$1B,$F0,$EF,$B5,$52,$A3,$F4,$75,$7F,$F2, $B,$2B,$4E,$C9,$E4,$44,$53,$A5,$A9,$5F,$10,$C2,$A2; 448
		dc.b $EB,$F3,$DB,  0,$B7,$BB,$F4,$72,$3B,$DD,$80,$EA,$8E,$C0,$54,$72,$92,$CB,$A8,$E4,$E8,$39,$FC,$83,$83,$93,$92,$72,$72,$72,$4E,$43,$A5,$7C,$FA,$8D,$D9,$6E,$9E,  3,$73,$F0,$D8,$6E,$4C,$36,$3D,$7C,$DA,$EF,$E9,$DD,$85,$D6,$F3,$D9,$DB,$78,$FF,$DF,$EA, $A,$A9,$84; 512
		dc.b $BF,$50,$87,$57,$D7,$1F,$DC,$18,$FD,$C0,$34,$EA,$2D,$3B,$62,$64,$44,$45,$A4, $E,$B4,$37,$EC,$2E,$91,$BF,  1,$2C,$7F,$51,$8D,$4B,$4F,$D4,$69,$CB,$2E,$59,$54,$B5,$97,$37,$E1,$EA,$E1,$CD,$1C,$6C,$18,$73,$4B,$DE,$C9,$87,$EB,$75,$4C,$3F,$A5,  7,$7F,$B7,$FD,$74; 576
		dc.b $FD,$C4,$EA,$FA,$83,  7,$FB,$83,$7F,$91,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$16,$9F,$B8,$4E,$AD,$7E,$A2,$AD,$79,$83,$15, $D,$D9,$BB,$7F,$21,$6A,$A4,$44,$44,$44,$44,$45,$EF,$8F,$E8,$78,$7B,$25,$95,$2F,$1F,$A1,$1C,  3,$1F,$C9,$B0,$59,$B0,$30,$B3,$60,$61; 640
		dc.b $66,$C0,$C2,$92,$B2,$30,$34,$52,$69,$9A,$29,$11,$14,$CF,$16,$30,$73,$BC,$57,$F4,$3B,$F8,$35,$22,$22,$25,$22,$52,$9D,$60,$FE,$A6,$C6,$95, $D,  8,$DE, $C,$35,$B8,$30,$D6,$67,$B5,$98,$29,$A8,$36, $A,$60,$F7,$F5,$32,$22,$22,$22,$22,$22,$11,$CB,$C1,$62,$AD,$59; 704
		dc.b $A8,$AE,$3C,$1D,$48,$88,$A7,$FB,$87,$D5,$BD,$DF,$7C,$4F,$34,$8C,$14,$6C,$9E,$16,$A9,$B7,$8A,$AB,$FC,$21,$A4,$52,$AA,$91,$4A,$83,$11,$7D,$B8,$7D,$34,$A7,$EE,$7F,$6C,$44,$44,$44,$44,$45,$A4,$72,$F0,$58,$AB,$56,$6A,$2B,$8F,  7,$52,$22,$29,$FE,$E1,$F5,$6F,$77; 768
		dc.b $DF,$1F,$34,$8C,$17,$CC,$78,$5A,$9E,$7E,$2A,$A8,$E9,$45, $D,$20,$95,$54,$8A,$54,$18,$8B,$ED,$C3,$E5,$A4,$BF,$73,$FB,$62,$CB,$A6,$32,  7,$3D,$81,$8D,$FE,$93,  1,$16,$FC,$D4,$DC,$B1,$6A,$4F,$7A,$B6,$E8,$C9,$20,$A2,$E9,$C9,$FB,$25,$24,$18,$28,$FC,$D6,$3F,$9A; 832
		dc.b  $D,  6,$4A, $D,$6F,$45, $D,$D8,$7B,$C5,$61,$D6,$D5,$FE,$5C,$FC,$BA,$58,$66,$2D,$42,$DD,$9B,$E3,$8E,$F9,$EF,$7E,$1C,$A1,$8C,$8B,$FD,$83,$F5,$DE,$C2,$F1,$76,$57,$63,$C3,$AD,$8A,$A5,$85,$54,$4A,$92,$A4,$8F,$88,$C2,$3B,$F8,$C9,$74,$A6,$91,$FE,$E1,$33,$FD,$99; 896
		dc.b $FE,$61,$C9,$ED,$B1,$E7,$FB,$D4,$F5,$33,$2B,$4C,$F2,$FD, $A,$58,$1B,$E5,$4F,$D5,$FE,$53,$9C,$23,  6,$3F,$D7,$BD,$60,$7A,$40,$F4,$81,$7F,$7D, $D,$BC,$B5,$AB,$BB,$64,$E1,$78,$30,$C6,$1C,$2F,  7,$37,$4C,$DE,$EB,$C8,$89,$3F,$9A,$6D,$79,$65,$D3,$19,  3,$9E,$C0; 960
		dc.b $C6,$FF,$49,$80,$8B,$7E,$6A,$6E,$58,$B5,$27,$BD,$5B,$74,$64,$90,$51,$74,$E4,$FD,$92,$92, $C,$14,$7E,$6B,$1F,$CD,  6,$83,$25,  6,$B7,$A2,$86,$EC,$3D,$E2,$B0,$EB,$6A,$FF,$2E,$7E,$5D,$2C,$33,$16,$A1,$6E,$CD,$F1,$C7,$7C,$F7,$BF, $E,$50,$C6,$45,$FE,$C1,$FA,$EF; 1024
		dc.b $61,$78,$BB,$2B,$B1,$E1,$D6,$C5,$52,$C2,$AA,$25,$49,$52,$47,$C4,$61,$1D,$FC,$64,$B8,$B8,$50,$7B,$24,$5D,$37,$4F,$CC,$33,$FC,$C3,$3F,$CC,$38,$67,$FB,$D3,$77,$AC,$76,$C4,$CA,$D3,$3C,$BF,$42,$96,  6,$F9,$53,$F5,$7F,$94,$E7,  8,$C1,$8F,$F5,$EF,$58,$1E,$90,$3D; 1088
		dc.b $20,$5F,$DF,$43,$6F,$2D,$6A,$EE,$D9,$38,$5E, $C,$31,$87, $B,$C1,$CD,$D3,$37,$BA,$F2,$22,$4F,$E6,$9B,$5E,$5A,$48,$B2,$91,$EF,$FD,$6B,$E2,$DF,$9A,$1B,$23,$96,$2D,$41,$18,$3B,$7A,$B7,$34,$82,$41,$47,$39,$C9,$EE,$48,$48,$30,$51,$28,$63,$D0,$34,$19,$24,$35,$BD; 1152
		dc.b $14,$37,$61,$EF,$15,$76,$EA,$1D,$7A,$79,$74,$B0,$CC,$58,$A5,$BB,$3D,$D2,$21,$D5,$3A,$8C,$E8,$23,$4C,$D2,$91,$14,$7B,$87,$A0,$E0,$EA,$FE,$DE,$AE,$18,$4F, $A,  3,$F6,$3E,$62,$9E,$5C,$C7,$14,$E7, $E,$56,$45,$B8,$60,$30,$AA,$89,$52,$4B,$43,$E2,$30,$8E,$FA,$2E; 1216
		dc.b $47,$42,$27,$E6,$FF,$34,$68,$47,$1C,  8,$9D,$8E,$6D,$FD,$CD,$87,$F3,$41,$DC,$53,$32,$B5,$25,$4E,$9C,$FF,$29,  8,$C1,$8F,$F5,$EF,$58,$1E,$90,$3D,$20,$5F,$DF,$43,$6F,$2D,$6A,$EE,$D9,$38,$5E, $C,$36,$69,$78,$31,$EB,$32,$75,$E9,$62,$2C,$BF,$9A,$6D,$79,$69,$22; 1280
		dc.b $CA,$47,$BF,$F5,$AF,$8B,$7E,$68,$6C,$8E,$58,$B5,  4,$60,$ED,$EA,$DC,$D2,  9,  5,$1C,$E7,$27,$B9,$21,$20,$C1,$44,$A1,$8F,$40,$D0,$64,$90,$D6,$F4,$50,$DD,$87,$BC,$55,$DB,$A8,$75,$E9,$E5,$D2,$C3,$31,$62,$96,$EC,$F7,$48,$87,$54,$EA,$33,$A0,$8D,$33,$4A,$44,$51; 1344
		dc.b $EE,$1E,$83,$83,$BF,$AE,$E1,$D9,$3B,$50,$6E,$F5,$76,$1C,$C5,$1E,$7C,$C7,$14,$E7, $E,$56,$45,$B8,$60,$30,$AA,$89,$52,$4B,$43,$E2,$30,$8E,$FA,$2E,$47,$42,$9E,$6F,$F3,$7C,$5D,$8C,  8,$B1,$F3,$7F,$B3,$79,$FA,  6,$3F,$5A,$F3,$B8,$A6,$65,$6A,$4A,$9D,$39,$FE,$52; 1408
		dc.b $11,$83,$1F,$EB,$DE,$B0,$3D,$20,$63,$D9,$20,$4C,$F7,$32,$18,$CE,$F3,$D6,$A3,$3C,$5D,$DD, $C,$33,$AF,$99,$83,$75,$FA,$3A,$F9,$9A,$3A,$F2,$D1,$D7,$CF,$F5,$A6,$D7,$B8,$6C,$5B,$3E,$46,$E4,$D8,$B6,$91,$C2,$2E,$7C,$44,$5A,$34,$7C,$1C,$B1,$6A,$3D,$DB,$D5,$B9,$A4; 1472
		dc.b $12, $A,$39,$CE,$4F,$72,$42,$41,$82,$89,$43,$1E,$81,$A0,$C9,$21,$AD,$E8,$A1,$BB, $F,$78,$AB,$B7,$50,$EB,$D3,$CB,$A5,$86,$62,$C5,$2D,$D9,$EE,$91, $E,$A9,$D4,$67,$41,$1A,$66,$94,$88,$A3,$DC,$3D,  7,  7,  8,$EF,$88,$70,$81,$A1,$C2,$83,$FA,$29,$1F,$E6,$73,$E2; 1536
		dc.b $9F,$A7,$E4,$68,$B3,$C2,$AA,$25,$49,$2D, $F,$88,$C2,$92,$85,$15,$1C,$1C, $E,$81,$C1,$D3,$76,$51,$4F,$68,$3D,$C4,$48,$ED,$3D,$B1,$6F,$5F,$CC,$7F,$EB,$73,$B8,$A6,$65,$6A,$4A,$9D,$39,$FE,$52,$11,$83,$1F,$EB,$DE,$B0,$3D,$20,$63,$F9,$82,$18,$B9,$19,$EE,$64,$31; 1600
		dc.b $9D,$E7,$AD,$5C,$1D,$8B,$83,$AF,  6,$18,$66,$2F,  6,$3D,$A7,$E9,$C1,$D7,$A5,$88,$B2,$D9,$DF,$AD,$36,$BE,$67,$89,$CC,$DE,$64,$2C,$E8,$47,$28,$B4,$67,$9A,$C5,$62,$F7,$6F,$56,$54,$82,$41,$42,$CE,$59,$42,$41,$82,$89,$43,$1E,$81,$A0,$C9,$21,$AD,$E8,$A1,$BB, $F; 1664
		dc.b $78,$AC,$78,  7,$5B,$7B,$5B,$31,$E0,$66,$5C,$BF,$2B,$E3,$F2,$BC,$81,$CC,$DE,$68,$69,$D7,$94,$4F,$95,$79,$23,$A0,$1C,$1C,$FF,$53,$8F,$ED,$E2,$22,$73,$38,$9E,$90,$FE,$EB,$97, $A,$7E,$98,$72,$45,$7F,$2B,$AA,$A2,$92,$A2,$C8,$F8,$8C,$29,$BC,$2E,$4E,$7E,$65,$3F; 1728
		dc.b $37,$FB,$26,$A1,$D3,$B6,$2E,$BA,$F9,$B9,$1C,$F7,$4D,$B3,$3C,$8C,$59,$30,$39,$D8,$8E,$66,$94,$95,$3A,$73,$FC,$A4,$23,  6,$3F,$D7,$BD,$60,$7A,$40,$F4,$81,$7F,$7D,$3F,$A3,$AD,$7B,$64,$E1,$D8,$18,$61,$98,$BC,$1C,$DD,$3B,$23,$AF,$79,$E4,$65,$A0; 1792
Nem_CPZ_ProtoBoss:dc.b $80,$6F,$80,  4,	 5,$14,	 8,$24,	 7,$35,$18,$46,$2F,$55,$16,$66,$33,$72,	 0,$81,	 4,  6,$17,$6B,$82,  7,$70,$83,	 6,$34,$18,$EF,$84,  7,$73,$85,	 7,$72,$86,  5,$14,$18,$F3,$87,	 6,$36,$18,$F4,$27,$76,$88,  4,	 4,$15,$13,$27,$74,$68,$EE,$77,$75,$89,	 5,$12;	0
					; DATA XREF: ROM:0001C290o
		dc.b $17,$6A,$8A,  8,$F1,$8B,  7,$6F,$18,$F2,$8C,  7,$71,$18,$F6,$8D,  6,$32,$18,$F7,$8E,  6,$2E,$18,$F0,$8F,  5,$15,$17,$6E,$28,$F5,$FF,  0,$2D,$AA,$F9,$6E,$C4,$AE,$BE,$4C,$BA,$F1,$C3,$D6,$FF,$D1,$63,$F6,$6F,$FC,$90,  0,$3F,$F3,$FC,$E6,$BB,$5A,$FA,$AD,$78,$35; 64
		dc.b $63,$F4,$4B,$55,$E0,$DF,$B3,$FC,$96,$9F,$C9,$3B,$ED,$FA,$90,  0,$2F,$FF,$CF,$FC,$7F,$E4,$7F,$CF,$FF,$20,  0,  1,$FA,$9B,$DB,$BF,$53,$FE,$89,$B4,$93,$F0,$5A,$AE,$92,$7E,$15,$E0,$BA,$4B,$48,$AE,$75,  3,$12,$F2,$D5,$E5,$AB,$7C,$B6,$D5,$BF,$57,$8A,$52,$7E,$36; 128
		dc.b $D5,$76,$25,$E0,$CF,$26,$DC,$C4,$49,$7F,$43,$72,$CB,$F4,$7E, $B,$25,$FD,$1F,$84,$7E,$FB,$D5,$7F,$DD,$AD,$52,$2E,$5D,$CC,$F5,$5D,$CC,$EC,$BA,$D3,$34,$BF,$A3,$DC,$BF,$B8,$8A,$AA,$5E,$CA,$DF,$B8,$FD,$4A,$EB,$E9,$E4,$3C,$88,$D2,$F9,$46,$9F,$C9,$7F,$E7,$DD,$AE; 192
		dc.b $F6,$DD,$AE,$35,$EE, $A,$E6,$D9,$A3,$46,$BD,$CA,$D1,$AF,$76,$2E,$6B,$5D,$57,$BB,$75,$CB,$AD,$6E,$DD,$E1,$AC,  0,$91,$9F, $A,$EB,$DD,$F9,$25,$E1,$5B,$FB,$DA,$ED,$7D,$F8,$FD,$CE,$B5,$D3,$51,$28,$E1,$FA,$38,$90,  5,$7F,$25,$A2,$FE,$86,$BF,$92,$D1,$7F,$42,$BA; 256
		dc.b $71,$84,$68,$D2,$B0,$92,$56,$D1,$53,$44,$54,$6E,$F4,$D3,$A0,  0,$1C,$3B,$D7,$47,$D2,$D2,$BF,$52,$C9,$7F,$47,$FA,$A5,$97,$F6,$D7,$57,$A6,$AD,$F1,$C3,$5A,$F0,$D0,$23,$4F,$3A,$8F,$24,$8A,$64,$F3,$8A,$22,$CB,$BF,$F5,$70,$9F,$B2,$C5,$7C,$2B,$C1,$EB,$E1,$5E,$10; 320
		dc.b $D2,$FD,$12,$A4,$37,$EC,$D7,$F3,$5F,$D9,$F2,$95,$FE,$4D,$7F,$78,  6,$73,$D4,$F3,$F0,$69,$42,$5C,$D0,$92,$76,$B7,$AE,$A7,$FC,$96,$A6,$84,$F2,$93,$2C,$95,$15,$19,$65,$17,$6D,$EB,$FA,$65,$BB,$5D,$BD,$1A,$19,$50,  0,$2C,$DF,$A6,$68,$D7,$E0,$CE,$C1,$76,$BB,$BD; 384
		dc.b $6E,$EB,$B7,$E8,$69,$E9,$40,$1A,$96,$AA,$FA,$61,$2E,$FD, $C,$32,$B7,$F3,$F6,$A5,$6E,$DD,$75,$68,$D4,$DB,$CF,$6A,$7A,  0,  1,$9F,$9F,$69,$EC,$D7,$7A,$C5,$42,$EF,$F0,$F5,$FF,$88,  1,$FF,$7F,$FB,$7F,$1B,$55,$3D,$17,$6A,$A2,$D6,$3D,$3A,$3F,$69,$BF,$69,$BF,$69; 448
		dc.b $BF,$69,$BF,$69,$BF,$69,$BF,$69,$AE,$D4,$6A,$36,$CE,$CF,$77,$E4,$83,$C3,$D5,$7B,$FA,$FE,$86,$9A,$E4,$91,$DA,$FE,$C9,$8E,$C9,$8E,$C9,$8E,$D7,$47,$A2,$EC,$D7,$37,$1F,$DB,$6D,$24,$E5,$FE,$10,  0,  1,$7A,$5F,$FA,$29,  6,$3F,$47,$7F,$49,$63,$F4,$20,  0,  5,$E8; 512
		dc.b $DD,$1A,$75,$A4,$AE,$AD,$25,$76,$E5,$6D,$CB,$73,$49,$2E,$69,$23,$49,$BF,$52,$DA,$80,$46,$E8,$D3,$AD,$25,$75,$69,$2B,$B7,$2B,$6E,$5B,$9A,$49,$73,$49,$1A,$4D,$FA,$96,$D4,  2,$37,$46,$9D,$69,$2B,$AB,$49,$5D,$B9,$5B,$72,$DC,$D2,$4B,$9A,$48,$D2,$6F,$D4,$B6,$A2; 576
		dc.b $5E,$34,$97,$8A,$6C,$C1,$2D,$FB,$26,$F9,$51,$A5,$BF,$64,$DF,$2A,$30,$4B,$7E,$C9,$BE,$54,$65,$FE,$8C,$AD,$2D,$2D,$2D,$33,$96,$72,$B4,$9A,$D2,$6C,$E5,$E3,$49,$78,$A6,$CC,$BC,$63,$45,$AD,$1B,$8C,$68,$B5,$A3,$6F,$D9,$37,$CA,$8C,$B2,$D9,$37,$CA,$8C,$B7,$46,$9C; 640
		dc.b $2B,$46,$BA,$34,$E1,$5A,$34,$B6,$4D,$F2,$A3,$2F,$F0,$53,$F3,$58,$96,$8B,$C4,$C4,$BC,$B6,$C4,$BC,$B6,$31,$2E,$FE,$37,$EA,$DF,$49,$78,$CF,$6D,$75,$5D,$38,$2D,$68,$D1,$A2,$F0,$79,$FE,$AE,$54,$69,$EF,$FD,$4D,$18,$AB,$D6,$54,$6D,$93,$7C,$A9,$AD,$5B,$DB,$25,$F6; 704
		dc.b $A0,$BE,$FC,$5B,$DA,$80,  7,$9F,$B6,$5C,$7D,$CF,$3F,$6C,$B8,$FB,$80,$1F,$E5,$17,$FC,$A0,  0,$19,$FB,$16,$E2,$D9,$E4,$62,$9F,$AC,$8F,$38,$D7,$E6,$BE,$52,$9F,$8A,$E9,$37,$6D,$2C,$99,$FF,$D4,$FD,$66,$FC,$9D,$B5,$2A,$65,  8,$BE,$16,$BA,$10,$23,$FA,$A0,$BC,$6D; 768
		dc.b $C6,$D4,$F1,$6C,$51,$77,$98,$A2,$EF,$BF,$F3,$56,$D5,$D3,$8F,$BA,$2A,$43,$5F,$3C,$5C,$67,$40,$7E,$BF,$F5,$E5,$9A,$72,$33,$4E,$41,$7C,$ED,$FA,$55,$F7,$FC,$AB,$E4,$C9,$7B,$4A,$FE,$39,$EB,$FD,$A3,$F1,$B6,$5F,$C1,$11,$BF,$2B,$93,$E4,$BC,$D5,$39,$65,$1F,$94,$74; 832
		dc.b $CB,$34,$FF,$A6,$7F,$F1,$31,$FA,$DF,$CA,$C6,$4B,$37,$E2,$C9,$8E,$2B,$22,$FD,$65,$BD,$BF,$A9,$45,$FC,$A7,$EC,$6A,$FC,$9E,$5C,$DF,$94,$73,$2F,$E4, $B,$FE,$45,$FF,$4C,$EF,$9A,$CD,$67,$7A,  0,$63,$AC,$F1,$32,$12,$10,$BE,$61,$8F,$EC,$44,$E2,$60,$E9,  8,$18,$48; 896
		dc.b $4C,$24,$26,$12,$10,$C2,$42,  3,$A6,$10,  8,$4C,$20,$E9,  9,$7C,$C2,$D3,$B4,$CB,$4E,$D3,$2D,$3B,$D2,$11,$D3,  8,$A9,$64,$12,$C8,$2A,$61,$1F,$F7,  6,$3F,$70,$E9,$84,$54,$B2,  0,$96,$45,$4C,$23,$FE,$E0, $B,$50,$CD,$96,$97,$B1,$45,$A6,$6C,$F4,$86,$B3,$59,$96; 960
		dc.b $B6,$AD,$EC,$15,$8A,$8F,$51,$EB,$9D,$40,$1D,  0,$41,  4,$10, $C,$53,$3A,$5A,$97,$D1,$69,$9D, $C,$51,$76,$B3,$45,$22,$8E,$CB,$E6,$30,$CB,$B9,$B3,$AB,$3D,$70,$D5,$BE,$B1,$5B,$EA,$2D,$4C,$EA,$16,$AE,$75,  0,$12,$C8,$BF,$D8,  7,$A0,$B4,$C5,$22,$97,$B2,$D0,$1E; 1024
		dc.b $8C,$2D,$30,$C1,$55,$6C,$54,$5D,$C0,$5C,  0,$19,$A0,$59,$2C,$96,$4B,$20,$A8,$61,$1D,  1,  5,$4B,$23,$A0,  1,$7E,$4B,$FB,$82,$71,$D1,$F9, $E,$96,$47,$48,$47,$9D,$F3,$BE,$77,$CE,$C8,$18,$40,$74,$2C,$8E,$8A,$8F,$37,$40,$B7,$BB,$FE,$B6,$32,$5C,$B1,$CD,$F9,$BF; 1088
		dc.b $37,$E7,$8C,$97,$27,$E5,$93,$FE,$B5,$50,$10,$41,  1,  9,$90,$83,$A0,$59,$22,$64,$25,$90,$C6,$46,$41,$9E,$56,$C8,  0, $C,$FF,$B0, $A,$97,$A0,$B9,$17,$CE,$3A,$3F,$21,$D2,$C8,$E9,  8,$F3,$BE,$77,$CE,$F9,$D9,  4,$74,$59,$AF,$45,$4C,$FD,$DF,$F5,$B1,$92,$E5,$8E; 1152
		dc.b $6F,$CD,$F9,$BF,$3C,$64,$B9,$3F,$2C,$9F,$F5,$AA,$80,$82,  8,  9,  9,$7C,$EF,$47,$47,$48,$C9,$52,$11,$F2,$54,$11,$50,$8C,$AD,$90,$59,  0, $E,$A0,  0,$21,$7A,$42,$42,$2A,$10,$8B,$3C,$4C,$59,$E6,$91,$FC,$80,  8,$E5,$7C,$ED,$38,$E8,$FC,$95,  9,$90,$96,$9D,$F3; 1216
		dc.b $BE,$77,$CE,$C8,$1F,$C8,$59,$DF,$CB,$27,$FD,$6C,$64,$B9,$63,$9B,$F3,$7E,$6F,$CF,$19,$2E,$4F,$CB,$27,$FD,$6A,$A0,$82,  8,  8,$13,$26,$25,$F9,$42,$1F,$B8,$32,  0,  0,$CF,$A8,  4,$C2,$64,$C4,$10,  0,$EA,  0,$2F,$70,$BD,$C0,  7,$53,$A8,  1,$DC,$2F,$70,$11,$DC; 1280
		dc.b   2,$F7,  1,$D4, $E,$A0,$77,  0,$BD,$C4,$77,  0, $B,$DC,$75,  0,$3A,$9D,$C0,  2,$A5,$90,  0,  4,  0,  0,$B2,  0,  0,  0; 1344
Nem_BigExplosion:dc.b	0,$64,$80,  4,	5,$15,$12,$25,$15,$35,$18,$46,$35,$57,$6E,$68,$F6,$75,$13,$86,	6,$36,$17,$73,$27,$78,$37,$76,$48,$F7,$57,$7A,$76,$34,$8A,  6,$33,$17,$75,$8C,	3,  0,$14,  6,$25,$16,$37,$72,$8D,  3,	1,$14,	7,$26,$32,$36,$38,$47,$6F,$57,$77,$8E,	4,  8; 0
		dc.b $15,$17,$27,$79,$8F,  4,  4,$15,$14,$27,$74,$FF,$D6,$98,$84,$8E,$72,$BF,$65,$4F,$49,$FE,$64,$FF,$32,$7F,$99,$3F,$CC,$91,$E9,$23,$D2,$47,$AA,$47,$BA,$A7,$9F,$12,$4F,$E7,$56,$9E,$75,$FD,$FF,$B6,$D4,$BD,$76,$8E,$74,$97,$BA,$2C,$7B,$C2,$47,$A8,$5F,$50,$BE,$A1; 64
		dc.b $7D,$42,$FA,$84,$F7,$BA,$7B,$C2,$2F,$6B,$A2,$FF,$39,$25,$E6,$95,$A4,$E7,$39,$CE,$73,$C4,$67,$AF,$5D,$B1,$DA,$BE,$F2,$F5,$2F,$52,$CF,$DE,$51,$EF,$28,$CF,$B4,$A3,$AF,$89,$5F,$B5,$63,$B4,$82,$76,$50,$91,$D9,$52,$33,$EC,$A2,$3A,$F8,$92,$75,$DA,$36,$92,$79,$EB; 128
		dc.b $2A,$46,$77,$90,$A4,$24,$4A,$D4,$8A,$DA,$9B,$82,$7B,  9,$CE,$6B,$13,$C4,$63,$F7,$57,$5F,$5D,$7D,$67,$A6,$9A,$69,$A6,$9A,$69,$A6,$9A,$69,$A6,$9A,$69,$A6,$9A,$7F,$9A,$3F,$CD,$1D,$63,$3D,$A3,$6A,$42,$7E,$FB,$92,$42,$42,$F2,$E9,$8E,$53,$C6,$DA,$ED,$9A,$ED,$D6; 192
		dc.b $17,$9E,$7E,$23,$4C,$FD,$67,$1A,$69,$A6,$9A,$69,$A6,$9A,$69,$A6,$9A,$69,$A6,$9A,$69,$A6,$9A,$6D,$9E,$DD,$79,$E7,$1F,$AA,$FF,$F4,$2A,$47,$4F,$E6,$23,$4E,$75,$CF,$DB,$6C,$F7,$6D,$9E,$ED,$AF,$AF,$8C,$F1,$E2,$31,$E3,$38,$AF,$8E,$B5,$ED,$15,$ED,$D6,$5E,$3F,$55; 256
		dc.b $2E,$DD,$65,$DB,$38,$97,$6B,$85,$E7,$9C,$74,$5E,$C8,$11,$7D,$D0,$27,$A4,$1E,$F0,$8B,$EF,  8,$BD,$AE,$8B,$DA,$12,$5E,$3A,$A4,$BB,$52,$5E,$21,  4,$B3,$BD,$2B,$14,$6A,$A3,$6A,$27,$39,$CF,$72,$6A,$90,$30,$D1,$B5,$50,$5D,$17,$94,$78,$E5,$4F,$EE,$24,$7F,$72,$2C; 320
		dc.b $9F,$EC,$4B,$50,$AA,$67,$D0,$1A,$6D,$9A,  7,$4C,$F6,$CE,  2,  4,$E7,$9D,$FA,$78,$CE,$10,$53,$B5,$16,$9C,$FA,$D9,  7,$3B,$DB,$B4,  3,$EF,  0,$8C,$F9,$DD,$48,$CE,$39,$C2,$90,$9F,$BE,$91,  9,$74,$90,$34,$84,$AB,$74,$D4,$53,$70,$33,$9C,$E7,$4B,$E7,$58,$E7,$D7; 384
		dc.b $CF,$3C,$FB,$46,$DD,$52,$3D,$20,$F2,$DC,$D2,$13,$98,$46,$FD,$52,$33,$8E,$A0,$82,$C7,$63,$FD,$CC,$D9,$F9,$6F,$64, $E,$8D,  8,$C5,$A9,$1C,$A9,$19,$F2,$48,$CF,$64,$B2,$47,$3B,$25,$F3,$8B,$52,$FF,$DC,$A0,$8F,$EE,$51,$9E,$C8,$11,$DA,$96,$2D,$41,$93,$74,$71,$40; 448
		dc.b $81,$1D,$90,$16,$7F,$F6,$65,$86,$79,$CE,$6B,$FB,$E0,$8B,$7E,$D0,$3D,$FC,$A6,$DF,$DE,$F1,$D5,$92,$3A,$ED, $C,$99,$F8,$8D,$39,$8F,$F3,  8,$ED,$68,$E7,$62,$22,$83,$21,$74,$6C,$B3,$DA,$10,$10,$79,$C5,$2D,$B7,$58,$41,  2,$3F,$54,$20,$25,$FA,$FE,$F9,$2F,$D6,$33; 512
		dc.b $81,$7E,$B1,$9E,$CD,$1F,$AA,$DA,$12,$F9,$ED,$D7,$CF,$8C,$FC,$8E,$79,$DC,$46,$63,$3F,$21,$2E,$11,$91,$90,$25,$9E,$83,$20,$6D,$39,$CE,$75,$1E,$CC,$9A,$A3,$26,$11,$90,$57,$F7,$ED,$24,$FE,$64,$9A,$80,$C8,$74, $E,$B6,$36,$53,$6A,$33,$8F,$DF,$87,$1D,  1,$E4,$83; 576
		dc.b $7D,$A4,$11,$9E,$56,$47,$94,$32,$11,$28,$14,$69,$40,$4B,$4A,$28,$1E,$50,$8C,$6A,$10,$1C,$58,$E2,$83,$56,$33,$9C,$E7,$39,$E0,$EB,$96,$38,$95,$9C,$2F,$27,$4E,$4E,$10,$10,$EC,$8B,$C0,$48,$5E,$12,$F6,$7E,$96,$36,$46,$53,$C9,$5D,$AE,$15,$C5,$F6, $A,$42,$47,$38; 640
		dc.b $51,$48,$DA,$EA,$13,$C8,$2A,$C9, $C,$64,$29,  0,$AB,$25,$DD,$4B,$26,$4A,$E1,$32,$5E,$E2,$5C,$35,$47,$1A,$BC,$CD,$7F,$99,$8E,$53,$9F,$FF,$5F,$F9,$8F,$D2,$13,$F9,$89,$74,$FE,$62,$6D,$14,$B2,$73,$F2,$90,$9C,$EF,$CE,$FE,$28,$3F,$7D,$46,$A5,$EC,$9F,$BE,$64,$BF; 704
		dc.b $38,$64,$8F,$10,$42,$47,$38,  5,$93,$CB,$16,$48,$B1,$6A,$32,$3F,$2B,$F0,$D7,$70,$90,$2E,$E1,$3C,$A5,$92,$F4,  8,$29,$14,  6,$D4, $F,$FE,$C7,$41,$D1,$88,$A3,$11,$BC,$2E,$4C,$FC,$B8,$56,$9C,$EA,$D9,$29,$14,$2C,$69,$70,$59,$3C,$A0,$7A,$5F,$F7,$FE,$76,$B5,$3C; 768
		dc.b $51,$91,$B6,$63,$CB,$61,$BD,$6C,$43,$B7,$FB,$41,$6D,$ED,$46,$71,$1B,$46,$6C,$6F,$CF,$34,$6B,$FE,$A9,$2C,$91,$9D,$1B,$F7,$E1,  1,$B2,$33,$D8,$B3,$82,  8,$CB,$96,$41,$39,$65,$6D,$E3,$84,$1B,$D1,$9F,$F7,$E3,$2E,$83,$8B,$70,$BF,$ED,$9C,$DB,$75, $E,$BD,  8,$AD; 832
		dc.b   5,$2B,$14,  4,$4B,$68,$A3,$CB,$6B,$D0,$CB,$6B,$83,$5D,$A0,$65,$2B,$D1,$E5,$D1,$9D,$4F,$EF,$DD,$4F,$40,$A5,$7F,$98,$EA,$41,$E4,$A4,$64, $A,$96,$70,$54,$A6,$40,$82,$1D,$88,$2D,$C0,$23,$7B,$10,$42,$F0,$DB,$ED,$90,$71,$C2,$FF,$B5,$7B,$CB,$78,$93,$8D,$4C,$E7; 896
		dc.b $B8,$EA,$C6,$5D,$E5,$BC,$2B,$8E,$15,$F9,$15,$22,$97,$2A,$D4,$B8,$52,$D4,$80,$A5,$45,$20,$48,$8A,  3,$51, $C,$64,$12,  3,$A8,$A4,  7,$5B,$51,$D4,$B5,$1D,$5E,$CE,$AF,$67,$57,$6C,$97,$2B,$1A,$EF,$AE,$FA,$EF,$A8,$E3, $C,$F8,$B1,$AB,$C8,$E0,$CE,$73,$9D,$4A,$F1; 960
		dc.b $22,$3B,$DB,$24,$B6,$49,$70,$EC,$97,$62,$DD,$1B,$2E,$9D,$DB,$78,$EE,$3F,$DA,$1D,$1C,$11,$BC,$70,$CE,$1C,$38,$3F,$DC,$23,$A4,$20,$23,$F9,$C2,$97,$A4, $F,$DF,$D8,$FF,$30,$8C,$86,$43,$BB,$6F,$B6,$41,$DB,$FF,$BB,$DB,$FF,$B9,$37, $A,$E3,$8A,$82,$1E,$75,$22,$BD; 1024
		dc.b $E5,$FE,$D0,$E3,$7C,$23,$71,$74,$6C,$87,$FB,$58,$B1,$E4,$41,$B3,$B2, $A,$10,$5B,$A0,$22,$12,$E8, $F,$F3,$90,$8F,$DF,$72,$F3,$42,$C9,$74,  8,$DD,$21, $F,$46,$A0,$84,$62,$C8,$12,$C8,$D4,$B1,  6,$8C,$EC,$81,$1C,$16,$DE,$32,$1C, $F,$FE,$FF,$F7,$81,$FF,$DF,$FE; 1088
		dc.b $F7,$19,$57,$89,$CE,$40,$EE,$CB,$50,$ED,$5D,$F5,$C8,$1A,$B7,  1,$51,$88,$75,$A0,$21,$D5,  3,$B1,$56,$76,$C9,  8,$A3,$A0,$21,$32,$43,$D3,$2B,$21,$65,$1B,$C2,$82,$32,  5,$BB,$82,$37,$B7,$70,$47,$71,$BD,$41,$1C,$29,$1C,$4B,$BC,$B8,$53,$2C,$94,$D5,$D5,$EB,$C4; 1152
		dc.b $E7,$39,$C9,$B5,$21,$30,$45,$24,$E3,$A2,$B8,$E8,$15,$C2,$38,$52,$1C,$10,$A7,$95,$4B,$10,$A6,$4C,$42,$99,$38,$DC,$55,$14,$48,$85, $A,$24,$42,$85,$32,$2C,$6A,$E1,$EA,$E0,$E0,$AB,$E0,$AB,$A8,$97,$18,$32,$21,$24,$42,$91,$45,$2C,$42,$A4,$8F,$F3,$25,$F8,$93,$64; 1216
		dc.b $AB,$DB,$52,$DB,$9E,$73,$9D,$B2,$95,$B2,$52,$80,$8C,$27,$FB,$28,$30,$28,$C6,$A1,$2D,$86,$4C,$1B,$6A,$43,$E3,$8A,$95,$63,$52,$AC,$6B,$90,$35,  5,$5E,$A1,$5F, $C,$BB,$D4,$15,$EE,$37,$3F,$B1,$D4,$3E,$E3,$F8,$9F,$60,$A2,$A9,$86,$5F,$E6,$54,$87,$A8,$7E,$52,$FC; 1280
		dc.b $4B,$FF,$31,$7B,$89,$77,$DC,$F2,$DE,$BF,$DC,$A6,$FF,$FE,$16,$AB,$38,$93,$10,$45,$59,$C6,$18,$A6,$19,$E4,$54,$B5,$4A,$95,$69,$15,$70,$77,$3E,$AE,$31,$90,$C3,$85,$38,$B6,$AD,$8B,$4A,$D8,$13,$91,$C1,$D4,$A9,$C3,$A9,$A8,$5C,$AB,$67,$5E,$52,$2A,$CA,$32,$FE,$61; 1344
		dc.b $FE,$E4,$86,$5C,$88,$CA,$7A,$9F,$67,$DC,$33,$E2,$4C,$64,$64,$C6,$4E,$AC,$64,$55,$DA,$45,$72,$15,$2B,$67,$A8,$41,$94,$BA,$58,$A8,$FD,$F8,$2B,$6A,$29,$5B,$20,$53,$20,$AC,$EA,$25,$62,$A6,$45,$8A,$BA,$F1,$2E,$EB,$BE,$BB,$D4,$AF,$FB,$54,$77,$5F,$F6,$AF,$FB,$57; 1408
		dc.b $BD,$46,$55,$70,$70,$5B,$51,$39,$CE,$7B,$8E,$AE,$35,$6D,$4F,$B0,$53,$B8,$E1,$8D,$4A,$9D,$48,$2A,$54,$82,$D2,$2A,$14,$83,$AB,$89,$19,$38,$91,$DC,$30,$24,$27,$21,$39,$E0,$19,$E0,$A8,$A9,$A8,$A9,$12,$15,$2D,$20,$A1,$58,$AB,$AF, $C,$64,$EC,$A2,$A3,$2F,$66,$9C; 1472
		dc.b $F7,$15,$3E,$C3,$70,$9E,$A6,$7A,$99,$CE,$73,$9C,$F5,$12,$18,$69,$CD,$44,$E6,$A2,$72,$2A,$67,$3D,$44,$D4,$61,$A4,$14,$A8,$91,$AB,$A9,$67,$50,$A1,$E4,$1E,$AF,$5F,$F6,$B3,$EE,$2A,$77,  5,$79,  9,$15,$1E,$C2,$42,$A2,$7A,$89,$CE,$73,$13,$9C,$E7,$39,$CE,$7B,$8C; 1536
		dc.b $E6,$A2,$73,$57,$12,  4,$19, $C,$15,$63,$8B,$49,$8F,$25,$75,$32,$76,$33,$99,$F6,  7,$50,$A0,$EE,$6F,$60,$70,$CA,$F8,$CB,$73,$6A,$67,$51,$A8,$C0,$91,$13,$1E,$C7,$73,$E0,$48,$D5,$B8,$C1,$53,$B8,$3E,$A0,$C8,$C8,$8D,$CC,$A5,$4C,$99,$EA,$58,$E0,$AB,$D5,$B2,$5E; 1600
		dc.b $F2,$70,$A7, $D,$EC,$77,$3E,$A0; 1664
Nem_BossShipBoost:dc.b	 0,  8,$80,  5,$1C,$15,$16,$23,	 2,$34,	 6,$45,$1B,$66,$3E,$73,	 0,$86,$15,$1E,$8C,  4,	 9,$15,$1A,$23,	 1,$35,$1D,$8E,	 4, $A,$14, $C,$8F,  4,	 7,$14,	 8,$25,$17,$FF,	 0, $D,$95,$FC,$F5,$FB,$E7,$6F,$63,$7B,$17,$EF,$9D,$7F,$3F,$64,	 0,  0,	 2,$7E,$EB,$47;	0
					; DATA XREF: ROM:0001C296o
		dc.b $6D,$57,$3C,$AB,$9E,$47,$6D,$D6,$90,  0,  0,$31,$69,$BA,$97,$FD,$72,$7F,$D3,$52,$FE,$33,$7E,$D9,$BF,$6C,$BF,$8C,$9E,$BD,$56,$D3,$FE,$B9,$A6,$FB,$20,  1,$3F,$3E,$B7,  5,$54,$1B,$64,$1E,$7E,$1B,$2F,$AF,$C3,$65,$F5,$90,$79,$50,$6D,  5,$3E,$B7,$20,$7C; 64
Nem_Smoke:	dc.b   0,$10,$80,  4,  9,$14, $A,$25,$1C,$34, $C,$46,$3A,$55,$1A,$68,$FB,$73,  1,$86,  6,$3B,$87,  4,  8,$15,$1B,$28,$FA,$88,  3,  2,$14, $B,$26,$3C,$8A,  3,  0,$13,  3,$26,$3D,$47,$7C,$FF,$27,$4F,$9F,$BA,$54,$EC,$2A, $A,$3B,$85,$2E,$E2,$C5,$EE,$DA,$8E,$E1,  4; 0
					; DATA XREF: ROM:0001C29Co
		dc.b $14,$7E,$5B,$C1,$7F,$C7,$7F,$D8,$9F,$6D,$D7,$C5,$8D,$12,$67,$C7,$C8,$EE,$2C,$54,$77,$B4,$E4,$2D,$A7,$21,$6D,$39,$5F,$48,$56,$FB,$DA,$13,$1F,$A6,$84,$FF,$8E,$9F,$F6,$3E,$2F,$65,$7F,$6A,$97,$EE,$89,$38,$37,$83,$CE,$9C,$DE,$82,$AF,$70,$79,$1C, $B,$F6,$F4,$17; 64
		dc.b $ED,$E8,$2D,$DD,$3B, $B,$9F,$31,$C8,$5A,$64,$D2,$FA,$E0,$5F,$4A,$9A,$8B,$E0,$B7,$8F,$A1,$4A,$34,$20,$F3,$D5,$14,$36,$B6,$24,$6F,$C1,$22,$FD,$E7,$C2,$49,$E8,$2F,$B1,$80,$F0,$2A,$1A,$10,$86,  5,  3,  2,$12,$B7,$D0,$51,$4E,$5F,$19,$24,$E9,$D0,$A0,$A3,$A1, $A; 128
		dc.b $5E,$84,$60,$24,$E8,$42,$C1,$71,$42,$99,$94,$34,$F0,$12,$4C,$82,$49,$E9,$E8,$68,$1E,  3,$80,$92,$4F,$42,$47,$D8,$32,  9,$3A,  7,$40,$FD,$83,$20,$9E,  0; 192
Nem_EHZ_Boss:	dc.b $80,$80,$80,  4,  4,$14,  6,$25,$11,$35,$13,$45,$16,$55,$14,$66,$37,$73,  0,$81,  3,  1,$16,$36,$27,$73,$38,$F2,$82,  6,$35,$18,$F4,$83,  5,$12,$17,$72,$28,$EB,$84,  8,$F0,$85,  7,$76,$86,  6,$2E,$17,$74,$87,  6,$30,$18,$EA,$88,  4,  5,$16,$33,$28,$EE,$89; 0
					; DATA XREF: ROM:0001C27Eo
					; ROM:0001C2A2o
		dc.b   4,  7,$16,$31,$28,$EF,$8A,  6,$32,$8B,  6,$2F,$18,$F6,$8C,  6,$34,$8D,  7,$70,$8E,  5,$15,$18,$F3,$8F,  5,$10,$17,$71,$28,$F1,$FF,  0,$6F,$A5,$34,$A6,$94,$D1,$B2,$8E,$8D,$94,$74,$6C,$A3,$A3,$64,$D9,$69,$CF,$F5,$7B,$7F,$70,$68,$37,$5B,$67,$6B,$BC,$E7,$FB; 64
		dc.b $68,$70,$D1,$21,$1C,$2D,$9B,$70,$C7,$33,$BC,$37,$85,$8B,$D6,$26,$E7,$30,$9C,$13,$38,$BC,$EE,$8A,$FE,$9A,$B1,$74,$C2,$BB,$E2,$CF,$5C,$18,$86,$7C,$BF,$5B,$A3,$69,$FC,$1F,$CE,$27,$EA,$A3,$F9,$A6,$C9,$B2,$8E,$54,$CA,$99,$53,$2A,$64,  5,$36,$B1,$4D,$36,$63,$1D; 128
		dc.b $13,$68,$AA,$69,$45, $B,$A1,$11,$83,$2F,  2,$1B,$8C,$78,$32,$96,$54,$28,$AC,$B0,$5E,  5,$53,$38,$F0,$7A,$A7,$15,$45,$65,$2C,$B0,$2B,$E6,$A9,  3,$9E,$FE,$79,$A1,$45,$89,$4A,$A1,$AF,$7A,$2D,$67,$FB,$8E,$C8,$E9,$FA,$EB,$93,$F2,$8F,$C5,$20,$5B,$4C,$78,$A6,$C9; 192
		dc.b $F9,$C7,$34,$D3,  6,$33,$D0,$21,$14,$2D,$A7,$E6,$BB,$68,$9F,$9C,$BB,$68,$3E,$8C,$50,$86,$D1,$8A,$18,$FE,$72,$E3,$58,$3C,$74,$CB,$F2,$BA, $D,$CD, $D, $D, $D, $C,$EE,$43,$6F, $B,$BF,$AF,$5C,$BF,$A9,$72,$56,$5D,$BB,$EA,$DC,$2F,$CA,$78,$37, $C,$2F,$62,$F1,$D0; 256
		dc.b $AD,$CE,$AE,$AC,$71,$D9,$51,$E2,$EA,$D7,$78,$DC,$E9,$83,$14,$82,$2E,  9,$B4,$10,$B6,$D0,$42,$99,$C4,$B2,$A6,$17,$1B,$7E,$71,$77,$D3,$C1,$77,$D3,$C3,$3E,$D6,$D1,$1F,$B5,$B4,$6E,$C9,$CD,$B6,$DF,$C0,$CD,$7C, $B,$6A,$DE,  6,$32,$DC,$B1,$B1,$D0,$47,$54,$C1,$16; 320
		dc.b $32,$C2,$ED,$23,$85,$DE, $C,$BD,$5F,$94,$D7,$45,$4F,$CA,$1D,$74,$4C,$F6,$96,$91,$CE,$5A,$26,$7D,$2F,$D1,$15,$21,$D3,$48,$D7,$F4,$F3,$82,$71,$99,$7C,$E2,$A8,$71,$9E,$78,$DD,$D5,$77,$ED,$E1,$E7, $F,$D7,$17,$DD,$5C,$3D,$BB,$9E,$30,$59,$F7,$8F,$CA,$DD,$5C,$38; 384
		dc.b $E1,$C0,$FE,$8A,$5A,$E4,$9A,  0,  0,$FD,$E7,$E7,$53,$FD,$89,$AF,$94,$6B,$AE, $D,$B3,$43,$B7,$53,$2B,$43,$F2,$9D,$45,$DA,$A7,$C1,$1E,$AE,$D0,$7E,$CB,$C5,$DB, $E,$EB,$9E,$38,$47,$A3,$AA,$2B,$74,$75,$4A,$DC,$BD,$1D,$53,$CD,$3A,$3A,$B6,$7D,$1D,$51,$5B,$A3,$AC; 448
		dc.b $FA,$3A,$A7,$E9,$F6,$AC,$30,$33,$E7,$4F,$6A,$5E,$2F,$17,$75,$26,$1F,$A6,$89,$9F,$E9,$CC,$3F,$5C,$EA,$8A,$79,$6A,  0,$DF,$4B,$7E,$75,$6B, $C,$21,$55,$7A,$FF,$33,$C3,$B6,$43,$FE,$20,$7F,$DF,$F2,$BF,$D4,$6F,$E8,$FF,$E1,$3F,$D6,$B1,$FD,$E1,$8F,$EF,$7C,$23,$FB; 512
		dc.b $DC,$23,$FB,$D9,$FE,$F4,$C7,$F7,$9F,$CB,$CA,$FC,$BF,$83,  3, $F,$D5,$B7,$8B,$5E,$DE,$29,$7C,$7C,$E1,$7B,$5C,$52,$A7,$A4,$61,$53,$38,$67,$5F,$CE,$DE,$8B,$D2,$1B,$5F,$73,$F4,$C1,$BF,$34,$E9,$9B,$7E,$69,$D7,$64,$D2,$EA,$A1,$48,$69,$89,$F1,$47,$4E,$29,$CF,$8F; 576
		dc.b $38,$FE,$6B,$FB,$60,$8F,$F0,$8F,$FB,$FF,$D3,$FE,$3F,$F8,$FF,$DF,$FF,$3F,$7B,$FB,$CF,$DE,$FE,$F3,$F7,$BF,$BC,$FD,$EF,$FF,$3F,$79,$7F,$FA,$AB,$FE,$FD,$CE,$E5,$AA,$62,$61,$54,$AC, $C,$15, $C,$2B,$3F,$3C,$EB,$1E,$37,$3E,$D0,$7E,$AB,$B1,$E7,$DC,$8A,$7C,$F9,$AA; 640
		dc.b $40,$A7,$8D,$52,  6,  9,$CD, $D,$76,$89,$5E,$34,$EA,$BF,$C4,$A7,$52,$7E,$51,$16,$9E,$1A,$27,$56,$D1,$FC,$E4,$7F,$83,$A7,$F5,$D0,$FF,$53,$97,$FC,$7F,$F1,$FF,$BF,$EE,$37,$EB,$2D,$FA,$CB,$7E,$B2,$DF,$AC,$B7,$F7,$1B,$F4,$B9,$7E,$D4,$A1,$87,$F4,$61,$58,$61, $C; 704
		dc.b  $A,$A7,$54,$30,$82,$C1,$70,$9C,$23,$FB,$78,$FF,$36,  9,$DA,$90,$FE,$D3,$3A,$A3,$AA,$2B,$15,$72,$AC,$E8,$55,$EA,$97,$63,$56,$2B,$57,$6A,$B5,$C5,$6D,$73,$AD,$AE,$75,$68,  6,$B9,$D5,$20,$52,$11,$C0,$C2,$E8,$68,$D0,$30,$AA,$1F,$CE,$7E,$91,$7A,$BF,$6C,$9A,$27; 768
		dc.b $6F,$DA,$7A,$68,$B8,$F9,$4B,$F5,$7F,$C3,  0,  0,$3F,$AB,$E1,$C3,$FA,$2D, $F,$DB,$AA,$5D,$87,$F3,$F3,$B7,$EF,$F0,$86,$1C,$5B,$B7, $E,$DC,$3F,$2B,$C6,$D9,$41,$3F,$94,$9C,$5D,$51,$D6,$2E,$55,$CA,$B2,$BD,$55,$EA,$B1,$2C,$5A,$AD,$56,$A8,  9,  6,$83,$40,$21,$48; 832
		dc.b $14,$81,$4A,$BE,$CF,$B2,$D7,$FA,$29,$FF,$80,$F8,$5C,$E9,$9D,$CF,$85,$CE,$A9, $B,$9F, $B,$9D,$2B,$D4,$F8,$5C,$E9,  4,$83,$E1,$73,$A1,$75,$7C,$2E,$75,$43,$8E,$17,$3A,$67,$8E,$17,$3C,$4D,$B6,$4F,$E0,$88,$F4,$FD,$75,$DE,$69,$87,$8E,$1C,$57, $D,$D7,$F4,$F0,$C2; 896
		dc.b   9,$DB,$F5,$BD,$B8,$7E,$57,$7F,$FD,$26,$17,$2B,$6D,$83,$15,$8F,$39,$BD,$61,$58,$B9,$5E,$79,$9A,$A7,$EE, $D,$66,$A6,$A8,$59,$4D,$50,$B2,$9A,$A1,$48,$24,$2A,$85,$21,$63,  4,$2A,$66,$5A,$BC,$EA,$9D,$DF,$BE,$53,$72,$77,$39,$4B,$95,$B6,$6C,$2B,$72,$CE,$1E,$76; 960
		dc.b $54,$CE,$6E,$A8,$66,$E8,$6D,$B0,  2,$95,$34,$E2,$69,$C4,$CF,$8D,$3F,$2B,  3,$3F,$CD,$1B,$6C,  5,$31,$A7,$17,$A1,$AB,$CC,$A4,$29,  6,$31,$82,$1A,$14,$53,$12,$8A,$6C,$A6,$CA,$68,$40,  0,  0,  0,  0,  0,  0,  0, $A,$1B,$62,$B1,$C5,$39,$23,$E5,$D6,$9A,$A9,$FD; 1024
		dc.b $6E,$BC,$20,$A7,$F5,$BA,$F0,$82,$3E,$5D,$69,$AC,$71,$4E,$56,$C5,$77,$20,  0,  0,  0,  0,  0,  0, $A,$6D,$3C,$73,$6C,$66,$72,$9F,$25,$BC,$F5,$B4,$AF,$7F,$F1,$24,$23,$E2,$DE,$27,$8B,$78,$9F,$4B,$42,$57,$BF, $F,$D9,$2D,$E7,$AD,$8E,$53,$E4,$D8,$8C,$73,$A6,$C0; 1088
		dc.b   0,  0,  0,  1,$B9,$9E,$D9,$2B,$63,$9D,$F2,$C6,$6B,$7C,$AD,$2F,$69,$27,$5B,$2D,$E6,$D2,$9F,$EC,$B1,$E1,$AA,$71,$9F,$16,$E2,$85,$BC,$9B,$66,$D9,$B6,$6E,$28,$5B,$69,$F1,$6D,$71,$E1,$AA,$71,$94,$FF,$44,$B7,$9B,$5F,$24,$EB,$69,$5A,$57,$E3,$35,$BD,$B1,$CE,$F9; 1152
		dc.b $4F,$6C,$97,$72,  0,  0,  1,$FB,$90,$F3,$FD,$9B,$B4,$B7,$BF,$58,$C9,$ED,$E8,$53,$1E,$1A,$C7,$28,$FE,$FD,$21,$D0,$C7,$85, $A,$6C,$DB,  0,$DB,$31,$1B,$24,$2E,$C0,$A4,$12, $D,$5E,$29, $D,$71,$D4,$6A,$C7,$2B,$F5,$6D,$4B,$A4,$87,$EC,$DE,$8F,$1F,$DC,$80,  0,  0; 1216
		dc.b   0,  0,  0,  4,$39,$3C,$71,$5B,$CA,$3E,$5D,$77,$BA,$9F,$D6,$EB,$C1,$14,$FE,$B7,$5E, $C,$F9,$75,$DF,$74,$71,$5B,$EB,$63,$93,$80,  0,  0,  0,  0,  0,  0,  6,$EF,$33,$93,$C7,$15,$BE,$49,$8C,$56,$F2,$9F,$C3,$48,$4B,$F8,$4F,$77, $D,$CF,$F7,$D0,$EF,$C3,$FB,$E9; 1280
		dc.b $2F,$E1,$62,$9F,$C3,$6C,$62,$B7,$96,$C5,$6F,$95,$8E,$4E,$1C,  0,  0,  0,  0,$37,$34,$75,$6D,$B2,$76,$C7,$3B,$E5,$45,$BC,$CA,$3C,$A7,$C9,$AF,$7E,$12,$9E,$AD,$FC,$24,$E9,  4,$FD,$FB,$18,$4C,$B7,$F0,$63,$FC,$16,$30,$99,$48,$27,$EF,$DB,$F8,$49,$D2,$53,$D5,$20; 1344
		dc.b $9C,$9A,$F7,$D6,$3C,$B7,$5B,$CC,$B1,$CE,$F9,$4F,$6C,$9C,$3A,$EE,$40,  0,  0,$31,$DA,$99,$97,$A6,$6D,$FB,$36,$7B,$4A,$F5, $F,$E9,$C3,$D1,$2F,$58,$F1,$E0,$D5,$80,$89,$D5,$BC,$80,$9F,$90,$AE,$A9,$5E,$2D,$AD,$A1,$C2,$3F,$B2,$6B,$D7,$77,$9C,$AF,$54,$FD,$9B,$3D; 1408
		dc.b $B3,$9E,$65,$DB,$1D,$80,  0,  0,  0,  0,  0,  2,$77,$C5,$F6,$E4,$8F,$94,$AF,$7E,$1A,$A9,$FD,$6B,$41,$4F,$EB,$5A,  8,$F9,$4A,$F7,$E1,$AC,$5F,$6E,$56,$EF,  0,  0,  0,  0,  0,  0,  0, $D,$DE,$7D,$F1,$73,$28,$E2,$8B,$7F,$5A,$75,$A6,$AD,$2F,$D1,$63,$FA,$2B,$57; 1472
		dc.b $FB,$EC,$61,$43,$AF,$EF,$D0,$C2,$5F,$A2,$C7,$86,$A9,$D6,$9A,$B6,$28,$B7,$F5,$B3,$99,$6F,$DE,$1C,  0,  0,  0,  0,$37,$34,$75,$6C,$BB,$DB,$6B,$E5,$3E,$EB,$E4,$9C,$A3,$EC,$63,$CA,$3E,$92,$8D,$EF,  4,$FE,$12,$18,$37,$8C,$78,$DB,$FA,$31,$FE, $C,$78,$D8,$B7,$8C; 1536
		dc.b $7F,$84,$95,$84,$A3,$7B,$C7,$94,$7D,$23,$EC,$5B,$BA,$F9,$27,$2D,$AF,$95,$32,$EF, $E,$BB,$90,  0,  0, $C,$BB,$E7,$7A,$C9,$32,$8E,$77,$C9,$32,$6E,$5E,$DA,$A6,$53,$BD,$F5,$6F,$D9,$36,$B9,$4E,$E7,$82,$7E,$FC,$31,$E1,$33,$1F,$28,$90,$3C,$81,$63,$43,$C3,$8B,$42; 1600
		dc.b $DC,$5E,$E8,$27,$EC,$9B,$5C,$A3,$ED, $C,$93,$97,$B2,$6A,$D9,$DF,$CB,$26,$F6,$92,$3C,$7F,$35,$88,  0,  0,$22,$68,$68,$68,$68,$68,$45,  8,$B2,$C5,$59,$64,$51,$59,$64,$CB,$26,$94,$64,$92,$5B,$49,$24,$92,$69,$5A,$4C,$BD,$6A,$CA,$CA,$CB,$15,$45,$62,  0,$20,$10; 1664
		dc.b $41,  4,$10,$44,$FC,$93,$9C,$C8,  0,  0,$8B,$6C,$E9,$24,$59,$BD,$30,$71,$25,$8F,$50,$BA,$8F,  1,$47,$86,$F7,$22,$C7,$A9,$14,$2C,$F0,$7D,$DC,  0,  0,  4,$73,$9F,$FC,$67,$CC,$10,  0, $D,$FC,$94,$C7,$F8,$3D,$F6,$29,$DC,$92,$65,$4E,$E4,$E5,$DC,$8B,$7B,$3E,$17; 1728
		dc.b $AC,$93,$54,$AA,$68,$B1,$D4,$55,$20,$B3,$7C,$16,$F9,$27,$A7,$B2,$C9,$6F,$6B,$E5,$DD,$D6,$9D,$D3,$C6,$C7,$1F,$E0,$BB,$7F,$24,  0,  0,$33,$E6,$9E,$42,$64,$10,$41,  4,$10,$D7,$58,$A5,$6E,$A4,$AB,$75,$24,$66,$5A,$18,$4F,$D0,$80,$2D,$A8,$D6,$B8,$5A,$56,$32,$AE; 1792
		dc.b $16,$37,$51,$EC,$45, $D, $D, $D, $D, $D,  8,  0,$50,$D0,$D0,$D0,$D0,$D0,$8A,$11,$65,$8A,$B2,$C8,$A2,$B2,$C9,$96,$4D,$28,$C9,$24,$B6,$92,$49,$24,$D2,$B4,$99,$7A,$D5,$95,$95,$96,$2A,$8A,$C4,  0,$40,$20,$82,  8,$20,$89,$F9,$27,$39,$90,  0,  1,$16,$D9,$D2,$48; 1856
		dc.b $B3,$7A,$63,$48,$24,$96,$3D,  0,$51,$BA,$84,$58,$F4,$45,$B4,$19,$67,$8E,$EE,  0,  0,  2,$39,$CF,$FE,$33,$E6,  8,  0,  6,$EF,$CD,$3F,$93,$DD,$8D,$96,$2B,$76,$73,$5B,$B3,$9B,$DC,$EA,$8A,$E8,$60,$5A,$A4,$52,$A6,$8A,$E8,$60,$6C,$F7,$3A,$CD,$6E,$CE,$6B,$76,$69; 1920
		dc.b $8D,$97,$F9,$3D,$CD,$DF,$98,  0,  0,$67,$CD,$3C,$84,$C8,$20,$82,  8,$21,$96,$C5,$33,$DF,$31,$32,$D9,$80,  0,$A6,$62,$25,$33,$B6,$74,$5B,$11,$43,$43,$43,$43,$43,$42,$37,  0,  0; 1984
Nem_EHZ_Boss_Blades:dc.b   0,$14,$80,  5,$17,$14,  9,$26,$39,$35,$1A,$45,$19,$72,  0,$81,  3,  2,$15,$18,$25,$1B,$56,$3D,$67,$7C,$86,  5,$16,$76,$3A,$87,  4,  7,$18,$FA,$88,  4,  8,$16,$38,$28,$FB,$89,  4,  6,$14, $A,$26,$3C,$76,$3B,$FF,$D7,$EE,$27,$87,$B7,$D5,$E1,$FF,$6C,$FF,$C8; 0
					; DATA XREF: ROM:0001C284o
					; ROM:0001C2A8o
		dc.b $68,$69,$F7,$4D,$67,$6E,$77,$59,$54,$AC,$A5,$35,$94,$26,$4C,$9D,$47,$F0,$5D,$32,$BA,$74,$D9,$DE,$93,$FE,$5A,$FF,$2E,$AB,$87,$B7,$99,$FB,$AE,$5F,$F7, $D,$2D,$1F,$C9,$BF,$B2,$CF,$66,$D5,$6F,$9F,$32,$EC,$A5,$59,$42,$64,$CA,$14,$7F,  6,$13,$26,$57,$4D,$FB,$1C; 64
		dc.b $BC,$32,$D7,$CB,$D9,$F8,$A5,$98,$FA,$89,$87,$FD,$33,$DD,$FF,$8C,$FF,$7F,$A7,$68,$9F,$74,$D6,$76,$E7,$75,$95,$53,$8B,$43,$29,$C3,$C6,$27, $F,$18,$9C,$56,$33,$BD,$26,$87,$BF,$CB,$AA,$E1,$ED,$E6,$5F,$8A,$E7,$EB,$ED,$A6,$A3,$F7,$37,$F6,$59,$EC,$DA,$AD,$F3,$E6; 128
		dc.b $53,$5A,$13,$4E,$1E,$31,$38,$78,$C4,$E2,$AE,$A7,$79,$B5,$2D,$7C,$BD,$9F,$8A,$40,  0,  5,$FA,$EC,  0,  0,  0,$3A,$EC,  0,  0,  0,$3A,$EC,  0,  0,  0,$3A,$EC,  0,  0,  0,$3A,$EC,  0,  0,  0,$3A,$EC,  0,  0,  0; 192
S1Nem_Ballhog:	dc.b $80,$2F,$80,  3,  1,$14,  6,$25, $A,$35,$11,$45,$14,$56,$2F,$66,$36,$75, $B,$81,  3,  0,$16,$2E,$27,$76,$38,$F7,$82,  5,$16,$18,$F5,$83,  4,  4,$15,$13,$26,$37,$38,$EF,$48,$EE,$78,$F4,$84,  6,$34,$86,  6,$35,$18,$F2,$87,  5, $F,$16,$31,$27,$78,$38,$F3,$88; 0
		dc.b   5, $E,$16,$32,$26,$38,$89,  5,$10,$16,$33,$8A,  6,$30,$17,$74,$8B,  5,$12,$18,$F6,$8D,  7,$72,$17,$75,$8E,  7,$73,$8F,  5,$15,$FF,$A3,$F5,$7D,$F5,$E7,$B0,$BC,$5E,$FA,$FE,$32,$FD,$2F,$76,$9B, $B,$45,$D5,$5A,$DF,$55,$C7,  3,$AF,$2A,$7E,$53,$9C,$50,$41,$65; 64
		dc.b $EA,$16,$E9,$CF,$28,$6F,$62,$3F,$19,$CB,$12,$3A,$DC,$CF,$60,$C1,$9E,$17,$4F,$50,$A1,$66,$B7,$6B,$2D,$67,$1B,$2A,$CA,$FD,$17,$33,$6C,$7F,$58,$6A,$7F,$2B,$23,$22,$2A,$B3,$76,$1A,$F5,$FC,$62,$5A, $F,$3F,$9E,$36,$38,$7E,$17,$9D,$E2,$42,$F1,$80,$DA,$BF,$85,$B1; 128
		dc.b $D1,$87,$E1,$54,$34,$D8,$68,$AB,$2D,$6C,$34,$11,$1A,$5F,$A1, $A,$46,$17,$88,$A0,$3F,$C2,$3D,$28,$25,$B0,$95,$12,$C8,$AB,$20,$92,$AD,$74,$84,$94,$F2,$2A, $D,$81,$95,$4D,$59,$E7, $D,$22,$F3,$8E,$8C,$83,$C5,$C4,$27,$64,$7B, $D,$DD,  5,  4,$75,$E9,$EC,$22,$10; 192
		dc.b $CA,$82,$77,$88,$47,$86,$E2,$9F,$E9,$3F,$E1,$5A,$C6,  3,$A4,$BD,$62,$20,$A9,$19,$61,$E9,$BD,$3F,$F7,$FF,$1F,$FF,$9F,$CA,$37,$ED,$31,$3A,$79,$97,$DD,$E7,$A8,$7A,$7B,$CE, $E,$EF,$83,$88,$CF,$21,$2F,$7F,$D5,$9F,$DD,$AD,$5E,$83,$37,$B9,$A0,$FB,$AA,$E8,$6B,$CC; 256
		dc.b $70,$61,$AE,$3F,$F1,$5A,$FF,$45,$72,$BB,$95,$BD,$C9,$10,$5E,$50,$E0,$CF,$8D,$43,$D4, $E,$8F,$67,$84,$2F,$67,$89,$9C,$75,$13,$6B,$B7,$57,$7C,$67,$14,$5D,$E8,$28,$82,$33,$8C,$F2,$8E,$60,$B8,$37,$EB,$C5,$5C,$15,$51,$55,$79,$43,$86,$FF, $A,$D7,$78,$E9,$41,$2D; 320
		dc.b $84,$9B,$BE,$C8,$50,$F8, $A,$F3,$1A,$10,$FE,$C8,$F2,$83,$7C,$88,$42,$E8,$73,$AB,$26,$50,$D5,$EB,$6B,$49,$DB,  7,$52,$D8,  8,$3A,$29,$D0,$44,$21,$C2,$82,$77,$88,$47,$86,$E2,$9F,$E9,$3F,$E1,$5A,$C6,  3,$A4,$BD,$62,$20,$A9,$19,$61,$DD,$FB,$29,$91,$E7,$76,$83; 384
		dc.b $C1,$F0,$9D,$B5,$C7,$2D,$CD,$D5,$E7,$AC,$1D,$BB,$FC,$A0,$E5,$AD,$9D,$7B,$82,$9D,$98,$C3,$CA,  3,$F5,$47,$F2,$BD,$16,$AF,$41,$9B,$DC,$D0,$7D,$D5,$74,$35,$E6,$38,$30,$D7,$1F,$F8,$AD,$7F,$A2,$B9,$5D,$CA,$DE,$E4,$55,$D8,$94,$20,$BE,$98,$9C,$6E,$3E,$2E,$99,$ED; 448
		dc.b $DE,$7B,$94,$E9,$AE,$92,$A2,$2E,$F4,$14,$41,$19,$C6,$79,$47,$30,$5C,$1B,$F5,$E2,$AE, $A,$A8,$AA,$BC,$A1,$C3,$7F,$85,$6B,$BC,$74,$A0,$95,$2D,$39,$37,$AD,$D2,$43,$63,$A8,$C3,$9E,$16,$20,$86,$AC,$5F,$26,$46,$C4,$F6,$4F,$7C,$48,$EF,$74,$15,$37,  5,  4,$32,$B9; 512
		dc.b $42,$7E,$D1,$CE,$67,$86,$CC,$FF,$A4,$48,$FB,$61,$38,$88,$2A,$46,$58,$7A,$71,$FC,$AE,$7D,$3F,$3E,$7D,$B4,$C5,$A5,$E1,$AE,$3E,$7A,$E3,$6F,$74,$CD,$DD,$F0,$61,$9E,$5F,$D1,$FF,$DA,$BD,$38,$39,$E3,$C1,$CF,$1D,$DB,$B6,$FE,$A8,$D3,$B1,$79,$43,$83,$3D,$56,$96,$AF; 576
		dc.b $2F,$16,$2F,$67,$89,$9C,$75,$13,$6B,$B7,$6E,$E8,$B9,$2F,$95,$10,$46,$60,$F7,$B9,$5F,$B9,$AB,$81,$FC,$F9,$15,$57,$94,$38,$6F,$E0,$99,$61,$41,$2D,$84,$A8,$96,$45,$59,  4,$95,$6B,$A4,$24,$A7,$91,$50,$6C, $C,$AA,$6A,$CF,$D9,$E7, $D,$14,$83,$C6,$8C,$10,$63,$73; 640
		dc.b   4,$B9,$1E,$A1,$3C,$E8,$83,$69,  8,$84,$32,$A0,$4D,$82,$6C,$36,$75,$32,$57, $C,$1B,$F9,$2E,$18,$1F,$6C,$27,$11,  5,$48,$CB, $F,$4D,$E9,$FF,$BF,$F8,$FF,$FD,$B4,$A7,$E5,$1E,$DF,$A4,$C5,$B4,$F0,$DA,$DD,$E7,$AA,$3D,$3D,$D1,$D9,$F7,$BA,$4D, $E,$24,$7B,$7E,$AD; 704
		dc.b $BF,$56,$BA,$25,$27, $E,$E2, $C,$1E,$E6,$83,$88,$AB,$8C,$3F,$3E,$32,$30,$AD,$CE,$20,$C3,$5C,$67,$66,$ED,$DC,$AD,$EE,$48,$82,$F2,$87,  6,$7C,$6A,$1E,$A0,$74,$7B,$3C,$21,$7B,$3C,$4C,$E3,$A8,$9A,$86,$E5,  8,$DE,$33,$BD,$22,$81,$74,$40,$BA,$25,$26,$E8,$A6,$54; 768
		dc.b $85,$C5,$C1,$BF,$5E,$2A,$E0,$AA,$8A,$AD,$C0,$F9,$43,$20,$DF,$C1,$59,$CE,$39,$E4,$A8,$65,$18,$39,$74,$83,$96,$B5,$DF,  7,$2F,$68,$3B,$68,$65,$7E,$79,$5F,$9A,$F3,$BF,$2C,$EF,$CA,$11,$C8,$BA, $C,$EF,$CF,$39,$65,$D0,$2E,$FC,$F3,$A9,$92,$D6,$CE,$82,$E8,$E8,$47; 832
		dc.b $28,$2B,$2C,$E3,$9A,$D7,$1E,$B1,$EB,$35,$72,$9C,$79,$22,$D4,$87,$92,$2E,$28,$B5,$9E,$48,$BD,$B9,$26,$DC,$A7,$7F,$59,$DF,$D5,$7D,$6F,$9F,$5A,$21,$4E,$4A,$4B,$A7,$C9,$87,$40,$8B,$4E,$44,$74,  8,$A4,$B9,$29,$35,$B2,$72,$5D,$13,$94,$67,$C9,$53,$EB,$1E,$B7,$80; 896
Nem_Crabmeat:	dc.b   0,$44,$80,  5,$12,$15, $F,$25,$10,$35,$15,$46,$35,$56,$38,$67,$72,$74,  2,$81,  3,  0,$15,$14,$27,$78,$86,  6,$32,$17,$77,$87,  4,  6,$16,$34,$27,$76,$88,  5, $E,$15,$16,$89,  4,  4,$15,$13,$27,$7A,$8A,  6,$36,$17,$73,$8B,  5,$18,$17,$74,$8C,  6,$2F,$16; 0
		dc.b $2E,$26,$33,$37,$75,$47,$79,$8D,  4,  3,$15,$11,$28,$F6,$38,$F7,$8E,  4,  5,$16,$37,$FF,$22,$E5,$7F,  6,$B5,$31,$C5,$F4,$D6,$FF,$10,$3B,$A9,  8,$DC,$21,$1C,$E0,$6A,$77,$54,$D4,$EF,$A9,$AC,$75,$35,$3D,$62,$BC,$8C,$A5,$99,$C3,$3E,$77,$9C,$97,$3E,$71,$92,$E7; 64
		dc.b $B5,$E6,$F5,$EA,$6F,$5E,$A7,$49,$2E,$67,$E1,$6E,$8F,$85,$BA,$37,  5,$F7,$FE,$E2,$C6,$E3,$DE,$F5,$F6,$59,$FE,$B8,$D5,$3F,$50,$A7,$BC,$DD,$91,$11,$48,$F9,$1F,$28,$F1,$1E, $D,$B2,$6A,$B7,$E9,$9A,$1D,$E9,$94,$1B,$2A,$34, $D,$B2,$6A,$9A,$3B,$53,$4D,$24,$B8,$D8; 128
		dc.b $E4,$8D,$2C,$5C,$F4,$D3,$39,$45,$66,$EC,$B5,$9B,$B9,$21,$17,$27,$42,$7A,$23,$E6,$D9,$39,$9E,$9A,$39,$1A,$48,$EF,$DB,$89,$8D,$29,$24,$67,$20,$82,  6,$70,$82,  9,$30,$82,  7,$B8,$3C,$54,$57,  1,$C9,$46,$C5,$F4,$E9,$B2,$31,$F9,$31,$77,$F3,$44,$53,$B3,$BD,$87; 192
		dc.b $67,$68,$61,$3B,$A5,$99,$C2,$62,$76,$16,$3A,$4C,$58,$1A,$84,$16,$90,$88,$5B,$3E,$86,$BA,$57,$F6,$24,$45,$AC,$56,$A7,$7A,$DF,$53,$BD,$6F,$81,$DC,$B7,$C0,$EE,$30,$F8,$E6,$1E,$6A,$77,$2B,$CD,$4F,$37,$9A,$9E,$70,$35,$3B,$A0,$6B,$1B,$EA,$6B,$1D,$4D,$4F,$83,$52; 256
		dc.b $2F,$6D,$6F,$E7,$18,$5F,$CE,$F8,$BE,$ED,$AE,$8C,$BC,$C6,$4B,$9F,$B8,$5F,$EE,$AD,$3F,$9B,$79,$A8,$F7,$EA,$B1,$95,$E7,$BD,$EA,$72,$35,$9E,$EF,$54,$FD,$42,$BD,$67,$6C,$9E,$6B,$3B,$64,$44,$44,$45,  6,$C9,$AA,$D4,$C9,$A1,$95,$3B,$C1,$BF,$4C,$D5,$6C,$9B,$54,$77; 320
		dc.b   8,$DC,$26,$8B,$8D,$A0,$8D,$8B,$A0,$8D,$99,$11,$17,$11,$E2,$3A,$FB,$6B,$ED,$AB,$64,$D5,$6F,$D3,$57,$2A,$65,$56,$A6,$5A,$B6,$4D,$B6,$15,$EE,$43,$BB,$12,$64,$91,$E6,$E6,$49,$19,$13,$E3,$73,$E3,$CF,$38,$F3,$CD,$65,$7E,$D9,$AB,$FC,$AB,$FC,$AB,$FA,$AC,$1B,$35; 384
		dc.b $86,$59,$AC,$A8,$DE,$CB,$E0,$D7,$AD,$16,$FD,$CF,$3D,$E6,$A7,$72,$FE,$A1,$16,$24,$44,$45,$53,$E0,$5F,$AD,$2F,$38,$78,$BC,$DF,$FB,$1B,$CD,$FE,$2E,$37,$D2,$E8,$BC,$67,$17,$E6,$6A,$6F,$BE,$2A,$70,$8E,$E7,$C4,$DD,$A6,$B3,$77,$24,$22,$D6,$7A,$CC,$25,$7D,$34,$3D; 448
		dc.b $68,$FF,$5A,$3A,$42,$61,$2D,$29,$86,$72,  7,$CC,$33,$84,$10,$49,$85,$50,$49,$B5,$15,$C0,$72,$51,$B1,$7D,$3A,$6C,$8C,$7E,$4C,$5D,$FF,$D4,$ED,$2D, $C,$76,$FD,$43,  4,$FD,$33,$92,$C2,$6E,$47,$23,$87,$EE,$28,$82,$D4,$DE,$96,$90,$8E,$F6,$7D, $D,$74,$AF,$F0,$79; 512
		dc.b  $E,$54,$47,$26,$1F,$B7,$4A,$5F,$86,$F2,$6C,$EF,$7B,$82,$76,$48,$BB,$F6,$E0,$F4,$4E,$E8,$34,$70,$98,$73,$38,$2D,$85,$82,$9D,$BC,$7A,$B0,$FE,$4D,$BF,$7D,$4D,$14,$E8,$FF,$D8,$91,$57,$2B,$4D,$63,$69,$A9,$EE,$E9,$CB,$DD,$39,$7E,$DD,$19,$F9,$39,$AC,$1A,$56,$4F; 576
		dc.b $D8,$B7,$8A,$82,$FD,$CD,$50,$7F,$26,$43,$FD,$32,$FE,$8A,$72,  4,$5B,$C6,$B1,$22,$22,$2E,$1B,$90,$22,$E4,$9C,$82,$70,$27,$C5,$13,$90,$D6,$2B,$37,$65,$AC,$DD,$C9,  8,$88,$88,$AB,$FB,$98,$7F,$25,$FF,$B9,$A4,$BD,$51,$BF,$72,$25,$93,$9A,$62,$4C,$E4,$69,$89,$76; 640
		dc.b   8,$24,$EE,$C1,  4,$86,$82,$48,$24,$E4, $F, $F,$67, $E,$1C,$38,$61,$C3,  2,$AE,  3,$92,$8D,$8B,$E9,$D3,$64,$63,$F2,$62,$EF,$E6,$88,$A7,$6F,$71,$DB,$DC,$27,$7F,$E6,$8F,$F4,$8B,$7A,$B0,$B0,$D1,$C8,$2C,$CE,$4A,$2F,$EA,$3C,$1A,$E8,$21,$FC,$12,$22,$22,$22,$22; 704
		dc.b $E5,$44,$72,$61,$FB,$74,$A5,$F8,$6F,$26,$CE,$F7,$B8,$27,$64,$8B,$BF,$6E, $F,$44,$EE,$83,$47,  9,$87,$33,$82,$D8,$58,$4E,$DE,$12,$96,$13, $A,$2D,$FB,$E1,$2D,$14,$E8,$FF,$D8,$91,$57,$2B,$4D,$63,$69,$A9,$EE,$E9,$CB,$DD,$20,$D0,$FD,$BA,$33,$F2,$73,$58,$34,$AC; 768
		dc.b $9F,$B1,$6F,$1F,$B9,$1E,$BF,$E2,$44,$44,$45,$AE,$F1,$AC,$48,$88,$B8,$F5,$AF,$EC,$48,$88,$88,$88,$B9,$4D,$DA,$6B,$37,$72,$42,$22,$22,$E4,$9A,$CD,$D5,$98,$75,$66,$D9,$43,$D6,$8F,$F5,$A3,$A4,$26,$12,$D2,$98,$67,$20,$7C,$C3,$38,$41,  4,$98,$55,  4,$9B,$50,$44; 832
		dc.b $45,$5C,  7,$25,$1B,$17,$D3,$A6,$C8,$C7,$E4,$C5,$DF,$FD,$4E,$DE,$E3,$B7,$B8,$4E,$FE,$D6,$1E,$BF,$70,$2C,$96,$98,$FD,$44,$CE,$9F,$B8,$43,$DE,$D3,$A1,$AE,$89, $F,$E0,$91,$17,$21,$C8,$11,$11,$11,$14,$AE,$8B,$CF,$3E,$71,$92,$E7,$CC,$DE,$B9,$ED,$7B,$D7,$CB,$D7; 896
		dc.b $C9,$11,$14,$78,$8F,$1E,$DA,$FB,$11,$11,$16,$B7,$F2,$BF,$FC,$39,$FF,  6,$5F,$EC,$91,$FF,$71,$F1,$EB, $F,$E6,$EA,$7B,$91,$14,$17,$AC,$17,$36,$82,$E7,$94,$17,$D9,$A0,$79,$9F,$8B,$B7,$BE,$97,$2B,$91,$73,$34,$73,$1E,$66,$8E,$C9,$AE,$3D,$CD,$D9,$47,$F7,$C6,$9F; 960
		dc.b $BE,$8B,$F7,$32,$AB,$A1,$3D,$11,$F3,$6C,$9D,$A6,$4D,$AF,$E9,$9A,$B9,$53,$2A,$E5,$46,$AB,$64,$DA,$9A,$39,$EB,$8D,$8E,$48,$D2,$C5,$C7,$24,$67,$66,$FC,$23,$92,$8D,$8B,$E9,$D3,$67,$31,$F9,$41,$77,$F3,$44,$53,$B3,$BD,$87,$67,$68,$61,$3B,$A5,$99,$C2,$6F,$4D,$1C; 1024
		dc.b $8D,$24,$77,$ED,$C4,$C6,$94,$92,$33,$90,$41,  3,$38,$41,  4,$98,$41,  3,$DC,$1E,$2A,$1E,$27,$61,$63,$A4,$C5,$81,$A8,$41,$69,  8,$85,$B3,$E8,$6B,$A5,$7F,$62,$44,$45,$C6,$F5,$DE,$30,$58,$DD,  5,$3C,$DE,$A7,$D5,$EA,$7D,$5E,$A7,$D5,$EA,$7D,$60,$A7,$9C,$16,$37; 1088
		dc.b $57,$78,$F1,$B9,$11,$16,$FC,$47,$7A,$DD,$15,$86,$66,$B0,$EA,$6A,$FE,$A6,$AF,$EA,$6A,$FE,$A6,$AF,$CC,$D6,$17,$45,$61,$1D,$EB,$B9,$11,$11,$57,$A5,$7A,$73,$86,$39,$F7,$86,$36,$FD,$33,$F1,$B7,$ED,$9F,$8D,$BF,$6C,$FC,$6D,$FB,$67,$E3,$6F,$DB,$43,$1B,$7E,$9A,$18; 1152
		dc.b $E7,$DE,$BD,$39,$F1,$D0,$88,$8B,$A7,$1C,$FA,$57,$BF,$3C,$43,$F4,$DB,$62,$1F,$B6,$DB, $F,$FD,$B6,$D8,$7F,$ED,$B6,$C3,$FF,$6D,$B6,$1F,$FA,$6D,$B1, $E,$FC,$F1, $E,$7D,$2B,$D0,$8B,$80,  0; 1216
Nem_GHZBuzzbomber:dc.b $80,$37,$80,  4,	 3,$14,	 5,$24,	 8,$34,	 7,$45,$15,$56,$36,$67,$6F,$73,	 0,$81,	 4,  2,$15,$13,$27,$74,$82,  6,$35,$18,$F2,$83,	 4,  6,$16,$2E,$27,$7A,$84,  7,$75,$85,	 7,$76,$86,  6,$2F,$87,	 5,$12,$16,$38,$48,$F3,$58,$F7,$88,  4,	 4,$17,$72,$89,	 5,$16;	0
		dc.b $8A,  6,$34,$18,$F6,$8B,  6,$32,$17,$6E,$8C,  5,$18,$17,$77,$8D,  7,$78,$8E,  5,$14,$17,$73,$8F,  6,$33,$FF,  0,$6F,$CD,$7C,$51,$73,$5F,  7,$9D,$33,$3A,$78,$3C,$4C,$E9,$A9,$E0,$8F,$3A,$62,$5E,  9,$7C,$B0,$4F,$D8,$FB,$3A,$1F,$69,$13,$DE,$B2,$AC,$DF,$4B,$FB; 64
		dc.b $19,$3F,$6D,$9B,$2E,$AD,$D6, $A,$D7,$95,$E0,$78,$DF,$8F,  0,$7E,$89,$6D,$99,$92,$EA,$49,$95,$8C,$95,$97,$5F,$CA,$C5,$D1,$D9,$F8,$21,$9C,$75,$FC,$B1,$E8,$AC,$7F,$A5,$7F,$CA,$B6,$4A,$C7,$C1,$5B,$CA,$60,  1,$FD,$95,$45,$FD,$47,$E6,$53,$3A,$22,$F2,$32,$D9,$39; 128
		dc.b $A5,$79,  0,$12,$CA,$82,$10,$AC,$69,$FB,$1B,$24,$C0,  0, $B,$6F,$4B, $D,$E9,$60,$2B,$61,$BC,$BF,$33,$5B,$21,$94,$AF,$D6,$F8,$2B,$CB,$7E,$6C,$4E,$56,$2B,$EA,$46,$40, $B,$F8,$B6,$A5,$69,$D2,$F4,$65,$4B,$D1,$F9,$1B,$75,$67,$26,$EA,$CB,$C8,$E6,$69,$D7,$3C,$42; 192
		dc.b $62,$EA,$E0,$F0,$7D, $F,$33,$A6,$A8,$68,$54,$32,$CD,$14,$9D,$8F,$43,$2A,$67,$3F,$2F,$1D,$F7,$69,$AB,$76,$EB,$DA,$EC,$7E,$CE,$2F,$3B,$8D,$97,$AF,$E5,$6F,$ED,$94,$FF,$9E,$56,$2D,$88,$FF,$C2,$7F,$BB,$54,$2F,$D9,$F2,$23,$FE,$88,$8E,$2B,$29,$A3,$E7,$4C,$C9,$E7; 256
		dc.b $B2,$6E,$47,$2B,$8A,$B3,$1B,$CB,$B5,$FF,$95,$2D,$FA,$C5,$ED,$F9,$67,$D3,$1A,$19,$2D,$F9,$92,$12,$D8,$B3,$28,$24,$CF,$91,$DC,$92,$4F,$E0,$E9,$D5,$8B,$CA,$7A,$AD,$CA,$42,$E8,$62,$76,$32,$56,$36,$9C,$74,  0,  0,  3,$DA,$BF,$99,$C5,$A0,$B4,$2C,$25,$8C,$98,$FC; 320
		dc.b $41,$1B,$15,$FA,$1F,$23,$BD,$8A,$B4,$52,$74,$65,$B4,$35,$50,$D9,$58,$AD,$1E,$AC,$9F,$C1,$D4,  0,$3F,$72,$F8,$5D,$3F,$33,$1E,$DA,$FB,$58,$EF,$AA,$5B,$55,$F2,$3D,$50,$19,$39,$44,$CC,$AA,$CE,$D0,$C7,$71,$DC,$ED,$AF,$4F,$29,$80,  0,  0,$5B,$7E,$42,$C3,$95,$53; 384
		dc.b $A4,$31,$F2,$27,$E8,$E4,$A5,$2B,$F5,$BE, $A,$F2,$DF,$9B,$13,$95,$8A,$FA,$91,$90,  2,$FE,$2D,$A9,$5A,$74,$BD,$19,$52,$F4,$7E,$46,$DD,$59,$C9,$BA,$B5,$7F,$C2,  7,$4B,$7E,$5B,$84,$34,$2A,$19,$66,$8A,$5B,$64,$65,$4C,$C9,$5B,$22,$D3,$77,$46,$B7,$A8,$FE,  8,$F3; 448
		dc.b $B4,$FF,$9E,$49,$BC,$8F,$FC,$27,$FB,$B5,$42,$FD,$9F,$22,$3F,$E8,$85,$2E, $B,$5E,$97,$CE,$CC,$73,$CE,$99,$F4,$59,$EC,$9B,$91,$CA,$E2,$AC,$C0,$91,$C8,$E4,$BE,$EB,$EF,$1E,$6F,$FB,$7A,$C8,$E4,  0,$96,$FE, $E,$4F,$E7,$1E,$EB,$FE,$73,$91,$FB,$C4,$8F,$F4,$FB,$48; 512
		dc.b   0,$25,$B7,$15,$FD,$BC,$79,$C4,$8F,$87,$91,$F1,$1E,$E7,$FF,$7F,$FB,$FF,$DF,$F4,$E7,$25,$91,$CA,$B2,$39,$3F,$9C,$79,$C7,$ED,$DE,$47,$20,  0,  1, $D,$1F,$F9, $B,$C8,$FF,$50,$A9,  9,$54,$DE,$80, $D,$93,$7F,$23,$47,$FE,$44,$21,$A1,$A0,  0, $D,$90,$D2,$BF,$A8; 576
		dc.b $D9,$16,$FD,$F7,$80,$15, $D,$15, $F,$FF,$1F,$F8,$FE,$41,$A1,$FF,$21,$D0,$D0,  3,$43,$43,$48,$FE,$C2,$FF,$61,$7F,$B0,$BF,$B8,$34,$54,$34,  2,$38,$7E,$26,$BC,$4F,$DB,$83,$23,$FD,$57,$E9,$C8,$F4,$3D,$16,$51,$A4,$4A,$26,$B2,$2D,$32,$3C,$9C,$B7,$11,$C8,$8F,$23; 640
		dc.b $29,$47,$4E,$14,$A4,$72,$59,$1F,$E9,$D6,$47,$23,$93,$C8,$FC,$CF,$89,$EE,$29,$4F,$D8,$CB,$43,$F6,$DB,$D9,$F4,$5D,$14,$B2,$29,$68,$46,$4F,$D0,$F2,$8C,$97,$23,$29,$46,$44,$E5,$A1,$48,$9C,$A4,$B2,$89,$6D,$28,$90,  0,  0,$7C,$EB,$4B,$9E,$8D,$38,$A3,$10,$7A,$31; 704
		dc.b   7,$A3,$10, $B,$35,$6E,$97,$1D, $F,$D7,$35,$FD,$F0,$7F,$DF,$2F,$3F,$47,$43,$BB,$A3,$2C,$C0,$52,$6A,  7,$26,$A0,$72,$6A,$44,$DA,$8F,$75,$2B,$CC,  0,  3,$F3,$7E,$77,$45,$2E,$9D,$49,$E8,$C4,  0,$AD,$18,$81,$56,$97,$4D,$F9,$DD,$B7,$30,  7,$3D,$AE,$E6,$F3,$BA; 768
		dc.b $95,$20,$4D,$40,  5,$49,$A8,$E5,$59,$DD,$48,$BB,$9B,$F3,  3,$15,$A6,$1B,$BC,$6A,$C7,$76,$17,$56,$3B,$B0,$B4,$C3,$77,$AE,  0,$AD,$3F,$3B,$FA,$C5,$69,$FA,$EE,$AD,$17,$2B,$47,$A9,$FA,$EF,$4F,$CE,$FE,$B0,  0,$17,$BE,$FC,$6D,$80,  0,  2,$BB,$9F,$74,$E3,$29,$F7; 832
		dc.b $AE,$1F,$22,$C0,  2,$B9,$16,  6,$2B,$94,$FB,$BE,$E9,$ED,$B8,  1,$BB,$69,$EE,$7E,$F3,$CA,$B8,$18,$2C,$80,$15,$C1,$64,$F8,$AF,$79,$E5,$13,$DC,$FB,$86,$C0; 896
Nem_UnknownGroundExplosion:dc.b	$80,$24,$80,  4,  6,$14,  8,$24,  9,$34, $C,$45,$16,$55,$1A,$65,$1B,$73,  0,$81,  4,  7,$16,$3C,$86,  5,$17,$17,$7A,$87,  4, $A,$17,$7B,$8A,  8,$F8,$8B,  5,$1C,$18,$F9,$8C,  3,  2,$16,$3B,$8D,  3,  1,$16,$3A,$FF,  0,  0,  5,$AF,$BF,$5B,$F4,$33,$F3,$4D,$7C; 0
		dc.b $76,$FC,$D6,$71,$D9, $B,$53,$A1,$B5,$65,$4B,$77,$D2,  8,  0,  0,  0,$47,$33,$93,$C8,$E6,$3F,$CC,$5F,$8F,$1E,$16,$3D,$BB,$2B,$76,$C8,$69,$5B,$BD,$28,$56,$ED,$96,$DF,$F5,$92,$6B,$C6,$4C,$59,$7B,$F5,$F0,$DC,$6F,$E6,$70,  0,  0, $D,$CD,$F0,$5F,$57,$17,$9E,$42; 64
		dc.b $9F,$99,$FC,$D7,$2A,$CF,$4A,$53,$52,$C4,$FB,$A5,$67,$DD,$2D,$56,$F8,  0,  2,$DD,$D9,$57,$C6,$2A,$38,$98,$E2,$6F,$8D,$55,$96,$93,$53,$DA,$9C,$21,$6A,$D2,$67,$59,$CC,$53,$EE,$DC,$6A,$65,$9C,$6B,$EE,$AE,$EA,$79,$14,$E6,$6E,$FF,$A7,$92,$D7,$F3,$3F,$5A,  8,$FD; 128
		dc.b $DC,$AF,$DE,$FC,$FC,$5F,$3A,$7D,$90,  0,$40,  0,  6,$2D,$77,  8,$42,$CF,$D6,$3B,$28,$5E,$37,$88,$BB,$53,$53,$3F,$BB,$BD,$DF,$D7,$9F,$FD,$1D,$EB,$DA,$B7,$54,$B1,$31,$A0,$A5,$41,$A4,  6,$9C,$32,$D5, $C,$4C,$F7,$9F,$D6,$42,$6F,$D6,$3D,$62,$76,$73,$2E,$D5,$AA; 192
		dc.b $B3,$C3,$E7,$B7,$63,$8E,$C7,$1F,$AB,$10,  4,$FE,$AB,$3E,$3C,$6F,$88,$F8,$76,$7E,$E1,$D9,$D4,$F1,$9D,  9,$22,$56,$5D,$9D,$94,$18,$A7,$6E,$D8,$B7,$B8,$78,$BC,$5D,$EA, $D,$E9,$AB, $D,$FF,$43,$9F,$BD,$62,$DD,$61,$93,$62,$3A,  0,  6,$E6,$F8,$3E,$63,$F7,$6E,$DF; 256
		dc.b $3F,$A1,$29,$D9,$FF,$78,$C9,$D4,$A0,$C8,$5B,$B7,$65,$8F,$3F,$AC,$7F,$77,$78,$78,$A7,$6F,$50,$FE,$9B,$DB,$5F,$AB,$CF,$A8,$3C,$F4,$D7,$CF,$DE,$ED,$37,$52,$6A,$2E,$A6,$F2,$F1,$D3,$1B,$EF,$A0,  6,$F8,$A7,$91,$CB,$72,$3B,$87,$65, $A,$C8,$6D,$F1,$C5,$6A,$9A,$B5; 320
		dc.b $57,$39,$4C,$75,$7D,$70,$C1,$95,$26,$68,$EA,$E7,$44,  0,  0,$C5,$B4,$C6,$DD,$5B,$F7,$B8,$5B,$A9,$2A,$1F,$6F,$25,$D8,$D8,$C1,$12,$76,$63,$AD,$10,$74,$75,$D6,$88,  0, $C,$3B,$38,$77,$FA,$D0,$74,$EC,$71,$D9,$F0,$EC,$C3,$99,$3E,$19,$2F,$D4,$97,$12,$76,$58,$B7; 384
		dc.b $92,$58,$E8,$B7,$EB,$53,$19,$3B,$E9,$CE,$88,$20,  0,  6,$CE,$C8,$B7,$50,$64,$C7,$58,$60,$CA, $A, $E,$8D,$97,$58,$E5,$8E,$8D,$BA,  3,$68,$D8,$B9,$B7,$40, $D,  0; 448
S1Nem_LZBurrobot:dc.b	0,$5A,$80,  5,$10,$15,$12,$25,$14,$36,$31,$47,$6F,$56,$35,$66,$33,$74,	5,$81,	3,  0,$16,$30,$26,$36,$38,$F2,$82,  5,$11,$16,$32,$27,$72,$38,$EB,$83,	8,$EF,$18,$F1,$84,  8,$F6,$86,	6,$2F,$18,$F7,$87,  4,	6,$16,$34,$88,	4,  4,$16,$2E,$26,$38,$38,$EA; 0
		dc.b $89,  3,  1,$15,$13,$27,$76,$38,$F3,$8C,  5,$16,$17,$6E,$38,$EE,$8D,  5, $F,$15,$15,$27,$73,$38,$F4,$48,$F0,$8E,  5, $E,$17,$74,$38,$F5,$FF,$55,$55,$55,$CD,$EA,$AB,$9B,$66,$9A,$C4,$EB,$14,$DE,$52,$FA,$14,$BD, $C, $A,$5F,$FC,$8B,$C5,$C2,$E0,$41,$40,$52,$1B; 64
		dc.b $11,$3C,$7C,$B3, $A,$AA,$AA,$B4,$77,$A4,$2B,$DD,$CF,$FB,$8F,$F2,$73,$ED,$E3,$F9,$4F,$18,$BD,$BD,$BF,$2B,$FA,$68,$B5,$FF,$85,$FD,$B3,  6,$F6,$BC,$1D,  3,$77,$DE, $B,$71,$E3,$A2,$46,$F4,$9F,$5F,  7,$AC,$DD,$3E,$42,$E9,$F2,$23,$B7,$22,$26,$39,$10,$47,$5F,$FC; 128
		dc.b $60,$FE,$9B,$25,$5D,$FC,$85,$55,$57,$BB,$5F,$47,$53,$C1,$D2,$B7,$84,$AD,$E1,$28,$F8,$3A,$19,$78,$43,$97,$A4,$22,$59,$1A,$B0,$37,$F0,$CF,$81,$6E,$19,$D0,$3F,$C8,$74,$22,$78,$74,$B2,$EC,$25,$D6,$29,$C8,$63,$B6,$54,$19,$6E,$AC,$12,$3D,$D5,$8B,$FB,$AB,$8B,$DC; 192
		dc.b $97,$E3,$D1,$1B,$7B,$91,$B7,$BA,$EC,$50,$B9,$28,$F2,$20,$21,$57,$11,$B9,$FD,$1E,$37,$55,$C1,$D0,$B3,$B6,$87,$98,$94,$D3,  4,$91,$40,$81,$24,$50,$10,$65,$DB,  3,$21,$E6,$29,$FC,$1D,$2E,$8D,$6D,$A2,$64,$EA,$B5,$D9,  7,$3F,$8C,$98,$3A,$EC,$9A,$63,$F5,$8E,$9E; 256
		dc.b $16,$AB,$B0,$C9,$FE,$59,$6D,$90,$3D,$5E,$FC, $F,$D3,$84,$60,$6E, $C,$85,  1,$40,$86,$E1,$34,$17,$61,$FC,$9B,$8F,$FC,$6D,$CD,$D4,$E7,$D2,$8F,$F5,$A7,$A8,$A7,$EB,$86,$3B,$6F,$19,$9B,$BF,$4F,$26,$41,$A0,$68,$60,$DC,  6, $D,$71,$42,$81,$90,$DD,$E7,$D4, $E,  5; 320
		dc.b   8,$40,$6E,$37,  8,$7F,$45,$55,$55,$55,$60,$F5,$55,$CD,$B3,$4D,$62,$75,$8A,$6F,$28,$68,$6F,$37,$A4,$12,$F3,$70,$4B,$CA,$10,$87,$69,$84,$22,$1E,$53,$18,$F9,$66,$15,$55,$55,$68,$EF,$48,$57,$BB,$9F,$F7,$1F,$E4,$E7,$DB,$C7,$F2,$9E,$31,$7B,$7B,$7E,$57,$F4,$D1; 384
		dc.b $6B,$FF, $B,$FB,$66, $D,$ED,$78,$3A,  6,$EF,$BC,$16,$E3,$C7,$44,$89,$49,$F5,$A0,$43,$D6,$84,$4F,$92,$11,$3E,$49,$30,$79,$76,$C3,$94,$F0,$EB,$FF,$8C,$1F,$D3,$64,$AB,$BF,$90,$AA,$AA,$F7,$6B,$E8,$EA,$78,$3A,$56,$F0,$95,$BC,$25,$1F,  7,$43,$2F,  8,$72,$F4,$84; 448
		dc.b $4B,$23,$56,  6,$FE,$19,$F0,$2D,$C3,$3A,  7,$F9, $E,$84,$4F, $E,$96,$5D,$84,$BA,$C5,$39, $C,$76,$CA,$83,$2D,$D5,$82,$47,$BA,$B1,$7F,$75,$71,$7B,$92,$FC,$7A,$23,$6F,$72,$36,$F7,$5D,$8A,$17,$25,$1E,$44,  4,$2A,$E2,$37,$3F,$A3,$C6,$EA,$B8,$3A,$16,$76,$D0,$F3; 512
		dc.b $12,$ED,$82,$4A,$61,  3,$4A,$60,$84,$94,$D3,  3,$21,$3B,$85,$3F,$83,$A5,$D1,$AD,$B4,$4C,$9D,$56,$BB,$20,$E7,$F1,$93,  7,$5D,$93,$4C,$7E,$B1,$D3,$C2,$D5,$76,$19,$3F,$CB,$2D,$B2,  5,$1A,$7A,$7B,$B1,$4D,  5,$C0,$E8,$18,$DC,$2E, $C,$85,  1,$B8,$32,$61,$DA,$E9; 576
		dc.b $A7,$FC,$6D,$CD,$D4,$E7,$D2,$8F,$F5,$A7,$A8,$A7,$EB,$86,$3B,$6F,$19,$A7,$E9,$EE,$93,$11,$30,$90,$C1,$B8,  8,$19, $D,$C5,  3,$5C,$50,$A4,$DB,$80,$70,$2C,$41,  9,$3E,  4,$3F,$A2,$AA,$AA,$B0,$19,$8C,$C6,$63,$31,$98,$CC,$66,$35,$11,$D4,$47,$51,$19,$56,$42,$30; 640
		dc.b $E7,$21,$18,$3D,$D5,$90,$AB,$AB,$20,$F7,$55,$CF,$93,$DC,$F9,$BE,$4F,$83,$FB,$49,$F2,$ED,$BD,$DD,$A4,$13,$78,$37,$9C,$76,$4C,$41,$4B,$CD, $F,$55,$36,$4B,$CC,$A7,$D5,$23,$D5,$7A,$36,$D3,$BD,$23,$3E,$A3,$78,$FE,$4D,$E3,$2C, $C,$6F,$3F,$D2,$6B,$FF,$C4,$DF,$F2; 704
		dc.b $FF,$97,$F8,$8F,$F4,$8D,$FF,$C2,$2C,$83,$AC,$DD,  1,$C8,$DD, $D,$B2,$9C,$3B,$6D,$6B,$BC,$DF,$65,$55,$55,$5F,$4C,$7C,$5D,$6A,$CA,$3F,$A3,$B3,$E5,$EF,$ED,$DE,$EB,$3E,  3,$DF,$DA,$2F,$B4, $F,$BF,$B4,$5D,$67,$7E,$9B,$BE,$2E,$B3,$DA,$FE,$FC,$9D,$5F,$E1,$73,$FE; 768
		dc.b $17,$39,$E5,$CD,$CC,$86,$3C,$DD,$C3,$AA,$E8,$71,$EB, $E,$DF,$AE,$10,$DD,$57,  9,$7E,$B2,$B4,$FD,$65,$5D,$A9,  5,$29,$63,  0,$94,$B3,$E0,$E4,$A5,$9F,  7,$26,$36,$7D,$9D,$8E,$E7,$DA,$89,$DD,$20,$83,$73,$E4,  8,$B3,$84,$84,$F0,$4A,  2,$27,$8E,$13,$DE,$10,$EA; 832
		dc.b $13,$30,$AA,$AA,$AA,$AA,$B7,$E8,$99,$57,$F4,$FC,$9C,$FD,$13,$90,$75,$AE,$E4,$C3,$77,$26,$9F,$73,$A6,$37,$55,$D8,$45,$FF,$C1,$C8,$FE,$9F,$AE,$ED,$2F,$E5,$70,$22,$F4,$89,  9,$A0,$D1, $A,$16,$20,$A0,$E0,$11,$30,$7F,$83,$3C,  8,$30,  8,$70,$64,$90,$42, $B,$50; 896
		dc.b $4C,$26,$23,$B6,$FC,$13,$30,$AB,$BB,$9B,$A5,$E9,$D2,$55,$F5,$97,$F3,$84,$87,$EB,$85,$3C,$B1,$88,$D6,$23,$58,$8D,$46,$61,$73,$D3,$50,$5B,$79,$C0,$E2,$C8,$41,$A2,$14,  6,$86,$E2,$D4,$E0,$35,$10,$82,$29,$71,$18,$EC,$AA,$AA,$AA,$B8,$8C,$C6,$63,$31,$98,$CC,$66; 960
		dc.b $33,$1A,$88,$EA,$23,$A8,$8E,$A2,$3A,$EE,$DF,$B9,$FB,$ED,$D3,$1D,$CE,$B6,$36,$95,$B1,$B4,$2D,$8D,$9D, $B,$41,$F2,$B6,$F1,$7E,$FC, $A,$62, $A,$5F,$88,$F3,$A6,$C9,$7D, $F,$13,$97,$61,$7A,$4B,$6B,$8A,$34,$F8,$29,$1F,$34,  6,$F1,$E6,$2F,$19,$1C,$23,$79,$FE,$93; 1024
		dc.b $5F,$FE,$26,$FF,$97,$FC,$AD,$FD,$22,$FB,$75,$9B,$EC,$FB,$64,$59,$1D,$57,$44,$DD,  0,$E6,$89,$BA,  0,$B6,$53,$81,  5,$B0,$7D,$C0,$B1,$73,$D5,$55,$55,$7D,$31,$F1,$75,$AB,$28,$FE,$8E,$CF,$97,$BF,$B7,$7B,$AC,$F8, $F,$7F,$68,$BE,$D0,$3E,$FE,$D1,$75,$9D,$FA,$6E; 1088
		dc.b $F8,$BA,$CF,$6B,$FB,$F2,$75,$7F,$85,$CF,$F8,$5C,$E7,$97,$37,$32,$18,$F3,$77, $E,$AB,$A1,$C7,$AC,$3B,$7E,$B8,$43,$D1,$C2,$4F,$DD,$5A,$77,$56,$4F,$83,$ED,$44,$7C,$1F,$8A,$56, $F,$A2,$41,$F0,$AC,$92,$1C,$FA,$41,$20,$F7,  9,$83,  7,$BA,$7B,$43,  2, $A,  9,  4; 1152
		dc.b $13,$12,  5,$30,$4A,  2,$2E,$C7,  2,$9B,$C4,$F5,  7,$30,$AA,$AA,$AA,$AA,$B7,$E8, $B,  7,$B1,$68,$82,$1D,$A1,$C8,$74,$E2,$71, $E,$BB,$94,$C5,$DF,$D2,$4F,$F1,  2,$3F,$84,$8D,$77,$5F,$E9,$EE,$E4,$8C,$10,$25,$F1,$41,$A2,  4,$BC,$E8,$50,$89,$8E,  1,$17,  3,$FC; 1216
		dc.b $1B,$B0,$21,$A0,$27,$81,$49,  9,$8D,$28,$10,$84,$C4,$24,$F7,$E0,$73, $A,$BD,$D5,$93,$F7,$73,$97,$83,$A4,$EA,$F4,$12,$F5,$14,$F2,$C6,$23,$58,$8D,$62,$35,$19,$85,$CD,$8E,$A2,$7B,$CE, $D,$8A,$31, $D,$42,$8C,$1A,$88,$50,$B5,$38,$2D,$44,$C1,  5,$26,$83,$1D,$95; 1280
		dc.b $56, $F,$71,$4C,$7A,$14,$DE,$E2,$9A,$94,$95,$5D,$DA, $F,$70,$98,$B4,$1E,$E4,$23,$74,$82, $D,$CF,$90,$22,$CE,$12,$13,$C1,$28,  8,$9E,$38,$4F,$78,$43,$A8,$4C,$C2,$AA,$AA,$AA,$AA,$DF,$A2,$46,$B6,$FD,$3E,$4E,$AE,$89,$C9,$CF,$B5,$DC,$83,$B7,$72,$62,$3B,$9C,$70; 1344
		dc.b $DD,$57, $C,$9F,$FC,$1C,$8F,$E9,$FA,$EE,$D2,$FE,$57,  2,$3D,$E2,$42,$68,$12,$F4,$28,$58,$82,$83,$80,$44,$C1,$FE, $C,$F0,$21,$A0,$10,$E0,$52,$41,  8,$D2,$82,$61,$31,$1D,$B7,$E0,$73, $A,$B6,$E6,$EA,$73,$E9,$47,$FA,$D3,$D4,$53,$F5,$C3,$1D,$B7,$C4,$6B,$11,$AC; 1408
		dc.b $46,$A3,$30,$B9,$B1,$D4,$4F,$79,$C1,$B1,$46,$21,$A8,$51,$83,$51, $A,$16,$A7,  5,$A8,$98,$20,$A4,$D0,$63,$B2,$AA,$CB,$9C,$B9,$FE,$B2, $F,$FE,$E4,$1F,$FD,$C8,$3F,$F9,$91,$7F,$F3,$23,$DF,$5F,$D6,$47,$C6,$BF,$AC,$EF,$CB,$9D,$BB,$F9,$7A,$65,$A7,$37,$47,$F4,$EE; 1472
		dc.b $A8,$8E,$86,$15,$11,$D0,$42,$A3,$2B,$A5,$5E,$B9,$3E,$9A,$2A,$AA,$AA,$AA,$D7,$A6,$2F,$D1,$1D,$46,$EA,$32,$FE,$41,$88,$6E,$A3,$91,$BD,$90,$F5,$F6,$FF,$97,$FC,$BA,$DB,$FC,$5A,$7F,$48,$B7,$F4,$83,$47,$CC,$21,$EA,$9C,$52,$F9,$EC,$C9,$7F,$51,$92,$5F,$74,$E4,$6F; 1536
		dc.b $4D,$A9,$D4,$68,$6F,$42,$31,$4D,$B1,$37,$91,$BD,  6,$A4,$63,$BA,$B4,$EE,$AC,$1F,$DD,$58,$57,$77,$3E,$F7,$78,$3A,$21,$D5,$FD,$70,$88,$F5,$DA,$3E,$4D,$10,$9D,$62,$20,$DD,$D6, $F,$F2,$22, $A,$5E,$D7,$44,$14,$FD,$3A,  7,  3,$D4,$3A, $F,$3C,$3A,$7F,  6,  3,$F5; 1600
		dc.b $C2,  2,$5B,$48,$66,$33, $A,$AA,$AB,$9B,$B3,$76,$6E,$F1,$DE,$32,$F1,$93,$1F,$E1,$30,$9F,$22,$85,$8E,$11,$69,$8E,$81,$8E,$11,$B3,$C3,  2,$23,$67,$E0,$70,$4D,$C0,$DC,  8,$B3,$C1,$43,$85,$9E, $A,$6D,$B9,$D8,$20,$23,$70,$38,$4F,$F8,$2F,$1E,$62, $F,$77,$95,$2A; 1664
		dc.b $AA,$AA,$AA,$BB,$DB,$DD,$B1,$C2,$6D,$43,$C0,$49,$32,$14,  9,$24,$3D,$52,$64,$64,$29,$20,$5A,$62,$53,  5,  4,$B0,$28,$28, $A, $C,$4A, $D,$E4,$6A,$15,$55,$55,$57,$30,  0; 1728
Nem_GHZ_Piranha:dc.b $80,$20,$80,  4,  2,$14,  5,$24, $A,$35,$12,$45,$17,$56,$36,$65,$18,$74,  3,$81,  3,  0,$17,$7B,$82,  7,$7A,$83,  5,$19,$84,  5,$1A,$85,  6,$37,$86,  5,$16,$87,  4,  7,$16,$3A,$88,  4,  4,$16,$3B,$89,  5,$13,$8A,  8,$F9,$8B,  6,$39,$8C,  6,$38,$8D,  6,$3C; 0
					; DATA XREF: ROM:0001C0E8o
					; ROM:0001C11Ao
		dc.b $8E,  4,  6,$8F,  4,  8,$18,$F8,$FF,$33,$3C,$31,$EC,$C7,$B3,$1E,$C1,$78,$97,$E5,$B8,$7A,$78,  4,$16,$C6,$A3,$9B,$15,$81,$41, $E,$6F,$16,$79,$59,$96,$C0,$98,$21,$59,$5A,$75,$3B,$A7,$C1,$34,$E9,$20,$E2,$77,$49,$9E,$C9,$B2,  3,$BA, $D,$87,$72,$EF,$E2,$93,$E2; 64
		dc.b $49,  5,$FA,$E5,$B4,$F9,$DC,$41,$36,$7D,$79,$E9,  9,$88,$69,$FB,$15,$37,$46,$82,$F5,$AE,$8A,$DB,$AC,$DF,$F5,$15,$37,$EF,$7A,$99,$36,$4B,$E6,$9F,$72,$C9,$78,$3C,$E0,$82,$EE,$DB,$64,$81,  2,$CC,$FD,$E6,$86,$6D,$17,$11,$F9,$3B,$E4,$F1,$3C,$45,  5,$16,$2C,$D0; 128
		dc.b $DF,  2,$E0,$B5,  7,  5,$99,$7B,$82,$F6,$59,$B8,$CD,$C1,$44,$FB,$5C,$F1,$62,$F8,$B7,$C5,$AF,$F9,$6A,$FF,$F7,$FE,$6D,$F9,$DB,$B2,$F9,$2D,$C8,$17,$92,  6,$42,$42,$4E,$BF,$AB,$56,$72,$FC,$B0,$E4,$B4,$CF,$42,$9B,$A2,  6,$A2,$3F,$43,$F2,$B3,$6F,$D4,$D2, $F,$D1; 192
		dc.b $DC,$4B,$58,$EC,$86,$FC,$AF,$10,$84,$19,$7E,$48,$16,$B7,$2D,$57,$32,$69,$93,$2E,$A5,$B9,$6B,$6D,$6D,$AE,$EE,$9E,$FB,$A0,$BE,$D1,$5E,$42,$BA,$A7,$97,$47,$D1,$36,$CF,$3F,$EF,$2F,$F6,$5C,$CC,$CC,$CC,$DF, $D,$6C,$45,$8F,$11,$69,  8,$21,$29,$B6,$C8,  9,$9E,$93; 256
		dc.b   1,$30,$10,$99,$E4,$13,  1,$30, $C,$DC,$CC,$CC,$CC,$D5,$F0,$F2,$6F,$CE,$49,$BD,$7E,$76,$9B,$D6,$BA,$BC,$FA,$BC,$FA,$97,$AD,$75,$B4,$DE,$FE,$B4,$F5, $B,$EB,$CC,$35,$ED,$C3,$CA,$60,$85,$3E,$D6,  4,$DC,$DB,$66,$E4,$AD,$29,$BD,  2,$6B,$86,$42,$B5,$34,$D6,$77; 320
		dc.b $4F,$85,$89,$AA,$46,$10,$A2,$6B,$3A,$99,$DD, $F,$69,$98,$C2,$6C,$82,$E8,$12,$E9,$30,$9F,$96,$BC,$F9,$B4,$AC,$5C,$23,$D5,$97,$77,$5B,$22,$F0,$8E,$56,$DE,$BF,$33,$64,$27,$A8,$4D,$C9,$D5,$E7,$92,$F9,$FC,$E9,$3E,$E5,$92,$81,$E7,  4,$17,$76,$DB,$24,  8,$16,$67; 384
		dc.b $EF,$34,$33,$68,$B8,$8F,$C9,$DF,$26,$59,$20,$A2,$77,  5,$18,$B2,$E4,$81,$6F,$81,$1B,$69,$21,$73,$48,$22,$E2,$59,$90,$85,$CF,$14,$22,$5F,$B8,$F8,$EF,$F4,$25,$D9, $F,$FC,$7F,$C4,$FF,$3B,$74,$5F,$25,$B9,  2,$F2,$40,$C8,$48,$49,$D7,$F5,$6A,$CE,$5F,$96,$1C,$96; 448
		dc.b $99,$E8,$53,$74,$40,$D4,$47,$E8,$7E,$56,$6D,$FA,$9A,$41,$FA,$33,$5D,$63,$B5,$DF,$95,$E2,$10,$83,$2F,$C9,  2,$D6,$E5,$AA,$E6,$4D,$32,$65,$D4,$B7,$2D,$1D,$33,$97,  9,$7E,$3D,$F7,$41,$7D,$A2,$F5,$65,  8,$5F,$9E,$8F,$CB,$38,$7A,$F8,$6E,$BF,$70,$BF,$9E,$FD,$8F; 512
		dc.b $EE,$25,$FB,$13,$33,$33,$33,$37,$C3,$5B,$11,$63,$C4,$5A,$42,  8,$4A,$6D,$B2,  2,$67,$A4,$C0,$4C,  4,$26,$79,  4,$C0,$4C,  3,$37,$33,$33,$35,$7C,$33,$ED,$37,$D8; 576
Nem_S1LZJaws:	dc.b $80,$20,$80,  3,  0,$14,  4,$24,  6,$35, $F,$45,$18,$55,$14,$66,$39,$74,  2,$81,  4,  3,$15,$16,$26,$35,$82,  5,$15,$17,$77,$83,  5, $E,$16,$34,$84,  6,$37,$85,  7,$74,$17,$76,$86,  5,$10,$16,$32,$26,$36,$37,$78,$87,  5,$12,$17,$7B,$28,$F9,$88,  4,  5,$18; 0
		dc.b $F3,$89,  6,$38,$8A,  7,$75,$18,$F4,$8B,  6,$2F,$8C,  5,$11,$18,$F5,$8D,  6,$33,$18,$F2,$8E,  5,$13,$8F,  6,$2E,$FF,$E5,$52,$3E,$53,$59,$88,$9B,$E4, $C,$87,$67,$43,$81,$98,$34,$9A,$A6,$7C,$1E,$E8,$ED,$FB,$47,$3F,$31,$2D,$64,$FF,$91,$6A,$DF,$DE,$F1,$E8,$73; 64
		dc.b $49,$F7,$BD,$2C, $D,$66,$20,$93,$CD,$70,$BB,$89,$22,$8C,$D5,$EB,$C4,$69,$BA,$49,$B3,$BD,$25,  6,$94,$12,$F6,$8F,$5F,$26,$8A,$6A,$87,$FA,$CC,$6B,$EB,$94,$73,$98,$B2,$75,$37,$4D,$24,$42,$CF,$81,$F5, $E,$98,$F7,$77,$4D,$E6,$24,$14,$1F,  2,$42,$E0,$7D,$74,$FC; 128
		dc.b $A5,$E4,$74,$E9,$E8,$D5,$E8,$2B,$8F,$CF, $A,$DF,$DC,$7E,$7D,$26,$23,$89,$40,$E3,  9,$C9,$2F,  7,$15,$94,$33,$7C,$45,$F8,$8E,$6F,$3A,$1B,$7E,$C5,$22,$EC,$45,$CF,$F5,$70,$77,$EB,$13,$4F,$F8,$91,$27,$CF,  9,$ED,$2E,$56,$FD,$7B,$2C, $B,$F7,$75,$75,$F5,$ED,$7D; 192
		dc.b $58,$C5,$C6,$B5,$6B,$99,$6A,$46,$9F,$A8,$37,$FE,$A4,$DF,$AA,$B8,$3A,$C1,$5C,$DF,$99,$57,$23,$8F,$F4,$64,$8E,$53,$7B,$94,$2B,$39,$70,$E1,$FB,$8D,$3F,$E2,$45,$4F,$E3,$B6,$D6,$C8,$9F,$2D,$64,$34,$7D,$D5,$B3,$5C,$C6,$97,$52,$E4,$D6,$8E,$7D,$93,$40,$74,$56,$52; 256
		dc.b $FD,$42,$79,$9F,$F2,$2C,$3F,$82,$4C,$7C,$A9,$D1,$79,$B1,$16,$15,$23,$E5,$35,$98,$89,$BE,$40,$C8,$76,$74,$38,$19,$83,$49,$AA,$67,$C1,$EE,$8E,$DF,$B4,$73,$F3,$12,$D6,$4F,$F9,$16,$AD,$FD,$EF,$1E,$87,$3E,$25,$3A,$F4,$BD, $D,$F3,$39,  9,$C8,$4D,$23,$D3,$7F,$2D; 320
		dc.b $FA,$A5,$8B,$50,$71,$C1,$90,$38,$F2,$71,$68,$B1,$FE,$B1,$CF,$D5,$DC,$9E,$51,$CE,$78,$EA,$6E,$9A,$48,$85,$9F,  3,$EA,$1D,$31,$EE,$EE,$9B,$CC,$48,$28,$3E,  4,$85,$C0,$FA,$E9,$F9,$4B,$C8,$E9,$D3,$D1,$AB,$D0,$57,$1F,$9E,$1D,$2F,$EE,$3F,$3E,$3F,$3D,$9C,$5B,$3D; 384
		dc.b $FA,$B4,$26,$F3,$88,$52,$FE, $C,$74,$7C,$5C,$FF,$57,$37,$AE,$8F,$D2,$9A,$61,$D6,$FE,$19,$A7,$F0,$48,$93,$E7,$84,$F6,$97,$2B,$7E,$BD,$96,  5,$FB,$BA,$BA,$FA,$F6,$BE,$AC,$62,$E3,$5A,$B5,$CC,$B5,$23,$4F,$D4,$1B,$FF,$52,$6F,$D5,$5C,$1D,$60,$AE,$6F,$CC,$AB,$91; 448
		dc.b $C7,$FA,$32,$47,$29,$BD,$CA,$15,$9C,$B8,$70,$FD,$C6,$9F,$F1,$22,$A7,$F1,$DB,$6B,$64,$4F,$96,$B2,$1A,$3E,$EA,$D9,$AE,$63,$4B,$A9,$72,$6B,$47,$3E,$C9,$A0,$3A,$2B,$29,$7E,$A1,$3C,$CF,$F9,$16,$1F,$C1,$26,$3E,$54,$E8,$BC,$D8,$8A,$9B,$63,$C1,$43,$19, $C,$84,$1F; 512
		dc.b $FC,$61, $E,$60,$32,$68,  8,$34,$39,$D8,$41,$20,$D0,$10,$C6,$43,$F8,$CF,$D8,$88,$88,$A9,$95,$20,$36,$A6,$C9,$95,$20,$9B,$24,  7,$F1,$86,$49,$E0,$B2,$4F,$E3,$3F,$22,$22,$22,$21,$95,$36,$6C,$B1,$FD,$6C,$78,$1B, $F,  3,$22,$1E,$31,$91,$11,$11,$11,$17,$30,$7C; 576
		dc.b   6,$D8,$D9,$A0,$90,$22,$22,$22,$27,$80; 640
Nem_S1SYZRoller:dc.b $80,$50,$80,  3,  1,$14,  5,$24,  6,$34,  7,$45,$14,$55,$18,$66,$33,$74,  4,$81,  3,  0,$15,$15,$26,$38,$82,  5,$17,$17,$77,$83,  5,$12,$17,$72,$84,  7,$75,$85,  7,$76,$86,  5,$13,$17,$73,$87,  4,  8,$17,$74,$28,$F5,$88,  5,$16,$18,$F3,$89,  6,$34,$17,$78; 0
		dc.b $8A,  8,$F6,$8B,  8,$F2,$8C,  6,$32,$18,$F7,$8D,  6,$37,$8E,  6,$35,$8F,  6,$36,$18,$F4,$FF,$44,$44,$C7,$77,$EF,$30,$D7,$33,$8A,$4A,$97,$97,$68,$6B,$AC,$52,$57,$60,$97,$4E,$4C,$21,$33,$CA,$95,$B1,$E4, $C,$8D,$E4,$8D,$DC,$DC,$49,$83,$F2,$5B,$A8,$E5,$81,$FA; 64
		dc.b $3A, $B,$F1,$9E,$E8,$6F,$D7,$F6,$7A,$F5,$9C,$1A,$CF,$D4,$FE,$98,$35,$68,$21,$B8,$89,$A8,$78,$A4,  4,$60,$7A,$AE,$F7,$5E,$A4,$1B,$6C,$7B,$3F,$6D,$FB,$7E,$A2,$EB,$DA,$CB,$6D,$8F,$69,$EA,$6C,$7D,$BB,$1D,$4E,$B1,$A5,$EC,$6D,$3D,$46,$D6,$3E,$72,$B2,$D9,$7C,$A4; 128
		dc.b $39,$F9,$F9,$48,$10,$D2,$18,$95,$D8,$68,$3B,$BE,$4D,$AB,$E4,$DB,$A8,$39,$28,$DD,$F2,$7D,$2C, $D,$C8,$A7,  4,$2F,$EC,$54,$68,$FB,$AF,$69,  5,  7,$AE,$D6,$F2, $B,$D7,$6B,$74,$F2,  7,$6A,$48,$FA,$5B,$A5,$A4,$DB,$45,$94,$1B,$11,$E9,$CA,$C3,$4F,$31,$B4,$AD,$FA; 192
		dc.b $91,$E3,$2F,$52,$17,$43,$B1,$83,$60,$45,$84,$6A,$6D,$A3,  9,$F1,$A9,$D4,$86,$D0,$68,$88,$88,$88,$88,$94,$DD,$13,$31,$BA,$22,$62,$F2,$C6,$DA,$E0,$22,$22,$22,$37,$7D,  6,$3C,$A4,$D7,$42,$31,$C5,  1,$AE,$62,$82,$97,$92,$55,$ED,$8B, $B,$48,$52,$CF,$61,$6A,$C9; 256
		dc.b $AC,$14,$4A,$DA,  7,$1A, $C,  4,$44,$4C,$5A,$9E,$62,$9E,$2C,$3C,$77,$95,$6C,$BF,$AB,$EF,$FA,$AE,$3F,$36,$17,$F3,$66,$B4,$F2,$F7,$21,$7D,$BB,$74,  4,$1B,$6C,$B5,$22,$FE,$CD,$59,$D5,$C7,$E9,$AA,$FF,$B6,$AB,$F3,$AF,$E8,$F3,$B7,$E6,$F9,$19,$2D,$48,$E5,$8A,$B0; 320
		dc.b $A5,$B4,$B4,$D4,$5B,$C5,$B5,$22,$CD,$E6,$D6,$3A,$73,$B1,$11,$E3,$D0,$1D,$20,$FE,$A6,$DF,$F1,$CE,$F9,$F9,$77,$A0,$FC,$D7,$E8,$A9,$FA,$AE,$FE,$EF,$F9,$AE,$99,$6E,$B5,$3E,$D7,$9E,$FA,$ED,$63,$6D,$8C,$FB,$4B,$A8,$BF,$B3,$4C,$4F,$87,$FD,$B7,$10,$7F,$AD,$7F,$D9; 384
		dc.b $FE,$9A,$4F,$26,$FE,$1A,$CB,$B3,$7E,$8C,$1F,$D1,$D8,$83,$3F,$DC,  6,$B1,$B0,$69,$9B,$11,$A3,$7E,$DA,$DE,$27,$FB,$FD,$38,$FF,$49,$FF, $A,$22,$5F,$3F,$6E,$F4,$1F,$9B,$BB,$FE,$A2,$57,$6E,$AC,$1A,$79,$DD,$6E,$29,$2E,$EF,$21,$49,$1B,$87,$E4,$29,$54,$44,$44,$C7; 448
		dc.b $8C, $B, $F, $D,$A2,$F9,$B7,$12,$B7,$80,$FF,$AB,$B3,$85,$F2,$A0,$A5,$C2,$56,$92,$CE,$D2,$AE,$61,$C5,$A4,$92,$A5,$AA,$8D,$E0,$25,$34, $C,$3C,$7F, $A,$D5,$FE,$57,$F2,$FF,$58,$41,$F6,$ED,$EB,$C5,$B6,$6A,$CF,$B7,$97, $B,$FD,$67,$FD,$B0,$CC,$1F,$D1,$E3,$CF,$F5; 512
		dc.b $5C,$94,$1F,  0,$F9,$9D,$39,$D8,$88,$F1,$E8, $E,$90,$74,$5B,$35,$7C,$7E,$CF,$BF,$2F,$ED,$7E,$6F,$DF,$F5,$BA,$ED,$96,$F7,$A9,$E4,$6D,$B7,$4F,$DB,$5F,$DA,$9F,$F1,$3F,$E6,$3F,$E6, $B,$FC,$31,$C9,$E4,$FF,$F3,$3C,$AB,$DB,$F4,$7E,$6B,$B4,$CD,$97,$43,$A4,$CF,$EE; 576
		dc.b  $F,$EC,$F8,$3F,$C3,$69,$2C,$93,$31,$26,$91,$96,$62,$F4,$91, $F,$23,$7C,$48,$52,$43,  1,$11,$11,$11,$11,$12,$9F,$9D,$A6,$E9,$C9,$F7,$95,$37,$92,$C9,$A4,$B9,$69,$4C,$9F,$54,$39,$2C,$D1,$1B,$24,$CF,$24,$C6,$A8,$C2,$99,$1A,$B6,$A8,$72,$21,$F5,$4D,$72,$CF,$5B; 640
		dc.b $A2,$22,$22,$3F,$EF, $F,$EB,$1F,$23,$FF,$14,$7F,$49,$2E,$BE,$8B,$2F,$CF,  7,$D5,  8,$C0,$41,$48,  6,$AF,$EB,$9C,$10,$B3,$71,$80,$F3,$31,$5C,$45,$26,$C1,$F9,$F4,$50,$D3,$50,$D5,$99,  6,$AA,$16,$AB,$55,$FD,$89, $B,$55,$A9,$BB,$D5,$7F,$44,$A2,$9F,$B2,$44,$4F; 704
		dc.b $DE,$27,$EB,  8,$C6,$47,$F6,$2D,$FC,$FA,$AC,$4F,$A7,$A6,$B3,$21,$7A,$4C,$60,$53,$95,$24,$B2,$47,$92,$C9,$C7,$22,$16,$64,$38,$F5, $A,$1E,  3,$4D,$82,$C1,$AB,$43,$CD,$82,$C1,$E6, $F,$3A,$AF,$38,$9F,$45,$E6,$1E,$6F,$C1,$9E,$27,$15,$A7, $D,$77,$FD,$11,$FD,$92; 768
		dc.b $22,$22,$3E,$49,$96,$7A,$DE,$9A,$E7,$3A,$DF,$31,$D5,$E1,$43,  3,$13,$A0,$69,$23,$84,$33,$CE,$30,$13,  2,  8,$5A,$AC,$5D,$60,$C1, $F,$19,$F1,$76,  8,$B7,$C5,$E9,$DD,$11,$11,$11,$11,$11,$FD,$E9,$95,$5F,$21,$E8,$E3,$6A,$6F,$B2,$8C,$C6,$61,$77,$D9,$46,$75,$45; 832
		dc.b $D9,$11,$C6,$63,$30,$B7,$44,$70,$D7,$4B,$A2,$5D,$3B,$A2,$22,$22,$3F,$EF, $F,$EB,$3F,$63,$95,$6D,$FB,$91,$B6,$8D,$D3,$65,$F5, $F, $B,$56,$8E,$1A,$1E,$A6,$14,$4E,  1,$98,$31,$C2,$F3,$20,$85,$E7,$13,  4,$1E,$64,$45,$4F,$4E,$6A,$16,  1,$99,  4,$74,$60,$A0,$F3; 896
		dc.b  $E, $D,$68,$12,$A4,$38,$50,$E0,$F0,$C1,$14,$10,$8D,$75,$FD,$8A,$FE,$88,$D6,$9F,$B2,$44,$4F,$DE,$3F,  7,$F5,$87,$F5,$DC,$1C,$9B,$F3,$C4,$1F,$E0,$FA,  4,$3F,$D1,$D4,$3F,$ED,$FF,$6D,$FC,$17,$E4,  8,$59,$2C,$28,$A4,$28,$93,$F4,$5E,$49,$CD,$83,$F3,$50,$66,$D5; 960
		dc.b $60,$F5,$5A,$B0,$5E,$81,$E1,$60,$35,$69,$55,$89,$8B,$10,$62,$7B,$68,$81,$A7,$B2,$E4,$FF,$AD,$3F,$B2,$44,$44,$47,$C9,$32,$4C,$A8,$33,$D4,$1C,$93,$26,$8D,$45,  4,$F1,$27,$C9,$F4, $F,$24,$23,$3B,$67,$60,$89,$8D,$17,$25,$1A,$60,$67,$A3,$65,$8C,$93,$19,$63,$2C; 1024
		dc.b $64,$88,$88,$88,$88,$94,$FC,$A5,$3A,$F4,$7E,$A7,$A2,$37,$53,$FA,$66,$E6,$94,$BA,$34,$DB,$2D,$B2,$50,$B2,$32,$CA,$71,$9C,$22,$52,$59,  5,$DD,$1F,$24,$6D,$D6,$54,$DD,$16,$54,$DD,$3F,$3A,$88,$88,$88,$FF,$A4,$B9,$FC,$A4,$A0,$C0,$EA,$60,$C3,$7E,$DD,$79,$F4,$60; 1088
		dc.b $8D,$38,$9F,$45,$99,  4,$18,$9B,  5,$14,$AB,$84,$78,$68,$58,$35,$5F,$5C,$E0,$FA,$BC,$FD,$5A,$64,$2C,$73,$6E,$11,$1F,$DD,$32,$4F,$74,$69,$3F,$EB,$37,$E5,$8F,$CE,$EB,$2C,$F7,$FD,$72,$22,$7E,$C9,$FF,$63,$CB,$AA,$C3,$CE,$F3,$30,$60,$87,$86,$14,$86,$E0,$88,$9D; 1152
		dc.b $4D,$48,$30,$41, $D, $B,$5A,  6,$E5,$49,$2D,$54,$62,$71,$75,$1D,$1A,$57,$9E,$26,$C1,$44,$CD,$5E,$61,$44,$19,$AF,$ED,$D8,$4C,$C1,$9A,$83,$14, $B,$57,$AE,  2,$2E,$47,$FB,$87,$23,$AB,$FE,$B8,$FE,$F9,$11,$11,$1F,$AA,$75,$C4,$C7,$5C, $C,$56,$7D,$68, $C,$EE,$D0; 1216
		dc.b $30, $C,$CC,$E8,$20,$DD,$64,$BC,$F1, $F,$22,$29,$58,$33,$6E,$67,$A0,$C4,$38,$CC,$34,$B1,  9,$40,$65,$41,$2C,$6F,$9E,$B4,$CA,$F8,$D5,$11,$33,  0; 1280
Nem_Motobug:	dc.b   0,$1D,$80,  4,  6,$15,$11,$25,$16,$36,$32,$46,$2E,$57,$6A,$67,$75,$74,  4,$81,  3,  0,$15,$12,$26,$2B,$37,$6B,$47,$77,$57,$78,$82,  7,$71,$27,$73,$83,  6,$2A,$18,$F5,$84,  8,$F4,$85,  7,$72,$86,  5, $E,$16,$34,$87,  4,  5,$16,$36,$27,$74,$88,  4,  3,$15; 0
					; DATA XREF: ROM:0001C10Co
		dc.b $14,$89,  4,  2,$15, $F,$27,$76,$57,$7B,$8A,  7,$6E,$8B,  5,$13,$8C,  5,$10,$16,$33,$28,$F2,$48,$F8,$58,$F3,$8D,  6,$2F,$16,$30,$8E,  7,$70,$8F,  7,$6F,$16,$31,$FF,$44,$44,$BB,$1D,$43,$16,$FD,$7C,$46,$F6,$AE,$1E,$A3,$21, $F,$41,$6E,$35, $F,$CA,$D9,$6A,$F4; 64
		dc.b $FC,$AC,$4D,$5D,$57,$A3,$A2,$6A,$EF,$57,$44,$C2,$F1,$A9,$D1,$30,$BC,$6A,$74,$78,$AF,$EC,$93,$56,$E8,$5B,$76,$78,$37,$E6,$A1,$87,$EA,$B3,$BE,$1B,$B4,$CE,$FC,$F7,$69,$5F,$97,$E6,$A7,$F9,$29,$79,$4E,$AE,$63,$3F,$4F,$5E,$62,$1F,$A6,$E6,$21,$FA,$65,$E6,$34,$DB; 128
		dc.b $9D,$6A,$7C,$EB,$53,$FD,$97,$4F,$E1,$27,$FF,$7C,$F0,$DD,$FE,$CF,$CD,$40,$7F,$6A,$BF,$2D,$D9,$D7,$E7,$2F,$3A,$FC,$E5,$E6,$21,$7F,$FF,$3E,$2F,  5,$E5,$80,$23,$10,$FD,$68,$78,$C3,$95,$42,  4,$89,$84,$2E,$87,$EB,$61,$6D,$D9,$E1,  8,$E7,$BA,$18,$41,$BE,$30,$FF; 192
		dc.b $65,$FF,$EC,$FE,$EE,$77,$F0,$FF,$6F, $F,$DE,$61,$F9,$ED,$3F,$AE,$7A,$7F,$63,$4F,$E4,$11,$FB,$8F,$F4,$A2,  9,$C1,$CB,$10,$AE,$E1,$A4,$4C,$2F,  7,$2B,$50,$18,$50,$D4,$93,  3,$63,$1A,$8C,$5D,$FC,$29,$E2,$A0,$B8,$CF,$17,$6C,$5C,$70,$9B,$EB,$37,$5F,$30,$F0,$AE; 256
		dc.b $5B,$DF,$27,$29, $A,$49,$D2,$28,$C9,$D5,$EF,$1C,$9C,$55,  9,$96,$F0,$42,$AA,$F1,$15,$7E,$BB,$F7,$F7,$D7,$7C,$F1,$98,$7C,$AF,$9C,$A9,$3A,$CF,$A7,$FC,$4E,$1B,$FE,$3F,$E3,$E0,$8F,$DA,$87,$D3,$60,$C7,$D2,$51,$5D,$76,  6,$43,$28,$75,$87,$58,$75,$E1, $D,$4A,$56; 320
		dc.b $D9,$A8,$41,$74,$FD,$C0,$A7,$F2,$47,$B0,$C3,$3A,$ED,$26,  8,$88,$88,$8C,$5D,$E2,$5D,$EC,$5A,$EC,$FA,$EE,$78,$EA,$48,$8F,$F1,$DB,$59,$8F,$DC,$FE,$A2,$5E,$F5,$F6,  5,$E1,$11,$94,$C8,$64,$6F,$19,$3C,$5C,$52,$B8,$22,$22,$31,$77,$B1,$6B,$B3,$EB,$B9,$E3,$A9,$22; 384
		dc.b $23,$CF,$5A,$87,$D3,$63,$97,$6A,$16,$BE,$C0,$BC,$22,$23,$1B,$C6,$4F,$17,$14,$AE,  8,$88,$88,$DF,$D2,$88,$27,  7,$2C,$42,$BB,$86,$96, $B,$C1,$CB,$1D,$E0,$C2,$86,$DF,$33,$13,  6,$DF,$9B,$94,$C4,$4C,$4E,$51,$FF,$92,$82,$FE,$16,$C5,$FB,$20,$52,$FC,$DE,$33,$1F; 448
		dc.b $FF,$C5,$C5,$8C,$F1,$99, $F,$D5,$E3,$FA,$BC,$2B,$E4,$E2,$A8,$4E,$5C,$88,$55,$5F,$2F,$D1,$FE,$BB,$97,$AF,$7D,$F5,$4B,$F7,$33,$91,$7E,$E2,$F0,$54,$E9,$FF,$13,$86,$FF,$8F,$F8,$F8,$23,$F6,$A1,$F4,$D8,$31,$F4,$94,$57,$5D,$81,$90,$CB,$F5,  3,$2A, $B,$8C,$6A,$31; 512
		dc.b $A8,$C2,$22,$75,$FD,$46,$B6,$57,$77,$67,$28,$2A,$D9,$C2,$2F, $C,$E1,$91,$22,$22,$25,$94,$AE,$5A,$16,$46,$46,$57,$3D,$13,$52,$BE,$DB,$15,$1E,$DD,$28,$FD,$8D,$4D,$E6,$BF,$C8,$23,$2A,$15,$1E,$D4,$ED,$91,$50,$AE,$36,$2B,$19,$58,$AC,$6C,$4C,$4C,$7A,$89,$9E,$C5; 576
		dc.b $62,$C8,$98,$A2,$4C,$5A,$89,$8A,$20,  0; 640
Nem_S1Newtron:	dc.b   0,$55,$80,  4,  3,$15, $F,$25,$10,$36,$31,$46,$34,$58,$F4,$67,$72,$73,  0,$81,  4,  2,$15,$11,$26,$2C,$36,$33,$47,$70,$78,$F2,$82,  4,  6,$16,$2B,$28,$EF,$37,$74,$83,  5,$13,$16,$2E,$28,$F1,$84,  6,$2A,$16,$2F,$85,  5,$14,$17,$6C,$86,  7,$76,$16,$32,$87; 0
		dc.b   5, $E,$17,$71,$28,$EE,$88,  4,  5,$17,$6A,$28,$F0,$89,  4,  4,$17,$6B,$38,$F3,$8A,  8,$EB,$18,$F5,$8B,  7,$6F,$38,$F6,$8C,  6,$2D,$18,$EA,$27,$6E,$8D,  5,$12,$16,$30,$27,$6D,$8E,  7,$73,$FF,$18,$C8,$E4,$21,$23,$A8,$E8,$20,$C7,$33,$EC,$20,$C7,$33,$98,$83; 64
		dc.b $1B,$1C,$84,$18,$C8,$E4,$34,$23,$60,  1,$CC,$FA,$CF,$79,$EF,  7,$51,$CC,$E6,$7B,$C1,$D0,$E6,$73,$36,  7,$23,$B4,$E4,$73,  7,$69,$F6,$3B,$4E,$40,$ED,$3B,$4C,$8E,$40,$E4,$76,$9C,$8C,$80,  7,$BC,$FA,$C6,$9B,$CF,$79,$91,$B8,$1E,$F3,$43,$53,$98,$32,$34,$32,$3A; 128
		dc.b   3,$23,$53,$23,$98,$35,$37,$1B,$8D,  1,$A1,$F6,$37,$1A,$83,$43,$53,$53,$20,  1,$A0,$E4,$86,$A6,$E1, $A,$1C,$CD,$C6,$80,$EA,$3A,$1D,$46,$80,$D8,$EA,$32,$3A,  3,$71,$B8,$C8,$DC, $F,$B1,$B8,$D4,$D4,  0,  1,$B8,$72,$EC,$68,  0,$E5,$51,$B1,$A0,$81,  0,  0,  0; 192
		dc.b   0,  0,  0,  0,$34,$53,$23,$23,$40,$69,$A2,$8E,$48,$39,$20,$83,$1D,$46,$C2,  4,$64,  0,  0,  0,  0,  2, $A,$6A,$68,$6A, $D, $D, $C,$8C,$80,  0,  1, $A,$1A,$9B,$81,$A9,$B4,  8,$1A,$19, $D,  8,$E8,$64,$34,$63,$23,$51,$A1,$19,  0, $C,$8E,$87,$31,  6,$3A,$8D; 256
		dc.b $44,  8,$D4,$DC,$34,$43,$70,$D0,$8D,$86,$84,$74,$1A,$11,$90,$D1,$4D,  4,$2A,$32,$32,$10,$63,$20,  0, $F,$C3,$1F,$E6,$C3, $A,$AE,$7E,$17,$EC,$7C,$AE,$A6,$4F,$6B,$A9,$93,$DA,$77,$EC,$7D,$73,$AA,$72,$3E,$97,$48,$CB,$A4,$AD,$3B,$2B,$95,$AF,$AE,$3C,$ED,$87,$49; 320
		dc.b $63,$16,$E7, $E,$10,$E1, $E,$18,$E7,$A5,$80,  0,$31,$FD,$D5,$DE,$BE,$D5,$75,$FF,$6E,$FF,$1F,$D5,$D3,$F6,$75,$EF,$A7,$F0,$EB,$9E,$DB,$AB,$96,$EC,$26,$DF,$CC,$C1,$AD,$CB,$74,$9A,$DC,$A3,$6C,$9B,$74,$70,$2F,$DE,$6D,$29,$75,$6D,$B3,$9E,$16,$27,$96,$6C,$4F,$E0; 384
		dc.b $CF,$2A,$A2,$EF,  2,$6B,$DB,$59,$19,$57,$9B,$FF,$A3,$8D,$80,$FA,$F9,$6F,$F5,$D3,$F5,$7D,$68,$E5,$4F,$62,$E2,$BF,$9B,$8A,$BB,$56,$F2,$49,$AD,$CA,$5D,$DF,$B4,$27,$22,$97,$E9,$75,$12,$95,$F4,$8A,$D9,$3A,$8B,$F7,  5,$36,$D5,$DC,$A8,$C8,$EC,$9C,$A8,$C8,$EC,$9D; 448
		dc.b $A8,$91,$78,$EA,$27,$6B,$F0,$42,$70,  1,$39,$21,$1A,$62,$84,$A8,$E4,$7D,$CB,$DC,$87,$4F,$17,$2E,$BD,$97,$CD,$75,$DF,$4B,$E6,$85,$3B,$E9,$55,$26,$55,$DE,$5B,$3F,$71,$32,$AA,$9D,$BB,$AC,$E3,$93,$B5,$12,$FE,$99,$DA,$89,$5C,  0,  0,  0,  0, $B,$C9,$CB,$E9,$D9; 512
		dc.b $67,$A7,$6D,$7A,$17,$9C,$75,$70,$F3,$E1,$AF,$82,$F0,$3D,$49,$18,$2A,$16,$8A,$85,$A2,$A1,$1B,$3E,$AD,$64,$7D,$F5,$56,$4F,$EF,$B1,$F9,$80, $D,$39,$20,  0,  0,  7,$72,$EB,$57,$78,$6B,$25,$2F,$32,$D6,$5F,$A9,$CD,$BC,$A1,$C1,$FE,$5E,$56,$42,$C1,$4E,$30,$D8,$5A; 576
		dc.b $9C,$65,$55,$71,$52,$52,$62,$79,$32,$A1,$1D,$8D,$AF,$FA,$3A,$F3,$3B,$29,$18,$15,$75,$13,$94,$8C,$AB,$27,$29,$1E,$7A,$C9,$FF,$D1,$C7,$31,$1B,$B1,$2D,$97,$42,$FD,$85,  6,$BC,$96,$15,$97,$18,$47,$53,$95,$F1,$45,$72,$BE,$28,$AE,$57,$D8,$91,$7E,$6D,$51,$3E,$2D; 640
		dc.b $4A,$89,$F1,$6A,$54,$50,$26,$BE,$2F,$B1,$A2,$F4,$D5,$9A,$6A,$4E, $A,$99,$D5,$42,$4B, $E,$AA,$F3,$3A,$F3,$7F,$F4,$5F,$C2,$16,  0,$FC,$31,$FE,$6C,$30,$AA,$E7,$E1,$7E,$C7,$CA,$EA,$64,$F6,$BA,$99,$3D,$A7,$7E,$C7,$D7,$3A,$A7,$23,$E9,$74,$8C,$BA,$4A,$D3,$B2,$B9; 704
		dc.b $5B,$8B,$17,$3B,$60,$D6,$4A, $D,$67,$37,$B7,  7,$B7,  7,$93,$67,  2,$E9,$8E,$60,  0,$31,$FD,$D5,$DE,$BE,$D5,$75,$FF,$6E,$FF,$1F,$D5,$D3,$F6,$75,$EF,$A7,$F0,$EB,$9E,$DB,$AB,$96,$EC,$26,$DF,$CC,$C1,$AD,$CB,$74,$9A,$DC,$A3,$6C,$9B,$74,$70,$2F,$DE,$6D,$29,$75; 768
		dc.b $6D,$B3,$9E,$15,$92,$47,$BF,$3A,$EC,$7B,$66,$CF,$CD,$DE,  4,$D7,$B6,$B2,$32,$AF,$37,$FF,$47,$1B,  7,$A6,$18,$FF,$36,$18,$55,$73,$F0,$BF,$63,$E5,$75,$32,$7B,$5D,$4C,$9E,$D3,$BF,$63,$EB,$9D,$53,$91,$F4,$BA,$46,$5D,$25,$69,$D9,$5C,$AD,$7D,$71,$E7,$6B,$CB,$A4; 832
		dc.b $A1,$63,$73,$C7,$3D,$2C,  0,  0,  0,$C7,$F7,$57,$7A,$FB,$55,$D7,$FD,$BB,$FC,$7F,$57,$4F,$D9,$D7,$BE,$9F,$C3,$AE,$7B,$6E,$AE,$5B,$B0,$9B,$7F,$33,  6,$B7,$2D,$D2,$6B,$72,$8D,$B2,$6D,$D1,$C0,$BF,$79,$B4,$A5,$D5,$B6,$CE,$78,$58,$9E,$5C,$1A,$27,$C1,$88,$E3,$54; 896
		dc.b $5C,$A6,$55,$D5,$5A,$3C,$BB,$E3,$8D,$80,$19,$79,$C5,$7F,$A3,$FC,$9C,$D0,$93,$C8,$C9,$A3,$54, $B,$BE,$AC,$4B,$BF,$4B,  0,  0,  0,$3B,$97,$5A,$BB,$C3,$59,$29,$79,$96,$B2,$FD,$4E,$6D,$E5,$5F,$91,$42,$CD,$23,$C8,$80,  0,  1,$1B,$B1,$2D,$97,$42,$FD,$85,  6,$BC; 960
		dc.b $96,$15,$97,$18,$47,$53,$95,$F1,$45,$72,$BE,$28,$AE,$57,$D8,$91,$7E,$6D,$53,$EC,$6A,$55,  8,$B5,$2A,$84,$5A,$F8,$66,$D0,$24,$D4,$50,$4D,$48,$58,$AA,$16,$34,$24,$2F,$48,$FA,$47,$D2,$3E,$84,  0,$3C,$31,$FE,$6C,$30,$AA,$E7,$E1,$7E,$C7,$CA,$EA,$64,$F6,$BA,$99; 1024
		dc.b $3D,$A7,$7E,$C7,$D7,$3A,$A7,$2F,$E1,$5D,$28,$F4,$95,$B9,$D7,$2B,$5F,$5C,$79,$DB, $E,$92,$C6,$2D,$CF,$D2,$23,$1F,$DD,$5D,$EB,$ED,$57,$5F,$F6,$EF,$F1,$FD,$5D,$3F,$67,$5E,$FA,$7F, $E,$B9,$ED,$BA,$B9,$6E,$C2,$6D,$FC,$CC,$1A,$DC,$B7,$49,$AD,$CA,$36,$C9,$B7,$47; 1088
		dc.b   2,$FD,$E6,$D2,$97,$56,$DB,$39,$E1,  4,$E4,$5D,$7C,$B7,$FA,$E9,$FA,$BE,$B4,$72,$A7,$B1,$71,$5F,$CD,$C5,$5D,$AB,$79,$24,$D6,$E5,$27,$23,$BF,$68,$4E,$45,$2F,$D2,$A2,$92,$95,$F4,$8A,$D9,$3A,$8B,$F7,  5,$36,$D5,$DC,$A8,$C8,$EC,$9C,$A8,$C8,$EC,$9D,$A8,$91,$78; 1152
		dc.b $EA,$27,$6B,$F0,$42,$70,  1,$39,$21,$1A,$62,$84,$A8,$E4,$7D,$CB,$DC,$87,$4F,$17,$2E,$BD,$97,$CD,$75,$DF,$4B,$E6,$85,$3B,$E9,$55,$26,$55,$DE,$5B,$3F,$71,$32,$AA,$9D,$BB,$AC,$E3,$93,$B5,$12,$FE,$99,$DA,$89,$5C,$5E,$71,$53,$E1,$AF,$D0,$93,$91,  0,  7,$72,$EB; 1216
		dc.b $57,$78,$6B,$25,$2F,$32,$D6,$5F,$A9,$CD,$AC,$C4,$80,$11,$BB,$12,$D9,$74,$2F,$D8,$50,$6B,$CB,$1A,$CB,$48,$80,  0,$C7,$D7,$4E,$BF,$CD,$C2,$9F,$B3,$7D,$3B,$52,$78,$3F,$2A,$4E,$56,$9C,$F6,$4E,$5D,$47,$FB,$39,$5A,$47,$75,$72,$B4,$BF,$A5,$2B,$7B,$EC,$C0,$DA,$3D; 1280
		dc.b $1E,$5F,$C2,$84,$7B,$F4,$B2,$1F,$FA,$FF,$DF,$FE,$FD,$8F,$6D,$7F,$9B,$3D,$D8,$36,$F3,$FD,$E4,$99,$5D,$6E,$5D,$52,$4E,$C5,$95,$B8,$23,$8B,$AB,$6A,$3B,$AB,$6F,$34,$5F,$E6,$B1,$26,$DE,$75,$C7,$F8,$51,$3E,$85, $C,$C6,$3D,$60,$69,$71,$A1,$F8,$EC,$7A,$CF,$F7,  8; 1344
		dc.b $B5,$6A,$E2,$A5,$D8,$95,$D9,$38,$9C,$48,$EC,$9C,$4E,$24,$5E,$2A,$4B,$FA,$9F,  2,$42,$FE,$49,$24,$7C,$EC,$48,$A1,$42,$28,$4D,$A5,$80, $F,$E1,$C3,$F8,$BE,$3F,$B5,$F0,$45,$4A,$6A,$E3,$A9,  9,$5D,$93,$95,  9,$1D,$93,$95,  9,$17,$8A,$FF,$27,$C3,$59,$7F,$64,$9B; 1408
		dc.b $F9,$25,$DE,$96,$7F,$8B,$C8,  0,  1,$CF,$92,$77,$14,$15,$32,$2F,$D2,$2A,$71,$2F,$D2,$AA,$71,$2F,$D2,$6B,$D4,$5E,$28,$5A,$8B,$BC,$BF,$53,$9B,$67,  2,  0,$6E,$C6,$DF,$D7,$F5,$3F,$F9,$FF,$BC,$FD,$7F,$56,$DF,$DE,$4A,$1F,$BD,$18,$FF,$31,$F6,$FE,$FF,$77,$E3,$F2; 1472
		dc.b $FD,$FD,$BF,$C6,$FD,$FE,$5F,$BF,$EA,$FD,$FE,$E9,$7F,$33,  3,$FE,$68, $F,$DD,$A7,$E3,$FF,$98,$FD,$DB,$5F,$B4, $D,  0,  0; 1536
S1Nem_SYZSnail:	dc.b $80,$3D,$80,  3,  2,$14,  6,$24,  8,$35,$13,$45,$15,$56,$32,$66,$3A,$73,  1,$81,  3,  0,$15,$14,$28,$F3,$48,$F8,$82,  6,$34,$18,$F6,$83,  5, $E,$17,$76,$27,$7A,$84,  6,$35,$85,  6,$38,$86,  5,$18,$18,$F7,$87,  5, $F,$18,$F2,$88,  5,$16,$89,  6,$33,$8A,  6; 0
		dc.b $39,$8B,  6,$37,$8C,  6,$36,$8D,  7,$78,$8E,  5,$17,$8F,  5,$12,$17,$77,$FF,$24,$92,$4C,$DF,$8B,$6B,$8C,$EC,$9E,$AF,$B4,$5B,$3A,$FE,$B1,  5,$7F,$14,$41,$B6, $C,$38,$94,$C2,$C7,$E6,$95,$23,$DD,$9E,$ED,$36,$F2,$F0,$EE,$55,$C6,$EE,$6F,$CF,  9,$C9,$7E,$AD,$59; 64
		dc.b   9,$47,$E6,$9B,$94,$1B,$9F,$CD,$C0,$C8,$21,$BF,$BE,$5F,$94,$FD,$17,$A2,$49,$26,$3F,$48,$E8,$D5,$3F,$3B,$E9, $F,$BD,$24,$B5,$7C,  9,$84,$32,$73,$3B,$57,$B6,$DD,$A0,$36,$DD,$DF,$1D,$A9, $E,$A4,  7, $A,$B8,$55,$C0,$92,$4A,$7D,$31,$68,$1D, $F,$2A,$BE,$97,$DE; 128
		dc.b $77,$96,$F5,$E4,$6E,$26,$F2,$B8,$BC,$F3,$E0,$5B,$47,$B0,$56,$1B,$49,$F7,$AE,$77,$42,$CB, $D,$69,$89,$52,$4E,$4F,$41,$84,$BA,$E0,$BC,$17,$64,$E1,$5D,  5,$75,  4,$96,$EC,$FA,$62,$CE,$61,$D0,$F2,$AE,$A1,$5F,$75,$E7,$AD,$C5,$44, $F,$5C,$8B,  5,$C7,$E5,$3C,$37; 192
		dc.b $60,$A9,$CB,$A4,$B0,$FC,$ED,$76,$93,  6,$76,$68,$4A,$72,$CD,$A8,$E4,$2F, $E,$EF,$F9,$85,$DB,$BC,$FF,$5E,$D2,$4E,$EF,$39,$2E,$F5,$F3,$FE,$7C,$7C,$12,$4F,$EC,$F4,$F5,$30,$4B,$3F,$CE,$1F,$30,$53,$D3,$F2,$7A,$EC,$82,$7A, $C,$20,$29,$2D, $C,$F4,$94,$C3,$95,$BA; 256
		dc.b $B4,$DC,$1A,$4B,$D8,$37,$76,$11,$26,$19, $A,$D0,$92,$49,$9B,$CA,$B5,$45,$A5,$D0,$79,$EA,$4F,$67,$B6,$2C,$F6,$7D,$ED,$95,$F2,$B7,$57,$CA,$CA,$F5,$BC,$59,$AC,$AE,$D2,$56,$BA, $C,$FF,$CC,$7B,$E7,$2C,$58,$33,$F0,$31,$47,$E2,$97,$52,$BD,$3B,$DA,  5,$C5,$A0,$4A; 320
		dc.b $B7,$95,$2D,$51,$CC,$F7,$FC,$D6,$43,$2F,$21,$D3,$C7,$4F,$74,$FF,$4F,$37,$F9,$A7,$30,$81,$3F,$D1,$20,$DA,$46,$84,$E8,$49,$24,$92,$4E,$4F,$C5,$A6,$FC,$3E,$F6,$C6,$76,$78,$7D,$6D,$9D,$7F,$58,$82,$BF,$8A,$20,$DB,  6,$1C,$4A,$61,$63,$F3,$4A,$91,$EE,$DF,$D7,$F0; 384
		dc.b $EE,$75,$DF,$9D,$DC,$DF,$9E,$13,$92,$FD,$5A,$B2,$12,$8F,$CD,$37,$28,$37,$3F,$9B,$81,$90,$43,$7F,$7C,$BF,$29,$FA,$2F,$45,$9D,$FB,$45,$D9,$7E,$DF,$5F,$6F,$36,$7D,$3B,$21,$3A,$39, $A,$87,$21,$50,$E2,$EC,$A8,$49,$24,$92,$49,$26,$31,$4C,$5A,  7,$95,$5F,$71,$7D; 448
		dc.b $F5,$FD,$60,$5B,$AC,$E8,$D2,$A8,$E0,$6E,$1D,  2,$6E,$67,$2E,$2F,$B2,$F5,$C0,$6F,$CE,$48,$47,$A9,$4F,$CD,  3,$49,$DD,$CC,$27,$2E,$D5,$12,$4E,$A8,$EF,$95,  9,$24,$9F,$4F,$C5,$BB,$36,$B8,$7D,$F7,$81,$D0,$F2,$8A,$70,$3F,$3D,$BC,$F8,$41, $F,$D9,$B0,$5F,$AD,$CC; 512
		dc.b $5B,$B3,$6A,$DB,$4A,$35,$87,$4A,$35,$F1,$6C,$E7,$6A,$2E,$5A,$C1,$AD,$9D, $B, $C,$C2,$76,$74,$2F,$67,$4A,  7,$69,  5,$EE,$BB,$C0,$4E,$F3,$4F,$4E,$15,$70,$A8,$EB,$41,$5F,$D9,$E9,$EA,$60,$96,$7F,$9C,$3E,$60,$A7,$A7,$E4,$F5,$D9,  4,$F4,$18,$40,$52,$5A,$19,$E9; 576
		dc.b $50,$E3,$93,$82,$93,$7B, $C,$86,$43,$21,$5A,$12,$49,$24,$92,$4D,$75,$9B,$F1,$69,$BF, $F,$BE,$D0,$3A,$1E,$55,$7D,$2F,$BC,$EF,$2D,$C4,$FC, $D,$FA,$E2,$F8,$CE,$CB,$59,$6F,$AC,$5B,$3A,$FE,$B1,  5,$7F,$14,$41,$B6, $C,$38,$94,$C2,$C7,$E6,$83,$7B,$6D,$EF,$A8,$4E; 640
		dc.b $7D,$F6,$7E,$9C,$53,$5A,$F9,  7,$78,$6F,$64,$F0,$B1,  1,$3C,$2A,$30,$4F,  7,$B4,  5,$6F,$CE,$E6,$E6, $B,$8D,$C6,$39,$DF,$9D,$9B,$F3,$C2,$72,$5F,$AB,$56,$42,$51,$F9,$A6,$E5,  6,$E7,$F3,$70,$32,  8,$6F,$EF,$97,$95,  8,$30,$FC,$9F,$E7, $F,$59,$E1, $A,$DA,$1E; 704
		dc.b $9F,$93,$D7,$E7,$3D,$9D,$AF,$63,$D6,$B9,$6B,$8A,$EB,$89,$1A,$E0,$A7,$57,$45,$B1,$39,$68,$74,$24,$CF,$C7,$EB,$26,$23,$5D,$15,$E7,$9C,$B4,$42,$29,$26,$A3,  4,$F7,$35,$22,$5D,$A1,$D6,$12,$5E,$B6,$61,$DF,$F3,$93,$A1,$27,$46,$70,$9F,$B1,$D0,$47,$E7,$2C,$3F,$45; 768
		dc.b $E1,$B8,$4E,$A8,$D9,$39,$4A,  7,$E7,$3B,$35,$22,$D4,$AD,$8B,$AB,$26,$FE,$1A,$FD,$FD,$7C,$FF,$9F,$1F,  4,$93,$F9,$CD,$3F,$67,$A5,$1D,  1,$B6,$CB,$6C,$EB,$A6,$73, $E,$43,$33, $E, $A,$D2,$5E,$C1,$BB,$B0,$89,$30,$C8,$56,$84,$92,$57,$C1,$24,$92,$4C,  2,$41,$20; 832
		dc.b $D0,$FF,$C4,$92,$7A,$D8,$F4,$E2,$4F,$52,$6F,$86,$15,$A1,$EB,$E0,$CF,$F5,$88,$36,$CA,$9B,$4C,$2E,$45,$79,$5C,$E0,$98,$A3,$4A,$A2,$F5,$EE,$84,$F8,$5C,$66,$CE,$6E,$1D,$12,$F5,$78,$1F,$AE,$3D,$7C,$12,$49,$24,$C0,$24,$12, $D, $F,$FC,$49,$27,$A9,$12,$49,$EA,$4D; 896
		dc.b $F0,$C2,$B4,$3D,$7C,$19,$FE,$B1,  6,$92,$A6,$D0,$E0,$B9,$15,$E5,$73,$B4,$51,$85,$42,$DF,$21,$29,$FE,$BC,$86,$72,$E1,$71,$9D,$78,$74,$4B,$D5,$E0,$7E,$B8,$CC,  0; 960
S1Nem_MZBat:	dc.b   0,$29,$80,  5, $A,$15, $E,$25, $F,$35,$16,$45,$14,$56,$2F,$66,$2E,$74,  3,$81,  4,  4,$15,$13,$38,$F3,$48,$F2,$82,  4,  6,$15,$18,$27,$6E,$83,  5, $B,$17,$78,$37,$7A,$84,  6,$32,$17,$74,$85,  6,$33,$86,  6,$38,$15,$15,$87,  5,$10,$16,$36,$27,$75,$88,  4; 0
		dc.b   2,$15,$12,$27,$6F,$37,$76,$47,$72,$58,$F6,$89,  3,  0,$15,$11,$26,$35,$36,$34,$47,$77,$8C,  8,$F7,$8D,  7,$73,$FF,$79,$56,$81,$5B,$5E,$50,$A2,  2,$47,$CE,$2C,$F8,$CD,$9F,$AA,$33,$BB,$A3,$B4,$42,$74,$67,$B3,$82,$75,$25,  4,$82,  9,$28,$6C,$38,$92,$87,$F5; 64
		dc.b $D5,$DC,$A0,$A8,$CA,$2B,$70,$21,$55,$BA,$3C,$4D,$6E,$19,$F1,$35,$BD,$75,$E8,$F6,$F1,$96,$76,$F1,$96,$76,$65,$DC,$D6,$A9,$5B,$65, $B,$40,$A8,$84,$12,$CD,$19,$BD,$A6,$41,$EC,$85,$17,$A4,$B5,$74,$B4,$74,$B4,$77,$68,$BB,$94,$55,$CA,$2A,$87,$20,$AF,$DB,$C8,$29; 128
		dc.b $71,$28,$10,$52,$EA,  8,$39,$73,$E2,$2E,$5C,$F8,$CC,$3B,$A5,$56,$FC,$F2,$F0,$CF,$CF,$2F,$17,$AD,$AF,$63,$95,$F0,$95,$21,$BD,$F0,$E4,$E8,$4B,$AA,$A0,$5B,$6A,$AD,$A3,$DA,  3,$92,$A3,$C9,$F1,$DF,$40,$4D,$78,$6B,$9A,$E6,$BF,$35,$DE,$8B,$BD,$17,$7F, $B,$BF,$36; 192
		dc.b $B9,$8C,$CC,$CC,$CC,$CA,$E1,$2A,$16,$A4,$FF,$67,$72,$7F,$27,$CB,$26,$27,  6,$2C,$F0,$E1,$8C,$F2,$C2,$82,$FA,$6E,  9,$95,$72,$5B, $F,$D0,$D5,$61,  4,$EB,$A7,$ED,$97,$AA,$EB,$E8,$7F,$8F,$1E,$B1,$92,$BF,$65,$D1,$9C,$BE,$9B,$A9,$B8,$CE,$E8,$52,  4,$1F,$21,$35; 256
		dc.b $4B,$C8,$87,$F4,$74,$F3,$1F,$A1,$D5,  7,$F4,$47,$FC,$7C,$F4,$9F,$F6,$53,$FF,$3D,$DD,$A5,$B4,$EB,$AB,  4,$2A,$85,$E2,$75,$C9,$78,$9E,$CB,$DD,$39,$7E,$C9,$35,$DC,$9B,$C3,$47,$CA,$9B,$DD,  9,$45,$50,$21,$FA,$10,$AF,$38,$BA,$7A,$3B,$FB,$2E,$EE,$FE,$EF,$4D,$1F; 320
		dc.b $DD,$F3,$D1,$DF,$D9,$77,$FA,$54, $C,$CE,$E2,$BA,$17,$42,$E2,$B8,$5C,$86,$77,$A5,$C2,$E0,$66,$66,$68,$42,$89,$2A,  5,$14,$2C,$14,$50,$74,$15,$A9,$6C,$4E,$8A,$A4,$66,$67,$46,$76,$4C,$FC,$2B,$36,$7E,$EC,$F2,$7B,$2F,$A3,$3B,$35,$E5,$5C,$94,$11,$73,$A9,$99,$B5; 384
		dc.b $D8,$BF,$17,$AF,$75,$BD,$62,$FD,$15,$AF,$6B,$68,$66,$66,$72,$45,$CE,$A4,$38,$5F,$ED,$9D,$9B,$2E,$AB,$7B,$7A,$B3,$7E,$8E,$98,$85,$F8,$39,$7A,$61,$DB,$C3, $F,$6C,$17,$5D,$ED,$FD,$79,$43,$F6,$C5,$FE,$7F,$D3,$2B,$1F,$F7,$16,$42,$A9,$3E,$75,$83,$E7,$D5,$E9,$D9; 448
		dc.b $E5,$A3,$F8,$81,  4,$7C,$2A,$57,$4C,$B6,$78,$49,$5A,$2A,$28,$58,$28,$A1,$6D,$4A,$91,$33,$57,$F1,$CA,$DF,$C7,$37,$C2,$9B,$15,$24,$66,$66,$76,$6B,$B1,$7E,$2F,$65,$D3,$35,$E5,$44,$5A,$51,$16,$94,$E1,$7C,$53,$36,$5D,  3,$2E,$C2,$6C,$F1,$E6,$E1,$E5,$1F,$E8,$99; 512
		dc.b $AB,$26,$BF,$3C,$59,$B3,$CB, $F,$E9,$B9,$F5,$C9,$7B,$94,$95,$F4,$C9,$5D,$BF,$47,$FA,$62,$E3,$65,$D5,$65, $A,$C3,$F4,$72,$DB,$8F,$1C,$A1,$8F,$64,$FF,$42,$7F,$A0,$CC,$CC,$CC,$DA,$E5,$B0,$EA,$14,$B6,  8,$55,$25,$E2,$75,$82,$F1,$3E,$BB,$A7,$BF,$72,$69,$84,$DE; 576
		dc.b $12,$3E,$4A,$D7,$C8,$4E,$3F,$A1,$1E,$71,$21,$FD,$12,$13,$D6,$41,$34,$28,$A6,$AA,$20,$AD,$5C,$41,$3F,$F1,$FF,$8F,$FC,$7F,$A2,$3E,$DD,$F7,$C7,$7E,$9F,$F8,$21,$49, $A,$48,$15,$A4,  9,$D0,$56,$F0,$50,$25,$6F,$50,$27,$46,$56,$90,$BE,$2F,  4,$A1,$42,$B8,$AE,  6; 640
		dc.b $66,$63,$DA,$3D,$83,$BB,$5B,$7D,$25,$79,$19,$9D,$C5,$CE,$F8,$7B,$FE,$76,$D0,$FC,$FF,$BF,$37,$97,$BF,$E7,$6C,$39,$99,$DF,$FA,$DA,$17,$EB,$3F,$3A,$E2,$FD,$7F,$E7,$39,$A8,$BF,$9F,$EF,$CC,$BF,$5F,$F9,$CE,$6A,$E7,$FA,$CF,$CE,$BB,$F5,$A7,$40,  0; 704
S1Nem_Splats:	dc.b $80,$1D,$80,  4,  5,$14,  4,$25, $F,$34,  8,$45,$17,$55,$15,$66,$33,$74,  2,$81,  3,  0,$15,$16,$27,$76,$82,  5,$14,$83,  5, $E,$17,$77,$26,$3A,$84,  7,$73,$85,  5,$13,$16,$36,$86,  5,$18,$87,  6,$34,$17,$79,$88,  5,$12,$17,$7A,$89,  6,$32,$8A,  6,$37,$8B; 0
		dc.b   7,$78,$17,$72,$8C,  6,$35,$17,$7B,$8E,  4,  6,$16,$38,$8F,  4,  3,$18,$F8,$FF,$22,$CF,$C5,$7C,$57,$C2,$CE,$B3,$D6,$F9,$6B,$88,$A0,$C0,$89,$D6,$4B,$3D,  6,$7A,$46,$2C,$41,$FB,$E2,$75,$9F,  6,$FA,$2D,$9D,$7F,$8D,$62,$85,$4E,$F7,$A7,$7A,$CC,$45,$39,$8E,$77; 64
		dc.b $B3,$3F,$C2,$83,$AD,$A4,$F9,$BA,$D5,$D0,$E5,$77,$62,$50,$7D,$3C,$D4,$DD,  1, $D,$D0,$68,$69,$C8,$7E,$BB,$96,$D7,$9F,  9,$F9,$A9,$B2,$7E,$69,$19,$37,$4B,$7E,$8A,$4A,$36,$FC,$B0,$59,$64,$6C,$10,$23,$82,$D3,$68,$73,$E6,$8E,$78,$BF,$95,$37,$B6,$7B,$FE,$64,$F7; 128
		dc.b $8F,$D5,$3D,$C5,$57,  8,$EA,$9F,$D3,$4E,$A8,$1F,$DB,$F2,$8F,$F3,$30,$B3,$7B,$AC,$6C,$9A,$58,$C4,$93,$F6,$32,$74,$59,$F2,$76,  1,$E1,$C9,$DF,$F4,$CE,$8E,$90,$13,$AE,$E9,$AF,$F0,$E4,$76,$FD,$DD, $F,$F3,$4F,$17,$B6,$CD,$DB,$6E,$17,$F4,$BC,$3F,$F5,$C4,$45,$70; 192
		dc.b $44,$45,$98,$22,$2C,$E8,$54,$22,$A1,$5F,$2F,$4D,  1,$26,$CF,$F6,$4F,$64,$F6, $A,$A1,$67,  2, $D,$3F,$4B,$7F,$E7,$2F,$17,$1F,$15,$B1,$11,$66,$D9,$98,$FD,$4F,$90,$81,$8D,$59,$7B,$31,$A8,$92,  6,$35,$12,$40,$C6,$AD,$24, $C,$6A,$D2,$5F,$C6,$F3,$E5,$BF,$3D,$5B; 256
		dc.b $5F,$CE,$FE,$F0,$D7,$F5,$EB,$FB,$1F,$D7,$88,$EC,$44,$50,$D9,$9E,$62,$39,$35,$67,$AD,$F2,$D7,$11,$41,$81,$13,$AC,$96,$7A, $C,$F4,$8C,$58,$83,$F7,$C4,$EB,$3E, $D,$F4,$5B,$3A,$FF,$1A,$C5, $A,$9D,$EF,$4E,$F5,$98,$8A,$73,$1C,$EF,$66,$7F,$85,  7,$5B,$49,$F3,$75; 320
		dc.b $AB,$A1,$CA,$EE,$C4,$A0,$FA,$79,$A9,$BA,  2,$1B,$A0,$D0,$E0,$1E,$63,$E2,$B6,$26,$4F,$D5,$72,$D7,$F2,$52,$51,$B7,$E5,$82,$CB,$23,$50,$81,$1C,$6B,$4D,$A1,$CF,$9A,$39,$E2,$FE,$54,$DE,$D9,$EF,$F9,$93,$DE,$3F,$54,$F7,$15,$5C,$23,$AA,$7F,$4D,$3A,$A0,$7F,$6F,$CA; 384
		dc.b $3F,$CC,$C2,$CD,$EE,$B1,$B2,$69,$63,$12,$4F,$D8,$C9,$D1,$67,$C9,$D8,  7,$87,$27,$7F,$D3,$3A,$3A,$40,$4E,$BB,$A6,$BF,$C3,$91,$A8,$4F,$4F,$CB,$D7, $B,$D9,$8D,$5B,$24,$96,$34,$69,  7,$DB,$2B,$2F,$EA,$EF,$FA,$5E,$55,$DB,$97,$EF,$93,$65,  9,$FC,$E2,$22,$20,$44; 448
		dc.b $59,$D0,$A8,$45,$42,$BE,$5E,$9A,  2,$4D,$9F,$EC,$9E,$C9,$EC,$15,$42,$CE,  4,$1A,$7E,$96,$E6,$F3,  8,$3F,$5E,$23,$B1,$57,$F5,$3A,$4B,$24, $C,$6A,$32,$49,$63,$46,$90,$4C,$BD,$36,$24,$81,$8D,$5B,$24,$96,$34,$69,  6,$FC,$6E,$BF,$8D,$D7,$9F,$B3,$D7,$F3,$BF,$BC; 512
		dc.b $FF,$89,$11,$11,$71,$5F,$8A,$80; 576
S1Nem_Bomb:	dc.b $80,$29,$80,  4,  5,$14,  6,$25,$13,$34,  8,$45, $F,$55, $E,$66,$32,$73,  0,$81,  4,  2,$14,  3,$28,$F6,$38,$F7,$82,  5,$17,$83,  6,$33,$84,  6,$34,$85,  6,$37,$86,  5,$18,$17,$76,$87,  6,$38,$88,  4,  4,$16,$36,$89,  5,$15,$17,$7A,$8A,  6,$3A,$8B,  7,$72; 0
		dc.b $8C,  5,$12,$16,$35,$37,$78,$8D,  5,$16,$17,$73,$8E,  7,$77,$8F,  5,$14,$17,$79,$FF,  0,  0,  0,$C9,$1F,$B3,$D0,$39,$27,$48,$2F,$58,$64,$9E,$B3,$24,$91,$BC,$80,$11,$5C,$89,$14,$9E,$72,  6,$F2,$E6,  0,  1,$78,$FD,$32,$70,$D4,$25,$3A,$2A,$2D,$3B,$D0,$95,  3; 64
		dc.b $FF,$53,$E6,$7F,$A6,$3A,$35,$3B,$3B,$B1,$D2,$7E,$7A,$A3,$8A,$25,$CA,$AF,$E0,$9D,$7C,$D1,$FE,$9B,$49,$9C,$F7,$2A,$FE,$A1,$8B,$4F,$13,$F6,$6F,$EE,$73,  0,  0,  2, $D,$9F,$56,$48,$C2,$93,$F1,$53,$49,$F6,$77,$96,$24,$82,$CA,$98,$47,$D5,$C5,$F9,$E4,$99,$2E,$C0; 128
		dc.b $AA,$DB,$2A,$54,$9A,$56,$43,$99,$BA,$56,$20,  0,  0,  8,$47,$EC,$F4, $E,$49,$D2, $B,$D6,$19,$27,$AC,$C9,$24,$6F,$20,  4,$57,$22,$45,$27,$9C,$81,$BC,$B9,$80,  0,$5E,$3F,$4C,$9C,$35,  9,$4E,$8A,$8B,$4E,$F4,$25,$40,$FF,$D4,$F9,$9F,$E9,$8E,$8D,$4E,$CE,$EC,$74; 192
		dc.b $9F,$9E,$A8,$E2,$8E,$FC,$55,$F5,$CB,$F3,$C8,$FF,$4D,$A4,$CE,$7B,$95,$7F,$50,$C5,$A7,$89,$FB,$37,$F7,$39,$80,  0,  1,  6,$CF,$AB,$24,$61,$49,$F8,$A9,$A4,$FB,$3B,$CB,$12,$41,$65,$6E,$91,$FC,$13,$CA,$F9,$A4,$C9,$76,  5,$56,$D9,$52,$A4,$D2,$B2,$1C,$CD,$D2,$B1; 256
		dc.b $4C,$DC,$61,$DE,$9F,$7F,$CD,$2F,$EC,$CA,$7F,$E2,$5F,$F0,$FF,$F7,$58,$D7,$6F,  7,$B7,$BC,$C9,$D7,$CE,$3F,$2B,$F9,$28,$FC,$A1,$C7,$BA,$54,$A6,$61,  9,  8,$46,$F6,$EA,$7F,$95,$6C,$69,$BE,$7F,$E4,$BF,$FC,$5C,$6E,$31,$95,$DF,$F9,$32,$7F,$E8,$9F,$EC,$3F,$FB,$AC; 320
		dc.b $6A,$59,$F8,$3C,$CB,$F4,$6F,$35,$CD,$78,$FD,$97,$E4,$F7,$B9,$FE,$D2,$3F,$A8,$6B,$FC,$14,$A8,$71,$E4,$84,$FE,$59,$63,$4D,$F3,$8F,$D2,$5E,$3D,$D8,$DC,$60,  7,$7E,$55,$DF,$94,$71,$FF,$F7,$58,$D4,$FC,$55,$1A,$BB,$54,$91,$B9,$6B,$5E,$4B,$F9,$5C,$36,$9C,$7F,$D3; 384
		dc.b $4F,$F8,$9B,$93,$24,$27,$10,$C8,$AF,$96,$6E,$31,  6,$E3,  0,  7,$FE,$4E,$EF,$FC,$96,$7F,$CD,$FE,$64,$6A,$7E,$2F,$A3,$6D,$7D,$31,$3D,$71,$17,$FE,$A5,$D7,$F6,$67,$FD,$37,$FB,$32,$55,$D2,$E5,$96,$2E,$4E,$C5,$E3,$F4,$97,$8F,$70,$18,$DC,$60,  7,$FE,$8D,$FF,$A2; 448
		dc.b $7F,$B7,$FF,$75,$8D,$4F,$C1,$B5,$51,$49,$51,$73,$EB,$93,$6F,$6C,$CB,$F2,$FA,$6E,$D7,$CF,$FA,$9F,$F1,$37,$25,$5C,$42,$AE,$E5,$96,$34,$DF,$38,$FD,$25,$E3,$DC,  0,$32,$DE,$E1,$D2,$CC,  0,  0,  0,$3A,$A4,$22,$59,$5A,$4B,$22,$99,$5A,$4B,$69,$34,$AC,$DC,$DB,$9A; 512
		dc.b $F3,$26,$36,$B3,$F7,$52,  0,  0,  3,$E8,$53,$C4,$E4,$B8,$5E,$DC,$97,$8C,$59,$BA,$B2,$D9,$6D,$DB,$A8,$B7,$58,$EA,$2D,$D2,$FE,$69,$68,$BF,$9A,$5C,$49,$53,$F3,$52,$9D,$16,$58,  0,  0,  4,$69,$28,$B4,$8E,$56,$62,$82,$5B,$3A,$C2,$CE,$B2,$94,$13,$5A,$47,$2B,$41; 576
		dc.b $C4,$BB,$F3,$EF,$26,$BD,$1A,$97,$59,$52,$29,$21,$2A,$45,$24,$B7,$A3,$52,$ED,$2E,$FC,$FB,$C9,$40; 640
S1Nem_Orbinaut:	dc.b $80,$1F,$80,  4,  4,$16,$37,$25,$12,$34,  7,$44,  8,$55,$18,$65,$17,$73,  0,$81,  3,  1,$16,$3A,$82,  5,$15,$83,  4,  5,$16,$3C,$84,  7,$7A,$85,  6,$36,$86,  5,$19,$87,  4,  6,$88,  5,$13,$89,  8,$F8,$8A,  6,$3B,$17,$7B,$8B,  8,$FA,$8C,  5,$16,$8D,  5,$14; 0
		dc.b $8E,  5,$1A,$8F,  5,$1C,$FF,  0,$5D,$63,$C6,$75,$46,$22,$53,$D9,$18,$EF,$3E,$1D,$99,$F3,$A3,$89,$A7,$E5,$9E,$78,$F8,$D4,$76,$9C,$DA,$3D,$C5,$40,$A8,$5B,$9F,$31,$D2,$DC,$80,  2,$7F,$49,$14,$C5,$59, $C,$16,$42,$1C,$D7,$F4,$B2,$AB,$ED,$2E,$37,$1C,$CD,$26,$9C; 64
		dc.b $94,$D2,$71,$AC,$EB,$92,$D9,$3F,$3E,$9D,$CB,$6F,$D5,  0,  0,$92,$BF,$4A,$7F,$67,$F9,$22,$9F,$D1,  0,  4,$A8,$A9,$BA,$91,$75,$22,$EA,$40,$18,$22,$F5,$30,$70,$6A,$5F,$A8,$35,$52,$F5,$EA,  8,  0,  1,$85,$8F,$19,$D5,$18,$89,$4F,$76,$3B,$CF,$9E,$B7,$69,$67,$5E; 128
		dc.b $B1,$34,$E9,$E7,$8F,$8D,$47,$69,$CD,$A3,$DC,$54, $A,$85,$B9,$F3,$1D,$2D,$C8,  0,$27,$F4,$91,$4C,$55,$90,$C1,$64,$21,$CB,$7E,$96,$4D,$B4,$B6,$DF,$6E,$37,$1C,$CD,$26,$9C,$94,$D2,$71,$AC,$EB,$92,$D9,$3F,$3E,$9D,$CB,$6F,$D5,  0,  0,$92,$BF,$4A,$7F,$67,$F9,$22; 192
		dc.b $9F,$D1,  0,  4,$A8,$A9,$BA,$91,$75,$22,$EA,$40,$18,$22,$F5,$30,$70,$6A,$5F,$A8,$35,$52,$F5,$EA,  8,  0,  1,$8B,$47,$E7,$19,$EC,$8C,$44,$A7,$BB,$1D,$E7,$C3,$BB,$4B,$3E,$8E,$27,$DF,$4F,$3C,$7C,$6A,$36,$4E,$77,$1F,$95,$8A,  1,$41,$6B,$9F,$CE,$63,$AB,$5C,$80; 256
		dc.b   2,$7F,$75,$2C,$62,$8C,$86, $B,$21, $E,$59,$3D,$C9,$93,$BD,$FB,$96,$CD,$C7,$FA,$9A,$4D,$39,$29,$A4,$E3,$59,$D7,$25,$DA,$7E,$7D,$36,$97,$7F,$A5,  0,  1,$2B,$3F,$56,$3F,$BC,$FC,$E9,$4F,$E8,$80,  2,$50,$50,$DE,$C4,$5E,$C4,$5E,$C4,  1,$82,$2F,$43,  7,  6,$85; 320
		dc.b $FA,$83,$4B,$17,$A7,$50,$40,$18,$B5,$FB,$DF,$2F,$6D,$F3,$DD,$12,$99,$93,$1B,$21,$95,$13,$25,$E9,$9B,$65,$3B,$CD,$13,$36,$CF,$D3,$4D,$50,$B1,$B5,$3F,$3C,$ED,$2A,$7D,$63,$DE,$EB,$2C,$D6,$8B,$2F,$CE,$69,$34,$BB,$D9,$CD,$CE,$B1,$41,$16,$DD,$68,$96,$CD,$9E,$C9; 384
		dc.b $98,$35,$D6,$15,$DB,$7F,$29,$EF,$D4,$BC,$FC,$A2,$BF,$EB,$91,$5A,$BA,$92,$A3,$66,$8E,$B4,$F4,$5E,$89,$AB,$52,$F4,$1B,$80; 448
S1Nem_Caterkiller:dc.b $80,$10,$80,  3,	 0,$14,	 3,$24,	 2,$35,$13,$46,$36,$56,$39,$74,	 8,$81,	 4,  5,$16,$2E,$28,$F8,$82,  4,	 4,$15,$18,$83,	 4,  6,$16,$3B,$84,  6,$3A,$18,$F9,$85,	 5,$19,$86,  5,$15,$87,	 5,$16,$16,$3D,$88,  6,$37,$89,	 5,$14,$18,$FA,$8A,  5,$1A,$18,$FB,$8B;	0
		dc.b   6,$38,$8C,  6,$2F,$8D,  5,$12,$8E,  4,  7,$8F,  6,$3C,$FF,$2B,$E5,$B5,$E7,$21,$79,$DC,$18,$29,$C8,$33,$89,$15,$9E,$20,$36,$A7,$DE,$D4,$F4,$50,$FD,$BA,$D9,$1B,$84,$34,$2A,$FC, $B,$48,$BD,$2D,$57,$27,$D5,$4F,$22,$E1,$92,$FD,$98,$90,$6F,$D9,$30,$D3,$7E,$C5; 64
		dc.b $3F,$C0,$A3,$74,$84,$8C,$46,$22,$F9,$44,$B6,$50,$DB,$55,$9F,$65,$78,$E7,$74,$8C,$42,$17,$C9,$24,$F2,$48,$2C,$B3,$7E,$7A,$1F,$96,$19,$3F,$B1,$F9,$52,$5E,$23,$8E,$F8,$FD,$18,$6C,$3D,$12,$F6,$7F,$8D,$28,$72,$E8,$D3,$94,$DB,$13,$C4,$40,$BE,$5B,$5E,$72,$17,$9D; 128
		dc.b $C1,$82,$9C,$83,$38,$91,$59,$E2,  3,$6A,$7D,$ED,$4F,$45, $F,$DB,$AD,$91,$B8,$43,$42,$AF,$C0,$B4,$8B,$D2,$D5,$72,$7D,$54,$F2,$2E,$19,$2F,$D9,$89,$69,$A6,$D0,$6D,$CE,$E2,$C5,$68,$34,$EB,$F4,$4E,$49,$F1,$A9,$E0,$EF,$94,$F0,$72,$D9,$43,$6D,$56,$7D,$95,$E3,$9D; 192
		dc.b $D2,$31,  8,$5F,$24,$93,$C9,$20,$B2,$CD,$F9,$E8,$7E,$58,$64,$FE,$C7,$E5,$49,$78,$8E,$3B,$CE,$BB, $C,$77, $F,$1A,$F2,$DC,$EF,$2B,$1B,  4,$9A,$15,$46,$14,$20,$E9,$2E,  8,$77, $C,$17,$E8,$8B,$12,$2F,$9B,$83,$8E,$AE,$B1,$F7,$CB,$EA,$5F,$9C,$B0,$6D,$7E,$FB,$42; 256
		dc.b $CB,$E1,$3A,$73,$E4,$FF,$5E,$4B,$35,$AD,$3F,$82,$FE,  5,$FD,$F7,$87,$47,$FD,$7C,$E9,$77,$34,$1F,$13,$FA,$3C,$4F,$E8,$F0,$55,$52,$41,$5E, $B,$F3,$D5,$D1,$3F,$DF, $A,$CA,$7F,$9B,$37,$50,$8A,$6C,$87,$7A,$77,$7C,$FF,$58,$68,$BB,$71,$44,$52,$6A, $A,$27,$7C,$6E; 320
		dc.b $5B,$D6,$82,$82,$E7,$F1,$68,$7F,$AE,$5A,$17,$E7,$BE,$A6; 384
Nem_S1TitleCard:dc.b $80,$80,$80,  4,  9,$14,  7,$24,  8,$35,$16,$45,$17,$55,$19,$65,$18,$73,  1,$81,  3,  0,$16,$34,$26,$39,$83,  6,$36,$86,  4,  6,$17,$76,$27,$7A,$87,  3,  2,$16,$3A,$27,$77,$37,$78,$47,$79,$88,  6,$37,$89,  6,$35,$8A,  8,$F7,$8E,  4, $A,$18,$F6,$8F,  6,$38; 0
					; DATA XREF: ROM:00003B54o
					; ROM:0000523Eo ...
		dc.b $FF,$BA,$65,$71,$22,$CB,  1, $C,$2B,$21,$90,$C2,$46,$13,$AC,  9,$5E,$A3,$CC,$A1,$3F,$B1,$90,$C0,$D9,$A5, $B,$77,$CF,$26,$CC,$32, $B, $C,$82,$58,$64,$1B,$A7,$61,  1,$C5,$C6,$13,$B0,$86,$70,$83,$F9,$76,$FE,$BF,$68,$F1,$7E,$49,$26,$CB,$D5,$BC,$5F,$92,$49,$68; 64
		dc.b $5E,$BF,$EF,$DE,$7F,$63,$4E,$84,$6E,$9D,  8,$14,$71,$57,$DD,$9D,  7,$A7,$42,$15,$4A,$60,$E3,$54,$E8,$3E,$94,$71,$57,$DD,$9D,  9,$6A,$9E,$83,$F7,$D2,$39,$7F,$51,$DA,$BA,$76,$9A,$D7,$49,$67,$D4,$5E,$AC,$CF,$A8,$24,$98,$4F,$A8,$80,$F5,$74,$FA,$88, $A,$6B,$5B; 128
		dc.b  $E,$AB,$B4,$69,$DF,$B4,$29, $A,$BB,$58,$6B,$52,$D6,$1B,$9A,$C6,$FD,$67,$92,$4D,$F7,$61,$7A,$CE,$F2,$83,$EE,$D4,$83,$B5,$74,$23,$AD,$2D,$D7,$F5,$94,$78,$16,$E4,$92,$49,$24,$92,$D0,$BD,$7F,$DD,$7F,$86,$BB,$5F,$5A,$96,$B0,$D5,$DA,$C2,$B1,$AB,$B0,$80,$49,$C6; 192
		dc.b $EE,$84,$56,$77,$74,$1F,$7A,$94,$22,$BA,$16,$5A,$5D,$7F,$99,$47,$81,$6E,$49,$26,$CB,$D5,$BC,$5F,$92,$49,$68,$5E,$BF,$EF,$E6,$74,$EF,$56,$E7,$5C,  2,$AC,$C2,$74,$76,$27, $B,  1,$63,$49,$60,$6F,$BD,$BD,$55,$BC,$C7,$F5,$FB,$28,$F0,$2D,$C9,$24,$D9,$7A,$B7,$8B; 256
		dc.b $F2,$49,$2D,  8,$3F,$98,$F3,$1D,$EA,$DC,$EB,$80,$55,$98,$4E,$8F,$BE,$2B,$15,$8D,$70,$16,$34,$24,$92,$FE,$A3,$B5,$74,$ED,$35,$AE,$92,$CF,$A8,$BD,$59,$9F,$50,$49,$30,$9F,$51,  1,$EA,$E9,$F5,$10,$14,$D6,$B6,$1D,$57,$68,$D3,$BF,$68,$52,$15,$76,$B0,$D6,$A5,$AC; 320
		dc.b $35,$AC,$8D,$CF,$59,$E4,$99,$FF,$30,$EF, $B,$F6,$38,$DF,$3B,$D5,$DA,$95,$FA,$1D,$DF,$A6,$EA,$44,$A8,$50,$2C,  9,$27,$2B,$D5,$BC,$5F,$92,$49,$68,$41,$FC,$C0,$F2,$1D,$A1,$10,$49,$33,$DB,$3D,$67,$42,$49,$C3,$42, $F,$E6,$3C,$C3,$42,$20,$92,$49,$24,$92,$ED,  8; 384
		dc.b $3F,$97,$6F,$12,$25,$A1,$10,$4C,$EF,$9D,$EA,$FB,$D5,$F5,$AC,$D2,$CA, $B,  1,$1C,  2,$D0,$83,$F9,$81,$E4,$3A,$A9,$EA,$35,$A5,$CC,$EF,$48,$5A,$90,$BA,$19,$18,$62,$B0, $B,$5C,$3A,$B3,$38,$B0,$4E,$D6,$51,$D8,$4F,$F5,$E5,$BC,$4E,$8A,$14, $B,  2,$49,$24,$92,$4B; 448
		dc.b $B4,$2F,$5F,$F7,$FF,$89,$24,$92,$49,$37,$60,$6E,$D1,$FB,$6B,$7F,$5D,$FC,$6B,$A4,$B4,$51,$BA,$7D,$F1,$57,$18,$67,$DF,$15,$70,$FB,$C0,$67,$A3,$71,$90,$D3,$58,$D5,$A5, $B,$77,$70,$A7,$4D,$57,$65,$15,  8,$89,$43,$21,$8D,$D0,$C8,$60,$6E,$30,$C0,$9C,$83,$2D,  8; 512
		dc.b $3F,$99,$ED,$D7,$EC,$5A,$16,  5,$D3,$B5,$C3,$B5,$9A,$14,  4,$E2,$C1,$11,$90,$D8, $B,  0,$96,$94,$2D,$DE,$FC,$AE,$C2,$CD,$28,$82,$49,$96,$2C,$56,  5,$D3,$B5,$C6,$43,$60,$2C, $E,$B3,$A2,$ED,$1D,$AB,$A7,$69,$AD,$74,$96,$7D,$45,$EA,$CC,$FA,$82,$49,$84,$FA,$88; 576
		dc.b  $F,$57,$4F,$A8,$80,$A6,$B5,$B0,$EA,$BB,$46,$9D,$FB,$47,$2A,$BB,$58,$6B,$52,$D6,$1B,$BB,$5E,$B1,$BB,$B0,$24,$98,$DD,$D0,$8A,$CE,$EE,$83,$EF,$52,$83,$B5,$74,$23,$AD,$2D,$D7,$F5,$94,$78,$16,$E4,$92,$6C,$BD,$5B,$C5,$F9,$24,$96,$84,$1F,$CC,$74,$DC,$BA,$A0,$CA; 640
		dc.b   6,$B5,$21,  7,$1B,$B8,$36,$DD,$C4,$6F,$52,$18,$4B,$50,$4C,$1F,$A6,$D2,$39,$24,$92,$6F,$FF,$65,$1E,  5,$B9,$24,$9B,$2F,$56,$F1,$7E,$49,$25,$A1,  7,$F3,  9,$BF,$62,$F4,$19,$5B,$5A,$90,$83,$8D,$DC,$1B,$6E,$E2,$37,$A9, $C,$1E,$82,$61,$60,$85,$93,$A1,  1,$C1; 704
		dc.b $BD,$63,$57,$6D,$D9,$C2,$D2,$94,  6,$E8,$59,$BA,$ED,$29,$84,$F7,$90,$EB,$92,$64,$3A,$B3,  7,$64,$E1,$90,$90,$CF,$A3,$77,$96,$7F,$D8,$97,$58, $D,$94,$19,$5D,$90,$ED,$2B,$9E,$FD,$A1,$48,$52,$CA,$C1,$94,$B5,$B4,$61,$90,$D8,  5,$3F,$64,$FA,$48,$90,$CA,$19,$38; 768
		dc.b $42,$74,$4E,$2C, $E,$19,$C3,$F6,$90,$98,$4F,$76,$D1,$FC,$7E,$DA,$47,$7B,$37,$26,$10,$C8,$24,$92,$49,$30,$D8,$F1,$FB,$65,$3A,$77,$17,$D1,$B0, $A,$C6,$84,$92,$49,$2E,$86,$56,$3A,$F4,$1D,$42,$81,$60,$49,$24,$9C,$A1, $B,  2,$15,$94,$76,$71,$D6,$74,$EF,$1D,$94; 832
		dc.b $88,$52,$AE,$1C,$12,$49,$26,$CC,$50,$B3,$5F,$B4,$A1,$6E,$85,$96,$97,$5F,$C6,$12,$D6,$50,$D0,$D6, $E,$2C,$A1,  8,$68,$6B,  7,$16,$45,$89,$24,$E1,$B1,$DE,$3B,$29,$10,$A5,$5D,  9,$17,$61,$66,$16, $C,$18,$5D,$85,$90,$C3,  2,$49,$39,$42,$FD,$64,$75,$FC,$68,$F2; 896
		dc.b $EB,$F8,$26,$50,$C8,$BB,$65,$B2,$B0,$32,$CE,$21,$A1,$9D,$42, $E,$1D,  7,$67,$10,$D0,$17,$6F,$FB,$FF,$5E,$47,$50,$1C,$28,$61,$2A,$10,$70,$E8,$5C,$61,$85,$D0,$BA,  7,$20,$D9,$81,$BB,$47,$ED,$AD,$FD,$77,$FF,  9,$24,$BF,$60,$6F,$D6,$79,$8F,$7C,$FB,$E7,$DF,$3E; 960
		dc.b $F3,$F8,$BB,$7B,$CF,$E2,$ED,$EE,$FF,$9B,$7F,$77,$FD,$5C,$8F,$D5,$F3,$F8,$B9,$D1,$BF,$74,$EB,$F1,$BF,$82,$FC,$5F,$E0,$83,$FE,$36,$75,$1A,$FE,$2F,$3A,$17,$FC,$6C,$EB,$3B,$FB,$BB,$7E,$37,$F0,$5E,$FF,$82, $E,$1B,$F5,$7E,$E3,$F3,$5F,$BB,$91,$F9,$A7,$FC,$DE,$39; 1024
		dc.b $38,  7,  1,$FF,$37,$9E,$49,$24,$93,$7F,$D7,$88,$E3,$3C,$67,$82,$71,$ED,$9D,  9,$24,$92,$49,$24,$92,$7F,$7D,$6E,$7D,$B8,$8F,$CF,$DF,$83,$9E,$2D,$ED,$7A,$D0,$99,$FD,$F5,$BF,$82,$49,$9E,$33,$C6,$78,$CF,$19,$E3,$3C,$5A,$8C,$F1,$7A,$24,$CF,$FB,$B8,$AF,$E8,$BF; 1088
		dc.b $E7,$CF,  4,$3D,$5A,$84,$8E,  9,$38,$E0,$C5,  9,$E0,$C5, $B,$D0,$BD, $B,$D0,$BD, $C,$83,$8F,$EF,$82,$4C,$FF,$79,$FF,$83,$ED,$C4,$7E,$7E,$FC,$1C,$F1,$6F,$6B,$D6,$84,$CF,$EF,$AD,$FC,$1F,$CF,$92,$73,$ED,$9D,$27,$F7,$E0,$9C,$50,$7A,$B5,$70,$64,$56,  7,$B6,$74; 1152
		dc.b $FD,$77,$E7,$E3,$97,$FC,$F9,$E0,$87,$AB,$50,$91,$C1,$38,$E2,$28,$4F,  6,$28,$1C,$D0,$7A,$C0,$A8,$A0,$E0,$9C,$71,$9E,$2D,$40,$DE,$85,$BD,$84,$7B,$69,$6D,$33,$FC,$F1,$8A,$11,$ED,$81,$9A,$E2,$68,$18,$F6,$9A,$16,$19,$AE, $C,$D3,$FF,$3A,$44,$FF,$44,$92,$63,$F7; 1216
		dc.b $E1,$F8,$B5,  8,$F6,$C0,$24,$9C,$D7,$16,$E2,$D4,$1F,$F7,$C2,$3F,$62,$49,$31,$F9,$F0,$FF,$9F, $F,$44,$F1,$9A,$33,$C6,$68,$E0,$51,$8F,$67,$1E,$D3,$CB,$F2,$49,$33,$F9,$F1,$3F,$9F,  4,$92,$49,$8A,$E2,$DC,$5A,$83,$FE,$F8,$47,$EC,$49,$24,$E9,$71,$BE,$D6,$1B,$7B; 1280
		dc.b $88,$1B, $B, $D,$85,$86,$E3,$3F,$8B,$B8,$9D,$BF,$25,$FA,$3D,$F6,$FC,$96,$DA,$4F,$B8,$71,$F8,$23,$B0,$C8,$38,$18,$FC,$5C,$FF,$4F,$50,$49,$C0,$BE,$9B,$46,$9B,$7E,$15,$38,$DB,$F0,$A8,$40,$FC,$17,$E1,$3F,$4B,$9D,$23,$9D,$BF, $B,$3A,$6D,$F8,$5F,$C2,$2D,$36,$FC; 1344
		dc.b $2A,$11,$F8,$54,$2E, $E,$3F,$2B,$FD,$4D,$36,$FC,$17,$E1,$7F,$88,$98,$12,$49,$8F,$DA,$7E,$D7,$F0,$9F,$85,$FC,$16,$DF,$B1,$90,$CB,$F0,$9F,$85,$FC,$16,$D7, $C,$89,$27,$FE,$A7,$4C,$FE,$17,$61,$70,$DB, $B,$86,$D8,$5C,$36,$C2,$E1,$B0,$36,$19,$18,$58,  7,$61,$91; 1408
		dc.b $85,$80,$49,$C0,$C2,$C0,$C6,$C0,$FF,$54,$11,$91,$B5,$C6,$CD,$61,$B3,  8,$1B,$30,$81,$B3,  8,$1B,$30,$30,$36,$61,$6F,$C2,$B0,$BE,$84,$93,$9F,$FA,$9C, $C,$8D,$B0,$D7,$1B, $C,$B5,$C6,$C3,$2D,$71,$B0,$CB,$5C,$6C,$32,$D8,$17,$1B,$61,$8D,$C6,$C2,$FB,$36,$58,$64; 1472
		dc.b $12,$49,$24,$92,$49,$24,$92,$49,$24,$92,$49,$24,$92,$70; 1536
Nem_Explosion:	dc.b $80,$60,$80,  3,  0,$14,  4,$24,  7,$34, $A,$45,$17,$56,$32,$66,$33,$74,  5,$81,  3,  1,$16,$34,$27,$79,$83,  7,$76,$84,  5,$12,$17,$78,$86,  5,$18,$87,  4,  6,$16,$38,$28,$F6,$88,  5,$13,$16,$3A,$89,  4,  8,$16,$35,$28,$F7,$8A,  7,$7A,$8B,  7,$73,$8C,  6; 0
					; DATA XREF: ROM:0001C0D2o
		dc.b $37,$8D,  6,$36,$8E,  7,$72,$8F,  5,$16,$17,$77,$FF,$CE,$D7,$EF,$7B,$65,$CD,$E1,$53,$9C,$92,$15,$55,$5F,$9C,$92,$16,$B9,$C9,$22,$B9,$CB,$3E,$7E,$32,$FC,$DF,$FF,$D3,$DD,$F5,$7D,$56,$15,$55,$55,$55,$73,$F7,$7D,$5F,$DD,$3F,$E9,$FF,$B1,$DD,$6C,$BC,$D6,$A1,$25; 64
		dc.b $CD,$55,$55,$E1,$25,$CD,$6F,$2E,$77,$97,$3B,$CB,$9E,$5C,$D5,$55,$57,$2C,$67,$8C,$8E,$66,$15,$73,$9E,$7C,$96,$F3,$BE,  7,$55,$F9,$64,$6A,$FC,$B7,$E7,$AA,$34,$53,$45,$7F,$5F,$47,$38,$39,$90,$6A,$60,$D7,$EA, $D,$4D,$CD,$E6,$27,$94,$EF,$D6,$53,$55,$55,$BC,$F3; 128
		dc.b $E9,$E7,$87,$98,$B3, $C,$23,$59,$30,$30,$CF,$13,$78,$68,$A8,$1F,$9E,$4E,$4E,$79,  6,$A2,$FC,$AE,$53,$95,$14,$E4,$B4,$60,$7E,$C5,$CD,$15,$29,$61,$6A,$E4,$96,$16,  4,$1F,$D7,$A5,$88,$20,$82,$9A,  2,$84,$14,$EE,$87,$94,$1F,$CF,$58,$7E,$7A,$3A,$23,$F3,$D0,$3F; 192
		dc.b $63,$CA,$28,$EA,$93,$55,$49,$AA,$4D,$72,$9B,$CD,$31,$96,  7,$1F,$A8,$C0,$29,$C6,$33,$84,$3A,$CD,$A0,$17,$B3,$E8,  8,$E4,$B4,$68,$A1,$16,$72,$84,$79,  5,$3B,$A7,$91,$CB,$BE,$47,$90,$D0,$10,$68,$BF,$EC,$5C,$82,$2C,$5F,$44,$D1,$F4,$E4, $B,$94,$D1, $E, $E,  7; 256
		dc.b $9B,$26,$2D,$CA,$D8,$83,$80,$7A,$30,$98,$82,$9D,$67,$35,$55,$54,$C6,$78,$51,$8C,$B1,$96,  6,  6,$2B,$93,$7E,$59,$CF,$2B,$63,$2B,$4F,$23,$CA,$6E,$73,$28,$6B,$4E,$56,$9B,$E9,$69,$D1,  6,$FA, $C,$51,  4,$61,$F4,$4F,$CB,$5F,  3, $F,$86,$BE,$33,$6C,$EC,$B9,$C1; 320
		dc.b $CC,$E5,$8C,$F0,$AA,$AA,$AA,$B7,$E2,$EC, $D,$30,$39,$1B,$B1,$5D,$32,$2A,$6E,$6E,$D4,$43,$25,$B4,$BD,$9D,$95,$FF,$62,$B6,$42,$34,$B9,$55,$73,$64,$2A,$F0,$41,$72,$9D,$CD,$41,$1D,$C5,$9F,$41,$67,$F7,$F3,$7F,$75,$5A,$F6,$C2,$71,$E5,$18,$10,$51,$81,$1A,$5C,$AE; 384
		dc.b $46,$B4,$AD,$10,$AE,$46,$8D,$10,$41,$52, $E,$5A,$21,$C8,$8F,$37,$D2,$D9,$F2,  5, $D,$1C,$CA,$95,$53,$73,$DF,$C8,$22,$D9,$14,$B3,$F2,$B0,$FD,$F9,$4F,$D7,$A5,$94,$1C,$A0,$7F,$47,$1F,$AE,$FD,$C8,$F3,$C0,$6A,$D3,  5,$54,$17,$29,$A3,$9C,$BC,$A1,  5,$CA,$1E,$EA; 448
		dc.b $BF,$AF,$2A,$45,$9E,$C8,$47,$EB,$C1,$4B,$39,  4,$72,$43,$7D,$10,$83,$91,$57,$D1,  8,$D0,$10,$68,$E4,$54,$1A,$20,$8D,$1C,$DB,$95,$81,  6,$CF,$A0,$B0,$D0,$7E,$BF,$F6,$29,$A6,$A5, $E,$A9,$AC,$E3,$3F,$6B,$F9,$C3,$66,$5B,$32,$D9,$95,$65,$53,$91,  5,$4D,$1E,$E3; 512
		dc.b $F6,$2D,$61,$6B,$9E,$F9,$17,$35,$E5,$19,$6B,$45,$B9,$57,$65,  4,$68,$18,$1A,$6A,$D3, $F,$DC,$58,$4D,$3F,$5E,$6B,$B9,$8E,$93,$CF,$4F,$A0,$9D,$7E,$A1,$55,$55,$55,$5F,$AB,$CC,$5A,$A6,$2D,$53,$16,$16,$55,$BF,$7C,$AC,$6A,$63,$90,$28,$C8,$6A,$CA,$D3,$A9,$D7,$E7; 576
		dc.b $92,$C9,$3B,$5D,$81,$B6,$66,$AC,$D1,$93,$3C,$F8,$9A,$42,$E6,$D7,$F6,$BF,$B7,$4C,$9E,$C2,$C3,$87,$B7,$16,$F6,$16, $C,$93,$E1,$1B,$A7,$9E,$A9,$61,$68,$AE,$F9,$F4,$90,$3A,$64,$8A,$65,$10,$C9,$3E,$20,$30,$87,$E5,$34,$35,$69,$BD,$AE,$52,$DF,$9E,$48,$F2,  8,$98; 640
		dc.b $FD,$CB,$CD,$DB,$F7, $E,$C3,$FE,$F9,$FE,$DD,$EC,$C1,$87,  8,$C1,$83, $B,$3B, $B,$30,$9A,$30,$9B,$4C,$4F,$3B,$4E,$BA,$B4,$D9,$FF,$50,$18,$7F,$1D,$27,$64,$B3,$57,$74,$D6,$6F,$37,$8D,$26,$27,  9,$AB,$24,$C8,$87,$EE, $A,$33,$D9,$20,$45,$85,$92,  1,$B2,$1A,$EE; 704
		dc.b $52,  7,$EA,$17,$F7,$2A,$8D,$3C,$AD,$34,$E9,$AA,$7D,$C7,$42,$6B,$56,$BF,$77,$98,$B2,$5A,$69,$D5,$33,$CD,$2C,$D5,$D5,$D8,$35,$AB,$D8,$34,$27,  0,$F2,$1A,$B2,$7F,$25,$55,$5D,$B3,$B4,$F2,$B0,$9E,$56,$13,$CA,$CB,$7E,$E9,$3B,$F2,$BF,$94,$9D,$69,$5C,$A1, $B,$B0; 768
		dc.b $82,$93,$A9,$C7,$4A,$AA,$AA,$B3,$CE,$6A,$F3,$46,$AE,$B8,$C9,$AF,$31,$FA,$8B,$FE,$A1,$FA,$8C,$A7,$19,$4C,$6A,$B9,$6B,$9B,  9,$D4,$5B,$39,$89,$D6,$A2,$61,$AF,$30,$CF, $A,$B7,$E3,$2F,$64,$67,$E0,$70,$EC,$8D,$94,$C3,$4F,$26,$9D,$4F,$5B,$C0,$81,$D3,$C2,$A7,$4D; 832
		dc.b $9B,  8,$56,$CD,$94,$4E,$F3,$13,$76,$78,$7E,$4F,  2,$1E,$6F,  2,$27,$9C,$D7,$81,$C2,$70,$3F,$AE,$3D,$83,$59,$83,  6, $D,$36, $C,$EC,$ED,$9B,$2A,$BC,$DD,$9E,$6E,$C1,$87,$15,$60,$D6,$79,$89,$89,$8D,$7F,$50,$FE,$E2,$12,$69,  2,$1B,$36,$13,$6C,$D9,$55,$44,  8; 896
		dc.b $AD,$72,$84,$85,$54,$9B,$F4,$93,$4E,$AC,$27,$5E,$D3,$4E,$83,$57,$5F,$B7,$79,$A4,$DB,$29,$AA,$E4,$C9,$3A,$67,$68,$B9,$E5,$17,$D5,$55,$72,$6C,$ED,$9F,$59,$35,$84,$EB,$DA,$79,$36,$6D,$D5,$4D,$94,$CE,$BA,$89,$BB,$44,$C1,$76,$D7,$38,$10,$AA,$AA,$98,$CF,$19,$1C; 960
		dc.b $CE,$CA,$FF,$9D,$CB,$61,$F9,$DB,$EC,$9F,$82,$BE,$D9,$EF,$B5,$60,$7E,$72,$BF,$2C,$9D,$AB,$F2,$DF,$9A,$AD,$B5,$58,$A3,$2C,$DB,$F2,$74,$73,$D8,$E6,$41,$AD,$C1,$AF,$D6,$1A,$DD,$CD,$F7,$1B,$E5,$BD,$FF,$39,$96,$EA,$AA,$B7,$DF,$3F,$CE,$3E,$F8,$7D,$C5,$BB, $C,$27; 1024
		dc.b $6B,$26,  6,$3B,$3C,$6C,$F1,$DA,  1,$48,$1F,$9A,$4F,$4F,$1E,$87,$6A,$87,$F5,$78,$4F,$55,  9,$E9,$6B,$51,$FB,$97,$8A,$85,$84,$EC,$3B,$57,$E0,$93,$B0,$EC,$20,$1F,$D1,$A7,$62,  8,$23,$64,$D0,$14,$20,$A3,$76,$90,$3F,$82,$D8,$E3,$F0,$5D,$87,$E4,$B6,$FC,$E1,$1F; 1088
		dc.b $92,$D8,$7E,$C7,$F0,$5B,$51,$FC,$EA,$6E,$AA,$9B,$AA,$6E,$B9,$6E,$FB,$26,$13,$70,$46,  7,$66,$1F,$9C,$C0,$81,$2E,$CD,$8C,$A5,  9,$EE,$3B,$40,$87,$EC,$FA,$88,$1E,$96,$A2,$A1,$20,$76,$78,$48,$1E,$E2,$13,$F2,$69,$EE,$3D,$7E,$4F,$28,$F4,$35,$10,$22,$A1,$F5,$94; 1152
		dc.b $3C,  8,$DB,$B4,$3E,$A9,$AB,$EB,$EB,$68,$7D,$92,$50,$9B,$7A,$8C,$4B,$5D,$99,$30,$DF,$82,$ED,$EB,$63,$80,$7F,$38,$76,$4C,$6C,$53,$F3,$99,$EE,$AA,$AA,$98,$CF, $A,$31,$96,$32,$C0,$C0,$C5,$7A,$B7,$E5,$9E,$3D,$76,$C6,$5D,$B7,$CA,$3D,$6E,$F1,$9C,$24,$56,$BE,$BB; 1216
		dc.b $17,$D7,$B1,$1F,$9D,$10,$20,$7E,$B4,$6A,$39,$D4,  8,$18,$7D,$53,$9E,$2F,$CF,$6E,$69,$2E,$7F,$82,$D8,$6C,$9E,$86,$D7,$61,$B5,$F9,$AA,$6D,$5B,$6F,$B0,$DA,$88,$FD,$6A,$62,$B6,$4C,$2A,$AA,$AA,$AD,$FF,$37,$7D,$C4,$AB,$76,$92,$D6,$EA,$C2,$59,$49,$64,$AF,$BA,$48; 1280
		dc.b $48,$6E,$C1,$84,$9D,$83,$3E,$EC,$19,$7F,$68,$8C,$B2,$1E,$2F,$25,$57,$2C,$92,$57,$D8,$89,$3C,$93,$89,$56,$C4,$70,$19,$F4, $C,$FF,$AD,$F3,$7F,$D6,$AA,$D7,$EA,$EC,$9F,$9B,$FD,$22,$73,$12,$12,$4E,$62,$43,$B4,$84,$3F,$65,$64,$84,$ED,$5E,$2B,$C2,$49,$83,$23,$3B; 1344
		dc.b $3B,$49,$DA,$55,$21,$21,$25,$90,$96,$5E,$12,$59,$48,$7E,$93,$57,$F0,$35,$BC,$84,$92,$55,$27,$87,$92,$40,$87,$90,$81,$15,$21,$AD,$E4,$21,$24,$18,$49,$24,$B2,$46,$12,$18,$61,$EC,$25,$93,$21,$F6,$46,$D8,$1C,$BF,$3B,$FC,$1B,$7E,$6F,$1F,$BD,$1F,$A4,$FC,$D8,$E7; 1408
		dc.b $AA,$78,$B4,$93,$5A,$F7,$79,$24,$84, $F,  3,$C2,$A4,$84,$92,$42,$41,$84,$98,$48,$33,$FE,$DC,$16,$46,$1E,$43,$48,$37,$EC,$52,$41,$86,$8C,$92,$76,$12,$7E,  4,$84,$84,$92,$57,$F0,$22,$42,$49,$AA,$49,$FD,$EF,$E1,$24,$3C,  9,  9,$54,$84,$91,$84,$84,$AF,$E0,$33; 1472
		dc.b $B5,$48,$30,$F6,$22,$41,$93,$4F,$1C, $D,  7,  3,$F6,$29,$A7,$E7,$4A,$1F,$CE,$A7,$E7,$77,$DB,$3F,$D5,$DF,$F4,$96,$E7,$9C,$B9,$BF,$B8,$97,$34,$84,$81,$27,$8A,$E6,$F0,$21,$52,$4F,$A8,$90,$F1,$52,$7F,$DA, $E,$2F,$CD,$83, $E,$12,$5C, $E,$1E,$4F,$24,$81,$FA,$44; 1536
		dc.b $E6,$35,$CB,$51,$E0,$34,$67,$24,$92,$A3,$6E,$24,$EC,$8C,$92,$4D,$F2,$DE,$BC,$73,$A6, $C,$37,$4F,$63,$5C,$1D,$BF,$38,$9E,$7F,$38,$FA, $D,$EB,$F5,$97,  0; 1600
Nem_GameOver:	dc.b $80,$22,$80,  5,$1B,$14,  7,$24,  6,$35,$17,$46,$3A,$55,$16,$64,  9,$73,  0,$81,  8,$FA,$82,  3,  1,$15,$1C,$26,$3C,$83,  4, $A,$84,  3,  2,$16,$3B,$25,$1A,$48,$F9,$85,  7,$7A,$86,  4,  8,$15,$19,$27,$7B,$38,$F8,$87,  5,$18,$FF,$EB,$DB,$67,$A8,$B4,$36,$AE; 0
					; DATA XREF: ROM:0001C0DAo
		dc.b $BC,$87,$44,  0,$19,$3A,$2C,$59,$16,$4C,$B3,$B2,$A4,$F7,$6E,$6B,$25,$FC,$75,  4,$37,$76,$E7,$76,$F3,$AF,$82,  5,$91, $F,$EA,$D1,$41,$D1,$BF,$65,$BB,$E5,$F9,$7C,$DF,$3D,$40,$7E,$DE,$1D,$70,  1,$B8,$65,$90,$36,$9B,$5B,$37,$E0, $F,$A6,$8F,$E1,$32,$83,$28,$B2; 64
		dc.b $92,$9D,$16,$20,$5B,$20,$5B,$BB,$70,  1,$A6,$CA,$C6,$CF,$55,$83,$6A,$65,$7C,$1D,$9B,$D0,$C1,$B5, $C,$5E,$9E,$AF,$81,$53,$89,$35,$38,$93,$5B,$D3,$63,$7E,$63,$37,$F5,$56,$AB,$7A,$9A,$B7,$A9,$AB,$7A,$9A,$7A,$9C,$5A,$A7,  7,$AA,$9C,$1E,$AA,$70,$5F,$5B,$2F,$1F; 128
		dc.b $B4,  2,$DD,$C9,$78,$65,  0,$3A,$6E,$DC,$DC,$81,$65,  0,$37,$CF,$BE,$F7,$C0,$3E,$5B,$FA,$4F,$EC,$81,$7D,$75,$FB,$20,$2F,$FC,$62,  3,$FC,$B1,$F9,$C8,$1B,$4D,$AD,$9B,$F0,  1,$D2,$C8,$E9,  5,$25,$49, $F,$A6,$8F,$E1,$32,$83,$28,$B2,$92,$9D,$16,$22,$61,$D1,$78; 192
		dc.b  $E,$8F,$48,$D9, $C,$97,$52,$54,$9D,$75,$E2,$CB,$67,$A8,$B4,$36,$AE,$BC,$87,$44,  0,$19,$3A,$2C,$59,$16,$4C,$B3,$B2,$A4,$F7,$6E,$6B,$25,$FC,$75,  6,$51,$7E,$D9,$1D,$F1,$49,$4E,$8B,$10,  4,$C3,$A2,$F1,$D6,$59,$1E,$91,$BF,$65,$BB,$E5,$F9,$F0,$67,$E8,$DA,$19; 256
		dc.b $17,$A6,$30,$DF,$4C,$5A,$2E,$5E,$AF,$12,$41,$98,$92, $C,$C4,$90,$AF,$F0,$D4,$D0,$D1,$34,$FE,$6E,$9A,$1A,$26,$9F,$9B,$FA,$A6,$87,$CD,$BF,$26,$FC,$B4, $B,$72,$D0,$2F,$AE,$B1,$AF,$8C,$49,$A9,$C6,$AF,$FB,$20,  0,  0,  0,  6,$BD,$FA,$FD,$93,$50,$C1,$7F,$DA,$62; 320
		dc.b $FF,$C2,  0,  0,  0,  0,$3A,$F6,$40,$65,$24,  0,  0,  0,  1,$AB,$80,  0; 384
Nem_VSpring:	dc.b   0,$10,$80,  6,$3A,$13,  1,$26,$2C,$45,$11,$58,$FB,$65,$14,$73,  0,$81,$76,$2D,$86,  5, $A,$15,$17,$25,$13,$87,  4,  4,$16,$36,$25,$1A,$36,$38,$88,  4,  6,$15,$19,$25,$12,$89,  5,$10,$16,$3B,$26,$30,$8C,  5, $E,$16,$3C,$26,$31,$35, $B,$8D,  5,$15,$15, $F; 0
					; DATA XREF: ROM:0001C0F4o
		dc.b $26,$3D,$37,$7C,$48,$FA,$8E,$26,$37,$36,$39,$FF,$2B,$53,$8B,$D6,$5F,$8A,$8B,$D6,$5F,$8A,$8B,$D6,$5F,$8A,$8B,$D7,$FD,$67,$7E,$D9,$CA,$5C,$D7,$37,$29,$73,$5C,$DC,$A5,$CD,$73,$72,$BF,$D9,$57,$55,$7F,$5E,$55,$DF,$31,$FA,$F2,$AE,$F9,$8F,$D7,$95,$77,$CC,$7F,$BA; 64
		dc.b $EA,$EE,$5F,$C9,$F7,$72,$FE,$4F,$BB,$97,$F2,$7D,$DC,$BF,$90,  0,  2,$92,$8C,$BB,$FE,$C5,$B0,$6D,$BF,$6D,$6C,$1B,$53,$B7,$57,$D6,$78,$FD,$C7,$F6,$6D,$E3,$3D,$DB,$C3,$61,$6F,$FA,$21,$2F,$E4,$80,  0,$18,$47,  0,$65,$66,$62,$DF,$69,$44,$B3,$30,$3B,$34,$61,$B7; 128
		dc.b $EC,$21,$62,$2B,$A6,$FB,$52,$51,  2,$59,$23,$B3,$46,$1D,$27,$EC,$21,$62,$5D,$A8,$C0, $A,$7E,$E4,$76,$C1,$A8,$CA,$FE,$B8,$1D,$7E,$E4,$60,$1A,$89,$7F,$E3,$80,  0,$1F,$72,$8C,$90,$20,$41,$71,$74,$1A,$BE,$B3,$C6,$40,  0,$6A,$3F,$E8,$84,$BF,$92,  0,  0,$61,$1C; 192
		dc.b $22,  0		; 256
Nem_HSpring:	dc.b $80, $E,$80,  2,  0,$14,  8,$25,$19,$37,$7D,$45,$1A,$56,$3C,$65,$1B,$73,  2,$81,  3,  3,$83,  5,$1C,$86,  4,  9,$87,  6,$3A,$15,$18,$88,  6,$3D,$16,$3B,$89,  5,$17,$17,$7C,$8C,  4, $A,$8F,  5,$16,$FF,$49,$25,$DA,$5B,$B3,$BB,$BB,$BE,$58,$E2,$D1,$62,$C3,$1A; 0
					; DATA XREF: ROM:0001C0FAo
		dc.b $CB,$CB,$1F,$DB,$25,$61,$8D,$23,$F2,$2A,$2C,$5B,$4D, $F,$2D,$3B,$BB,$BB,$A5,$F1,$24,$92,$F3,$FD,$B5,$FE,$19,$DC,$EF,$F2,$C4,$92,$4D,$12,$49,$27,$E7, $A,$28,$FC,$E1,$45,$14,$94,$51,$45,$15,$14,$51,$4A,$24,$92,$49,$A2,$49,$25,$24,$4E,$E7,$72,$31,$8E,$3F,$C3; 64
		dc.b  $C,$63,$1E,$DE,$DF, $E,$1C,$39,$1C,$38,$70,$E2,$FF,$F2,$F7,$AD,$75,$E6,$2D,$F7,$10,$E2,$7A,$59,$67,$E5,$B3,$65, $F,$56,$C2,$5F,$59,$D2,$4B,$C7,$E3,$BE,$71,$DD,$E3,$F4,$FE,$9F,$31,$AB,$EF,$AB,$6B,$1D,$FD,$6B,$5F,$A6,$86,$A3,$F2,$29,$47,$C4,$B3,$8F,$6F,$9E; 128
		dc.b $8E,$BD,$3A,$F6,$2F,$18,$EC,$F9,$88,$EC,$FC,$76,$9C,$5B,$58,$EF,$37,$7B,$98,$69,$25,$E7,$C5,$E3,$D7,$EA,$34,  0; 192
Nem_BigFlash:	dc.b $80,$54,$80,  5,$1B,$16,$3C,$26,$3D,$36,$3B,$46,$3A,$55,$1C,$64, $B,$71,  0,$86,  3,  4,$18,$F8,$78,$FA,$8B,  4, $C,$8C,  5,$1A,$8D,  4, $A,$18,$F9,$FF,$FE,$B5,$6E,$67,$79,$37,$5F,$19,$75,$32,$EA, $E,$A5,$C0,  3,$73,$92,$E2,  0,$1F,$15,$79,$F0,$F8,$DE,$72; 0
					; DATA XREF: ROM:0001C2BCo
		dc.b $56,$5D,$4C,$BA,$CB,$A8,$89,$ED,$5E,$75,$53,$72,$BD,$A9,$B9,$5D,$65,$D0,$EE,$5C,  7,$92,$E0,  7,$71,$2A,$F2,$22,$23,$E1,$97,$48,$CB,$A4,$EE,$5C,$F7,$2E,$8C,$BA,$19,$74,$F6,$5C,  0, $E,$E2,$2A,$F1,  8,$42,$AF,  5,$5E,  3,$EB,$9F,$3C,$F9,  1,$E5,$5D,  0,$1B; 64
		dc.b $AB,$A0,  7,$5F,$FD,$E5,$3E,$5F,$2A,$7C,$8F,$35,$7A,  0,$DD,$5F,$E0,$7A,$AD,$6F,$55,$ED,$6B,$7A,$AE,$BF,  3,$74,$7B,$AB,$D0,$BF,$EE,$BE,$41,$4A,$52,$94,$A2,$95,$ED,$5D,  0,$F2,$AE,$BB,$D7,$35,$BD,$75,$AD,$EB,$9A,$1D,$FC,$BF,$5A,$F9,$50,  0,$51,$42,$82,$80; 128
		dc.b $FD,$E8,$A5,$3E,$54,$A5,$28,  0,  0,$1F,$FD,  0,$29,$45,$28,$A2,$85,  5,  3,$FF,$A2,$E7,$55,$3A,$99,$C8,$9E,$CE,$E6,$E6,$E7,$7F,$1B,$9C,$87,$BA,$BD,  7,$B2,$E0,  7,$9A,$BD, $A,$F8,$F2,$BE,$33,$CA,$99,$D6,  1,$71,$97,$48,$CB,$A4,$75,$AF,$33,$BD,$79,$46,$5D; 192
		dc.b $7B,$57,$9D,$54,$DC,$AF,$32,$A6,$E5,$79,$5E,$65,$D1,$CA,$FF,$36,  0,  0,  0,  0,$EF,$27,$32,  0,  0,  0,  1,$F5,$F1,$57,$9F, $F,$84,  0,  0,  0,$1F,$42,$25,$5E,$44,$44,$40,  0,  0,$7D,  0,$11,$15,$78,$84,$21,$57,$82,$AF,  1,$F4,  0,  7,$25,$C0,  7,$25,$C0; 256
		dc.b   0,$2A,$FF,  3,$D5,$6B,$7A,$EE,$B5,$BD,$73,$F0,$37,$41,$DC,$B8,  6,$E7,$26,$E7,$53,$73,$90,  3,$D9,$70,$72,$AE,$87,$B2,$E0,$39,$AB,$D0,  0,$E4,$B8,  1,$73,$93,$73,$A9,$B9,$C8, $F,$25,$C0,$EF,$57,$A1,$D0,  0; 320
Nem_S1BonusPoints:dc.b	 0,$24,$80,  5,$15,$15,$13,$24,	 8,$35,$16,$57,$78,$76,$2E,$81,	 4,  2,$14,  4,$27,$7A,$83,  7,$74,$16,$36,$28,$F8,$84,	 6,$35,$15,$12,$27,$6F,$85,  4,	 3,$17,$75,$86,	 3,  0,$15,$18,$26,$34,$37,$77,$47,$71,$57,$79,$8B,  6,$2F,$17,$76,$8C,	 4,  7,$14,  6;	0
					; DATA XREF: ROM:0001C2B6o
		dc.b $25,$14,$77,$6E,$8D,  6,$32,$8E,  4,  5,$16,$39,$37,$7B,$8F,$16,$33,$27,$70,$FF,$C7,$83,$D2,$C7,$C6, $F,$CC,$CF,$8C,$1E,$9D,$7C,$9D,$4F,$BC,$A6,$6B,$FB,$C8,$52,$A4,$10,$27,$29,$96,$10,$41,  4,$13,$C8,$82, $A,$B1,  4,$14,$20,$82,$BC,$90,$F5,$3E,$51,$A6,$EB; 64
		dc.b $FB,$CA,$B6,$5E,$F2,$6F,$E7,$37,$36,$E6,$EB,$A3,$48,  7,$BE,$BD,$65,$FA,$B3,$97,$6E,$12,$BF,$F9,$FA,$DF,$C3,$F6,$97,$E7,$2D,$AF,$CE,$5F,$1B,$92,$88,$F8,$27,$2C,$7A,  4,$10,$20,$20,$81,  1,  4,  8,  8,$20,$40,$41,$34,$27,$2C,$7A,$A2,$6E,$7A,$F4,$DF,$C2,$36; 128
		dc.b $DF,$FC, $F,$8B,$AE,$C7,$89,$18,$B7,$69,$75,$9E,$7D,$A4,$63,$F7,$F7,$C8,$4B,$85,$FA,$9F,$49,$67,$7E,$A7,$B4,$B3,$BF,$5D,$CC,$94,$27,$2C,$13,$90,$20,$80,$82,  4,  4,$10,$20,$20,$81,  1,  4,  8,  8,$13,$96,  9,$C8,$32,$50,$B7,$67,$BF,$A5,$56,$5B,$42,$ED,$75; 192
		dc.b $D7,$46,$2D,$A1,$CF,$89,$D7,$89,$CF,$B9,$C6,$87,$6F,$27,$5D,$7B,$9C,$E8,$A7,  4,$CB,$60,$4E,$B6,$20,$4A,$70,$40,$96,$C4,  9,$72,$82,  4,$AD,$32,  4,$B4,$A8,$27,$FD,$74,$C9,$B9,$8A,$2B,$C7,$B6,$9F,$B6,$5B,$72,$DE,$39,$BA,$B8,$F0,$7A,$58,$F8,$C1,$F9,$99,$F1; 256
		dc.b $83,$D3,$AF,$93,$A9,$F7,$94,$CC,$2D,$20,$D5,$8A,$CA,$E4,$26,$61,$4B,$10,$6A,$E4,$27,$93,$AB,$90,$AD,$15,$C8,$7E,$F1,$5C,$85,$57,$27,$57,$21,$35,$75,$62,$9B,$2D,$2B,$93,$7B,$CA,$9E,$DB,$9B,$73,$75,$D1,$A4,  3,$DF,$5E,$B2,$FD,$59,$CB,$B7,  9,$5F,$FC,$FD,$6F; 320
		dc.b $E1,$FB,$4B,$F3,$96,$D7,$E7,$2F,$8D,$D4,$4A,$13,$96,  9,$FD,  4,  4,$10,$20,$20,$81,  1,  4,  8,  8,$20,$40,$43,$D6,  9,$D1,$93,$75,$2B,$D3,$7F,  8,$DB,$7F,$F0,$3E,$2E,$BB,$1E,$24,$62,$DD,$A5,$D6,$79,$F6,$91,$8F,$DF,$DF,$21,$2E,$17,$EA,$7D,$25,$9D,$FA,$9E; 384
		dc.b $D2,$CE,$FD,$77,$25,$11,$F0,$4E,$58,$F4,  8,$20,$40,$41,  2,  2,  8,$10,$10,$40,$80,$82,$68,$4E,$58,$F5,$44,$DC,$F9,$EF,$E9,$55,$96,$D0,$BB,$5D,$75,$D1,$8B,$68,$73,$E2,$75,$E2,$73,$EE,$71,$A1,$DB,$C9,$D7,$5E,$E7,$36,$50,$70,$CA,$76,$65,$FE,  1,$3A,$83,$82; 448
		dc.b $75,$3B,$13,$AB,$E5,  4,$EB,$49,$93,$AF,$EF,$2A,$CA,$F9,$2C,$D9,$5D,$61,$95,$A3,$F5,$CD,$94,$FF,$5D,$4C,$AD,$CB,$78,$E6,$EA,$E3,$C1,$E9,$63,$E3,  7,$E6,$67,$C6, $F,$4E,$BE,$4E,$A7,$DE,$53,$30,$B4,$83,$5A,$59,$69,$33, $A,$C5,  6,$B4,$9E,$4E,$B4,$AD,$17,$FD; 512
		dc.b $8B,$4A,$AE,$4E,$B4,$9A,$BA,$D2,$6C,$B4,$AE,$4D,$EF,$2A,$7B,$6E,$6D,$CD,$D7,$46,$90, $F,$7D,$7A,$CB,$F5,$67,$2E,$DC,$25,$7F,$F3,$F5,$BF,$87,$ED,$2F,$CE,$5B,$5F,$9C,$BE,$37,$39,$51,$1C,$81,$39,$60,$B0,$81,  1,  4,  8,  8,$20,$40,$41,  2,  2,  8,$10,$10,$F5; 576
		dc.b $82,$74,$64,$DC,$F5,$E9,$BF,$84,$6D,$BF,$F8,$1F,$17,$5D,$8F,$12,$31,$6E,$D2,$EB,$3C,$FB,$48,$C7,$EF,$EF,$90,$97, $B,$F5,$3E,$92,$CE,$FD,$4F,$69,$67,$7E,$BB,$99,$3F,$98,$58,$2A,$10,$40,$4C,$41,  1,$31,  4,  4,$C4,$10,$13,$10,$40,$54,$2C,$17,$F3,$13,$77,$EF; 640
		dc.b $33,$DF,$D2,$AB,$2D,$A1,$76,$BA,$EB,$A3,$16,$D0,$E7,$C4,$EB,$C4,$E7,$DC,$E3,$43,$B7,$93,$AE,$BD,$CE,$6C,$A0,$E1,$94,$EC,$CB,$FC,  6,$50,$70,$CA,$76,$65,$7C,$A1,$96,$93,$65,$FD,$E5,$59,$5F,$25,$9B,$2B,$AC,$32,$B4,$7E,$B9,$B2,$9F,$EB,$A9,$95,$B9,$6F,$1C,$DD; 704
		dc.b $50,  0		; 768
S1Nem_SonicContinue:dc.b $80,$25,$80,  3,  1,$15,$14,$25, $F,$36,$2E,$46,$32,$56,$38,$66,$2F,$73,  2,$81,  3,  0,$16,$37,$27,$72,$48,$F6,$82,  5,$13,$83,  5,$1A,$18,$F3,$84,  8,$F7,$86,  4,  8,$17,$7A,$47,$78,$87,  5,$15,$17,$75,$88,  4,  6,$17,$76,$89,  5, $E,$38,$EF,$8A,  6,$36; 0
		dc.b $8B,  6,$33,$17,$74,$8C,  5,$12,$18,$EE,$28,$F2,$8D,  7,$73,$8E,  5,$18,$8F,  5,$16,$FF,$49,$2C,$BF,$44,$FF,$C9,$6F,  7,$F2,$51,$5F,$42,$62,  7,  1,$5E,$32,$98,$A8,$CA,$63,$D6,$EF,$FC,$90,$FD,$35,$DF,$A2,$17,$CD,$24,$7F,$E5,$ED,$FF,$6E,$49,$24,$95,$F1,$CA; 64
		dc.b $E1,$FE,$6F,$D9,$7E,$C6,$EF,$D9,$25,$FF,$2F,$FB,$7F,$C5,$24,$92,$4B,$FE,$3F,$F6,$FF,$92,$4A,$E1,$2C,$84,$A7,$27,$89,$27,$E0,$89,$2B,$B4,$84,$AE,$CC,$2B,$B4,$7A,$65,$32,$2F,  9,$FA,$B8,$4B,$46,$67,$9E,  8,$B6,$87,$3E,$CE,  7,$B8,$B1,$73,$64,$C5,$DE,$CE,$4A; 128
		dc.b $F9,$DF,$34,$AE,$9F,$E8,$EE,$9F,$2C,$A6,$94,$D4,$71,$EE,$95,$62,$9F,$A4,$7F,$E5,$3F,$4D,$87, $F,$5E,$6C,$46,$3C,$DB,$62,$1C,$DF,$99,$67,$C8,$FE,$64,$ED,$BD,$8B,$39,$E0,$FE,$65,$81,$D8,$86,$78,$6D,$B8,$70,$BB,$FE,$79, $B,$BF,$4F,$31,$46,$B5,$69,$30,$77,$6A; 192
		dc.b $E8,$CC,$50,$31,$F3,$BB,$95,$37,$FC,$F5,  1,$EC,$6B,$1A,$A0,$35,$83,$3D,$11,$4D,$57,$28,$7C,$D1, $F,$75,$34,$43,$D8,$3E,  8,$71,$F3,$2D,$2E,$F3,$6A,$5A, $C,$77,$40,$91,$8D,$48,$CA, $F,$75,$9F,$2F,$66,$BD,$C1,$AF,$76,$97,$E8,$EE,$EB,$4F,$3B,$BF,$4E,$75,$40; 256
		dc.b $FE,$B3,$3C,$9F,  4,$71,$5D,$C8,$7C,$54,$8B,$B5,$B5,$72,$B3,$45,$45,  3,$1D,$5D, $F,$8A,$D2,$65,$8E,$A3,$AD,$31,$4D,$44,$DA,$A1,$FA,$38,$CB,$9B,$A3,$A7,$90,$71,$8E,$AF,$CF,$68,$11,$CA,$B1,$2F,$1D,$C7,$F9,$85,$9F,$FB,$87,$72,$EF,$49,$1F,$C9,$2E,  5,$F5,$41; 320
		dc.b $70, $E,$9D,$95,$4E,$1C,$FD,  5,$BE,$53,$A0,$BA,$74,$B3,$F5,$8C,$C1,$E7,$4F,$73,$BD,$A3,$33,$B4,$EC,$46,$C7,$38,$C1,$C1,$CF,$61,$EF,$41,$31,$98,$6F,$CF,$36,$D1,$5C,$DB,$F3,$3B,$FE,$74,$B9,$5F,$D3,$F4,$42,$79,$FF,$24,$D8,$CA,$D0,$63,$BA,$2D,$23,$1A,$91,$96; 384
		dc.b $71,$D1,$9D,$4A,$87,$E3,$B7,$E1,$48,$A7,$EB,$C7,$E7,$87,$EB,$CB,  6,$2C,$58,$86,$78,$20,$83,$63,$63,$8A,  6, $C,$1C,$92,$5B,$78,$CD,$8F,$4F,$20,$E1,$1D,$5F,$9F,$A1,$1C,$AB,$DD,$E2,$50,$DF,$CC,$38,$7F,$EE, $B,$16,$EF,$7B,$AE,$6D,$D6,$41,$24,$AF,$CD,$D5,$87; 448
		dc.b $43,$B3,$DB,  3,$F7,$F3,$A7,$EB,$F1,$F9,$F6,$A5,$8E, $D,$69,$B9, $F,$B6,$4C,$FD,$DE,$DB,$B1,$1D,$87,$62,$E6,$78,$41,$7B,$24,$96,$DE,$33,$63,$D3,$C8,$38,$47,$57,$E7,$E8,$47,$2A,$FB,$FE,$17,$C4,$88,$FE,$61,$ED,$4F,$EC,$16,$EF,$EC,$5D,$73,$38,$64,$C3,$80,$E4; 512
		dc.b $92,$E3,$A7,$E8,$84,$F3,$FE,$49,$B1,$95,$A0,$CA,$B9,$C6,$39,$ED,$CC,$62,$D9,$ED,$51,$4C,$53,$43,  6,$C5,$81,$C3,$83,  3,$86, $F,$B1,$60,$CF, $F,  6,$C5,$AE, $E,$BF,$D9,$24,$B6,$F1,$9B,$1E,$9E,$41,$C2,$3A,$BF,$3F,$42,$39,$57,$F3,$BE,$24,$E6,$FE,$65,  5,$3F; 576
		dc.b $B0,$5B,$BC,$B1,$76,$4C,$32,$61,$C3,$92,$49,$71,$2E,$31,$7C,$EE,$F2,$CA,$4A,$57,$CE,$FB,$11,$2B,$84,$B9,$E5,$24,$92,$49,$3F,$17,$CD,$79,$5F,$2E,$25,$7C,$F2,  6,$D9,$73,$90,$BE,$49,$24,$96,$40; 640
S1Nem_MiniSonic:dc.b $80,$1E,$80,  4,  5,$14,  4,$24,  8,$35,$13,$45,$18,$56,$35,$66,$32,$73,  1,$81,  3,  0,$15,$16,$27,$7A,$82,  5,$14,$17,$79,$83,  4,  6,$16,$3A,$84,  6,$36,$85,  6,$34,$86,  6,$38,$87,  5,$15,$88,  6,$2F,$18,$F9,$89,  6,$2E,$8A,  7,$76,$8B,  6,$33,$8C,  6; 0
		dc.b $39,$8D,  7,$78,$17,$7B,$8E,  4,  7,$16,$37,$8F,  5,$12,$17,$77,$FF,$25,$3F,$7E,$12,$53,$71,$1B,$E4, $E,$FA,$FA,$C7,$70,$61,$E5,$39,$4D,$C2,$7E,$F8,$47,$EC,$49,$26,$7F,$BF,  9,$29,$B8,$8D,$F2,  4,$93,$AB,$CA,$72,$9B,$84,$FD,$F0,$8F,$D8,$92,$4C,$77,$11,$23; 64
		dc.b  $E,$64,$65,$87,$49,$61,$F2, $F,$90,$7C,$82,$6F,$37,$5F,$50,  9,$26,$41,$7F,$9E,$63,$74,$78,$B1,$24,$93, $F,$3D,$D6,$D1,$E8,$92,$64,$17,$B8,$28,$F9,$58,$92,$49,$2B,$BE,$BE,$89,$25,$3B,$88,$EE,$51,$CC,$8C,$B0,$E9,$2C,$3E,$41,$F2, $F,$90,$4D,$E7,$BF,$A8,$B1; 128
		dc.b $24,$85,$EE,$17,$B9,$24,$92,$66,$F2,$9C,$A6,$F1,$FB,$E6,  9,$FB,$16,$39, $D,$6D,$3B,$35,  2,$F7,$DF,$C7,$2A,$32,$64,$FD,$F2,$88,$FD,$14,$DF,$F3,$94,$33,$FD,$76,$BF,$A2,$9B,$FE,$B2,$85,$7F,$BC,$17,$F8,$5D,  8,$14,$60,$DF,$A2,$6F,$49,$E9,$3C,$B5,$A2,$8A,$1B; 192
		dc.b $20,$C3,$51,$14,$26,  6,$4C,$30,$27,$44,$61,$81,$A8,$61,$86,$18,$B1,$26,$3F,$47,$1D,$7E,$9D,$29,$67,$94,$79,$41,$29,$D1,  4,$75,$F9,$97,$46,$9D,$15,$B5,$A2,$8C,$51,$A8,$32,$A2, $D,$42,$F3, $C,$30,$C2,  2,$37,$9F,$9B,$A3,$F3,$56,$B9,$33,$15,$B9,$42,$DF,$F9; 256
		dc.b $CD,$1B,$80,$96,$49,$5C,$B7,$BD,$AF,$D3,$B2,$5F,$55,$71,$8D,$87,$6D,$A7,$A6,$63,$17,$FB,$E5,$B2,$AF,$5A,$FE,$5F,$66,$F2,$96,$5A,$8C,  5,$AA,$51,$94,$2D,$A1,$AC,$DC,$36,$AC,$B5,$46,$81,$3D,$8A,$B2,$D5,$39,$5A,$BD,$3F,$58,$B9,$F6,$D1,$42, $A,$E8,$EB,$C7,$E5; 320
		dc.b $34,$F0,$E9,$5F,$CA,$B6,$78,$E3,$9D,$33,$41,$76,$D7,$DD,$E1,$33,$5C,$EF,$90,$8C,$FB,$7C,$D6,$72,$13,$17,$DD,$C5,$FE,$13,$DC,$AB,$A2,$FB,$FC,$E0,$BB,$F7,$B8,$FD,$1C,$75,$FA,$74,$A5,$9E,$51,$E5,  4,$A7,$44,$11,$D7,$E6,$5D,$1A,$74,$56,$D6,$8A,$31,$46,$A0,$CA; 384
		dc.b $88,$35, $B,$CC,$30,$C3,  8,  8,$DE,$7E,$6E,$8F,$CD,$5A,$E4,$CC,$56,$E5, $B,$7F,$E7,$34,$6E,  2,$59,$25,$72,$DE,$F6,$BF,$4E,$C9,$7D,$55,$C6,$36,$1D,$B6,$9E,$99,$8C,$5F,$EF,$96,$CA,$BD,$6B,$F9,$7D,$9B,$CA,$59,$6A,$30,$16,$A9,$46,$50,$B6,$86,$B3,$70,$DA,$B2; 448
		dc.b $D5,$1A,  4,$F6,$2A,$CB,$54,$E5,$6A,$F4,$FD,$62,$E7,$DB,$45,  8,$2B,$A3,$AF,$1F,$94,$D3,$C3,$A5,$7F,$2A,$D9,$E3,$8E,$74,$CD,  5,$DB,$5F,$77,$84,$CD,$73,$BE,$42,$33,$ED,$F3,$77,$87,$49, $B,$FA,$71,$7D,$DF,$95,$D9,$D7,$DC,$BA,$B9,  0; 512
Nem_Bunny:	dc.b   0,$12,$80,  5,$12,$15,$1A,$25,$13,$35,$19,$45,$17,$55,$1C,$66,$3C,$78,$FA,$81,  4, $A,$86,  3,  3,$15,$18,$26,$3B,$38,$FB,$87,  3,  0,$16,$3A,$88,  3,  2,$14,  8,$25,$16,$35,$1B,$47,$7C,$89,  3,  1,$16,$3D,$FF,$95,$8E,$7E,$64,$EE,$F6,$37,$31,$7B,$64,$A6; 0
					; DATA XREF: ROM:0001C2C6o
					; ROM:0001C30Co
		dc.b $B2,$83,$19,$4E,$86,$53,$A1,$38,$74,$26,$18,$C4,$C6,  3,$92,$F4,$77,$23,  6, $E,$BD,$B0,$C9,$41,$DD,  7,$72,$87,  1,$E0,$53,$1B,$92,$1D,$F5,$21,$81,$E1,$B4,$FE,$6B,$67,$46,$D3,$B1,$CE,$F3, $D,$19,$A0,$C2,$9A,$14,$D4,$D0,$A6,$A6,$85,$38,$D5,$60,$31,$AC, $C; 64
		dc.b  $D,$7D,$8F,$57,$B0,$60,$F5,$6F,$65,$80,$8C,$F0,$16,$7A,$46,$E4,$71, $E,$6C,$4D, $E,$C2,$C8,$C0,$FA,$CF,$EE,$66,$7F,$42,$67,$BA,$D4,$62,$27,$18,$57,$87,$E2,$FA,$F1,$70,$8E,$21,$C8,$E4,  6,$26,$57,$62,$68,$63,$65, $F,$EC,$4A,$3A,$B4,$8C,$74,$56,$8D,$99,$D5; 128
		dc.b $18,$C9,$F9,$23,$FB,$7C,$7D,$7D,$1F,$3D,$E5,$1E,$2A,$37,$8A,$BC,$55,$CD,$8C,$FA,$DE,$BE,$35,$2F,$8D,$1D,$BA,$47,$6E,$91,$41,$87,$4E,$97,$63,  1,$7F,$58,$47,$D8,$92,$3C,  8,$DD,  3,$73,$17,$82,$B3,$80,$5F,$D6,$8E,$4D,$A6,$6C,$35,  1,$11,$28,$68,$C1,$4D,$19; 192
		dc.b $5B, $B,$5F,$26,$57,$3D,$F0,$FD,$78,$75,$D2,$91,$52,$18,$16,$90,$EE,$D2,$41,$EF,$26,  5,$CA,$17,$81,$37,$6A,$9B,  8,$D6,$58,$8B,$F7,$C4,$36,$67,$D6,$F5,$F1,$A9,$6C,$34,$76,$E9,$1D,$BA,$45,  6,$1D,$3A,$5D,$8C,  5,$FD,$60,$57,$D8,$94,$1B,$DA,$F0, $E,$6C,$32; 256
		dc.b $99,$46,$68,$D0,$47,$48,$CA,$82,$32,$46,$54,$D1,$91,$D5,  3,$AA,$F2,$BC,$47,$96,$BE,  5,$C0,  0; 320
Nem_Chicken:	dc.b $80, $E,$80,  3,  1,$15,$17,$25,$18,$34, $A,$45,$12,$55,$19,$67,$7A,$76,$37,$81,  3,  0,$15,$13,$83,  8,$F8,$84,  8,$F9,$85,  6,$39,$86,  6,$36,$87,  5,$16,$88,  4,  8,$89,  4,  6,$8A,  6,$38,$16,$3B,$8B,  8,$FA,$8C,  5,$1A,$8D,  6,$3A,$8E,  3,  2,$17,$7B; 0
					; DATA XREF: ROM:0001C304o
					; ROM:0001C312o
		dc.b $8F,  4,  7,$16,$3C,$FF,$DF,$D6,$B3,$D6,$50,$93,$6D,$F9,$BC,$30,$79,$E0,$3C,$F7,$A7,$16,$2B,$7B,$B7,$A5,$3B,$45,$9A,$98,$FB,$65,$38,$2B,$CF,$7F,$96,$FC,$17,$C0,$41,$40,$E4,$B0,$FD,$7D,$97,  7,$F3,$37,$12,$67,$12, $C,$82,$A1,$1A,$69,$22,$29,$FE,$78,$92,$E0; 64
		dc.b $4A,$7B,$DF,$AF,$41,$67,$EB,$66,$90,$70,$D5,$37,$1B,$CA,$C1,$F7,$DD,$B1,$16,$9A,$A6,$A6,$BC,$4D,$32,$3F,$82,$FC,$B7,$BF, $F,$23,$64,$10,$2A,$C3,$C0,$D7,$17,$FC,$CE,  3,$B5,$7B,$61,$5F,$10,$32,$B3,$C7,$CB,$C8,$70,$B3,$3A,$D6,$75,$E8,$7A,$EB,$9A,$8B,$15,$88; 128
		dc.b $7D,$CB,$3E,$67,$4E,$5C,$1D,$88,$90,$DA,$7F,$AF,$28,$3C,$F0,$C9,$C4,$5B, $D,$6D,$97,$CB,$E3,$F4,$9C,$36,$3F,$55,$3F,$CE,$75,$FA,$1A,$1A,$AE,$7E,$BB,$B4,$31,$42,$E1,$C3,$52, $F,$3B,$87,$CB,$8B,$5C,$5D,$F7,$A0,$41,$56,$86,$99,$70,$C5,$1F,$1B,$9F,$8F,$D7,$86; 192
		dc.b $1A,$C0,$8E,$3C,$D5,$E0,$F1,$F9,$4C,$7E,$87,$BC,$CC,$FE,$72,$5A,$F4, $F,$32,$EB,$95,$95,$B8,$CB,$DF,$6A,$99,$1B,$41,$80,$E5,  3,  7,$D9,$67,$21,$E8,$11,$B4,$EF,  0,$B7,$E5,$AE,$21,$87, $B,$13,$83,$F3,$21,$DE,$BA,$A9,$91,$A9,$7D,$77,$68,$6B,$8B,$87, $D,$48; 256
		dc.b $38,$C0,$7C,$B8,$B4,$9F,$79,$20,$55,$A1,$8A,$74,$18,$AC,$47,$3F,$1E,$10,$9B,$55,$B5,$9C,$EB,$1D,$ED,$2E,$C4,$80; 320
Nem_Penguin:	dc.b   0,$12,$80,  6,$36,$15,$1A,$23,  1,$35,$18,$47,$7B,$75,$19,$81,  3,  2,$14,  8,$26,$3B,$38,$FB,$48,$FA,$86,  4,  9,$16,$39,$87,  4,  7,$17,$7A,$88,  4,  6,$16,$38,$89,  3,  0,$15,$16,$27,$7C,$8B,  4, $A,$16,$3A,$8F,  5,$17,$16,$37,$26,$3C,$FF,$CE,$73,$8E; 0
					; DATA XREF: ROM:0001C2D4o
		dc.b $B7,$C2,$AD,$CA,$B5,$5C,$DA,$45,$C8,$79,$76,$22,$53,$B1,$12,$9D,$B4,$84,$A7,$65,$B0,$42,$77,$81,$1B,$A1,  2,$37,$D8,$7F,$47,$61,$16,$E3,$41,$71,$E8,$86,$7E,$4B,$3F,$E9,$8B,$3F,$E9,$8B,$7A,$97,$21,$9F,$8D,$75,$BD,$B6,$AF,$33,$9C,$9B,$F5,$EE,$F4,$BD,$D5,$96; 64
		dc.b   4,$DB, $F,$2E,$30,$EA,$46,$1D,$48,$C3,$A9,  8,$DE,$42,$1B,$2D,$B7,$81,$1B,$5E,  4, $D,$BE,$86,$9A,$D0,$34,$FC,$20,$65,$D8,$63,$97,$6C,$72,$ED,$89,$F4,$D8,$67,$61,$81,$BF,$5E,$FC,$AC,$E7,$3F,$D0,$BD,$62,$FB,$55,$FA,$35,$FB,$F3,$78,$E8,$A6,$F8,$5A,$D0,$58; 128
		dc.b $76,$47,$D9,$11,$63,$16,$46,  4,$61,  8,$3F,$45,$7C,$5A,$8F,$8D,$A8,$10,$35,$16,$8D,$21,$C2,$1A,$41,$E7,$8D,$20,$CF,$2F,$B7,$63,$8A,$CE,$73,$9C,$F9,$EE,$AE,$2F,$80,$A4,$51,$4F,$2D,$45,$4A,$60,$54,$A6,  5,$4A,$90,$62,$42,$3D,$DD,$18,$F0,$FD,$1B,$70,  8,$6E; 192
		dc.b $58,$B0,$E5,$C8,$61,$E8,$A6,$B3,$1B,$70, $B, $A,$DE,$B5,$FD,$FF,$E8,$5E,$B1,$7D,$AA,$FD,$1A,$FD,$F9,$BC,$74,$53,$7C,$2D,$68,$2C,$3B,$23,$EC,$88,$FD,$CE,$D1,$68,$B4, $F,$BB,$7F,$87,$E4,$6D,$D8,$EF,$6F,$F0,$EB,$EE,$C6,  7,  5,  6,$F4,$50,$6E,$4A, $F,$C9,$41; 256
		dc.b $BD,$6B,$BF,$D4,$7B,$B2,$CE,$73,$BD,$7B,$F2,$B0,$2A,$6F,$45,$3C,$B5,$15,$29,$81,$52,$98,$15,$2A,$41,$89,  8,$F7,$74,$63,$C3,$F4,$7E,$88,$67,$60,$59,$E5,$D8,$BF,$2E,$C7,$F6,$CE,$7F,$6C,$C7,$97,$96,$2D,$FA,$76,$3B,$D3,  2,$BC,$AC,$2A,$DE,$B4; 320
Nem_Seal:	dc.b   0, $E,$80,  5,$18,$15,$16,$25,$1A,$35,$1B,$45,$1C,$56,$3B,$76,$3A,$81,  5,$19,$86,  3,  3,$15,$17,$26,$3C,$38,$F9,$87,  2,  0,$14, $A,$26,$3D,$38,$FA,$88,  3,  2,$14,  9,$28,$F8,$89,  4,  8,$18,$FB,$FF,$EB,$AE,$BA,$E4,$9B,$45,$F4,$86,$3D,$21,$8F,$43,$C8; 0
					; DATA XREF: ROM:0001C2DAo
					; ROM:0001C2E8o
		dc.b $B4,$3C,$8A,$D2,$F2,$2B,$52,$BE,$6C,$5C,$BD,$A0,$F9,$F8,$89,$FB,$43,$11,$38,$F8,$AB,$D9,$41,$E6,$A2,$AF,$B5,$4F,$70,$AB,$91,$3B,$55,$C1,$F5,$D7,$5D,$5A,$7B,$62,$E0,$C5,$B1,$8B,$66,$59,$B3,$2C,$D9,$97,$3A,$BA,$AD,$32,$E6,$BC,$23,$51,$31,$F1,$84,$21,$8B, $E; 64
		dc.b $90,$AD,$72,$16,$9D,$46,$E9,$70,$51,$C5,$1D,$D2,$ED,$9D,$75,$B8,$EE,$17,$73,$DA,$3B,$47,$73,$DC,$2C, $B,$6B, $F,$E0,$50,$D3,$FA,$5E,$B2,$E5,$91,$F3,$65,$57,$34,$BE,$B7,$22,$EA,$6A,$6D,$4E,$A7,  7,$83,$31,$E5,$32,$3C,$1E,$48,$2E,$3C,$90,$BD,$79,$79,$3C,$2E; 128
		dc.b $2F,$EB,$13,$F2,$60,$F8,$FB,$B0,$A2,$9F,$A8,$B8,$A0,$84,$28,$B4,$FE,$E7,$A8,$5C,$84,$72,$4E,$21,$F1, $F,$92,$72,$27,$B4,$77, $B,$90,$A3,$70,$A9,$C2,$8A,$B8,$C4,$5C,$86,$A9,$FD,$4F,$D2,$8C,$42,$A9,$A9,$D0,$EA,$6D,$E0,$CB,$5E,$99,$18,$B8,$F2,$46,$2E,$3C,$91; 192
		dc.b $8F,$5E,$5E,$71,$E1,$73,$1F,$D6,$30,$BE,$4B,$13,$F7,$A2,$61,$45,$84,$28,$56,$43,$21,$5A,$10,$C8,$B2,$85,$ED,$80; 256
Nem_Pig:	dc.b $80,$12,$80,  3,  2,$14,  9,$24,  7,$35,$18,$45,$17,$55,$1A,$65,$1B,$74,  8,$81,  3,  0,$14, $A,$26,$3C,$86,  8,$FA,$87,  5,$1C,$8A,  4,  6,$17,$7C,$26,$3D,$8B,  3,  1,$15,$1D,$8C,  5,$16,$8D,  5,$19,$18,$FB,$FF,$76,$3B,  7,$E6,$2A,$EC,$15,$B5,$95,$9B,$8E; 0
					; DATA XREF: ROM:0001C2F0o
					; ROM:0001C2FEo
		dc.b $60,$EC,$42,$B7,$33,$AC,$F1,$31, $F,$69,$F2,$59,$52, $A,$97,$6B,$62,$23,$46,  6,$C8,$7F,$B6,$71,$86, $F,$94,$1C,$CE,$4B, $D,$10,$CB,$D2,$35,$57,$B2, $C,$F9,$59,$D7,  4,$23,$B0,$F9,$E5,$B0,$39,$9B,$8B,$38,$2C,$1A,$7C,$5E,$20,$AB,$15,$DC,  8,$88,$3A,$1A,  5; 64
		dc.b $D8,$3B,$7D,$B8,$6C,$17, $B,$2E,$18,$E5,$D8,$C4,$44,$39,$76,$28,$84,$C6,$48,$96,$F2,$EC,$6B,$46,  4,$6C,$88,$D9,$11,$B2,$FE,$A2,$E2,$48,$73,$21,$16,$E8,$70,$AA,$2F,$5A,$F1, $B,$88,$91,$AF,$A4,$1C,$7E,$5B,  3,$EA,$C9,$A6,$B9,$6F,$92,$17,$15,$98,$FB,$FA,$D0; 128
		dc.b $BD,$3B, $D,$BB,$35,$F2,$BF,  4,$70,$39,$F8,$F8,$D8,$4C,$F6,$E5,$85,$ED,$22,$E1,$8F,$EC,$58,$BF,$EA,$F0,$62,$22,$22,$22,$2F,$D9,$62,$8D,$31,$92,$25,$BC,$BB,$1A,$D1,$43, $C,$69,$CA,$AC,$7D,$62,$B2,$B9,$4D,$D9,$B7,$5F,$EC,$7A,$8B,$89,$21,$CC,$8B,$8B,$F7,$1F; 192
		dc.b $2A,$21,  7,$1B,$A4,$10,$D0,$43,$5F,$C1,$70,$99,  7,$F0,$AF,$18,$CF,$EE,$E7,$D3,$B0,$DB,$B3,$5F,$2B,$F0,$47,  3,$9F,$8F,$8D,$84,$CF,$6E,$58,$5E,$D2,$2E,$18,$F9,$F0,$CD,$23,$AA,$EC,$D4,$D4,$F7,$F6,$38,$FD,$DC,$80,  0; 256
Nem_Flicky:	dc.b   0, $E,$80,  5,$14,$15,$12,$25,$15,$35,$18,$46,$37,$56,$3B,$66,$3C,$74,  7,$81,  4,  4,$16,$3D,$82,  3,  1,$15,$1A,$27,$7C,$83,  3,  0,$15,$19,$28,$FA,$84,  5,$16,$85,  4,  5,$15,$13,$48,$FB,$86,  4,  6,$87,  4,  8,$8B,  6,$36,$8C,$16,$3A,$8F,  5,$17,$15; 0
					; DATA XREF: ROM:0001C2CCo
					; ROM:0001C2F6o
		dc.b $1C,$FF,$77,$77,$7C,$1F,$AC, $B,$4E,$A1,$5A,$75,$B4,$34,$2D,$55,$92, $D,$43,$24,$19,$10,$C9,  6,$59,$56,$E4,$87,$5C,$DA,$47,$A1,$CD,$D0,$2C,$A6,$57,$F2,$D2,$36,$9F,$E5,$AA,$82,$6D,$84,$2A,$37,$4D,$93,$7B,$ED,$BD,$FD,$DD,$1D,$DD,$FB,$18,$C9,$18,$5B,  3,$85; 64
		dc.b $65,$18,$86,$8B,$62,$11,$97,$10,$8C,$31,  8,$C0,$D6,$EC,$B9,$AF,$3A,$15,$B8,$E8,$D4,$27,$6C,$A6,$75,$69,$D8,$D6,$61,$30,$A5,$37,$D9,$3B,$DA,$FD,$FB,$7F,$11,$DE,$A1,$CF,$82,$A1,$68,$44,$8C,$F4,$24,$66,  8,$91,$98,$22,$84,$19,$90,$44,$CA,$EA,$4A,$CA,$14,$CA; 128
		dc.b $E6,$60,$D3,$87,$F4,$32,$4E,$76,$9F,$AB,$DF,$F4,$2E,$F2,$16,$5B,$66,$56,$FB,$14,$FB,$65,$1F,$A5,$10,$D1,$95,$D3,$24,$11,$F1,$92, $F,$D1,$64,$83,$9E,$8B,$5D,$35,$D6,$B9,$EF,$CF,$CD,$BB,$BB,$F8,$1C,$F8,$3B,$23,$B2, $E,$E4,$11,$4C,$D3,$E6,$66,$35,$25,$FD,$99; 192
		dc.b $94,$FE,$96,$57,$9F,$D5,$39,$B2,$4C,$52,$FB,$25,$3D,$5A,$5F,$64,$91,$4A,$7A,$EF,$B8,$B2,$DB,$32,$B7,$D8,$A7,$DB,$28,$FD,$28,$86,$8C,$AE,$99,$20,$8F,$8C,$90,$7E,$8B,$24,$68,$74,$5A,$E8, $F,$5A,$E1,$4F,$9F,$9B,$7A, $F,$17,$C4,$7F,  0; 256
Nem_Squirrel:	dc.b   0,$12,$80,  5,$17,$15,$19,$24, $A,$35,$12,$45,$1B,$56,$39,$68,$F8,$75,$13,$81,  4,  6,$16,$3C,$86,  4,  8,$87,  5,$1A,$88,  6,$3B,$8A,  5,$18,$17,$7B,$27,$7A,$48,$FA,$8B,  3,  1,$14,  7,$25,$16,$36,$38,$8D,  3,  0,$13,  2,$26,$3A,$38,$F9,$FF,$A5,$CE, $F; 0
					; DATA XREF: ROM:0001C2E2o
		dc.b $54,$70,$8C,$81,$83,$23,$A8,$D4,$8C,$36,$A4,$61,$B5,$40,$C3,$6A,$8E, $C,$62,$8F,$EE,$AE,$51,$F5,$70,$E1,$C6,$51,$1E,$E4,$BD,$EC,$1C,$6C,$3D,$C1,$B8,$76,$BD,$81,$61,$9E,$18,$D3,$A3,$C8,$3F,  3,$E0,$4E,$4B,$3F,$27,$19,  5,$60,$E4,$18,$22,$8E,$A3,$46,$8E,$9A; 64
		dc.b  $D,$1D,$34,$1A,$3A,$68,$23,$2D,$88,$38,$39,$FA,$39,$FD,$D1,$45,$38,$71,$E8,$15,$7F,$4A,$BD,$91,$2B,  9,$78,$E2,$E7,$A6,$22,$C0,$B7,$17,  5,$3E,$41,$1B,$5C,$AE,$44,$E7,$39,$CF,$6F,$27,$54,$FD,$52,$B6,$45,$BC,$CB,$F9,$22,$D3,$9C,$E7,$39,$CC,$AD,$9C,$2D,$FF; 128
		dc.b $6E,$BA,$B6,$7F,$9A,$F7,$16,$46,$E0,$B3,$87,  6,$FE,$74,$45,$33,$83,$42,$C2,$85,$9A,$4E,$A4,  8,$32,$6B,$4F,$F9,$B4, $A,$23,$21,$C1,$81,$74,$FA,$8E,$C7,$10,$DD,$8E,$21,$BB, $F,$83, $D, $C,$7D,$1F,$CB,$60,$FF,$A8,$1F,$AB,$B7,$52,$20,$89,$36,  6,$C3,$72,$43; 192
		dc.b $4E,$73,$9C,$ED,$5F,$EB,$F9,$FE,$DF,$F7,$5B,$FB,$62,$FF,$A1,$E2,$5F,$B1,$9F,$C1,$E4,$1D,$87,$E5,$48,$AD,$9C,$2D,$DB,$95,$CA,$E4,$5A,$43,$8A,  7,$A3,$95,$61,$61,$FA,$1F,$E5,$B7,  3,$D9,$16,$57,$E1,$67,$E6,$43,$E3,$F9,$B4, $A,$23,$21,$C1,$81,$74,$FA,$8E,$C7; 256
		dc.b $10,$DD,$8E,$21,$BB, $F,$83, $D, $C,$7D,$1F,$CB,$60,$FF,$A8,$1F,$AB,$D8,$35,$10,$E1,$A9,$38,$F2,$85,$86,$C3,$CC; 320
Map16_EHZ:	incbin	"mappings/16x16/EHZ.bin"
		even
Nem_EHZ:	incbin	"art/nemesis/EHZ primary.bin"
		even
Map16_HTZ:	incbin	"mappings/16x16/HTZ.bin"
		even
Nem_HTZ:	incbin	"art/nemesis/HTZ primary.bin"
		even
Nem_HTZ_AniPlaceholders:dc.b $80,$2E,$80,  3,  1,$14,  5,$25,$11,$35,$15,$45,$16,$55,$18,$67,$72,$73,  0,$81,  4,  4,$16,$33,$27,$7A,$82,  5,$13,$17,$78,$83,  4,  7,$17,$73,$84,  7,$70,$17,$74,$85,  5,$14,$17,$75,$86,  6,$32,$17,$76,$87,  4,  6,$17,$6F,$28,$EF,$48,$F6,$78,$F7,$88,  5; 0
					; DATA XREF: ROM:0001C218o
		dc.b $17,$18,$F2,$89,  5,$10,$18,$F3,$8A,  6,$35,$8B,  7,$71,$8C,  6,$34,$8D,  6,$36,$8E,  5,$12,$28,$EE,$8F,  7,$6E,$FF,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,$17,$B5,$3A,$38,$5E,$D4,$E8,$E0,  0,  0,  0,  0,  5,$69,$DA,$95,$A7,$6A,  0,  0,  2,$B2,$DD,$A5; 64
		dc.b   0,$A6,$54,$E1,$74,$10,$57,$8C,$E2,$8A,$F1,$42,$8D,$5F,$D2,$3D,$34,$EA,  6,$25,$B8,  1,$C9,$35,$7C,$48,$47,$83,$CC,$4D,$7A,$32,$C0,$3F,  9,$A2,$EB,$66,$8E,$FC,$A9,$C1,$F2,$A0,$12,$E2,  6,$B0,  2,$B3,$11,$EB,$C9,$D7,$5B,$74,$B3,$96, $E,$BB,$14, $B,$4E,$3A; 128
		dc.b $F0,$A7,$47,  0,  0,  0,  1,$78,$CB,$74,$B4,$D7,$80,$AD,$EB,$2B,$4F,$2C,$76,$7B,$EB,$3B,$C0,$45,$C6,$1C,$A2,$B6,$54,  9,$19,$BC,$50, $E,$76,$60,$50,$A2,$A3,$24,$5D,$53,$9A,$FE,$DD,$79,$AF,$F9,$F2,$EA,$DC,$37,$D9,$EB,$CF,$37,$9A,  1,$C9,$E6,$C5,$B0,$D1,$45; 192
		dc.b $CD,$84,$52,$28,$AE,$2C,$8E,$79,$85,$F7,$FD,$BF,$E9,$93, $D,$54,$E6,$CA,$8B,$E8,$14,$28,$39,$5F,$8C,$58,$ED,$64,$59,$84,$8B,$96,$30,$2F,$58,$55,$D2,$79,$BD,$B5,$7A,$B4,$A1,$1F,$EB,$F8,$E0,$C9,$96,$F2,$96,$CC,$BC,$50,$BC,$50,$B2,$BC,$59,$50,$E7,$5D,$5E,$E2; 256
		dc.b $D7,$3A,$FA,$2D,$86,$AB,$E6,$5A,$C8,$51,$5E,$DC,$C1,$7D,$F9,$7B,$55,$A1,$7C,$9B,$B2,  2,$99,$7E,$6A,$FB,$A1,$69,$AA, $A,$CD,$5A,$28,$35,$8A,$78,$59,$1B,$B2,$DD,$CA,$1F,$1A,$D5,$A7,$AB,$C6,$50,$2E, $B,$D6, $B,$EF,$BD,$7A,$65,$A4,$DD,$AE,$52,$56,$43,$28, $C; 320
		dc.b $66,$12,$28,$12,$D2,$AB,$87,$B3,$D7,$6E,$52, $E,$2C,$8B,$BD,$77,$E4,$DE,$1A,$8A,$FF,$A2,$47,$3F,$B2,$39,$99,$AC,$CF,$FC,$7D,$FF,$7D,$5F,$DF,$7B,$FE,$C6,$BF,$B1,$3F,$E7,$87,$71,$EE,$B7,$FB,$A2,$C5,$8E,$F2,$C5,$8B,$2B,$14,$28,$5B,$D1,$49,$BE,$47,$F6,$3E,$15; 384
		dc.b $D1,$50,$CD,$1D, $E,$66,$7F,$B7,$F4,$7F,$7D,$DE,$92,$8F,$73,$1F,$EF,$7F,$5D,$61,$EC,$BF,$DE,$AF,$EF,$8E,$F9,$1D,$EB,$E6,$7B,$D7,$F3,$CC,$5A,$46,$46,$47,$7C,$8C,$8C,$93,$A7,$6E,$F4,$9B,$FF,  5,$CE,$67,$D4,$E3,$99,$43,$FC,$13,$9C,$7F,$AE,$77,$9F,$CF,$1F,$69; 448
		dc.b $42,$50,$94,$25,  3, $F,$EF,$19,$7B,$C5, $A,$14,$EF,$C9,$B2,$6C,$8F,$FF,$8F,$F7, $E,$8B,$A1,$D0,$DF,$86,$5C,$2F,$95,$F2,$28,$F9,$CC,$CD, $F,$A8,$A1,$FF, $A,$FE,$DC,$F7,$D5,$BF,$DC,$65,  9,$43,$B9,$60,$7D,$8C,$97,$7A,$FF,$5E,$2C,$7D,$A1,$38,$7E,$8A,$4B,$FA; 512
		dc.b $C3,$A1,$97,$EB,$25,$3E,$EF,$CE,$1E,$E5,$FC,$DF,$EA,$78,$F5,$1F,$F2,$16,$62,$DF,$B2,$A3,$4E,$95,$69,$E1,$97,$51,$56,$5D,$6A,$D3,$5F,$D9,$51,$A7,$4B,$31,$61,$FF,$21,$E1,$66,  0,$8F,$FC,$80,  0,  1,$FF,$20,  7,$EC,$FF,$62,  4,$7C,$AD,$7F,$CF,$DE,$30,$4F,$D7; 576
		dc.b $DD,$7C,$D0,$FE,$7E,$F1,$82,$2E,$E5,$F3,$5D,$CB,  4,$C6,$6A,$87,$74,$7C,$CE,$65,$20,$B0,$8C,$23,$C5,$B2,$C5,$12,$DC,$4D,$31,$C5,$B1,$A6,$34,$29,$64,$E5,$B2,$5D,$74,$D9,$76,$5D, $A,$6C,$61,$B6,$87,$3B,$D1,$37, $D, $E,$77,$A2,$6E,$3A,$14,$D8,$C3,$65,$D3,$65; 640
		dc.b $DB,$1B,$25,$EC,$9C,$B4,$29,$8D,  6,$80,  8,$FE,$76,$DB,$21,$A5,$6E,$98,$A7,$95,$2D,$D4,$F5,$B5,$3C,$AB,$4B,$94,$1C,$92,$D7,$C5, $F,$95,$A8,$3A,$80,  6,$21,$73,$FA,$85,$4D,$C6,$F9,$DD,$77,$2F,$9A,$5F,$33, $F,$29,$6E,$FC,$F1,$82,$1D,$D6,$82,$1F,$CF,$D6,$19; 704
		dc.b $9D,$D5,$81,$4C,$40,$A6,$20,$40; 768
Map128_EHZ:	incbin	"mappings/128x128/EHZ.bin"
		even
Map16_HPZ:	incbin	"mappings/16x16/HPZ.bin"
		even
Nem_HPZ:	incbin	"art/nemesis/HPZ primary.bin"
		even
Map128_HPZ:	incbin	"mappings/128x128/HPZ.bin"
		even
Map16_CPZ:	incbin	"mappings/16x16/CPZ.bin"
		even
Nem_CPZ:	incbin	"art/nemesis/CPZ primary.bin"
		even
Nem_CPZ_Unknown:dc.b   0,  8,$80,$12,  0,$73,  4,$82,$15,$1A,$87,$13,  2,$88,$13,  3,$89,$13,  5,$8A,$15,$1B,$8B,$15,$1C,$8C,$16,$3E,$8D,$15,$1D,$8E,$14, $C,$75,$1E,$FF,$92,$49,$24,$36,$6C,$A5,$18,$C4,$29,$24,$85,$28,$C7, $A,$51,$8E,$14,$A3,$1C,$29,$46,$38,$52,$8C,$73,$AF,$AF; 0
					; DATA XREF: ROM:0001C128o
		dc.b $AF,$AF,$FF,$BD,$7D,$7A,$5A,$5F,$F2,$D3,$D3,$D2,$D2,$FF,$E7,$CB,$E5,$F2,$F9,$7F,$F3,$8B,$8B,$8B,$8B,$FF,$7C,$5C,$5B,$CD,$E7,$FE,$B6,$B6,$AE,$5C,$FF,$CD,$55,$3C,$79,$FF,$85,$8B,$16,$2C,$FF,$BF,$BD,$EF,$78,  0; 64
Map128_CPZ:	incbin	"mappings/128x128/CPZ.bin"
		even
Map16_GHZ:	dc.w $4000,$4000,$4001,$4001,$4002,$4802,$4003,$4803,$4004,$4006,$4005,$4007,$4008,$400A,$4009,$400B,$400C,$400E,$400D,$400F,$4010,$4012,$4011,$4013,$4014,$4016,$4015,$4017,$4018,$401A,$4019,$401B,$401C,$401E,$401D,$401F,$4020,$4022,$4021,$4023,$4024,$4026,$4025,$4027,$4028,$402A,$4029,$402B,$402C,$402E,$402D,$402F,$4030,$4032,$4031,$4033,$4034,$4036,$4035,$4037,$4038,$400A,$4039,$400B; 0
					; DATA XREF: ROM:0001BFF0t
					; ROM:0001C050o
		dc.w $403A,$403C,$403B,$403D,$403E,$4040,$403F,$4041,$4042,$4044,$4043,$4045,$4046,$4842,$4047,$4843,$4048,$404A,$4049,$404B,$404C,$404E,$404D,$404F,$4050,$4052,$4051,$4053,$4054,$4056,$4055,$4057,$4058,$405A,$4059,$405B,$405C,$405E,$405D,$405F,$4060,$4062,$4061,$4063,$4064,$4066,$4065,$4067,$4068,$406A,$4069,$406B,$406C,$406E,$406D,$406F,$4070,$4072,$4071,$4073,$4074,$4076,$4075,$4077; 64
		dc.w $4078,$407A,$4079,$407B,$407C,$407E,$407D,$407F,$4080,$4082,$4081,$4083,$4084,$4086,$4085,$4087,$4088,$408A,$4089,$408B,$408C,$408E,$408D,$408F,$4090,$4092,$4091,$4093,$4000,$4094,$4001,$4095,$4008,$4096,$4009,$4097,$4098,$409A,$4099,$409B,$409C,$409E,$409D,$409F,$40A0,$40A2,$40A1,$40A3,$40A4,$402C,$40A5,$402D,$4030,$4034,$4031,$4035,$40A6,$40A8,$40A7,$40A9,$40AA,$40AC,$40AB,$40AD; 128
		dc.w $40AE,$40B0,$40AF,$40B1,$40B2,$40B4,$40B3,$40B5,$40B6,$40B8,$40B7,$40B9,$40BA,$40BC,$40BB,$40BD,$40BE,$40C0,$40BF,$40C1,$40C2,$40C4,$40C3,$40C5,$4064,$406E,$4065,$406F,$4070,$40C6,$4071,$40C7,$4080,$408A,$4081,$408B,$4090,$4802,$4091,$4803,$4000,$40C8,$4001,$40C9,$40CA,$40CC,$40CB,$40CD,$40CE,$40D0,$40CF,$40D1,$40D2,$40D4,$40D3,$40D5,$40D6,$40D8,$40D7,$40D9,$40DA,$40DC,$40DB,$40DD; 192
		dc.w $40DE,$40E0,$40DF,$40E1,$40E2,$40E4,$40E3,$40E5,$40E6,$40E8,$40E7,$40E9,$40EA,$40EC,$40EB,$40ED,$40EE,$40F0,$40EF,$40F1,$40F2,$40F4,$40F3,$40F5,$4042,$40F6,$4043,$40F7,$4002,$40F8,$4003,$40F9,$40FA,$40FC,$40FB,$40FD,$40F2,$40FE,$40F3,$40FF,$4100,$4102,$4101,$4103,$4104,$4106,$4105,$4107,$4108,$410A,$4109,$410B,$410C,$410E,$410D,$410F,$4110,$4112,$4111,$4113,$4114,$4116,$4115,$4117; 256
		dc.w $4118,$411A,$4119,$411B,$411C,$411E,$411D,$411F,$4120,$4122,$4121,$4123,$4124,$4126,$4125,$4127,$4128,$412A,$4129,$412B,$412C,$412E,$412D,$412F,$4130,$4132,$4131,$4133,$4134,$4136,$4135,$4137,$4936,$4138,$4937,$4139,$4000,$413A,$4001,$413B,$413C,$413E,$413D,$413F,$4140,$4142,$4141,$4143,$404C,$4144,$404D,$4145,$4146,$4148,$4147,$4149,$414A,$414C,$414B,$414D,$40FA,$414E,$40FB,$414F; 320
		dc.w $4150,$4150,$4151,$4151,$4152,$4154,$4153,$4155,$4156,$4158,$4157,$4159,$C15A,$C15C,$C15B,$C15D,$C15E,$C160,$C15F,$C161,$4162,$4164,$4163,$4165,$4166,$4168,$4167,$4169,$416A,$416C,$416B,$416D,$416E,$4170,$416F,$4171,$4172,$4174,$4173,$4175,$4176,$4178,$4177,$4179,$4176,$4976,$4177,$4977,$417A,$417C,$417B,$417D,$417E,$497E,$417F,$497F,$4180,$4182,$4181,$4183,$4184,$4984,$4185,$4985; 384
		dc.w $4186,$4188,$4187,$4189,$418A,$418C,$418B,$418D,$418E,$4190,$418F,$4191,$4192,$4194,$4193,$4195,$4176,$4976,$4177,$4977,$4196,$4996,$4197,$4997,$4198,$4998,$4199,$4999,$4198,$419A,$4199,$419B,$491E,$419C,$491F,$419D,$419E,$41A0,$419F,$41A1,$41A2,$41A4,$41A3,$41A5,$4974,$41A6,$4975,$41A7,$C1A8,$C1AA,$C1A9,$C1AB,$C1AC,$C1AE,$C1AD,$C1AF,$C1B0,$C1B2,$C1B1,$C1B3,$C1B4,$C1B6,$C1B5,$C1B7; 448
		dc.w $C1B8,$C1BA,$C1B9,$C1BB,$C1BC,$C1BE,$C1BD,$C1BF,$417E,$41C0,$417F,$41C1,$4008,$41C2,$4009,$41C3,$41C4,$41C6,$41C5,$41C7,$41C8,$41CA,$41C9,$41CB,$40B6,$41CC,$40B7,$41CD,$41CE,$41D0,$41CF,$41D1,$4000,$41D2,$4001,$41D3,$40B6,$C1CC,$40B7,$C1CD,$C1CE,$41D0,$C1CF,$41D1,$C000,$C1D2,$C001,$C1D3,$41D4,$49D4,$41D5,$49D5,$41D6,$41D8,$41D7,$41D9,$41DA,$41DC,$41DB,$41DD,$41DE,$41E0,$41DF,$41E1; 512
		dc.w $41E2,$41E2,$41E3,$41E3,$41E4,$41E6,$41E5,$41E7,$41E8,$41EA,$41E9,$41EB,$41EC,$41EE,$41ED,$41EF,$41F0,$41F2,$41F1,$41F3,$41F4,$4802,$41F5,$4803,$41F6,$41F8,$41F7,$41F9,$41E2,$41FA,$41E3,$41FB,$41FC,$41FC,$41FD,$41FD,$41FE,$4200,$41FF,$4201,$4202,$4204,$4203,$4205,$4206,$4802,$4207,$4803,$4208,$420A,$4209,$420B,$41D4,$420C,$41D5,$420D,$420E,$4210,$420F,$4211,$4212,$4214,$4213,$4215; 576
		dc.w $4216,$4218,$4217,$4219,$421A,$421C,$421B,$421D,$421E,$4190,$421F,$4191,$4002,$4220,$4003,$4221,$4222,$4224,$4223,$4225,$4226,$41FC,$4227,$41FD,$4228,$422A,$4229,$422B,$422C,$4802,$422D,$4803,$422E,$4230,$422F,$4231,$41FC,$4232,$41FD,$4233,$4234,$4802,$4235,$4803,$4236,$49FC,$4237,$49FD,$4238,$423A,$4239,$423B,$423C,$4802,$423D,$4803,$4002,$423E,$4003,$423F,$4222,$4224,$4223,$4225; 640
		dc.w $4226,$41FC,$4227,$41FD,$4240,$4242,$4241,$4243,$4244,$4246,$4245,$4247,$4248,$424A,$4249,$424B,$424C,$424E,$424D,$424F,$4030,$4250,$4031,$4251,$4252,$4A52,$4253,$4A53,$4254,$4254,$4255,$4255,$4256,$4A52,$4257,$4A53,$4258,$40A8,$4259,$40A9,$C13C,$C13E,$C13D,$C13F,$C140,$C142,$C141,$C143,$C146,$C148,$C147,$C149,$425A,$4802,$425B,$4803,$425C,$4802,$425D,$4803,$C162,$C164,$C163,$C165; 704
		dc.w $C166,$C168,$C167,$C169,$4000,$425E,$4001,$425F,$4260,$4262,$4261,$4263,$4264,$4266,$4265,$4267,$4268,$426A,$4269,$426B,$426C,$4000,$426D,$4001,$426E,$4270,$426F,$4271,$4272,$4274,$4273,$4275,$4276,$4278,$4277,$4279,$427A,$427C,$427B,$427D,$427E,$4000,$427F,$4001,$4280,$4282,$4281,$4283,$4284,$4286,$4285,$4287,$4288,$428A,$4289,$428B,$428C,$4000,$428D,$4001,$428E,$4000,$428F,$4001; 768
		dc.w $4000,$4290,$4001,$4291,$4292,$4294,$4293,$4295,$4296,$4298,$4297,$4299,$429A,$4000,$429B,$4001,$429C,$4000,$429D,$4001,$429E,$400A,$429F,$400B,$C000,$C25E,$C001,$C25F,$C260,$C262,$C261,$C263,$C264,$C266,$C265,$C267,$C268,$C26A,$C269,$C26B,$C26C,$C000,$C26D,$C001,$C26E,$C270,$C26F,$C271,$C272,$C274,$C273,$C275,$C276,$C278,$C277,$C279,$C27A,$C27C,$C27B,$C27D,$C27E,$C000,$C27F,$C001; 832
		dc.w $C280,$C282,$C281,$C283,$C284,$C286,$C285,$C287,$C288,$C28A,$C289,$C28B,$C28C,$C000,$C28D,$C001,$C28E,$C000,$C28F,$C001,$C000,$C290,$C001,$C291,$C292,$C294,$C293,$C295,$C296,$C298,$C297,$C299,$C29A,$C000,$C29B,$C001,$C29C,$C000,$C29D,$C001,$C29E,$400A,$C29F,$400B,$49CA,$49C8,$49CB,$49C9,$42A0,$40CC,$42A1,$40CD,$4038,$41C2,$4039,$41C3,$41C8,$42A2,$41C9,$42A3,$42A4,$42A6,$42A5,$42A7; 896
		dc.w $42A8,$42AA,$42A9,$42AB,$41A8,$41AA,$41A9,$41AB,$41AC,$41AE,$41AD,$41AF,$42AC,$42AC,$42AD,$42AD,$401C,$401E,$401D,$401F,$4020,$4022,$4021,$4023,$42AE,$41A0,$42AF,$41A1,$42B0,$42B2,$42B1,$42B3,$42B4,$42B6,$42B5,$42B7,$42B8,$42BA,$42B9,$42BB,$42BC,$4000,$42BD,$4001,$62BE,$62BE,$62BF,$62BF,$62C0,$62C2,$62C1,$62C3,$62C4,$62C6,$62C5,$62C7,$62C8,$62CA,$62C9,$62CB,$62CC,$62CE,$62CD,$62CF; 960
		dc.w $62D0,$62D2,$62D1,$62D3,$62D4,$62D6,$62D5,$62D7,$62D8,$62DA,$62D9,$62DB,$62DC,$62DE,$62DD,$62DF,$62E0,$62BE,$62E1,$62BF,$62E2,$62E4,$62E3,$62E5,$62E6,$62E8,$62E7,$62E9,$62EA,$62EC,$62EB,$62ED,$62EE,$62F0,$62EF,$62F1,$42F2,$42F4,$42F3,$42F5,$42F6,$42F8,$42F7,$42F9,$42FA,$42FC,$42FB,$42FD,$42FE,$4300,$42FF,$4301,$4302,$4304,$4303,$4305,$4306,$4308,$4307,$4309,$430A,$430C,$430B,$430D; 1024
		dc.w $430E,$4310,$430F,$4311,$4312,$4314,$4313,$4315,$4316,$4318,$4317,$4319,$431A,$431C,$431B,$431D,$431E,$4320,$431F,$4321,$4322,$4324,$4323,$4325,$4326,$4328,$4327,$4329,$432A,$432C,$432B,$432D,$432E,$4330,$432F,$4331,$4332,$4334,$4333,$4335,$4336,$4338,$4337,$4339,$433A,$433C,$433B,$433D,$433E,$4340,$433F,$4341,$4342,$4344,$4343,$4345,$4346,$4348,$4347,$4349,$434A,$434C,$434B,$434D; 1088
		dc.w $434E,$4350,$434F,$4351,$4352,$4354,$4353,$4355,$4356,$4358,$4357,$4359,$435A,$435C,$435B,$435D,$435E,$4360,$435F,$4361,$4362,$4364,$4363,$4365,$4366,$4368,$4367,$4369,$436A,$436C,$436B,$436D,$436E,$4370,$436F,$4371,$4372,$4374,$4373,$4375,$4376,$4378,$4377,$4379,$437A,$437C,$437B,$437D,$437E,$4380,$437F,$4381,$4382,$4384,$4383,$4385,$4386,$4388,$4387,$4389,$438A,$438C,$438B,$438D; 1152
		dc.w $438E,$4158,$438F,$4159,$4156,$4390,$4157,$4391,$4392,$4394,$4393,$4395,$4396,$4398,$4397,$4399,$5B98,$439A,$5B99,$439B,$439C,$439E,$439D,$439F,$63A0,$63A2,$63A1,$63A3,$63A4,$63A6,$63A5,$63A7,$63A8,$63AA,$63A9,$63AB,$63AC,$63AE,$63AD,$63AF,$43B0,$43B2,$43B1,$43B3,$43B4,$43B6,$43B5,$43B7,$43B8,$43BA,$43B9,$43BB,$43BC,$43BE,$43BD,$43BF,$43C0,$43C2,$43C1,$43C3,$43C4,$43C6,$43C5,$43C7; 1216
		dc.w $43C8,$43CA,$43C9,$43CB,$43CC,$4190,$43CD,$4191,$43CE,$43D0,$43CF,$43D1,$43D2,$43D4,$43D3,$43D5,$43D6,$43D8,$43D7,$43D9,$492A,$412A,$492B,$412B,$4180,$4980,$4181,$4981,$C180,$C182,$C181,$C183,$4046,$4842,$4047,$4843,$C002,$C802,$C003,$C803,$C1A2,$C1A4,$C1A3,$C1A5,$C3DA,$C802,$C3DB,$C803,$C000,$C3DC,$C001,$C3DD,$C000,$C3DE,$C001,$C3DF,$C99C,$C11E,$C99D,$C11F,$C3E0,$C3E2,$C3E1,$C3E3; 1280
		dc.w $4000,$43E4,$4001,$43E5,$42BE,$43E6,$42BF,$43E7,$43E8,$43EA,$43E9,$43EB,$4000,$43EC,$4001,$43ED,$43EE,$43F0,$43EF,$43F1,$43F2,$43F4,$43F3,$43F5,$43F6,$43F8,$43F7,$43F9,$43FA,$43FC,$43FB,$43FD,$43FE,$4400,$43FF,$4401,$8402,$8404,$8403,$8405,$8406,$8408,$8407,$8409,$840A,$840C,$840B,$840D,$640E,$6410,$640F,$6411,$6412,$6414,$6413,$6415,$433A,$4416,$433B,$4417,$42BE,$42BE,$42BF,$42BF; 1344
		dc.w $4418,$441A,$4419,$441B,$441C,$441E,$441D,$441F,$4420,$4422,$4421,$4423,$4424,$42BE,$4425,$42BF,$4426,$4428,$4427,$4429,$442A,$442C,$442B,$442D,$C2F2,$C2F4,$C2F3,$C2F5,$C2F6,$C2F8,$C2F7,$C2F9,$C2FA,$C2FC,$C2FB,$C2FD,$C002,$C42E,$C003,$C42F,$C430,$C432,$C431,$C433, $40A, $40C, $40B,	$40D,$4434,$42BE,$4435,$42BF,$4436,$4438,$4437,$4439,$443A,$443C,$443B,$443D,$443E,$4440,$443F,$4441; 1408
		dc.w $4442,$4444,$4443,$4445,$4446,$4448,$4447,$4449,$444A,$444C,$444B,$444D,$4C00,$4BFE,$4C01,$4BFF,$4BFC,$4BFA,$4BFD,$4BFB,$4C1A,$4C18,$4C1B,$4C19,$CC32,$CC30,$CC33,$CC31,$CC2E,$C802,$CC2F,$C803,$C44E,$C450,$C44F,$C451,$C452,$C454,$C453,$C455,$4456,$4458,$4457,$4459,$4000,$43DE,$4001,$43DF,$4000,$43DC,$4001,$43DD,$43DA,$4802,$43DB,$4803,$43E0,$43E2,$43E1,$43E3,$445A,$445C,$445B,$445D; 1472
		dc.w $445E,$4460,$445F,$4461,$4462,$4464,$4463,$4465,$CC58,$CC56,$CC59,$CC57,$C99C,$C11E,$C99D,$C11F,$4004,$4006,$4005,$4007,$400C,$400E,$400D,$400F,$4010,$4012,$4011,$4013,$4014,$4016,$4015,$4017,$4018,$401A,$4019,$401B,$4002,$4802,$4003,$4803,$C91E,$C19C,$C91F,$C19D,$C002,$C802,$C003,$C803,$492A,$412A,$492B,$412B,$4180,$4980,$4181,$4981,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001; 1536
		dc.w $4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001; 1600
		dc.w $4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001; 1664
		dc.w $4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001,$4000,$4000,$4001,$4001; 1728
Nem_GHZ:	dc.b $84,$66,$80,  3,  1,$14,  5,$25,$10,$34,  7,$46,$2F,$55,$14,$66,$35,$73,  0,$81,  4,  4,$16,$2B,$28,$F6,$38,$F2,$82,  5,$12,$16,$32,$38,$F3,$78,$EB,$83,  4,  6,$16,$31,$38,$F1,$84,  7,$74,$85,  6,$27,$17,$6F,$38,$F5,$86,  7,$6E,$78,$F4,$87,  6,$36,$17,$72; 0
					; DATA XREF: ROM:LevelArtPointerst
					; ROM:0001C04Co ...
		dc.b $88,  6,$33,$17,$70,$89,  6,$2E,$17,$76,$8A,  6,$26,$18,$F0,$8B,  6,$30,$17,$73,$8C,  6,$34,$18,$EF,$8D,  5,$16,$18,$EA,$8E,  5,$11,$18,$EE,$8F,  6,$2A,$17,$71,$FF,  0,  0,  0,  0,  0,  0,$F5,$F1,  0,$7A,  0,  0,  3,$D0,  1,$5E,$3B,$F9,  0,$3A,$DE,$67,$CF; 64
		dc.b $54,$99,$66,$39,$DC,$B3,$2D,$C0,  4,  2,$F6,$45,$42,$CF,$87,$85,$D9,$E1,$9D,$C0, $F,$D1,$4D,$E7,$9C,$26,$38,$2D,$D4,$43,$9A,$CC,$66,  0,$6A,$8E,$CE,$80,$B3,$A3,$B2,$1F,$D7,$7E,$B6,$35,  0,  0,  0,  0,  3,$C5,$E3,$AA,$45,$62,$62,$6A,$89,$EE,$31,  0,  0,  0; 128
		dc.b   0,$42,$2F,$18,$44,$D4,$B5,$51, $C,$56,$27,$F5,$DF,$BF,$8D,$40, $A,$64,  0,  0, $A,$64,$F5,$3D,$5A,$A5,$4B,$51,$A8,$C6,$A3,$E1,$3C,$C0, $F,$3F,$50,  0,  0,$7E,$8A,$DE,$B5,$42,$63,$82,$C6,$88,$6A,$59,$8C,$DC,$FF,$71,$84,$C0, $E,$B0,  0,  0,$75,$BE,$6F,$36; 192
		dc.b $A9,$9A,$E6,$66,$38,$4D,$2E,$12,$CC,  1,$D6,  0,  0, $F,$D1,$67,$E7,$34,$33,$37,$2E,$14,$43,$32,$E6,$73,$EE,$FD,$EC,$6A,  0,$75,$BD,$4F,$6D,$52,$A5,$A8,$DB,$45,$A9,$74,  0,$20,$17,$B2,$2A,$16,$78,$F1,$D2,$D1,$B6,$80, $F,$D1,$55,$E7,$68,$54,$62,$BA,$51, $D; 256
		dc.b $96,$A3,$50,  3,$54,$76,$74,  5,$9D,$1D,$90,$FE,$AA,$EE,$EB,$68,  0,$FF,$B8,  0,  0,$3F,$EE,$F6,$79,$B5,$49,$96,$C6,$D3,$C6,$A9,$FA,$8D,$40, $F,$F1,  0,  0,  0,$FE,$8A,$DF,$A2,$35,$42,$C7,$45,$8D,$10,$D4,$B6,$35,$77,$7E,$FE,$35,$52,$2F,$50,$85,$4F,$53,$C6; 320
		dc.b $15,$2D,$46,$A7,$40,  0,$83,  7,$AD,$82,$B2,  3,$1A,$9B,$42,$C8,$F5,$3C,$44,$40,$56,  0,  2,$8A,$8C,$15,$80,$29,  6, $F,$A5,$BB,$BB,$F8,$80,$3A,$C0,  2,$9A,$3D,$42,$16,$FD,$11,$B4,$A1,$A4,$2A,$5B,$1B,$3A, $A,$A3,$FB,$DE,$E0,  7,$5D,$34,$A5,$4F,$53,$E8,$F5; 384
		dc.b $52,$A7,$D0,$68,  2,$B0,$10,$E7,$C3, $C,$F9,$80,$3A,$C0,$1C,$B7,$F2,$DE,$3F,$EA,$3A,$C0,$1D,$60, $E,$B0,  7,$FD,$47,$FD,$47,$58,  3,$FE,$E0, $E,$B0,  0,$1F,$F5,$1D,$60, $E,$5B,$F9,$6F,  0,$75,$80,$17,$25,$C8,$7F,$D4,$75,$80,$3F,$69,$FB,$60,  3,$C5,$E3,$AA; 448
		dc.b $45,$62,$63,$52,$C5,$6A,  0,$20,$17,$B2,$2A,$16, $F,$57,$75,$A3,$68,$D4,  4,$22,$F1,$84,$4D,$4B,$55,$10,$C5,$62,$62,  0,$D5,$1D,$9D,  1,$67,$47,$64,  7,$F5,$DF,$AD,$8D,$40,$3C,$5E,$3A,$A4,$56,$26,$35,$2C,$56,$A0,  2,  1,$7B,$22,$A1,$60,$E9,  6,$54,$FD,$77; 512
		dc.b $EB,$7B,$84,$22,$F1,$84,$4D,$4B,$55,$10,$C5,$62,$62,  0,$D5,$1D,$9D,  1,$67,$47,$64,$10,$67,$4E,$EF,$DE,$F7,  7,$8B,$C7,$54,$8A,$C4,$C6,$A5,$8A,$D4,  0,$47,$67,$40,$59,$D1,$D9,  4,$19,$D0,$77,$7E,$F7,$B8,$3C,$5E,$3A,$A4,$56,$26,$35,$2C,$56,$A0,  2, $B,$D9; 576
		dc.b $15, $B,  7,$48,$32,$A2,$B0,$BF,$BB,$F7,$BD,$C0,  0,  0,  0,  0,$2F,$8D,$22,$7B,$97,$B9,$50,$2D,$41,$59,$52,$A0,$80,$B1,$64,  5,  1,$67,$41,$50,$37,$52,$A0,$6E,$5A,$A9,$72,$F7,$78,$34,$D1,  1,  0,$BD,$91,$50,$B0,$74,$83,$2A,$2B,  0,  1,$BA,$15,$2E,$97,$D5; 640
		dc.b $7C,$CB,$74,$E6,$EA,$A7,  0,$7F,$D4,  0,  0,$96,$B2,$9F,$CF,$7A,$CF,$49,$DE,$77,$9C,$CE,$BB,$FF,$4F,$23,$38,  3,$FE,$A0,  0,  0,$F5,$F3,$79,$E1,$3A,$CF,$7C,$F7,$CF,$36,$15,$4D,$9D,$B4,$B8,$20,  1,$18,$16,$28, $A,$2B,$41,$2F,$60,  5,$F1,$1A,$2D,$56,$BE,$A3; 704
		dc.b $64,$6B,$54,$D5,$8A,$54,$51,$58,$42,$AA,$22,$A3,$16,  1,$6B,$76,  0,$D5,$7C,$45,$4B,$52,$C6,$F8,$DE,$91,$B3,$75,$46,$A0,$35,$47,$67,$40,$59,$D1,$D9,  4,$19,$D0,  1,$63,$11, $A,$96,$C6,$2F,$DF,$D5,$8C,$40,$47,$67,$40,$59,$D1,$D9,  4,$19,$D0,  1,$63,$11,$4B; 768
		dc.b $18,$AD,$54,$D1,$7B,$FA,$9A,$A8,$84,  2,$F6,$45,$42,$C1,$D2, $C,$A8,$AC,  0,  6,$30,$A9,$74,$BE,$AB,$EC,$BA,$2C,$57,$F6,$8B,$60,  1,$F4,  0, $D,$52,$89,$44,$5F,$E3,$7E,$9E,  9,$44,$A2,$53,$77,$E9,$FF,$4D,$A5,$26,$A4,$C1,$7F,$4D,$B4,$CA,$81,$52,  8,$A9,  4; 832
		dc.b $54,$17,$D5,$7A,$53,$6A,$A1,$FA,$7C,$8C,$AA,$59,$52,$50,$B2,$CB,$5E,$EE,$3D,$5A,$45,$D9,$D0,$16,$74,$76,$41,  6,$74,  0,$54,$74,$17,$CA,$D2,$8A,$D5,$4D,$29,$A2,$D4,$3B,$FA,$B8,$F7,$3B,$3A,  2,$CE,$8E,$C8,$20,$CE,$80, $B,$18,$8B,$E5,$54,$B4,$5B,$52,$34,$8A; 896
		dc.b $D8,$77,$71,$EA,$EF,$17,$B2,$2A,$16, $E,$90,$65,$45,$60,  0,$31,$85,$4B,$A3,$CA,$C7,$25,$A9,$62,$BA, $A,$81,$EF,$EA,$D2,$AE,$E2,$80,$B3,$A3,$B2,  8,$33,$A0,  2,$C6,$22,$96,$31,$5A,$8F,$99,$8C,$AF,$8A,$D8, $E,$EE,$3D,$5D,$F7,$B2,$2A,$16, $E,$90,$65,$45,$60; 960
		dc.b   0,$31,$85,$4B,$A5,$F5,$5F,$6C,$A3,$96,$86,$54,$A8,  3,$A7,$EB,$74,$AB,$BA, $C,$E8,$EC,$82, $C,$E8,  0,$B1,$88,$A5,$8C,$56,$AA,$68,$BE,$71,$CA,$C0, $E,$EE,$3D,$5A,$58, $D,$51,$D9,$D0,$16,$74,$76,$41,  6,$74,  0,$60,$62,$21,$52,$D4,$62,$F3,$47,$AB,$18,$80; 1024
		dc.b $80,$5E,$C8,$A8,$58,$3A,$41,$95,$15,$80,  0,$C6,$15,$2C,$6F,$AA,$F9,$A3,$53,$46,$CB,$80,$48,$32,$A2,$B0,  0,$18,$C2,$A5,$D2,$FA,$AF,$B2,$E8,$B1,$16,$3D,$60, $F,$D6,$C7,$BE,$A8,$85,$67,$40,  5,$8C,$45,$2C,$62,$B5,$53,$4A,$68,$B5, $E,$B0,  4,$78,$E9,$68,$DB; 1088
		dc.b $44,$83,$2A,$2B,  0,  1,$8C,$2A,$5D,$2F,$AA,$FB,$2E,$8B,$11,$60,$7A,$C0,$1F,$AD,$8F,$7D,$51,$56,$74,  0,$58,$C4,$42,$A5,$B1,$88,$EF,$35,  0,$3A,$C0,$1F,$AF,$D3,$BB,$A9,$58,  0, $C,$61,$52,$E9,$7D,$57,$D9,$74,$58,$D8,  0,$7A,$C0,$1D,$5D,$DD,$FC,$40,$16,$31; 1152
		dc.b $14,$B1,$8A,$D5,$4D,$29,$A2,$D4,  0,$EB,  0,$71,$EF,$EE,$EA,  0,$3C,$61,$52,$E9,$7D,$57,$D9,$74,$58,$8B,  0, $F,$58,  3,$AB,$BB,$BF,$88,$15,$1D,$2F,$91,$95,$2C,$62,$B5,$53,$4A,$68,$B5,  0,  7,$58,  3,$8F,$7F,$77,$50,$B1,$88,$BE,$55,$4B,$45,$B5,$23,$48,$AD; 1216
		dc.b $80,  0,$75,$80,$3A,$BB,$BB,$F8,$87,$8C,$2A,$5D,$1E,$56,$39,$2D,$4B,$15,$D0,$54,  0,  0,$F5,$80,$3D,$40, $F,$FF,$70,  0,  0,$7F,$DC,  1,$EB,  9,  0,$3F,$C4,  0,  0,  3,$FE,$20,  1,$E8,$72,$59,  8,$4F,$49,$E1,$3A,$A3,$65,$B4,$B6,$90,$84,$E2,$13,$80,  1,$6F; 1280
		dc.b $E9,  0,$37,$ED,$FA,$5D,$80,  7,$FC,$5B,  9,$CC,$E6,$70,$F3,$99,$CC,$E0,$4E,$F2,$7F,$F1,$74,  0,$6D,$36,$D7,$73,$CE,$E3,$63,$15,$AA,$9A,$53,$45,$AB,$AC,  0,  0,$1D,$60,  9,$5A,$39,$69,$C4,$D5,$7D,$97,$45,$88,$B1,$EB,  0,  0,  7,$58,  3,$CF,$BA,$56,$BF,$4A; 1344
		dc.b $68,$B5, $E,$B0,  0,  0,$7F,$48,$C9,$77,$3C,$B7,  5,$DC,$64,$BD,$25,$9F,$49,$46,$D0,$D1,$62,$2C, $F,$58,  0,  0,$3A,$DF,$74,$24,$B2,$3B,$A1,$2B,$F7,$2C,$8F,$E5,$25,$D0,  1,$D6,  0,  0, $F,$E9,$19,$2E,$E7,$96,$E0,$BB,$8C,$97,$A4,$BF,$29,$20,  4,$3A,$C0,  0; 1408
		dc.b   1,$D6,$FB,$A1,$25,$91,$DD,  9,$5F,$B9,$64,$7F,$29,$2E,$80, $E,$B0,  0,$91,$90,$A4,$8C,$97,$71,$FD,$B4,$8E,$E9,$3C,$96,$40,$7E,$D0,  0,$FD,$60,  1,$B8,$EE,$14,$DC,$77,$2C,$8F,$ED,$A5,$D3,$74,$9F,$72,$EE,  1,$FF,$68,  0,$EB,$7D,$D0,$92,$C8,$EE,$84,$AF,$DC; 1472
		dc.b $B2,$86,$E0,  1,$F4,  0,$7E,$D0,  0,$FF,$D2,$32,$5D,$CF,$2D,$C1,$77,$19,$43,$72,$C8,  1, $F,$40,  3,$FE,$D3,$71,$DC,$29,$B8,$EE,$59,$1F,$DB,$4B,$A6,$E9,$3E,$E5,$DC,  0,  0,$7A,  0,$3F,$68,$37,$42,$4B,$2B,$E5,$7F,$E9,$BA,$7E,$58,$CB,$75,$24,  0,  0,$1F,$40; 1536
		dc.b   7,$8F,$A8,  0,  0,  0,  0,  8,$45,$E3,  8,$9A,$8C,$57,$B8,$D4,  0,  0,  0,  0,$BE,$2F,$1D,$52,$2B,$13,$1A,$96,$2B,$51,$E3,$FB,$EA,$A2,  0,  0,  0,  3,$C5,$E3,$AA,$45,$62,$63,$52,$C5,$6A,  7,$8F,$EF,$AA,$88,  0,  0,  0,$78,$BC,$75,$48,$AC,$4C,$6A,$58,$AD; 1600
		dc.b $40,$1E,$3F,$BE,$AA,$20,  0,  0,$10,$8B,$C6,$11,$35,$2D,$54,$43,$15,$89,$88,$1A,$A7,$1F,$DF,$71,  0,  0,  4,$22,$F1,$84,$4D,$4B,$55,$10,$C5,$62,$62,  6,$A8,$38,$FE,$FB,$88,  0,  0,$22,$BD,$C6,$A5,$AA,$88,$62,$B1,$31,  3,$54,  3,$8F,$EF,$B8,$80,  0,$84,$5E; 1664
		dc.b $30,$89,$A9,$6A,$A2,$18,$AC,$4C,$40,$D5,  0,$BD,$90,$F1,$FD,$75,$A3,$50,  0,$3C,$5E,$3A,$A4,$56,$26,$35,$2C,$56,$A0,  2,  1,$7B,$22,$A1,$67,$AB,$BA,$D1,$B4,$6A,$84,$5E,$30,$89,$A9,$6A,$A2,$18,$AC,$4C,$40,$D5,$1D,$9D,  1,$67,$47,$64,$10,$67,$40,$3B,$AC,$DD; 1728
		dc.b $5F,$AE,$84,$4D,$4B,$55,$10,$C5,$62,$62,  6,$A8, $A,$2B,$51,$9D,$1D,$90,$41,$9D,  0,  6,$36,$C6,$C9,$13,$55,$10,$C5,$62,$62,  6,$A8,  5,$67,$F4,$68,$20,$CE,$80, $B,$18,$8B,$EC,$9F,$A3,$B2,$45, $C,$56,$26,$20,$6A,$80,$5E,$C8,$A8,$59,$D2, $C,$A8,$AC,  0,  6; 1792
		dc.b $30,$A9,$74,$74,$8D,$91,$AD,$DC,  0,  0,  0,  0,$78,$9A,$96,$3A,$A4,$56,$26,$35,$2C,$5F,$8F,$EF,$AA,$88,  0,  0,  0,$78,$9A,$96,$3A,$A4,$56,$26,$35,$2C,$40,$82,$71,$FD,$F7,$10,  0,  0,$3C,$4D,$4B,$1D,$52,$2B,$13,$1A,$96,$20,$41,  0,$E3,$FB,$EE,$20,  0,$21; 1856
		dc.b $17,$8C,$22,$6A,$31,$AB,$B8,$C4,$C6,$A5,$88,  2,  8,$EC,$E8, $B,$3D,$5D,$DD,$51,$E2,  0,$78,$9A,$96,$3A,$A4,$56,$26,$35,$2C,$40,$82,  1,$7B,$22,$A1,$60,$E9,  6,$54,$FD,$77,$EB,$7B,$83,$C4,$D4,$B1,$D5,$22,$B1,$31,$A9,$62,  4,$10,$3B,$3A,  2,$CE,$8E,$C8,$20; 1920
		dc.b $CE,$83,$BB,$A9,$AC,$91,$31,$D5,$22,$B1,$31,$A9,$62,  4,$10,  0,$EC,$E8, $B,$3A,$3B,$20,$83,$3A,  8,$A3,$5B,$14,$35,$2C,$40,$10,$47,$67,$40,$5A,$F4,$3F,$A3,$45,$42,$C1,$D2, $C,$A8,$AC,  0,$BE,$BF,$14,  8,  5,$EC,$8A,$85,$83,$A4,$19,$53,$54, $A,$CE,$80, $B; 1984
		dc.b $18,$8B,$F4,$4B,$7E,$8E,$B7,$67,$40,$59,$D1,$D9,  4,$19,$D0,  0,  3,$C6,$15,$2E,$97,$D5,$7D,$97,$45,$8A,$F7,$71,$EA,$4D,$1D,$9D,  1,$67,$47,$64,$10,$67,$40,  0,$A8,$E9,$7C,$8C,$A9,$63,$15,$AA,$9A,$53,$45,$AB,$4E,$A8,$E9,$57,$72,$3B,$20,$83,$3A,  0,$2C,$62; 2048
		dc.b $29,$63,$15,$AA,$9A,$53,$45,$AB,$AC,  1,$C7,$BC,$C7,$AA,$A5,$D2,$FA,$AF,$B2,$E8,$B1,$5F,$E9,$55,$20,  0,  0,$75,$BE,$E8,$49,$64,$77,$42,$57,$EE,$C5,$1B,$7B,$4E,  0,  0,  0,  0,$14,$AA,$91,$78,$BD,$4B,$15,$8F,$10,  0,  0, $A,$54,$F1,$10,$8B,$C5,$EA,$84,$56; 2112
		dc.b $26,$2E,$82,$35,$7E,$FB,$88,  0,$52,$AA,$45,$E2,$F5,$3C,$69,$17,$A8,$54,  2,$B0,$10,$E3,$DD,$68,$F1,$A5,$4F,$11,  8,$BC,$5E,$A8,$45,$62,$62,$E8,  0,$10,$60,$F5,$B0,$56,$40,$6A,$8B,$58,$B2,$3C,$5E,$A1,$50, $A,$C0,  0,$51,$51,$82,$B0,  5,$20,$C1,$EB,$F1,$AC; 2176
		dc.b   8,$30,$7A,$D8,$2B,$20,  0,$A5,$11,$D8,$DA,$11,$84,$81,$B3,$E9,$7C,$61,$56,$89,$D4,$6A,$EE,$A2,$2A,$30,$56,  0,$A4,$18,  7,$43,$15,$D2,$9A,$2D,$46,$DA,$E5,$A6,$46,$54,$B1,$A8,$6B,$1A,$BB,$ED,$1B,$68,$12,$88,$EC,$6A,$86,$90,$90,$35,$3C,$6F,$D2,$16,$35,$2C; 2240
		dc.b $40,$10,$EB,  0,$69,$6E,$EE,$FE,$28,$74,$58,$D2,$2B,$63,$56,$B9,$47,$23,$2A,$54,$6C,  0,  3,$5E,$B0,  7,$58,  3,$AC,  0,  0,$A6,$E3,$97,$4F,$D1,$6E,$90,$DC,$F2,$BF,$74,$25,$D2,$5F,$94,$90,  2,$1D,$60,  0,$BB,$96,$54,$92,$C8,$EE,$A4,$BF,$2C,$7F,$2C,$77,$53; 2304
		dc.b $A1,$90,$10,$FD,$A0,$14,$91,$C8,$FE,$8B,$74,$84,$9F,$75,$F2,$86,$E3,$25,$DC,  0,$87,$A0,  3,$F6,$94,$92,$EE,$A6,$E5,$DC,$65,$49,$7E,$5B,$A7,$E5,$A5,$BA,$92,$3B,$80,  0,$6B,$E8,  0,$F4,  0,$7A,  0,  0,  3,$D1,$EC,$F8,$6A,$98,$2D,$8D,$B7,$69,$6D,$DC,$F7,$60; 2368
		dc.b   0,$F4,  0,  0,  7,$E9,$B0,$FD,$B5,$A1,$81,$99,$74,$A2,$1B,$2E,  7, $F, $E,$7D,$5A,$58,  1,$E8,$F8,$3D,$B5,$4B,$2E,  7, $D,$16,$CB,$30,  1,  0,$BD,$91,$50,$B3,$E9,$D5,$1C,$33,$C2,$60,  7,$E9,$AD,$FB,$6C,$21,$63,$A2,$CD,$44,$38,$2D,$8D,$80,$1A,$A3,$B3,$A0; 2432
		dc.b $2C,$E8,$EC,$87,$F5,$79,$F7,$5B,$40,  7,$ED,$AD,$FA,$63,$6D,$52,$CB,$81,$C3,$45,$B2,$CC,  0,$40,$2F,$64,$54,$2C,$1F,$4E,$A8,$E1,$9E,$13,  1, $B,$3D,$BF,$2C,$70,$DD,$36,$E3,$35,$10,$E0,$B6,$36,  0,$6A,$8E,$CE,$80,$B3,$A3,$B2,  3,$E1,$9F,$EA,$E6,$C0,  0,$5B; 2496
		dc.b $FA,$40,  0,  0,$2D,$FD,$20,  2,$E4,$B2,$60,  7,$F8,$98,  0,  0,$1F,$E2,$60,  7,$97,$E9,$7A,  0,$F6,$86,$EC,$3F,$2C,$7F,$4C,$52,$CB,$81,$C3,$45,$B2,$CC,  0,$40,$2F,$64,$54,$2C,$1D,$20,$CA,$9F,$AD,$8F, $E,$62,$16,$7B,$43,  3,$32,$E9,$B9,$77,$1D,$C8,$70,$5B; 2560
		dc.b $1B,  0,$35,$47,$67,$40,$59,$D1,$D9,  4,$19,$D0,$A7,$8D,$60,$20,$56, $A,$97,$B3,$A3,$3A,  4,$76,  0,$6B,$13,$51,$A8,$2C,$4D,$46,$D2,$EE,$FC,$B7,$E5,  0,$1E,$80,  0,  0,$F4,$10,$B3,$DA,$18,$19,$8D,$59,$71,$E9,$1E,$80, $A,$64,  0,  0, $A,$64,  0,$7F,$50,  7; 2624
		dc.b $9F,$A8,  0,  0,$3C,$FD,$44,$2A,$7A,$A1,$31,$C0,$DB,$2B,$60,$93,$20,$7C,$1E,$D4,$DC,$96,$DC,$70,$DD,$84,$CB,$82,$E8,  0,$47,$67,$40,$59,$D1,$D9,  4,$19,$D0,$73,$E1,$DD,$D5, $C,$1F,  8,$58,$E8,$B3,$51, $E, $B,$63,$60,$35,$47,$67,$40,$59,$D1,$D9,  4,$19,$D0; 2688
		dc.b  $E,$A8,$B7, $E,$76,$86,  6,$65,$D2,$88,$6C,$B8,$1C,  0,$D5,  1,$45,$6A,$33,$A3,$B2,  8,$33,$A0,  0,$E1,$9E,$31,$4B,$19,$A8,$87,  5,$B1,$B0,$1A,$A0,$15,$9F,$D1,$A0,$83,$3A,  0,$2C,$62,$2F,$B2,$1C,$73,$4C,$10,$D9,$70,$38,  1,$AA,  1,$7B,$22,$A1,$67,$48,$32; 2752
		dc.b $A2,$B0,  0,$18,$C2,$A5,$D1,$F8,$E9,$55,$B4,$4A,$8C,$68,$86,$A5,$A8,$D4,  6,$A8,  5,$67,$F4,$68,$20,$CE,$80, $B,$18,$8B,$EC,$92,$C6,$E4,$99, $D,$4B,$31,$98, $D,$50, $B,$D9,$15, $B,$3A,$41,$95,$15,$80,  0,$C6,$15,$2E,$8F,$D3, $C,$FA,$18,$F5,  0,$3D,  0,  0; 2816
		dc.b   1,$FB,$6C,$37,$4D,$B8,$E1,$AA,$60,$B6,$36,$99,$70,$7E,$FE,$AE,$73,$60,  0,$F4,  0,  0,$F6,$3A,$2E,$14,$DC,$98,$6E,$36,$36,$D1,$6C,  4,$13,$C3,$9F,$57,$78,  3,$D0,  0,$F8,$19,$96,$DA,$A5,$97,  3,$86,$8B,$60,$20,$80,$77,$F5,$73,$F0,  0,$7A,  8,$60,$F8,$42; 2880
		dc.b $C7,$43,$84,$DC,$CD,$8D,$A6,$5C,  0,$10,$47,$67,$40,$59,$E6,$E7,$9C,$6D,$DE,  0,$FD,$B5,$B7,$69,$B8,$DB,$54,$B2,$E0,$70,$D1,$6C,  4,$10, $B,$D9,$15, $B,  7,$48,$32,$A7,$EB,$63,$C3,$98,$7C, $C,$CB,$6A,$6E,$4B,$6E,$38,$1C,$26,$5C,  0,$82,  7,$67,$40,$59,$D1; 2944
		dc.b $D9,  4,$19,$D0,$73,$E0,$D1,$4B,$1C,$35,$4C,$16,$C6,$D3,$2E,  0,$41,  0, $E,$CE,$80,$B3,$A3,$B2,  8,$33,$A0,$B2,$34,$71,$43,$A2,$D8,  1,  4,$76,$74,  5,$AF,$43,$FA,$34,$54,$2C,$1D,$20,$CA,$8A,$C0, $A,$61,$C3,$BB,$A8,$E1,$46,$38, $A,$31,$C3,$F6,$CE,$81,  2; 3008
		dc.b $2B,$5E,$86,$A0, $D,$4F,$A4,$3D,$42,$D4,$2F,$F3,$FD,$A0,  3,$D0,  0,$10,$20,$4B,$FF,$4B,$D3,$F6,$CE,$81,  2,$1F,$DA,$7E,$9F,$70,  3,$D0,  0,$29,$33,$D8,$43, $F,$D3,$1C,$37,$42,$68,$59,$70,$38,$3A, $B,$69,$D5,$CF,$C0,  1,$E9,$4D,$29,$67,$C1,$F4,$7B,$53,  7; 3072
		dc.b $98,$4C,  2,$B0,$10,$F0,$E7,$1B,$77,$D3,$47,$C0,$42,$DF,$A6,$36,$DD, $D,$21,$82,$D8,$D9,$D0,  0,$20,$C1,$EB,$60,$AC,$80,$E9,$66,$89,$64,$7B,$3E,$83,$40,$15,$80,  0,$A2,$A3,  5,$60, $A,$41,$83,$E1,$37,$6E,$FE,$23,$A0,$E8,$3F,$AA,$A8,$10, $E,$80,$74,  3,$A4; 3136
		dc.b $E3,$54,$1E,$5F,$B4,  0,$7F,$D4,  0,  0,$1F,$F5,  0,$79,$FA,$80,$F5,$42,$56,$C8,$FE,$88,$A5,$4B,$63,$68,$AD,$4B,$A0,  1,  0,$BD,$91,$50,$B0,$74,$83,$2A,$71,$B7,$EB,$B8,$88,$59,$EA,$85,$8C,$56,$32,$59,$19,$21,$A9,$6A,$36,  0,$6A,$8E,$CE,$80,$B3,$A3,$B2,  8; 3200
		dc.b $33,$A7, $E,$7D,$BC,  0,$1D,$6F,$9B,$CD,$AA,$4C,$B9,$9C,$F0,$59,$96,$E0,  2,  1,$7B,$22,$A1,$67,$C2,$6C,$F0,$CF,  9,$B0,  0,$7E,$8B,$3F,$3C,$E1,$31,$B9,$6E,$A2,$19,$96,$63,$98,  3,$54,$76,$74,  5,$9D,$1D,$90,$FE,$AA,$EE,$FA,$A2,$7D,$35,$DB,$59,$FF,$4F,$FB; 3264
		dc.b $43,$FA,$5F,$10,  0,  0,  0,$3C,$BF,$69,$E8,  7,$ED,$3F,$6F,$E3,$EA,  0,  0,  0,  5,$78,$FA,$EE,$DB,$24,$74,$DD,$B1,$4B,$D3,$71,$42,$9E,$B2,$9F,$F2,$DC,$95,$21,$3B,$ED,$25,$9F,$A2,$A3,$CE,  0,$D7,$77,$A8,  0,  0,$21,$BB,$D4,  0,  0,$10,$DD,$EA,  0,$84,$FF; 3328
		dc.b $A2,$E8,  0,  0,  0,  0,  3,$F9,$FF,$AE,$43,$65,$AC,$C6,$A9,$7E,$FE,$20,  1,$54,$69,$5D,$51,$D5,$2A,$8C,$12,$CA,$95,$45,$6C,$E8,$A9,$63,$6B,$FF,$5B,$5B,$14,$95,$91,$E4,$52, $D,$25,$64,$85,$6A,$8B,$1B,$69,$D5,$DC,$94,$8E,$A9,$4A,$A9,$1D,$52,$91,$D5,$29,$17; 3392
		dc.b $B5,$56,$87,$51,$42,$C8,$7F,$5A,$DA,$B4,$10,$5E,$8D,$7B,$6B,$1D,$2D,$1F,$D7,$9B,$6A,$C2,$DA,$B5,$B5,$61,$6D,$58,$59,$7D,$95,$A3,$57,$B7,$8A,$1C,$55,  0,$A5,$6C, $D,$BF,$5D,$76,$7C,$F5,$DD,$4D,$D4,$DC,$BF,$B6,$E9,$FA,$28,$6E,$A6,$EA,$6E,$A6,$E0,  6,$BD,$60; 3456
		dc.b  $E,$31,$6D,$13,$A9,$8A,$7E,$B6,$F4,$AA,$B7,$62,$C9,  6,$83,$2B,$23,$B5,$66,$B8,$77,$C2,$B8,$77,$C1,$1F,$BC,$77,$80,  0,$EE,$B6,$9D,$5D,$CA,$D5,$82,$CE,$D5,$D1,$AB,$C4,$34,$1A,$B5,$68,$31,$45,$68,$21,$45,$65,$65,$AC,$B2,$F7,$AA,$16,$87,$79,$42,$CF,$DF,$5D; 3520
		dc.b $3B,$C2,$7E,$97,$C4,$F4,$1D,  7,$41,$2F,$D3,$5F,$D0,$6E,$1B,$80,  2,$99,  0,$3C,$FF,$68,  0,$F4,  0,$6E,$1B,$86,$E1,$B9,$FC,$F6,$FD,$35,$E8,$10,$20,  0,$79,$FA,$80,  0,  3,$CF,$D4,  0,$FE,$A0,  0,  0,  0,  0,$30,$CF, $B,$A6,$BB,$3C,$11,$AB,$64,$62,$C8,$52; 3584
		dc.b $45,$19, $B,$57,$FC,$34,$2D,$FC,$1C,$53,$C4,$A2,$D6,$B8,$A7,$E8,$FC,$9B,$D9,$95,$90,$E2,$71,$42,$DF,$C1,$C5,$31,$38,$D6,$D5,$B5,$78,$9C,$4E,$28,$7D,$95, $A,$7E,$8E,$BF,$D1,$FB,$62,$90,$C5,$50,$A4,$95,$BD,$8B,$57,$89,$C5, $B,$56,$D5,$E2,$8C,$51,$8A,$2A,$62; 3648
		dc.b $71,$4C,$4F,$93,$7B,$31,$C5, $B,$14,$6A,$CB,$26,$2B,$8A,$31,$AD,$AB,$6A,$F1,$4C,$4E,$35,$B7,$F0,$58,$A7,$F0,$D3,$1F,$22,$C5,$3F,$46,$58,$B2,$FB,$32,$B1,$C7,$D9,$BC,$8B,$2F,$F0,$CB,$43,$C8,$FB,$7E,$8C,$A6,$25, $D,$66,$55,$B2,$63,$84,$CC,$99,$DC,$70,$9B,  4; 3712
		dc.b $B9,$73,$33,$65,$C0,$E1,$35,$C9,$77,  3,$84,$D7,$70,$E7,$7E,$75,$F6,$5F,$DD,$76,$C2,$E9,$4D,$DB,$38,$36,$72,$32,$CC,$B1,$46,$32,$46,$45,$46,$42,$8C,$AC,$8C,$A9,$8A,$2F,$E8,$D0,$B1,$43,$24,$35,$E3,$5B,$23,$57,$89,$93,$70,$BB,  4,$BA,$6C, $F,$39,$AE,$C0,$F0; 3776
		dc.b $CA,$63,$81,$E1,$72,$5D,$32,$F3,$E1,$74,$DD,$AB,$CE,$1D,$BF,$75, $C,$FB,$4D,$2B,$B0,$5B,$96,$57,$20,$29,  4,$28, $B,$16,$83,  2,$85, $B,$14,  5,$8B,$14,$2C, $A,$41,$8A,  2,$C5, $A,$16,$78,$BA,$16,$82,$2C,$69,$28,$A4,$50,$C8,$41,$8A,$16,  5,$8A,$41,  1,$42; 3840
		dc.b $C5,$8B,  2,$D0,$42,$82,  9,  6,  5,$20,$C5,$23,  8,$9A,$95,$8B,$14,$2C,$86,$37,$D5,$28,$B4,$5A,$A0,$A8,$58,$A1,$40,$5A,$F6,  5, $A,$16,$28, $B,$16,$28,$58,$14,$83,$14,  5,$8A,$41,$9E,$2E,$85,$8A,$14,$58,$EB,$14,$8B,$19,  2,$C5,$8A,$16,  5, $A,$16,$28, $B; 3904
		dc.b $41, $B,  8,$31,$62,$80,$A4,$10,$5E,$85,$8C,$A3,  8,$9A,$95,$8B,$14,$2C,$86,$37,$A6,$E9,$6C,$76,$33,$AA,  4,$6B,$DA,  8,$1D,$1D,$A0,$8D,$7B,$42,$B6,$A2,$41,$20,$C5,$95,$1A,  8,$59,$D9,$19,$D8,$B2,$32,$2A,$31,$45,$46,$D1,$24,$C9,  8,$D6,$CB,$26,$85,$6C,  0; 3968
		dc.b $7A,$D8,$2B, $A,$32,$D6,$C0,$B1,$60,$EC,$5A, $C,$AD,$7B,$41,$9D,$8B,$5A,$3A,$49, $C,$8E,$8B,$A1,$92,$5F,$A2,$A5,$F2,$AD,$63,$AA,$45,$64,$65,$52,$C5,$64,  0,$40,$2F,$64,$54,$2C,$1D,$20,$CA,$8D,$26,$2C,$7B,$9E,$56,$5A,$CB,$69,  9,$42,$26,$A5,$95,$10,$B2,$C4; 4032
		dc.b $C4,  1,$AA,$3B,$3A,  2,$CE,$8E,$C8,$20,$CE,$9D,$DF,$BD,$EE,  0,  0,  0,$D6,$57,$D5,$2B,$3C,$AC,$6C,$F5,$7E,$B1,$ED,$8D,$3A,$9B,$5B,$52,$35, $D,$53,$54,$D6,$5A,$B6,$A8, $F,$1B,$EA,$5E,$25,$A9,$54,$90,$DA,$FA,$F4,$FE,$8D,$FE,$2B,$8D,$91,$AD,$8F,$51,$AE,$A9; 4096
		dc.b $37,$EB,$A4,$80,$6A,$8E,$CE,$80,$B3,$A3,$B2,$41,$9D,  0, $F,$A4,$2C,$B1,$BE,$D7,$D4,$B1,$5D,$17,$BF,$AB,$8A,$54,$35,$40,$2F,$64,$54,$2C,$1D, $B,$45,$B4,$AA,$36,$BE,$57,$E9,$23,$25,$8E,$E9,$FF,$4F,$2A,$A5,$D3,$F6,$E0, $E,$EE,$3D,$5D,$E2, $C, $B,$21,$40,$8A; 4160
		dc.b $D1,$85,$57,$A3,$C7,$75,$A1,$54,$37,$5B,$5D,$D5,$65,$A6,$E8,$4F,$CA,$77,$FD,$BF,$ED,  0,$1D,$FD,$5C,$62,$51,$58,$B2,$5E,$DA,$41,$1E,$A5,$B3,$45,$72,$7D,$24,$B6,$DD,$1D,$D2,$BF,$75,$FB,$80,$10,$FD,$BF,$ED,$3F,$6E,  0,$FD,$A0,  1,$FD,  0,  0, $F,$DB,$BF,$ED; 4224
		dc.b $FF,$68,  0,$7F,$DA,  0,$3D,  0,  0,  7,$FD,$BF,$E5,$3F,$2D,$CB,$78,  3,$25,$C8,  0,$BD,$60,  1,$4D,$CB,$25,$DD,$49,$43,$77,$4D,$D2,$FC,$B1,$FC,$B0,$5D,$C2,$FF,$DA,  0,$1F,$AC,  1,$B9,$77,$79,$AE,$E1,$4D,$D4,$F4,  0,$3F,$ED,  0,$1D,$60, $F,$3F,$DB,  0,$3D; 4288
		dc.b   0,$1F,$B6,$F3,  0,$75,$80,  0,  3,$AC,  1,$92,$E4,  0,$5E,$B0,  0,  0,$75,$80,$32,$5C,$80, $B,$D6,  0,$7F,$DB,$80,$3F,$EA,  0,$F2,$F3,  0,$7A,  0,  0,$1F,$B7,$7D,$EB,$5F,$E5,  0,$19,$72,$AF,$F2,$80, $F,$40,  0,  1,$FF,$6F,$FB,$40,  5,$37,$AE,$F0,  7,$FD; 4352
		dc.b $40,$19,$7A,$E4,  0,$EB,  0,$6F,$E5,$90,  1,$7F,$EA,  0,$F3,$F5,  0,$75,$80,$17,$25,$C8,  1,$D6,  0,  0, $E,$B0,  2,$E4,$B9,  0,$3A,$C0,  0,  1,$D6,  0,$5C,$97,$20,  7,$5E,$AD,$46,$A6,$D4,$DA,$FE,$4F,$29,$FF,$AD,$B0,$1A,$FA, $A,$F9,$6F,$D5,$8A,$43,$66,$BF; 4416
		dc.b $68,$21,$92,$7E,$DB,$7B,$3C,$85,$24,$28,$8F,$FA,$6F,$E2,$AC,$85,$25,$4D,$DF,$E5,$40,  0,$D7,$FE,$A0,  0,  7,$98,$F5,  0,  0,  7,$58,  0, $E,$B0,  7,$58,$5C,$97,$20,  7,$58,  0, $E,$B0,  7,$58,$5C,$BF,$29,$F9,$6D,$52,$89,$44,$5F,$DB,$74,$FD,$2C,$12,$89,$44; 4480
		dc.b $A2,  0,$35,$FF,$A8,  2,$35,$57,$D3,$9F,$42,$C7,$8A,$D4,$92,$AA,$F4,$BE,$C7,$FA,$3A,$27,$E8,$EF,$64,$B6,$2A,$D5,$9E,$AC,$6C,$5A,$1D,$40,$A6,$A9,$AC,$B5,$6D,$50,$6B,$54,$69,$2D,$6D,$2A,$AF,$B1,$B4,$9F,$F5,$95,$5F,$8D,$9D,$BA,$AF,$B0,  0,  0,  6,$BE,$3E,$50; 4544
		dc.b $95,$25,$49,$5F,$23,$FC,$23,$2B,$E5,$49,$52,$50,$92,$CA,$12,$59,$42,$45,$A5,  9,$16,$79,$16,$5C,$8C,$99,$E4,$51,$E4,$52,$89,$AA,$78,$D6,$65,  9,$14,$94,$24,$51,$E4,$51,$72,$32,$47,$91,$67,$91,$6A,$35,$18,  0,  0,$1A,$C6,$AF,$DF,$71,  8,  0,$46,  5,$8A,  3; 4608
		dc.b $A1,$8B,$68,$C5,$21,$18,$55,$BA,$DF,$96,$BF,$72,$CF,$A2,$FE,$D3,$69,$55,$2A,$48,  2,$97,$26,$6D,$73,$5C, $A,$41, $A,  2,$C5,$A0,$C0,$A1,$42,$C5,  1,$62,$C5, $B,  2,$90,$62,$80,$B1,$42,$85,$81,$42,$D0,$40,$64,$50,$A1,$90,$83,$14,$2C, $B,$14,$82,  2,$85,$8B; 4672
		dc.b $16,  5,$A0,$85,  4,$12, $C, $A,$41,$8A,  2,$C5,$8A,$16,  6,$45,$8B,  8,$21,$62,$85,  1,$6B,$D8,$14,$28,$58,$A0,$2C,$58,$A1,$60,$52, $C,$50,$16,$29,  6,  5, $B,$14,$28,$20,$85,$8C,$81,$62,$C5, $B,  2,$85, $B,$14,  5,$A0,$85,$84,$18,$B1,$40,$52,  8,$2F,$42; 4736
		dc.b $C6,$40,$B1,$62,$85,$85,$46,$2D,$16,$A8,$2A,$41, $A,  2,$C5,$A0,$D4,$45,$42,$85,$8A,  4,$F1,$4A,$9A,$D7,$C9,$51,$74,$62,$8B,$13,$39,$D8,$C9,$A4,$9B,$26,$CC, $A,$16,$82,  8,$CA,$A4,$B2,$69,$21,  6,$28,$5A,$88,$51,$8A,$41,$1D,$9D, $B,$16,$2C,$F1,$36,$56,$A9; 4800
		dc.b $53,$72, $A,$8C,$93,$72,$B4,$E7,$6B,$F6,$4D,$8F,$46,$E8,$80,$B1,$62,$85,$86,$92,$B3,$54,$D1, $A,$85,$8A,$14,  5,$AF,$6A,$22,$A1,$42,$C5,  2,$78,$A5,$4D,$6B,$E4,$A8,$BA,$31,$45,$89,$9C,$EC,$64,$D2,$4D,$8E,$CC, $A,$16,$28,$50,$44,$D4,$96,$6D,$24, $B,$16,$28; 4864
		dc.b $5A,$88,$6B,$28,$58,$A3,$B3,$B4,$10,$B3,$C4,$DA,$15,$31,$6D,$C8,$2A,$49,$1D,$C8,$B3,$9D,$AF,$D8,$EC,$9D,$1B,$A4,$81,$62,$C5, $B, $D,$8E,$C8,$50,$41, $B,$14,$28,$27,$69,$CC,$E6,$76,  5, $A,$16,$28, $B,$16,$28,$58,$14,$83,$14,$13,$B4,$E9,$39,$9D,$81,$42,$C5; 4928
		dc.b  $A,  9,$CC,$E9,$3B,$4F,$20,$58,$B1,$42,$C2,$74,$9D,$27,$69,$D0,$16,$82,$16,$10,$62,$C5,  1,$48,$20,$59,$CC,$E9,$3B,$4F,$20,$58,$B1,$42,$C2,$73,$3B,$4E,$D3,$85,$48,$21,$41,$3B,$4E,$D3,$99,$D8,$14,$28,$58,$A0,$2C,$58,$A1,$60,$52, $C,$50,$4E,$D3,$A4,$E9,$3B; 4992
		dc.b   2,$85,$A0,$82,$79,$4E,$93,$A4,$F2,$10,$62,$85,$84,$ED,$3A,$4E,$67,$40,$50,$B1,$62,$C0,$B4,$10,$A0,$82,$41,$84,$E9,$39,$9D,$A7,$40,$58,$B1,$42,$C0,$E0,$6E,$DB,$3D,$AE,  0,$75,$80,$3F,$6D,$25,$95,$F2,  2,$47,$D0,  1,$E3,$BF,  9,$86,$A9,$AA,$6B,$2D,$5B,$54; 5056
		dc.b   0,  1,  8,$BC,$61,$12,$8B,$55,$10,$C5,$62,$53,$BF,$AB,$8C,$6A,  0,$75,$80,  0,$EB,  1,$EA,$84,$AD,$91,$FD,$11,$4A,$96,$C6,$C6,$36,$97,$54,$AA,  0,$75,$80,  0,$EB,  2,$16,$58,$9A,$B2,$36,$91,$92,$1A,$9E,$C6,$DF,$BE,$31,$2C,$78,$AD,$49,$2A,$AF,$4B,$EC,$7F; 5120
		dc.b $A3,$A2,$7E,$8E,$F6,$4B,$62,$AD,$59,$EA,$C6,$C5,$A1,$D4,  0,$BE,$2E,$86,$30,$8D,$2A,$28,$62,$B1,$29,$1A,$BF,$7D,$C6,$5A,$DA,$55,$5F,$63,$69,$3F,$EB,$2A,$BF,$1B,$3B,$75,$5F,$60,  0,  1,$62,$16,$26,$26,$2B,$14,$31,$49,$B0,$AB,$98,$BD, $E, $B,$56,$A9,$32,$E0; 5184
		dc.b $63,$52,$E0,  4,$10,$3B,$3A,  2,$CE,$8E,$C8,$20,$CE,$82,$33,$67,$2C,$EE,$AA,$20,  1,$55,$73,$60,$77,$CD,$CE,$62,$93,$A4,$F5,$CC,$70,$33,$54,$B8,$2C,$40,  8,  5,$EC,$8A,$85,$9E,$AE,$EB,$46,$D1,$A8,  1,  8,$BC,$61,$13,$52,$D5,$44,$31,$58,$98,$80,$35,$47,$67; 5248
		dc.b $40,$59,$D1,$D9, $C,$6A,$9B,$39,$67,$35,$40,  1,$BC,$A4,$D5,$D4,$93,$A6,$13,$61,$D2,$6E,$87,$A6,$13,$61,$BD,$67,$49,$90,  0,$17,$79,$49,$93, $A,$92,$74,$C3,$C0,$CD,$D0,$F3,$99,$66,$9F,$A6,  9,$BA,$DD,$E0, $F,$40,$3C,$FF,$6C,  7,$FD,$47,$58,  3,$C7,$F6,$E0; 5312
		dc.b  $F,$40,$3C,$FF,$6C,  7,$A8,$F5,$EB,  0,$7A,$F9,  0,$3D,  0,$FD,$B7,$98,  3,$D5,$FC,$FF,$6E,  0,$F2,$F5,  0,$7A,  0,$3C,$FF,$6C,  0,$FE,$BE,$54,$DE,  7,$AF,$90,  3,$D0,  0,$3F,$6D,$21,$FA,$21,$D7,$EA,$3F,$4A,$27,$F2,$F5,  0,$7A,  0,  0,$1F,$A2,$BF,$F4,$47; 5376
		dc.b $F2,$9F,$96,$A6,$43,$7D,$37,$AF,$ED,  0,$1E,$80,  0,  0,$F4,$19, $C,$B7,$52,$C7,$F4,$80,  0,  0,  0,  0,$21,$69, $A,$5A,$40,  0,  0,  0,  1,$4B,$48,$43,$F6,$FE,$BF,$A7,$9B,$6F,$D2,$80,  0,  0,  0,$21,$69, $B,$F7,$FE,$DF,$7D,$3F,$4B,$9C,$FF,$A7,  0,  0,  0; 5440
		dc.b   2,$16,$90,$3B,$CF,$E9,$F7,$AE,$C3,$5F,$D3,$CD,$B7,$E9,$40,  0,  0,$21,$69, $F,$D2,$AF,$29,$E1,$BF,$FA,$40, $F,$D2,$E7,$3F,$E9,$C0,  0,$42,$D2,  7,$94,$27,$E4,$BF,$A5,  2,$FE,$B1,$AC,$F7,$EF,$3F,$A7,$9B,$61,$AC,$A9,$65,$E4,$FB,$F2,$5E,$4F,$C8,  0,  3,$EF; 5504
		dc.b $F3,$E5,$92,$EF,$7D,$E2,$FD,$D0,$FD,$BA,$1E,$57,$EC,$35,$EB,  2,$9B,$DF,$7B,$EF,$7D,$E2,$FD,$DF,$D2,$3B,$A1,$BB,$28,$7E,$5A,$FD,$DA,$F9,$7A,$8A,$6F,$7D,$EB,$FA,$2D,$BC,$D6,$7B,$F7,$BE,$57,$CA,$92,$BF,$F2,$D7,$EE,$A6,$ED,$7D,  0,$13,$C3,$F4,$9B,$A7,$BE,$54; 5568
		dc.b $95,$FB,$A5,  9,$2F,$F1,$A4,  0,  0,$6B,$E8,  0,  0, $F,$4E,$54,$DF,$CA,$9B,$F7, $F,$D3,  0,$3A,$C0, $F,$FB,$40,  7,$A0,  0,$7E,$5B,$A1,$E5,$7F,$4D,$FC,$A9,$BF,$FA,$40,  7,$95,$46,$40,  0,  0,  0,  0,  5,$F6,$95,$2D,$20,  0,  0,  0,  0,  0,  0,  0,  0,  0; 5632
		dc.b   0,$14,$B4,$8E,$FB,$E7,$BE,$D2,$FD,$28,  0,  1,$AC,$EF,$23,$3B,$D8,$CF,$49,$EF,$E5,$7C,$FF,$D2,$9C, $D,$7F,$4B,$9F,$2C,$A1,$63,$38,$A4,$F4,$9F,$CC,$EF,$BE,$70,  0,$14,$9F,$FA,$5B,$4A,$F9,$EF,$DF,$7C,$F7,$E5,$FD,$71,$AC,$F4,$9C,$FF, $B,$6C,$9E,$7A,$4E,$29; 5696
		dc.b $3B,$C8,$CE,$F2,$33,$BC,$AF,$DD,$28,$7E,$8B,$F8,$CB,$2A,$4A,$92,$D6,$78,$74,$FD,$34,$E2,$12,$A6,$E7,$FD,$17,$F1,$96,$54,$95,$24,  0,$1A,$FA,  0,$2B,$C7,$7F,$20,  7,$58,  0,$5F,$FA,$55,$FD,$2C,$37,$D3,$AC,  1,$BF,$96,$FE,$40, $E,$B1,$4D,$F0,$FD,$2A,$FE,$94; 5760
		dc.b $3C,$F4,$9E,$93,$AF,$9E,$DF,$A2,$84,$F4,$9E,$93,$D2,$5F,$A7,$F1,  0,$7A,  7,$F3,$FD,$B0,$1F,$F5, $F,$D6,$29,$CB,$D7,$92,$FE,$D3,$CC, $A,$65,$FA,$6E,$8B,$FC,$21, $D,$F0,$FD,$2A,$FE,$94,  1,$7F,$F0,$BF,$4E,$BC,$A7,$87,$20,$6D,$28,$7E,$8A,$A3,$FA,$25,$CA,$13; 5824
		dc.b $E4,$F3,$DF,$BD,$72,$E5,$E7,$BC,  0,$FB,$DF,$7B,$F2,$7E,$4B,$2A,$58,  0,$FF,$A7,$9B,$6F,$D2,$81,$4D,$FE,$7B,$EF,$9E,$93,$99,$43,$79,$B0,  0,  0,  3,$EF,$36,$BE,$73,$67,$9C,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,$27,$D6,$70,  0,$D6,$7A,$4F,$7C,$A9,$63; 5888
		dc.b $3D,$27,$A6,$C2,$93,$FF,  8,$CF,$49,$C6,$BB,$FF,$A4,$76,$14,$DB,$5E,$B0,$35,$9E,$93,$8A,$4F,$49,$E1,$D7,  9,$E1,$20,$B3,$C2,$47,$2D,$BF,$44,$77,$2C,$F0,$DC,$16,$7A,$7F,$4B,$F2,$D3,$BC,$85,$25,$4D,$D4,$DC,$29,$BB,$5F,$F3,  0,$32,$5F,$CB,$7E,$53,$59,$E9,$3D; 5952
		dc.b $27,$5F,$3D,$BF,$45,  9,$E9,$3D,$27,$A4,$E0, $D,$7A,$C0,$1C,$B7,$E3,$58,  3,$D0,  0,  0,$1E,$9A,$EE,$A6,$EA,$6E,$5F,$E3,  0,$21,$E8,$35,$DD,$4D,$D4,$DD,$4D,$D4,$94,$27,$59,$42,$73,$B8,$FE,$8B,$6C,$B7,$42,$7A,$4F,$49,$F5,$DE,$9F,$A7,$7D,$D4,$94,$27,$59,$42; 6016
		dc.b $73,$B8,$FE,$8B,$6C,$B7,$42,$7A,$4F,$49,$E9,$3D,$27,  2,$93,$FF,$4A,$7A,$6D,$4D,$A9,$3B,$FE,$8B,$6F,$D2,$8D,$67,$A4,$EB,$E7,$38,$A4,$E2,$93,$99,$3C,$E6,$CF,$38,  0,  0,  0,  0,$53,$60,$F2,$3B,  7,$B1,$D8,$52,$7F,$D1,  8,$6C,$2F,$DF,$FC,$20,$27,$D7,$AF,$59; 6080
		dc.b $C0,$A4,$E0,$52,$75,$EB,$79,$C5,$27,$86,$E9,$72,$C9,$77,  9,$C4,$25, $F,$3F,$DB,$42,$40,$52,$40,$52,$54,$E9,$FE,$60,  5,$FF,$A2,$79,$2C,$E0,$7E,$DB,$CE,$12,$59,$C4,$25,$49,$42,$70,$B2,$84,$E2,$1F,$A2,$DB,$CD,$67,$14,$9E,$9B,$7F, $B,$78,$BF,$60,$BF,$C2,$D6; 6144
		dc.b $70,$29,$B0,$A6,$C6,$42,$12,$D8,$D8,$3C,$E0,$42,$47,$94,$2C,$76,  3,$5F,$D1,  7,$9C,  1,$4D,$86,$BF,$C2,$59,$C0,$BF,$69,$7E,$DF,$79,$9C, $A,$7F,$4B,$F2,$CB,$38,$86,$E0,$1E,$70,$1F,$FC,$5B,$83,$CE,$B2, $B,$CB,$30,  4,$32,  0,  0,  5,$32,  0,$53,$F6,$F9,$FE; 6208
		dc.b $94,  0,$BF,$D2,  0,  0,  2,$FF,$48,  0,$BB,$4F,$E4,  0,$FD,$17,$F1,$80,  0,  1,$FA,$2F,$E3,  0,$3F,$4F,$3A,$7E,$90,  1,$D6,  0,  0, $E,$B0,  7,$AA,$7E,$90,  1,$E8,  0,  0, $F,$41,$AE,$EA,$6E,$3F,$D6,  0,$2F,$A0,$D7,$75,$37, $A,$6E,$A6,$EA,$49,$FF,$4D,$E7; 6272
		dc.b $B2,$EE,$84,$E1,$77,$42,$75,$DD, $E,$9F,$A7,$7D,$D4,$95,$24,$F3,$EE,$3E,$7B,$4B,$73,$CF,$49,$E9,$3D,$27,$14,$9E,$93,$EB,$D6,$35,$DA,$9B,$1D,$BF,$85,$BC,$4E,$35,$EB,$D7,$6A,$6D,$4D,$A9,$B5,$27,$A4,$E6,$CF,$39,$93,$CB,$5D,$80,$D7,$F4,$B2,$B5,$F3,$9B,$3C,$E6; 6336
		dc.b $4F,$38,  0,  0,  0,  0,$6B,$EC,$DF,$BC,$BE,$C6,$AA,$55,$6B,$EA,$B5,$F5,$52,$AA,$54,$A9,$C4,$D4,$9C,$63, $A,$A2,  0,  0, $B,$FF,$9B,$DD,$6C,$68,$9A,$62,$5A,$16,$AD,$92,$F4,$29,$22,$98,$E4,$50,$C7,$4F,$66,$A3,$5F,$68,$33,$D8,$36,$B6, $D,$AD,$80,$5F,$D7,$7E; 6400
		dc.b $BD,$25, $F,$63,$68,$57,$A7,$51,$AD,$7A,$97,$1A,$DD, $E,$58,$A2,$A4,$34,$8C,$10,$1D,$29,$A5,$11,$D9,$74,$A2,  0,$2F,$EA,$D2,$F9,$6B,$69,$6B,$6A,$85,$42,$A8,$71,$45,$A9,$E3,$C5,$2A,$A4,$6A,  0,  0,  6,$BD,$42,$11,$78,$C2,$26,$4B,$55,$10,$C5,$62,$58,  1,$AA; 6464
		dc.b $3B,$3A,  2,$CE,$8E,$C8,$20,$CE,$9E,$1D,$B9,$F0,$1D,$60, $E,$B0,  0,$1D,$60, $F,$D3,$CF,$9F,$E9,$40,  0,  0,  0,  0,$1A,$8E,$4E,$95,$2D,$46,$AD,$AE,$9A,$7F, $D,$B3,$1D,$60, $E,$B0,  0,$1D,$60, $E,$DF,$B6,$FC,$A4,$22,$ED,  8,$9A,$96,$54,$43,$15,$89,$88,$1A; 6528
		dc.b $A3,$B3,$A0,$2C,$E8,$EC,$82, $C,$E8,  1,$C1,$B3,$EE,$EA,$41,$32,$DA,$98,  3,$6F,$CB,  1,$7B,$2D,$67,$1B,$D8,  8,$83,$A7,$E5,$AC,$62, $E,$8F,$60,  0,$A7,$F4,$BF,$2C,$21,$23,$B8,$53,$75,$F2,$BE,$43,$5D,$D2,$FE,$B1,$DC,  5,$3D,$7C,$40,  0,  0,  0,  2,$FF,$D7; 6592
		dc.b $C2,$55,$1A,$CC,$AA,$B5,$70,$97,$1F,$DF,  0,  0,  0,  0,  0,$FD,$70,$FD,$72,$FF,$78,  0,  0,  0,  0, $C,$B5,$D0, $D,$62,  0,$D6,$AA,$55,$4A,$A9,$55,$2A,$A4,$A9,$2B,$5F,$2B,$6B,$FA,$D3,$65,$D3,$F5,$A6,$C6,$C7,$FA,$3A, $F,$FF,$2D,$5D,$DD,$5A,$1A,$8D,$78,$A5; 6656
		dc.b $4F,$5B,$6A,$80,  0,  5,$2D,$54,$3F,$5B,$1B,$1E,$A3,$DC,$85,$3F,$58,$52,$F6,$84,$BF,$5D,$6D,$3A,$AA,$1F,$CD,$EF,$2C,$F5,$D9,$31,$A5,$78,$D2,$BC,$69,$DD,$68,$71,$74,$AA,$FA,$A2,$3F,$5B,$52,$F5,$2E,$56,$86,$56,$5B,$19,$2D,$50,$92,$D9,$FF,$5F,$2F,$DE,$81,$FC; 6720
		dc.b $DE,$FA,$57,$6D,$50,$A7,$F3,$74,$B6,$80,  0,  5,$2C,$2D,$4E,$A0,  5,$3F,$7A,$FF,$BD,  0,  0,  0,  0,$42,$AB,$F8,$A3,$D5,$5B,$C5,$2F,$8F,$8D,$3A,$A2,$62,$C6,$D4,$B4,$2A,$8B,$5A,$15,$2D,$A1,$52,$C6,$15,$52,$AA,$55,$4A,$B5,$F2,$1E,$D5,$25,$2B, $B,$FB,$C8,$68; 6784
		dc.b $7F,$5A,$BA,$75,$42,$29,$6B,$E5,$AD,$80,  0, $A,$55,$4A,$8F,$B2,$D5,$7D,$7F,$AE,$1A,$26,$89,$A7,$B5,$8D,$8D,$80, $A,$D4,$6A,$55,$4A,$8E,$8F,$54,$34,$29,$55,$E9,$1A,$45,$63,$FB,$D5,$89,$60,$CB,$13,$FB,$EB,$2F,$EB,$9F,$CA,$AB,$1B,$43,$13,$65,$46,$7B,$24,$A0; 6848
		dc.b $8B,$21,$7A,$6A,$D2,$A2,$6B,$23,$A5,$10,$E9,$4E,$A4,$79,$43,$C8,$27,$FC,$C0, $C,  1,$63,$5F,$7B,$24,$91,$7A,$90,$5F,$59,$FE, $A,$A0,  3,$59,$6B,$22,$D2,$C4,$A0,$2D,$5A,$A5,$19,$5A,$BB,$E5,$1F,$D7,$A2,$FE,$F4,$D9,$6C,$B6,$5B,$3F,$EF,$25,$EC,$F2,$1A,$A0,  0; 6912
		dc.b $7B,$7F, $D,$6D,$5D,$F2,$EF,$EA,$4D,$74,$35,  5,$B7,$EB,$AA,$36,$8B,$2A,$5A,$2C,$7D,$8B,$1A,$DE,$B0,  0,$A2,$1A,$FF,$7E,$6A,$EE,$76,$EA,$16,$74,$85,$A1,$A7,$55,$76,$BF,$BE,$C1,$78,$8E,$22,$A9,$6B,$6A,$A5,$AD,$A1,$63,$FC,$D3,$63,$6F,$DE,$71,$C7,$2E,$E5,$EF; 6976
		dc.b $1A, $D,  0,  0,  0,  5,$52,$A5,$8E,$4F,$FB,$ED,  0,$D0,$2E,$9F,$C2,$EE,  0, $D,$5A,$8D,$6A,$5A,$91,$A3,$6B,$6A,$46,$8D,$AD,$A9,$11,$4F,$DF,$6B,$1A,$46,$91,$BE,$2D,$7D,$8D,$AF,$6A,$47,$54,$A4,$52,$89,$4A,$A9,$17,$45,$48,$22,$C6,  8,$B1,$4A,$46,$DA,$E9,$FC; 7040
		dc.b $19,$5A,$98,$80,$28,$94,$4A,$25,$12,$FA,$E0,$85,$2F,$8A,$5E,$94,$48,$D2,$34,$4D,$63, $F,$3F,$DE,$D1,$8B,$2E,$26,$36,$38,$F7,$58,$B1,$47,$62,$86,$2A,$D0,$45,$63,$C9,$23, $D,$96,$26,$CC,$B3,$42,$D1,$D8,$B3,$D9,$6E,$45,$B3,$2C,$D0,$B4,$55,$9E,$CB,$9C,$2C,$C5; 7104
		dc.b $26,$85,$A2,$A8,$74,$EE,$69,$B0,$38,$23, $A,$47,$46,$BE,$47,$40,$CF,$94,$F7,  6,$7D,$93, $B,$BF,$46,$A8,$67,$BA,$FC,$27,$BD,$30,$33,$DD,  4,$3B,$EF,$C2,$75,$B9,$53,  3,$3B,$A1,$DE,$B6,$F0,$4A,$BF,$54,  0,  1,$FF,$E6,  0,  0,$3A,$6B,$64,$A5,$5A,$7F,$74,$DB; 7168
		dc.b $56,$D0,$6A,$9A,$3E,$21,$74,$BD,  2,$E8,  6,$8A,$9A,$E9,$7E,$81,$74,$17,$A7,$7B,$E9,$EC,$3C,$B5,$B0,$A5,$85,$13,$5D,  5,$13,$5D,$28,$9A,$E9,$44,$D7,$4A,$58,$D5,$2F,$DF,$AC,$B4,$3D,$50,$B3,$26,$9D,$50,$B2,$A6,$8F,$10,$DA,$D9,$B5,$B0,$88,  0,  0,$3F,$5F,$1A; 7232
		dc.b $5A,$2F,$D5,$21,$7E,$92,$1A,$DB,$56,$16,$BD,$8B,$5F,$66,$36,$BE,$C5,$A9,$13,$6A,$63,$4B,$1B,$52,$2D,$49,$F0,$DE,$B5,$74,$59,$A1,$54,$CA,$8F,$15,$C2,$F9,$FD,$9E,$33,$53,$BA,$6D,$63,$D0,  0,  0,  1,$BF,$C8,$A9,$81,$9D,$D0,$EF,$BF,  9,$E1,$FE,$79,$D7,$6D,$36; 7296
		dc.b $94,$39,$24,$F9,$3D,$A5, $E,$87,$76,$9B,$B6,$28,  0,$15,$57,$32,$1D,$F3,$74,$C2,$6C,$12,$74,$DF,$84,$D8,$74,$3D,$13,$6B,$B3,$BB,$BE,$CA,$9A,$A6,$B1,$48,$21,$CB,$44,$BF,$4B,$68,$BA,$1D,$3A,$8A,$2A,$5A,$1A, $B,  0,  0,  0,$E8,$BF,$DC,$5D,  0,$1A,  0,  6,$80; 7360
		dc.b  $D,  0,$D0,  3,$D2,$7A,$A7,$E8,$80,  0,$6A,$AE,$64,$3B,$E6,$E9,$84,$D8,$24,$E9,$BF,  9,$B0,$E8,$7A,$2A,$4C,$93,$80,  2,$D5,$5C,$C8,$77,$CD,$D3,  9,$B0,$49,$D3,$7E,$13,$61,$D0,$F4,$54,$99,$27,  0,  5,$AA,$B9,$90,$EF,$9B,$A6,$13,$60,$93,$A6,$FC,$26,$C3,$A1; 7424
		dc.b $E8,$A9,$32,$4E,  0, $B,$52,$19,$90,$C6,$79,$BA,$78,$60,$85,$30,$E9,$E1,$CD,$26,$4C,$37,$F4,$FD,$70,$4D,$53,$59,$6A,$DA,$A0,  2,$FA,$9E,$22,$11,$78,$BA,$42,$2A,$86,$2E,$82,$35,$7E,$FB,$8C,$B5,$B4,$AA,$BE,$C6,$D2,$7F,$D6,$55,$7E,$36,$76,$EA,$BE,$C0,  0,  0; 7488
		dc.b $31,$BF,$B8,$C5,$E3,$BA,$3B,$19,$8C,$C0,$A4,$10,$A0,$2C,$5A, $C, $A,$14,$2C,$50,$16,$2C,$50,$B0,$29,  6,$28, $B,$14,$28,$59,$E2,$FD, $B,$41, $A,$45,$67,$3B,$1D,$D1,$48,$F4,$33,$88,$31,$42,$C0,$B1,$48,$20,$28,$58,$B1,$60,$5A,  8,$50,$41,$20,$C0,$A1,$9C,$B1; 7552
		dc.b $48,$C2,$26,$A5,$DD,  4,$2C,$86,$2B,$39,$E9,$56,$D1,$9E,$3B,$AA,$E8, $A,$16,$28,$50,$16,$BD,$81,$42,$85,$8A,  2,$C5,$8A,$16,  5,$20,$C5,  1,$62,$90,$67,$8B,$F4,$2C,$50,$A1,$48,$AE,$C7,$63,$D2,$29,$1E,$86,$70,$58,$B1,$42,$C0,$A1,$42,$C5,  1,$68,$21,$61,  6; 7616
		dc.b $2C,$50,$14,$82, $B,$F7,$16,$32,$8C,$22,$6A,$5E,$90,$42,$C8,$62,$BB,$1E,$9C,$7F,$7D,$54,$47,$FC,$FF,$EF,$FF,$16,$2C,$58,$B2,$B1,$62,$C5,$80,$1F,$F3,$FF,$8F,$FD,$FA,$FF,$E2,$2A,$8C,$38,$AB,$1E,$2B,$52,$4A,$AB,$D2,$FB,$1F,$E8,$E8,$9F,$A3,$BD,$92,$D8,$AB,$56; 7680
		dc.b $7A,$B1,$B1,$68,$75,  0,  0,$BE,$2E,$86,$30,$89,$43,$DD,$C6,$25,$8F,$15,$A9,$25,$55,$E9,$7D,$8F,$F4,$74,$4F,$D1,$DE,$C9,$6C,$55,$AB,$3D,$58,$D8,$B4,$3A,$80,$17,$C4,$D4,$15,$22,$B1,$31,$84,$5F,$8F,$EF,$AA,$8C,$B5,$B4,$AA,$BE,$C6,$D2,$7F,$D6,$55,$7E,$36,$76; 7744
		dc.b $EA,$BE,$C0,  8,$44,$D4,$B1,$D5,$22,$B1,$31,$A9,$62,  4,$13,$8F,$EF,$B8,$F0,$EC,$F9,$C9,$A5,$83,$F8,$73,  2,$FF,$D4,$FE,$A1,$7F,$53,$C1,$B5,$C0,  0,  0,  2,$1C,$E6,$BF, $C,$B3,$BE,$EE,  0,$1C,$F5,$6C,$3C,$1F,$9F,$80,  0,$3F,$EA,$7F,$54,$BF,$A9,$F6,$E1, $F; 7808
		dc.b $D5,$F0,  0,  7,$E1,$D9,$F8,$5C,$DA,$CC,  0,$3E,$18,$5F,$34,$9B,$3E,$D0,$FD,$47,$60,  0,  0,$1B,$B5,$6F,$D5,$BC,$DF,$AB,  0,  0,$35,$E7,$E0,$F8,$49,$A5,$9B,$F6,$E0,  0,  2,$1F,$A9,$E0,$7B,$63,$26,$CC,$F6,$F0,$E6,  0,  0,  0,$7F,$E2,  0,  0,  0,  0,  0,  0; 7872
		dc.b   0,  0,  1,$4C,$5F,$F4,$77,$B1,$67,$C4,$A4,$18,$D6,$50,$FE,$8E,$B8,$32,$B1,$AE,$FF,$D1,$80,  0,  0,$7F,$8D,$7F,$A2,$C9, $F,$D3,$D6,$79,$14,$3B,$22,$D6,$6B,$E4,$8C,$50,$A6,$C5,$19, $A,$19,$6F,$E9,$EA,  0,$14,$68,$78,$A3,$16,$43,$59,$46,$43,$59,$DA,$1B,$14; 7936
		dc.b $D8,$EC,$8B,$C9,$F6,$5F,$2D,$8D,$6F,$5C,$18,$2F,$F0,$CE,$3F,$F7,  2, $D,  6,$76,$2C,$8D,  4,$64,$29,$8A,$14,$E4,$51,$79,$14,$D8,$A6,$C6,$B8,$6C,$52,$1C,$8A,$41,$B6,$47,$62,$85, $B,$16,$76,$7F,$D1,$85,$C4,$FF,$9F,$A2,$FF, $C,$E2,$7C,$8F,$B7,$ED,$D1,$76,$35; 8000
		dc.b $9D,$8E,$C5,$16,$BD,$8A,$1F,$D1,$9A,$C1,$6B,$F1,$76, $C,  0,$1A,$ED,$D3,$FA,$EC,$5A,$98,$D3,$1B,$F7,$57,$8B,$EC,$50,$B2,$D7,$C9, $E,$25,$17,$6A,$D7,$D8,$F2,$4F,$D1,$94,$A3,$14,$3B,$51,$2F,$65,$41,$7B,  5,$FE,$BF,$E5,  0,  0,  0,$C7,$C5,$51,$AB,$2D, $A,$D5; 8064
		dc.b $8B,$6C,$50,$D6,$CB,$FB,$72,$8A,$97,$D6,$BB,$43,$62,$8B,$FA,$73,$D3,$7E,$5F,$A5,  0,  0,  0,  0,$30,$6A,$21,$FE,$9E,$DE,$CB,$8C,$FF,$A2,$29,$93,$B5,$74,$C5,$2F,$FD,$1D,$11,$95,$8B,$14,$87,$F4,$E0,$C0,  0,  0, $F,$3F,$E8,$BF,$4B,$D3,$68,$72,$35,$C1,$35,$48; 8128
		dc.b $57,$2A,$CE,$C5,$31,$2C,$8B,$8A,$1C,$53,$62,$C9,$FA,$34,$87,$E8,$DD,$96,$BE,$45,$8B,$21,$D9,$D9, $F,$25,$64,$FD,$3A,$16,$43,$CA,$B6,$3E,$45,$18,$FF, $C,$FE,$D3,$97,$4D,$91,$AB,$63,$8A,$1A,$DA,$FF,$15,$AF,$13,$FA,$3D,$8A,$14,$62,$C9,$B1,$F2,$64,$3C,$93,$92; 8192
		dc.b $2D,$7B,$1D,$8F,$F4,$79,$34,$2B,$28,$5B,$D8,$A3,$2F,$E8,$D3,$56, $C, $F,$F1,$FA,$4F,$D0,$B1,$C4,$7B,$1C,$55,$17,$15,$F6,$2C,$A8,$7F,$4E,$D5,$9D,$BC,$B6,$3B,$24,$3F,$4E,$50,$E2,$7F,$6E,$98,$94,$E4,$76,$42,$86,$BE,$49,$FC,$3A,$E9,$E3,$AB,  9,$FF,$C9,$B7,$B2; 8256
		dc.b $D6,$7F,$4F,$59,$D9,$50,$EC,$76,$AD,$F6,$AC,$A1,$F2,$DB,$F4,$6F,$B4,$31,$35,$DF,$FA,$30,  0,  0,$74,$9F,$A7,$E9,$7F,$28,$50,$D7,$2F,$28,$35,$7B,$14,$A7,$2A,$D5, $D,$7B,$1A,$CA,$16,$4F,$DB,$C1,$BC,$B1,$5F,$10,  0,  0,$7E,$52,$7E,$9F,$A5,$94,$13,$63,$B2,$14; 8320
		dc.b $5F,$D3,$A2,$EC,$76,$4D,$8A,$1E,$48,$6B,$E4,$B5,$96,$29,$B1,$AD,$50,$D7,$8A,$F8,$AB,  0,  0,  0,$B4,$BF,$C6,$85,$8E,$25,$91,$58,$E2,$9B,$23,$2B,$2E,$CA,$D0,$F6,$2D, $F,$10, $F,$E8,$D7,$15,$AC,$B5,$6C,$9B,$3E,$C9,$B2,$6D, $E,$45,$36,$6F,$6F,$D3,$A1,$42,$DE; 8384
		dc.b $C5,$8B,$1F,$12,$C0,  0,  0,$A6,$34,$AF,$F4,$65,$8F,$2A,$D5,$97,$62,$8F,$B5,$78,$96,$29,$8A,$E2,$59,$71,$46,$BD,$92,$F6,$38,$80,  6,$AD, $F,$14,$62,$C8,$6B,$28,$5A,$4C,$9A,$B5,$74,$C5,$2F,$FD,$1D,$11,$95,$8B,$14,$87,$F4,$E0,$C0, $D,$5A, $C,$EC,$59,$1A,  8; 8448
		dc.b $C8,$53,$14,$29,$C8,$A2,$F2,$29,$B6,$ED,$B7,$7B,$1D,$BD,$96,$B3,$FA,$7A,$CE,$CA,$87,$63,$B5,$6F,$B5,$65, $F,$96,$DF,$A3,$7D,$A1,$89,$AE,$FC,$61,$FC,$33,$89,$F2,$3E,$DF,$B7,$45,$D8,$D6,$76,$3B,$14,$5A,$F6,$28,$7F,$46,$6B,  8,$7F,$45,$BA,  9,$B1,$D9, $A,$2F; 8512
		dc.b $E9,$D1,$76,$3B,$26,$C5, $F,$24,$35,$F2,$5A,$CB,$14,$D8,$D6,$A8,$6B,$C6,$1F,$A3,$56,$5F,$E1,$C3,$C8,$E2,$9F,$B7,$F6,$D8,$D6,$76,$5A,$D5, $E,$CB,$FA,$32,$87,$6A,$57,$BB,$26,$F2,$D8,$A3,$21,$43,$C9,$18,$A1,$AD,$6B,$3E,$C7,$91,$43,$B2,$43,$F4,$E8,$7F,$A3,$FF; 8576
		dc.b $32,$C7,$C5,$51,$AB,$2D, $A,$D5,$8B,$6C,$50,$D6,$CB,$FB,$72,$8A,$97,$D6,$BB,$43,$62,$8B,$FA,$75,$43,$BB,$65,$DA,  9,$B1,$D9, $A,$2F,$E9,$D1,$76,$3B,$26,$C5, $F,$24,$35,$F2,$5A,$CB,$14,$D8,$D6,$A8,$6B,$C5,$7C,$55,$80,  5,$83,$51, $F,$F4,$F6,$F6,$5C,$77,$1A; 8640
		dc.b $D7,$F4,$68,$58,$E2,$59,$15,$8E,$29,$B2,$32,$B2,$EC,$AD, $F,$62,$D0,$F1,  0,$FE,$8D,$71,$5A,$CB,$56,$C9,$B3,$EC,$9B,$26,$D0,$E4,$53,$66,$F6,$FD,$3A,$14,$2D,$EC,$58,$B1,$F1,$2C,  0,  0, $A,$63,$4A,$FF,$46,$58,$F2,$AD,$59,$76,$28,$FB,$57,$89,$62,$98,$AE,$25; 8704
		dc.b $97,$14,$6B,$D9,$2F,$63,$88,  0,  0, $A,$4F,$FA,$4F,$D2,$F4,$4F,$D1,$F9,$31,$ED,$31,$45,$B8,$C8,$CC,$F2,$32,  0,$5F,$23,$27,$B8,$C8,$CC,$F7,$78,$6B,$E1,$83,$CC,$72, $F,$31,$C9,$19,$5B,$F5,$5B,$6E,$DF,$B7,$E5,$27,$FD,$39,$91,$92,$2C,$DD,$5F,$A2,$38,$19,$1B; 8768
		dc.b $3B,$24,$80,$17,$B2,$49,$F0,$32,$36,$79,$BA,$A1,$FA,$AB,$F2,$36, $F,$91,$B3,$F8,$59,$7F,$45,$D0,$FE,$9A,$7D,$A7,$E8,$9F,$A3,$F2,$65,$65,$43,$9F,$6F,  8,$27,$E8,$8C,$D4,$94,$13,$2B,$F3,$B8,$E5,$7D,$DF,$AA,$17,$FE,$AB,  8,$5C,$7F,$44,$F2,$39,$3E,$47,  8,$5D; 8832
		dc.b $FA,$A2,$8C,$AC,$A9,$B6,$ED,$FB,$7E,$52,$7E,$4B,$23,$24,$5D,$97,$F4,$4B,$37,$EB,$74,$5C, $F,$E8,$9A, $C,$9A,$A6,$4D,  6,$91,$B6,$8B,$84,$DD,$42,$1F,$AA,$B3,$FE,$88,$DA,$19,$19,$3C,$C7,$2B,$FC,$3A,$AF,$D9,$7F,$45,$D0,$FE,$9A,$7D,$A7,$E8,$9F,$A3,$F2,$65,$65; 8896
		dc.b $40,$73,$ED,$E1,$82,$A7,$9A,  5,$4F,$34,$5C,$FB,$78,$60,$35,$E7,$44,$90,$79,$8A,$48,$DC,$FC,$D0,$DC,$B3,$14,$DB,$BE,$7E,$EE,$93,$F2,$59,$19,$22,$EC,$BF,$A2,  7,$C3,$F5,$BA,$2A,$63,$93,  5,$4C,$72,$65,$F0,$FD,$6E,$80,$CD,$75,$24,$C2,$92,$65,$D2,$13,$49,$E2; 8960
		dc.b $70,$3B,$69,  9,$77,$4B,$BA,$51,  0,  0,  4,$38,$F7,$F1,$A5,$7D,$DE,$22,$BC,$97,$15,$C5,$6B,$C4,$62,$BE,$7F,$BC,$E3,$DC,  0,  0, $F,$DE, $E,$A5,$C5,$72,$7F,$1E,$F0,$BE,$35,$85,$F1,$AF,$F7,$FF,$BC,  0,  7,$EE,$E2,$17,$BB,$C9,$7C,$B2,$E3,$4C,$56,$B5,$FE,$9E; 9024
		dc.b $4F,$8A,$F8,$D6,$16,$B7,$AF,$AB,$8F,$77,$10,  0,$EE,$EF,$A6,$3D,$EB,$5A,$E2,$F5,$AF,$52,$D6,$F5,$AE,$35,$AD,$6B,$88,$F2,$F1, $B,$8E,$58,$F1,$EF,$AD,$F8,$D2,$BF,$1E,$38,$F9,$8C,$72,$F2,$A7,$92,$E4,  7,$96,$35,$AF,$96,$2B,$6B,$F1,$3F,$AD,$AD,$64,$B2,$EA,$11; 9088
		dc.b $D2,$D5,$69,$15,$95,$FC,$57,$C5,$F2,$5C,$78,$D6,$3F,$A6,$1F,$1A,$D7,$10,$B5,$AE,$2B,$5F,$8C,$11,$EB,$5A,$F1,$54,$85,$65, $A,$5A,$AB,$43,$4B,$19,$1E,$AD,  0,  0,  1,$4E,$3D,$F4,$C5,$7B,$D6,$BE,$FC,$7C,$86,$2B,$5E,$35,$85,$F1,$EE,$E3,$DF,$C4,  0,  0,$1D,$FD; 9152
		dc.b $41,$F1,$AF,$BD,$71,$5A,$F8,$8C,$B1,$AC,$2D,$7E,$2B,$C7,$BF,$F7,$E0,  0,  0,$7E,$FE,$2B,$C6,$95,$F8,$F1,$C7,$CC,$63,$97,$95,$3C,$97,$25,$EA,$E3,$FB,$E0,  0,  0,$71,$EF,$1C,$57,$C5,$F2,$5C,$78,$D6,$3F,$A6,$1F,$1A,$F8,$FE,$F3,$A8,  0,$1F,$BB,$88,$5E,$EF,$2E; 9216
		dc.b $39,$56,$17,$C5,$6B,$7C,$82,$E2,$BE,$23,$C5,$71,$FD,$E7,$EF,$C0,  3,$BB,$BE,$98,$F7,$AD,$6B,$8B,$D6,$BC,$42,$E4,$BE,$20,$2E,$21,$FC,$97,$BF,$2C,$57,$8D,$31,$5A,$D7,$FA,$79,$3E,$2B,$E3,$58,$5A,$DE,$B5,$C6,$BC,$45,$AA,$AF,$C5,$78,$E9,$1C,$8E,$96,$D9,$E2,$90; 9280
		dc.b $DB,$8A,$B4,$C6,$7D,$8A,$33,$CF,$22,$D2,$4E,$3D,$4B,$5B,$D6,$B8,$D6,$B5,$AE,$23,$CB,$C4,$2E,$39,$62,$B8,$D7,$90,$C5,$6B,$5A,$F2,$5A,$AD,$AC,$BF,$7B,$55,$9F,$23,$1B,$42,$5B,$59,$18,$F1,$D2,$EA,$E5,$A0,$F1,$5A,$DF,$20,$B8,$AF,$88,$F1,$5C,$57,$FA,$62,$BC,$BF; 9344
		dc.b $83, $A,$EA,$B0,$43,$D5,$DC,$F2,$3C,$97,$3A,$A4,$76,$9D,$66,$B7,$75,$AA,$B5,$41,$72,$5F,$10,$17,$10,$FE,$4B,$58,$16,$E3,$65,$CE,$A7,$EF,$86,$CF,$B1,$8C,$D6,$3F,$A2,$D1, $B,$44,$DA,$16,$8A,$46,$D2,$8D,$46,$55,$68,$F2,$84,$84,$A1,$C7,$B8,$2F,$1C,$6B,$A5,$7D; 9408
		dc.b $4B,$93,$E3,$5E,$42,$D5,$57,$E2,$BC,$74,$8E,$47,$4B,$6C,$F1,$48,$6D,$C5,$5A,$63,$3E,$C5,$19,$E7,$95,$51,$D2,$A9,$19,$18,$E9,$C6,$5A,$F7,$C8,$D6,$FC,$42,$FF,$4C,$3E,$35,$AE,$21,$F1,$5A,$D6,$BC,$96,$AB,$6B,$2F,$DE,$D5,$67,$C8,$C6,$D0,$96,$D6,$46,$3D,$F5,$4D; 9472
		dc.b $5B,$58,$63,$5A,$D6,$FE,$4B,$5B,$E2,$B8,$85,$FE,$9E,$5C,$6B,$C4,$2C,$8F,$1A,$DF,$95,$56,$E3,$B1,$DA,$1B,$1D,$AF,$E5,$23,$2D,$9F,$48,$48,$CB,$69,$77,$69,$C7,$48,$8F,$2C,$6B,$5C,$6B,$14,$AC,$2E,$2B,$5A,$F9,$2D,$56,$AC,$55,$6A,$B3,$5A,$C5,$2D,$54,$30,$B6,$92; 9536
		dc.b $86,$88,$63,$92,$A6,$27,$F5,$B5,$26,$5A,$53,$CB,$1A,$D7,$CB,$15,$B5,$F8,$9F,$D6,$D6,$B2,$59,$75,  8,$E9,$4C,$A1,$28,$48,$4A,$1C,$7B,$82,$F1,$C6,$BA,$57,$D4,$B9,$2E,$4B,$96,$34,$AD,$71,$5A,$FC,$60,$8F,$5A,$D7,$8A,$A4,$2B,$28,$52,$D5,$5A,$1A,$5A,$16,$AB,$49; 9600
		dc.b $18,$E9,$C6,$5A,$F7,$C8,$D6,$FC,$42,$FF,$4C,$3E,$35,$F1,$C7,$2A,$F8,$D3,$15,$AD,$7F,$A7,$93,$E2,$BE,$35,$85,$AD,$EB,$CB,$15,$AC,$78,$AD,$6F,$90,$5C,$57,$C4,$78,$AF,$8E,$4B,$92,$D6,$F5,$AE,$35,$AD,$6B,$88,$F2,$F1, $B,$8E,$58,$AF,$98,$7C,$97,$C4,  5,$C4,$3F; 9664
		dc.b $92,$F9,$64,$16,$D5,$57,$E2,$BC,$74,$8E,$47,$4B,$6C,$F1,$48,$6D,$C5,$5A,$63,$3E,$C5,$19,$E7,$97,$E5,$B6,$8F,$B5,$D9,$A4,$D0,$99, $C,$DD,$B8,$4D,$71,$9B,$2E,$17,$4D,$72,$73,$5B,$A6,$BB,  5,$F0,$E7, $C,$F1,$E7,$9E,$13,$67,$D8,$E7,$BA,$7E,$91,$EA,$D3,$A0,$C5; 9728
		dc.b $6B,$5A,$F2,$5A,$AD,$AC,$BF,$7B,$55,$9F,$23,$1B,$42,$5B,$59,$18,$E7,$84,$DD,$3B,$AD,$32,$4D,$83,$A6,$67,$87,$63,$99,$9B,$1E,$D0,$9B,$99,$CE,$E9,$B3,$BA,$63,$36,$49,$9D,$D3,$5D,$97,$3B,$A6,$C2,$EE,  6,$EE,$9B,$4F,$1F,$D6,$F4,$15,$E5,$FC,$18,$57,$55,$82,$1E; 9792
		dc.b $AE,$E7,$91,$E4,$B9,$D5,$23,$B4,$EB,$D1,$AB,$64,$6C,$FC,$39,$C2,$EF, $E,$6B,$E0,$FC,$31,$C2,$6B,$8F, $E,$D8,$4D,$71,$ED,$9B,$CC,$D7,$66,$66,$5F,  3,$74,$DB,$BF,$99,$D3,$60,$B6,$E3,$65,$CE,$A7,$EF,$86,$CF,$B1,$8C,$D6,$3F,$A2,$D1, $B,$44,$DA,$16,$8A,$46,$D8; 9856
		dc.b $74,$8C,$D8,$6E,$B3,$4D,$81,$BB,$19,$8E,  7,$86,$53,$1C, $F, $B,$92,$E9,$97,$9F, $B,$A6,$ED,$5E,$70,$ED,$FB,$A8,$67,$DA,$69,$5D,$83,$5D,$9C,$C9,$77,  8,$4A,$12,$12,$87,$1E,$E0,$BC,$71,$AE,$95,$F5,$2E,$4B,$D3,$6E,$91,$FD,$7E,$D9,$A4,$D0,$99, $C,$DD,$B8,$4D; 9920
		dc.b $71,$9B,$2E,$17,$4D,$72,$73,$5B,$A6,$BB,  5,$F0,$E7, $C,$F1,$E7,$9E,$13,$67,$D8,$E7,$76,$78,$23,$23,$5D,$1D,$38,$CB,$5E,$F9,$1A,$DF,$88,$5F,$E9,$87,$C6,$BD,$BA,$6E,$FD,$6E,$93,$A4,$D8,$3A,$66,$78,$76,$39,$99,$B1,$ED,  9,$B9,$9C,$EE,$9B,$3B,$A6,$33,$64,$99; 9984
		dc.b $DD,$35,$D9,$73,$BA,$6C,$2E,$E0,$6E,$CF,  9,$BC,$B3,  0,  0,  0,  1,$72,$DE,  0,$DE,$17,$2F,$50,  0, $B,$F9,$4D,$E0,  0,  0,  1,$FF,$29,$BC,  0,$17,$7F,$E5,$37,$80,  5,$2B,  0,  0,$BB,$FF,$69,$4F,$CA,$64,$BF,$94,  0,  0,$F9,  1,$4E,$55,$AF,$E5,$80,  3,$D7; 10048
		dc.b $F6,$80,  0,  0,$A7,$E5,  3,$EF,  0,$3E,$FA,$FF,$2C,$17,$7F,$E5,$32, $F,$F9,$4D,$E0, $A,$56,  0,  0,  5,$FC,$A7,$E5,$BF,$28,$17,$F2,$99,  0,  0,$5D,$E0,  1,$BC,  0,$FB,$D7,$78,$7F,$50,$1F,$F2,$9B,$C0,  1,$7F,$28,$29,$58,  0,$2D,$61,$77,$FE,$5A,$BD,$E2,$95; 10112
		dc.b $80,  0,$7F,$20,$17,$F2,$C1,$F7,$81,$4D,$EB,$5E,$F0,$BF,$96,  0,$2E,$40,  0,  0,$7D,$FF,$96,  3,$7F,$E5,$B7,$FE,$50, $E,$55,$87,$CB,$F6,$EF,$CB,$2F,$CA,  5,$AC,  1,$97,$E5,  6,$FA,$C0,$1F,$96,$FC,$A0,  0,$6F,$5F,$2F,$CA,$72,$DE,  0, $B,$58,  0,$53,$7F,$2F; 10176
		dc.b $CA,$72, $B,$58,  0,  1,$58,$7A,$C0,  0,$52,$BE,$59,  0,  3,$FE,$5B,$20,  0, $F,$58,  0,$3D,$6B,$90,$14,$C8,  7,$E4,$1F,$7F,$20,  0, $F,$92,$E4,$37,$FE,$5A,$B0,$17,$7D,$60, $A,$C3,$F2,  0,  0,  3,$EF,$FC,$B5,$7B,$C0,$5A,$D7,$90,$7A,$D7,$F6,$E1,$F0,$CE,$E6; 10240
		dc.b $FC,$A3,$61,$9A,$4D,  9,$90,$CD,$DB,$84,$D7,$19,$B2,$E1,$74,$D7,$27,$35,$BA,$6B,$B0,$5F, $E,$70,$CF,$1E,$79,$E1,$36,$7D,$8E,$77,$4D,$73,$57,$3D,$80,  1,$72,$5A,$E9,$C8,$67,$84,$DE,$CD,$32,$4D,$83,$A6,$67,$87,$63,$99,$9B,$1E,$D0,$9B,$99,$CE,$E9,$B3,$BA,$63; 10304
		dc.b $36,$49,$9D,$D3,$5D,$97,$3B,$A6,$C2,$EE,  6,$EB,$47,$3F,$D1,$A6,$60,$3E,$41,$79,$64,  3,$E3,$FC,$1C,$FC,$39,$C2,$EF, $E,$6B,$E0,$FC,$31,$C2,$6B,$8F, $E,$D8,$4D,$71,$ED,$9B,$CC,$D7,$66,$66,$5F,  3,$74,$D1,$E9,$8D,$76,$88,$E4,  0,$C9,$79,  1,$76,$69,$9F,$6C; 10368
		dc.b $66,$C0,$DD,$8C,$C7,  3,$C3,$29,$8E,  7,$85,$C9,$74,$CB,$CF,$85,$D3,$76,$AF,$38,$76,$FD,$D4,$33,$ED,$34,$AE,$C2,$7B,$77,$B6,$19,$CC,  0, $B,$5B,$D6,$B9,  5,$D2,$A8,$F4,$F6,$BB,$34,$9A,$13,$21,$9B,$B7,  9,$AE,$33,$65,$C2,$E9,$AE,$4E,$6B,$74,$D7,$60,$BE,$1C; 10432
		dc.b $E1,$9E,$3C,$F3,$C2,$6C,$FB,$1C,$EE,$9A,$3F,$A4,$6C,  0,  1,$79, $E,$59, $C,$F0,$CF,$F4,$69,$9A,$4D,$83,$A6,$67,$87,$63,$99,$9B,$1E,$D0,$9B,$99,$CE,$E9,$B3,$BA,$63,$36,$49,$9D,$D3,$5D,$97,$3B,$A6,$C2,$EE,  6,$EC,$F0,$CD,$BF,$28,$99,$80,  0,$5C,$B9,  5,$F2; 10496
		dc.b $C5,$33,$33,$73,$85,$C6,$6C,$B8,$1C,$26,$B9,$2E,$E0,$70,$9A,$EE,$1C,$EF,$CE,$BE,$CB,$FB,$AE,$D8,$5D,$29,$BB,$66,$66,$CF,  6,$EA,$B9,  0,  1,$F9,$3E,$41,$F0,$99,$33,$E7,$5C,$D8,$1B,$B1,$FD,$D2,$F3,$F0,$C7,$83,$F6,$E0,$6E,$9B,  3,$9F,$63,$74,$D8,$1C,$EE,$69; 10560
		dc.b $A1,$35,$C7,$C1,$66,$C3,$3F,$E0,$E0,$17,$F2,$9B,$C0,  0,$2E,$FA,$F9,  0,  0,  1,$7D,$72,  0,  5,$FD,$A6,$40,$3D,$60,$3D,$60,$72,$C9,$79, $A,$79,$80,  0,  0,$6F,$C8,  5,$DE,$BC,$80,  1,$7F,$AA,  0,  0,  0,  6,$40,$53,$23,$C3, $B,$A6,$59,$B1,$AD,$96,$6E,$73; 10624
		dc.b $67,$70,  0,  0,$29,$BC,  7,$DF,$C8, $C,$38,$61,$A4,$EA,$98,$D7,$72,$CD,$CE,$6C,$EE,$C8, $A,$7E,$50,  0,$29,$F9,$60,$BB,$C7,$98,$1B,$F9,$64,$17,$7E,$41,$FF,$29,$BC,$64,  2,$D6,$BC,$80, $B,$BF,$90,  1,$F7,$8A,$6F,$CB,$78,  0,$2F,$A8, $F,$BC, $A,$F7,$80,  6; 10688
		dc.b $43,$F2,$95,$F2,$C8, $A,$64,$3F,$2D,$C9,$F2,$FD,$B8,$5C,$80,$7F,$30,  7,$ED,$C2,$E4,$B9,  5,$F3,$1B,$F2,  0, $F,$EA,$E4,  0,  0, $D,$EB,$BF,$20,$BB,$C7,$20,  6,$43,$21,$4E,$5B,$F2,  2,$99,$2F,$ED,$F2, $B,$96,$19,$CD,$76,$19,$AA,$16,$AD,$97,$14,$2C,$93,$5D; 10752
		dc.b $5E,$28,$C5,$18,$A2,$A6,$27,$14,$C4,$F9,$37,$B3,$1C,$50,$B1,$46,$AC,$B2,$62,$B8,$A3,$1A,$DA,$B6,$AF,$14,$C4,$E3,$5B,$7F,  5,$8A,$7F, $D,$31,$F2,$2C,$53,$F4,$66,$4C,$8C,$52,$EC,$D0,$B5,$6C,$B8,$A1,$64,$5A,$F1,$46,$BB,  6,$28,$B5,$AE,$29,$FA,$3F,$26,$F6,$65; 10816
		dc.b $64,$38,$9C,$50,$B7,$F0,$71,$4C,$4E,$35,$B5,$6D,$5E,$27,$13,$8A,$1F,$65,$42,$9F,$A3,$AF,$F4,$7E,$D8,$A4,$31,$3A,$55,$85,$D9,$DD,$CC, $F,$DB,$E4,  2,$E5,$BF,$90,$7C,$80,  1,$F2,$E4,$B9,  1,$FB,$75,$C8,$3E,$F0,$17,$96,$40,$3E,$5E,$B9,  0,  2,$FE,$DF,$20,$17; 10880
		dc.b $97,$E5,$B2,  0,  7,$AD,$FF,$6E,$1F,$2E,$59,  0,  3,$EF,$5F,$5C,$82,$EF,$E4,$1F,$7F,$2C,$80,$5F,$DB,$BF,$9B,$D7,$C3,$C9,$7B,$42,$EC,$E8,$99,$9E,$DC, $E,$6B,$DB,$19,$8C,$D7,$66,$79,$CC,$53,$29,$8C,$D7,$67,$CF,$2B,$A6,$BB,$3B,$8F, $B,$B0,$9A,$EB,$74,$FD,$1E; 10944
		dc.b $78,$66,  0,$1C,$97,$25,$FD,$D7,$F6,$72,$C7,$29,$B9,$CB,$1F,  6,$43,$77,  9,$8D,$D3,$70,$ED,$31,$9A,$EE,$19,$4C,$66,$B9,$79,$A5,$DC,$FC,$17, $B,$B9,$E3,$9C,$33,$3D,$B3,$9B, $C,$F0,$FD,$1A,$61,$35,$C1,$F3,$86,$57,$70,$BB,$9A,$E1,$23,$72,$F0,$39,$F3,$C7,$2F; 11008
		dc.b  $A,$F1,$F2,$CB,$19,$21,$9B,$F5,$29,$2A,$F0,$86,$7E,$1C,$D7,$C1,$F8,$63,$84,$D7,$1E,$1D,$B0,$9A,$E3,$DB,$37,$99,$AE,$CC,$CC,$BE,  6,$E9,$AE,$6A,$FF,$29,$35,$C1,$F9,$2E,$77,$65,$35,$D9,$56,$B2,$C1,$5A,$5D,$A6,$3C,$31,$5F, $F,$E1,$21,$F6,$93,$67,$26,$97,$83; 11072
		dc.b $21,$BB,$84,$C6,$E9,$B8,$76,$98,$CD,$77, $C,$A6,$33,$5C,$BC,$D2,$EE,$7E, $B,$85,$DC,$F1,$CE,$19,$9E,$D9,$CD,$86,$77,$27,$E8,$EE,$9A,$E0,$BE,$63,$78,$A7,$2F,$D4,$FE,$A3,$1F,$63,$5F,  4,$93,$5D,$FA,$83,$2A,$F0,$86,$7E,$1C,$D7,$C1,$F8,$63,$84,$D7,$1E,$1D,$B0; 11136
		dc.b $9A,$E3,$DB,$37,$99,$AE,$CC,$CC,$BE,  6,$E9,$A3,$FA,$4C,$73,$C0, $F,$DB,$E4,$1F,$27,$CA,$9E,$5C,$2B,$CD,$6E,$6B,$8E,$19,$AD,$C9,$84,$C9,$E0,$BC,$FC,$31,$E0,$FD,$B8,$1B,$A6,$C0,$E7,$D8,$DD,$36,  7,$3B,$9A,$68,$4D,$71,$F0,$5F, $B,$AF,$9B,$87,$67,$CE,$4D,$2C; 11200
		dc.b $1F,$C3,$9A,$CD,$AC,$C1,$7F,$53,$FA,$85,$FD,$4F,  6,$5C,$FB,$2E,  6,$6C,$AE,$7F, $C,  7,$87,$38,$67,$26,$96,$10,$E1,$D9,$FC,$30,$5E,$17,$34,$D8,$2F, $E,$C0,$3F,$87,$EA,$E1,$34,$B1,$97,$65,$FD,$47,$EA,$4E,$7A,$B6,$1E, $F,$CF,$C1,$FF,$51,$FA,$9F,$D4,$24,$9B; 11264
		dc.b $F4,$59,$9B,$BC,$39,$CC, $F,$EA,$7F,$54,$BF,$A9,$F6,$E1, $F,$D5,$FE,$A3,  9,$9F,$86,$13,$67,$D8,$E7, $C,$F1,$E7,$76, $B,$E1,$CE,$E4,$E6,$B7,$4C,$66,$CB,$85,$D3,$19,$BB,$70,$9B,$B3,$70,$C0,$CD,$74,$AE,$E1,$84,$1B,$87,$EA,$57,$F5,$1F,$A9, $B,$36,$B3,$2F,$3F; 11328
		dc.b   7,$C2,$4D,$2C,$DF,$B7, $B,$9F,  9,$BB,$1E,$17,$61,$35,$DC,$F2,$BA,$6B,$B3,$4C,$A6,$33,$5D,$9C,$D7,$66,$79,$CD, $E,$D8,$CC,$73,$3D,$B8,$1C,$D3,$3C, $E,$13,$5D,$9D,$D9,$B6,$72,$9A,$5F,$AA,$C6,$E3,$87,$EA,$B9,$AF,$83,$F0,$C7,  9,$AE,$3C,$3B,$61,$35,$C7,$B6; 11392
		dc.b $6F,$33,$5D,$99,$99,$7C, $D,$D3,$49,$E6,$CB,$33,$DB,$39,$B0,$CF,$9E,$39,$C3,$9F,$82,$E1,$74,$D7,$2F,$34,$BA,$6B,$B8,$65,$31,$BA,$6E,$1D,$A6,$37,$4C,$70,$E0,$DD,$97, $E,$1F,$A9,$87,$39,$8E,  7,$86,$53,$1C, $F, $B,$92,$E9,$97,$9F, $B,$A6,$ED,$5E,$70,$ED,$FB; 11456
		dc.b $A8,$67,$DA,$69,$5D,$82,$5D,$C1,$2E,$CE,$60,$2F,$8D,$5A,  0,  0,$78,$A1,$40,$28,$C0,$43,$8A,$14,$87,$EF,$FA,$80,  0,  1,$DE,  0,  0,$53,$1E,$F7,$E3,$DE,  0,  0,  1,$1A,$B4,  0,$68,  4,$22,$15,$9F,$BB,$8E,$80,  0,  0,  0,$52,$3A,$5F,$10,$17,$BE,$D7,$F7,$CB; 11520
		dc.b $8A,$32,$3E,$22,$11,$40,$20,$D2,  1,$D8,$A1,$AA,$B1, $F,$13,$58,$74,$10,$C6, $D,$7B,$48,$CA,$3C,$74,  0,  6,$92,  0,$13,$BC,  7,$AF,$1B,$68,$53,$2C,$45,$F2,$28,$50,$A5,$34,$B4,$7B,$FF,$5A,  0,  0,  1,  8,$D5,$A0,  1,$E2,$8B,$A0,$10,$8F,$1E,$F0,  0,  0,  0; 11584
		dc.b   0, $B,$1A,$BB,$C3,$C6,$AC,$B8,$E8,$20,$92,$C5,$7B,$84,$18,  5,$AE,$F9,$E6,$E3,$DF,$56,$8F,$90,$D6,$41,$77,$AC,$80,$87,$7A,$E9,$DD,$A5,$E8,$10,$E8,$25,$56,$85,$83,  5,$43,$DE,$FE, $B,$FA,$C0,$79, $A,$64,  0,$D6,$5F,$94,$DE,  2,$C8,$EE,$4D,$E0,$2C,$84,$8E; 11648
		dc.b $C0,  1,$4C,$80,$17,$F4,$1A,$F4,  0,  1, $C,$80,$14,$C8,  0,$38,$FF,$30, $B,$E4,$C6,$C3,$10,$15,$21,$FB,$CF, $D,$2C,$1F,$90,$14,$C8,  8,$46,$AE,$FA,$32,$42,$32,$65,$D2,$F6,$D5,$1D,$1D,$1D,$2F,$6B,$FB,$E3,$A7,$EF,$7B,$E4,  0,  0,  3,$DD,$56,$96,$AB,$54, $B; 11712
		dc.b $5B,$20,$29,$DD,$88,$83, $E,$7D,$DA,$75,$47,$59,$1D,$B2, $F,$B4,$85,$24,$35,$E3,$6D,$1D,$18, $A,$22,$A7,$78,$D0,$B2, $A,$69,$D5,$57,$EB,  0,$79,  0,  5,$23,$56,$80,$3C,$50,$B6,$97,$CA,$F4,$BE,$35,$2C,$AF,$AC,$A2,$A7,$86,$95,$4D,$71,$98,$EE,$5E,$97,$C9,$67; 11776
		dc.b $33,$ED,$2A,$48,  0,$21,$DD,$AA,$54, $C,$74,$76,$7A,$A1,$67,$94,$10,$E8,$AC,$E8,$A8,$B3,$69,$6A,$B4,$B6,$96,$9C,  0,  0,  0, $B,$FB,$9E,$AD,$24,$9A,$B5,$8C,$6A,$62,$8B,$6A,$75,$78,$77,$DB,$45,$49,$EF,$94,$E0,$52,$40,  0,$29,$DE,$35,$48,$47,$42,$87,$BE,$F9; 11840
		dc.b $31,$D2,$19,$F1,$D3,$3D,$23,$7A,$64,$67,$10,$9C,  0,$21,$EB,$FB,$7D,$5B,$FC,$5B,$A9,$B0,$A6,$CB,$FC,$2F,$D3,$3B, $A,$6C,$29,$B3,$A6,$5F,$B6,$E9,$39,$68,$4A,$F4,$94,$18,$A6,$BC,$B2,$FC,$A0,$F4,  3,$59,$7F,$5B,$69,$DF,$2B,$E5,$49,$51,$28,$9A,$FF,$D4,  1,$BF; 11904
		dc.b $CF,$78,$C8,  5,$F3,$1F,$D2,  0,  0,$BD,$60, $D,$BF,$CB,$96,$B9,$6B,$93,$FE,$89,$7F,$44,$F9,$6B,$96,$B9,$6B,$20,  7,$58,  3,$AC,  1,$D6,  0,$96,$B9,$6B,$FE,$21,$FC,$2D,$72,$D7,$F4,$43,$25,$C8,  0,$BD,$60,  1,$AC,$F4,$9E,$93,$AF,$9E,$DF,$A2,$84,$F4,$9E,$93; 11968
		dc.b $D2,$5B,$6F,$E5,$BF,$59,$E9,$B4,$AF,$9D,$7C,$E7,$A4,$F4,$DB,$F8,$46,$7A,$4E,  0,$D7,$AC,  1,$FF,$70,  7,$58,  0,$6B,$3F,$F4,$A7,$A4,$F4,$DB,$F4,$50,$9D,$F2,$9E,$93,$EB,$3F,$2D,$FC,$B5,$9E,$93,$D2,$75,$F3,$DB,$F4,$50,$9E,$93,$D2,$7A,$4E,  0,$D7,$AC,  1,$E5; 12032
		dc.b $EA,$27,$13,$8F,$EB,$2B,  6,  2,$70,$27,  2,$7D,$C3,$56,  7,$F4,$7E,$A0,$B0,$1F,$D6,$59,$C0,$13,$80,  3,$7E,$98,  1,$7C,$E0,  1,$F9,$60,$28,$C0,  0,$37,  0,$3D,$7F,$47,$BA,$71,$38,$9C,$4E,$DF,$A6,$BE,$71,$38,$9C,  0,  0,  3,$C7,$D4,  1,$E8,  0,$9C,$4E,$27; 12096
		dc.b $13,$8F,$DB,$3C,$E2,$71,$3A,$FB,$7E,$91,  1,$40,$3F,$AA,$BD,  0,$1D,  0,  1,$3F,$4A,  0,$F2,$6F,$D3,$80,$3A,$C0,  0, $F,$DB,$F9,$FA,$F9,$80,$25,$FA,$4F,$33,$B8,$6E,$1B,$9F,$CC,$FE,$9A,$50,$96,$E8,$4A,$12,$DD,  9,$42,$5B,$A1,$28,$49,$E4,$24,$B2,$BE,$46,$47; 12160
		dc.b $F8,$50,$90,$93,$CA,$12,$84,$A1,$BB,$F4,$80, $F,$40,  6,$ED,$65,$BB,$59,$6E,$D6,$5B,$9F,$F4,$4B,$FA,$69,$3E,$E8,$49,$F7,$42,$4F,$BB,$DB,$F4,$7C,$80,$14,$DE,  5,$10,  0,  4,$E0, $D,$7A,  0,  0,  0,  0,  0,$1A,$A6,$A8,  0,  0,  0,  6,$A9,$7E,$32,$82,$33,$D7; 12224
		dc.b $7A,$6B,$E5,$E2,  0,  3,$56,$A3,$5F,$8D,$E9,$7D,$77,$A6,$BD,$60, $F,$1F,$69,$51,$A8,$D7,$A3,$5E,$DF,$C2,$2D,$46,  0,  1,$AF,$58,  3,$CB,$C4,  0,  0,  3,$56,$A3,$51,$A8,$9F,$A2,$83,$51,$A8,$DA,$FE,$8F,$DA,$54,$6A,$35,$1B,$5F,$38,$35,$1A,$8D,$46,  0,$6B,$D6; 12288
		dc.b   0,$F2,$F3,$3F,$A3,$76,$1A,$F5,$80,  0,$FD,$10,$97,$A7,$ED,$80,$1F,$B4,  0,$3F,$58,  0,  1,$BB,$5D,$D0,$FD,$A0,  1,$FF,$68,  0,$EB,  0,  0,  7,$5F,$ED,$BF,$44,$24,$3F,$68,  0,$7E,$B0,  0,  0,$75,$8F,$3F,$DB,  6,$9B,$9F,$55,$77,$27,$EB,$CF,$7A,$54,$B5,$5F; 12352
		dc.b $8F,$7A,$2B,$1C,$98,$A2,$B1,$43,$18,$31,$43,$15,$63,$93,$14,$5C,$7B,$D2,$18, $C,$29,$81,$FD,$24,$F0,$C0,$74,$1F,$94,$9D,$2A,$5A,$9D,$3B,$B7,$76,$CD,$2C,$B9,$9C,$D3,$43,$65,$FD,$41,$EA,$3C,$16,$C7,$BA,$77,$42,$C6,$78,$21,$63,$3A,$D8,$F7,$4E,$FD,$47,$86,$BB; 12416
		dc.b $53,$68,$7E,$A7,$A1,$DA,$9B,$53,$A3,$FE,$A6,$FD,$3A,$97,$F7,  7,$DA,$EB,$4F,$74,$7F,$5E,$7B,$D2,$15,$51,$BD,$97,$13,$54,$5F,$24,$BE,$B6,$8B,$E3,$6A,$D7,$F4,$68,  7,$E5,$27,$7E,$94,$C0,$FE,$52,$77,$E9,$4C,$1D,$2A,$5A,$9D,$3B,$B7,$76,$CD,$2C,$B9,$9C,$D3,$43; 12480
		dc.b $65,$FD,$47,$54,$F9,$BE,$71,$DD,$FA,$8B,$ED,$3C,$33,$DD,$1B,$ED,$3E,$7B,$EF,$9F,$F5,  1,$7B, $B,$AF,$EC,$7A,$52,$E1,$D1,$F4,$EA,$5F,$DC,$7E,$E5,$2E,$4F,$4D,$DD,$DF,$C1,$39,$A7,$1B,$EE,$AF,$F5,$F0,$ED,$ED,$7F,$EA,$40,  0,  0,  0,$FE,$36,$D9,$9F,$E0,$9A,$B5; 12544
		dc.b $A8,$FF,$7C,$21,$FE,$8A,$FF,$A4,$FF,$1B,$6C,$CE,$EE,$EA,$CD,$4B,$9A,$54,$B5,$42,$E4,$8D,$48,$FD,$93,$5E,$C0,$1F,$F8,$80,  5,$F1,$A8,$51,$1B,$41, $A,$B4,$54,$BD,$9F,$4A,$54,$59,$50,$E8,$A9,$7B,$41,$15,$20,$90,$B7,$7F,$F3,$40,  0,  0,  0,$D1,$6A,$D0,$41,$2C; 12608
		dc.b $59,$34,$B4,$34,$5A,$ED,  4,$54,$3D,$5A,$7F,$34,  0,  0,  0,  0,$17,$BF,$54,$B2,$D4,$74,$48,$68,$C7,$4F,$D6,$9E,$F0,  0,  0,  0,$2F,$AB,$41,$46,$4B,$69,$65,$D1,$6B,$3D,$45, $A,$7E,$F7,$4F,$D6,$80,  0,  0,  0,$1F,$78,$5F,$CA,$6F,$E4,$17,$7F,$E5,$31,$AC,  0; 12672
		dc.b $1F,$C7,$C9,$FC,$C7,$ED,$80,$1E,$80, $F,$5F,$11,$4C,$60,$98,$AF,$E8,$FF,$84,  0,$DC,$3F,$4D,$90,$C8,$7A,  0,$26,$BB,$36,$FD,$2E,$89,$36, $E,$99,$9E,$1D,$8E,$66,$6C,$7B,$42,$6E,$67,$3B,$A6,$CE,$E9,$8C,$D9,$26,$77,$4D,$76,$5C,$EE,$9B, $B,$B8,$1E,$D3,$61,$49; 12736
		dc.b $9E,$65,$9B,$B7,  9,$AE,$33,$65,$C2,$E9,$AE,$4E,$6B,$74,$D7,$60,$BE,$1C,$E1,$9E,$3C,$F3,$C2,$6C,$FB,$1C,$D3,  9,$97,  9,$92,$E3,$C2,$EC,$26,$BB,$9E,$57,$4D,$76,$69,$94,$C6,$6B,$B3,$9A,$EC,$CF,$39,$A1,$DB,$19,$8E,$67,$B7,  3,$9A,$67,$81,$C2,$6B,$B3,$C7, $B; 12800
		dc.b $9A,$57,$19,$60,$6E,$E0,$78,$1E,$1D,$8E,$66,$6C,$7B,$42,$6E,$67,$3B,$A6,$CE,$E9,$8C,$D9,$26,$77,$4D,$76,$5C,$EE,$9B, $B,$B8,$1B,$AD,$84,$DF,$B4,$B5,$F3,$A4,$FB,$3C,$FD,$17,$F2,$8A,$94,$9D,$1D,$16,$78,$6E,$DA,$75,$AE,$F4,$E1,$FA,$3A,$CE,$68,$66,$79,$96,$6E; 12864
		dc.b $DC,$26,$B8,$CD,$97, $B,$A6,$B9,$39,$AD,$D3,$5D,$82,$F8,$73,$86,$78,$F3,$CF,  9,$B3,$EC,$73,$BA,$6B,$9A,$B9,$EC,$B2,$86,$E7,$94,$FA,$EF,$DC,$2F,$E8,$7C,$B0,$45,$E5,$DA,$69,$D2,$75,$69,$1E,$FB,$B1,$96,  6,$EE,  7,$81,$E1,$D8,$E6,$66,$C7,$B4,$26,$E6,$73,$BA; 12928
		dc.b $6C,$EE,$98,$CD,$92,$67,$74,$D7,$65,$CE,$E9,$B0,$BB,$81,$BB,$3C,$26,$F2,$CC,  0,  0,  0,  0,$37,$FE,$53,$20,$17,$7D,$7F,$96,$C8,  0,$16,$B0,  5,$61,$EB,  0,  1,$4D,$F5,$E4,  2,$E4,  0,$14,$E5,$5E,$40,  0,$BC,$80,$A6,$5B,$F2,  0,  0,  7,$E5,$37,$80,  0,$7A; 12992
		dc.b $D7,$78,$5F,$EA,$80,  0,  0,  0,  2,$FA,$80,$FF,$B7,$F2,$7F,$D2,$89,$C7,$A0,  0,  0,$3D,  0,$1E,$3E,$A3,$78,$DE,$D0,$FE,$37,$E9,$40,  0,  1,$E8,  0,$F5,$F1,  0, $F,$51,$E2,  0,  3,$D0,  1,$E7,$FB,$40,  0,  0,  5,$FC,$A6,$F0,$32,$7D,$E1,$72,$AC, $F,$31,$90; 13056
		dc.b $15,$E4,$17,$2A,$C3,$E1,$9C,$7A,$7B,$5D,$9A,$4D,  9,$90,$CD,$DB,$84,$D7,$19,$B2,$E1,$74,$D7,$27,$35,$BA,$6B,$B0,$5F, $E,$70,$CF,$1E,$79,$E1,$36,$7D,$8E,$77,$4D,$54,$F8,$A5,$C3,$78,$A7,$28,$48,$3D,$61,$E6,$BA,$AE,$8D,$5E,$69,$36, $E,$99,$9E,$1D,$8E,$66,$6C; 13120
		dc.b $7B,$42,$6E,$67,$3B,$A6,$CE,$E9,$8C,$D9,$26,$77,$4D,$76,$5C,$EE,$9B, $B,$B8,$1B,$B3,$C2,$6F,$2C,$C0,  2,$EC,$F0,$4E,$7E,$19,$DD,$35,$D9,$73,$BA,$6C,$2E,$E0,$6E,$F6,$74,$CD,$26,$84,$C8,$66,$ED,$C2,$6B,$8C,$D9,$70,$BA,$6B,$93,$9A,$DD,$35,$D8,$2F,$87,$38,$67; 13184
		dc.b $8F,$3C,$F0,$9B,$3E,$C7,$3B,$A6,$C3,$CA,$E0,  0,$F2,$E7,$E1, $C,$F1,$E7,$9E,$13,$67,$D8,$E7,$EC,$F5,$CD,$83,$A6,$67,$87,$63,$99,$9B,$1E,$D0,$9B,$99,$CE,$E9,$B3,$BA,$63,$36,$49,$9D,$D3,$5D,$97,$3B,$A6,$C2,$EE,  6,$EC,$F0,$9B,$CB,$30,  0,$AF,$B7, $A,$F3,$3C; 13248
		dc.b $3B,$1E,$17,$4D,$81,$C3,$34,$37,$4D,$81,$C3,$35,$99,$E6,$59,$BB,$70,$9A,$E3,$36,$5C,$2E,$9A,$E4,$E6,$B7,$4D,$76, $B,$E1,$CE,$19,$E3,$CF,$3C,$26,$CF,$B1,$CE,$E9,$B0,$F2,$B8,  0,$2B,$ED,$C2,$BB,$A6,$E1,$DA,$63,$74,$C7, $E, $D,$74,$D8,$19,$2F,$69,$60,$6E,$E0; 13312
		dc.b $78,$1E,$1D,$8E,$66,$6C,$7B,$42,$6E,$67,$3B,$A6,$CE,$E9,$8C,$D9,$26,$77,$4D,$76,$5C,$EE,$9B, $B,$B8,$1B,$AD,$1C,$DB,$F2,$89,$98,$7D,$E0,$2F,$2C,$80,$7C,$B7,$AC,$E3,$59,$EF,$9C,$5F,$FA,$71,$AC,$AF,$E5,$F9,$4C,$80, $B,$38,$9E,$BA,$72,$14,$E5,$FA,$28,$4E,  4; 13376
		dc.b $EB,$20,  3,$F4,$59,$DF,$A0,$5D,$96,$7B,$FF,$28,$35,$49,$EF,$DD,$B2,$FB,$2C,$8A,$1E,$18,$D7,$99,$CD, $C,$CB,$99,$99,$66,$ED,$C2,$6B,$8C,$D9,$70,$BA,$6B,$93,$9A,$DD,$35,$D8,$2F,$87,$38,$67,$8F,$3C,$F0,$9B,$3E,$C7,$3B,$A6,$C2,$BD,$FA,$53,$70,$D7,$75,$3A,  4; 13440
		dc.b $35,$E1,$ED,$CB,$B4,$CA,$8A,$D2,$37,$67,$76,$32,$C0,$DD,$C0,$F0,$3C,$3B,$1C,$CC,$D8,$F6,$84,$DC,$CE,$77,$4D,$9D,$D3,$19,$B2,$4C,$EE,$9A,$EC,$B9,$DD,$36,$17,$70,$37,$4D,$76,$6D,$ED,$98,  3,$AC,  0,  0,$1D,$60,$53,$AC,  0,$BD,$60,  0,  0,$EB,  3,$CF,$F6,$DE; 13504
		dc.b $3E,$A0,  0,  0,  0,  0,  6,$AD,$AB,  0,  0,  0,  1,$AB,$5F,$BF,$74,$1A,$77,$C6,$F6,$D7,$C7,$D4,  0,  6,$B3,$D2,$7B,$F7,$DE,$D7,$E3,$7B,$6B,$E8,  0,$F5,$FD,$1E,$EA,$4F,$49,$EF,$69,$EF,$9F,$F8,$C6,$7A,$4E,  0,  3,$5F,$40,  7,$ED,$FF,$68,  0,$FF,$A8,  3,$5D; 13568
		dc.b $A9,$B4,$AF,$DA,$57,$ED,$25,$FD,$2C,$8F,$E8,$97,$67,$91,$D9,$E4,$76,$79,$2F,$9E,$DB,$E5,$4D,$A9,$B5,$36,$87,$E9,$7F,$84,$BB,$4A,$12,$3B,$4A,$12,$3B,$4A,$12,$59,$42,$54,$95,$25,$49,$5F,$23,$FC,$23,$2B,$E5,$49,$52,$50,$97,$E9,$37,$42,$40, $F,$40,  6,$23,$11; 13632
		dc.b $BC,$6F,  0, $F,$1F,$50,  7,$A0,  0,  0,$37,$FF,$59,$58,$34,$E2,$75,$F5,$C7,$F2,$C0,$7A,$8F,$10,  0,  0,  0,  7,$8F,$A8,  3,$D3,$F4,$A2,$7C,$46,$20,  0,  0,$1E,$BE,$3E,$BE,$20,  0,  0,  0,  0,  7,$8F,$AB, $F,$D1,$FA,$80,  0,  0,  0,  0,  0; 13696
Nem_GHZ2:	dc.b $81,$CD,$80,  3,  1,$14,  4,$25,$12,$34,  7,$46,$31,$56,$26,$66,$35,$73,  0,$81,  4,  5,$15,$11,$28,$F4,$37,$75,$82,  5,$14,$16,$2B,$77,$73,$83,  4,  6,$16,$2E,$38,$F7,$84,  7,$76,$17,$78,$85,  7,$6F,$16,$34,$86,  7,$71,$78,$F6,$87,  6,$36,$17,$6E,$88,  6; 0
		dc.b $33,$17,$70,$89,  6,$2F,$17,$72,$8A,  6,$2A,$18,$F3,$8B,  6,$32,$17,$74,$8C,  6,$30,$18,$F2,$8D,  6,$27,$18,$F5,$8E,  5,$10,$18,$EF,$8F,  5,$16,$18,$EE,$FF,  0,  0,  0,$D6,$D8,$F7,$2B,$DA,$2F,  5,$C6,$1E,$F3,$7A,$C0,$C1,$8C,$F3,$4F,$2B,$41,$A7,$95,$92,$79; 64
		dc.b $59,$21,$2B,$4D,$69,$AD,$35,$B5,$EA,$3D,  0,  0,$6A,$D3,$34,$F3,$4E,$9F,$CE,  0, $D,$7F,$5F,$2A,$58,$C4,$D2,$D3,$C5,$2D,$3C,$5E,$21,$3F,$79,$2C, $F,$EB,$53, $F,$59,$41,$67,$C6,$9A,$CE,  0,  0,$4D,$69,$AC,$7D,$12,$D8,$AD,$A6,$84,$D0,$9A,$18,$C1,$B1,$9C,$CF; 128
		dc.b $8B,$4D, $D,$57,$5B,$77,$80,  0,$FD,$70,$FD,$70,$EF,$18,$2E, $B,$87,$A4,$E6,$73,$38,  1,$1A,$66,$9A,$D3,$58,$E0,$F6,$96,  5,$6D,$8A,$C2,$68,$24,$3F,$7A,$90,$2C,$1A,$50,$76,$33,$CD,$70,  2,$65,$99,$66,$54,$FE,$77,$EB,$C0,$1A,$D3,$5C,  0,$84,$CC,$7F,$5C,$FD; 192
		dc.b $6D,$39,$9E,$57,$19,$D1,$59,$E7,$5A,$49,$52,$83,$15,$D5,$A9,$32,$EB,$43,$84,$CA,$70,$9B,$D5,$5E,$92,$EA,$14,$4C,$C5,$92,$E3,  9,$CD,$DD,$F3,$96,$2A,$EC,$54,$C1,$1A,$4A,$8C,$77,$2C,$25,$B2,$42,$4D,$FA,$40,  6,$B6,$9A,$D3,$5A,$6B,$4D,$69,$A9,$35,$27,$C6,$93; 256
		dc.b $EB,$FA,$D3,$3A,$61,$FA,$D3,$39,$9C,$FF,$47,  0,  0, $C,  1,$63,$1F,$26,$5A,$2A,$7A,$A8,$C6,$27,$F8,$28,$A0, $D,$69,$AE,$1F,$EE,$4B,$77,$FA,$E0,$6C,$63,$72,$D9,$E2,$DA,$A8,  0,  1,$34,$F6,$97,$EB,$61,$39,$F5,$3D,$EA,$57,$F5,$85,$71,$69,$51,$1A,$25,$82,$34; 320
		dc.b $51,$66,$64,$68,$E3,$48,$7E,$BD,$53,$F7,$A6,$74,$9D,$27,$49,$DF,$F7,$94,$F4,$7A, $D,$54,  0,$3F,$FC,$3F,$9B,$E4,$59,$E3,$3A,$DD,$34,$6E,$9A,$37,$4D,$DF,$3C,$BB,$9D,$6D,$8D,$A0,$3F,$5B,$64,$F5,$4A,$E7,$95,$73,$A4,$E6,$89,$69,$51,$27,$D6,$D3,$4F,$1C,$69,$E5; 384
		dc.b $EA,$BA,$E0,$6C,$12,$7F,$D7,$58,$CF,  6,$45,$9E, $C,$7D, $B,$18,$BC,$40,  2,$65,$31,$FD,$F9,$B7,$7B,$C0, $D,$7F,$9B,$E5,$34,$67,$D5,$4A,$FF,$37,  9,$F0,  0,  0,$26,$9C,$4E,$27,$13,$BA,$CA,$79,$61,$EB,$19,$F1,$F2,$9C,$27,$70,$EE,$16,$A6,$B3,$DA,$9A,$CF,$29; 448
		dc.b $CF,$F3,$4C,$E6,$7F,$DE,$77,$5D,$5F,$7A,$79, $C,  6,  0, $F,$DE,$BF,$EF,$40,$C7,$F7,$DA,$B6,$B3,$CD,  9,$9B,$59,$E6,$80,  0,  0,  0,  9,$FB,$E7,$59,$AD,$34,$1D,$51,$64,$A9,  9,$2A,$41,$66,$84,$FA,$D0,$CF,$35,$30,$3E,$B2,$9D,$97, $F,$59,$4E,$8B,$83,$C0,$36; 512
		dc.b $B3,$B6,$B3,$9F,$DF,$7E,$BD,$52,$32,$52,$B8,$C1,$71,$59,$96,$13,$42,$65,$D6,$13,$2C,$D3,$C1,$FD,$68,$31,$C2,$83,$59,$F5,$69,$BB,$E7,$BB,$B4,$3B,$24,$F0,$D8,$B3,$CE,$97,$AA,$4E,$C9,$54,$A7,$82,$33,$CE,$99,$CA,$76,$2B,$54,$A7,$82,$2B,$CE,$A7,$29,$5B,$B2,$55; 576
		dc.b $2B,$54,$8A,$F0,$4C,$B1,$DF,$E8,$F0,$AA,$6E,$FA,$B5,$87,$6C,$3F,$DC,$AC,$26,$86, $D,$8D, $E,  1,$9E,$BD,$F7,$86,$7D,$97,$2B,$FF,$46,$8A,$77,$DF,$8E,$5B,$F1,$5C,$8E,$FB,$E4,$A7,$4C,$72,$DE,$97,$A2,$E4,$77,$BA,$9D,$31,$CB,$7E,$2B,$91,$DE,$EA,$74,$C7,$2D,$F2; 640
		dc.b $FF,$3E,$F4,$DB, $D,$A9,$2D,$CB,$BE,$B7,$9E,$92,$EC,$78,$E1,$C7,$62,$A0,  1,$68,$D4,$A7,$4A,$BB,$65,$56,$4B,$BD,$74,$CA,$AC,$BB,$1E,$D0,$F3,$CA,$AE,$E8,  0,  0,$7F,$F9,$80,  0, $E,$BA,$CE,$BA,$D8,$2E,$AB,$AC,$16,$4A,$6B,$C1,$71,$C2,$7C,$13,  3,$87,$A9,$54; 704
		dc.b $59,$E5,$80,$9C,  0,  0,  6,  2,$7D,$5B,  1,$AA,$E0,$F7,  4,$C3,$15,  9,$80,$18,$22,$EB,$86,$38,  4,$C0,$62,$BA,$E0,$98,  0,$30,  0, $C,  0,$18,  1,$80,  0,$5A,$93,$4E,$6B,$7F,$DF,$60,  6,  0,$60,$7D,  7,$5D,$67,$13,$4E,$26,$5D,$70,$13,$2E,$B8,$4C,$BA,$E1; 768
		dc.b $32,$EB,$84,$CD,  9,$F1,$62,$D8,$CE,$C6,$7C,$67,$2D,$34, $C,$F3,$5D,$34,$E6,$79,$A0,$D2,$ED,$BE,$DB,$EA,$50,  0,$36,$8D,$4A,$74,$AB,$B6,$55,$64,$BB,$D7,$4C,$AA,$CB,$B1,$EC,$8B,$52,$EF,  0,  4,$B4,$6A,$53,$A5,$5D,$B2,$AB,$25,$DE,$BA,$65,$56,$5D,$8F,$63,$E3; 832
		dc.b $7F,$68,$87,$82,$42,$50,$48,$2E,$30,$4B,$1B,  9,$AC,$8C,$11,$71,$67,$56,$75,$16,$39,$A3,  9,$41,$33,$9A,  7,$37,$FD,$B6,$52,$D9,$F2, $F,$B4,$CC,$76, $C,$18,$27,$EC,$B7,$EC,$F7,$3E,$F5,$FC,$B6,$DB,$D3,$88,$FC,$B6,$DA,$26,$FF,$CB,$7E,$96,$5B,$D9,$7C,  7,$83; 896
		dc.b $D8,$C2,$50,$9A,$C6,  6,  9,  2,$A1,$40, $A,$C0,$B1,$50,$55,$1A,$4A,  5,$9E,$D2,$B3,$DB,$1C,$25,$43,$81,$A7,$6A,$4E,$68,$70,$4E,$38,$F1,$C6,$8F,$C6,$54,  1,$FF,$6F,$FB,$41,$FF,$51,$FF,$5F,$FA,$F5,$FD,$A0,$12,$80,$48,$18,$18,$24,$15,$2C,$90,$4B,  5,  8,$C1; 960
		dc.b $17,$16,$75,$67,$50,$A0,$6B,$64,$C0,$DA,$56,$4C,$12,$D5,$C2,$89,$63,$C5,$38,$9A,$4B,$8A,$51,$28,$9C,$65,$40,  1,$FD,$A7,$ED,$C7,$FD,$47,$FD,$7F,$EB,$FB,$4E,$A0,$18,$24,$1D,$61,$8C,$1E,  8,$A9,  4,$86,$AB,  7,$60,$8A,$55,$9D,$44,$99,$14,$AC,$B0,$48,$63,$3E; 1024
		dc.b $38,$3D,$8E,$12,$80,$34,$9D,$37,$D0,  4,$D8, $D,$80,$9B,$FA,$A1,$3F,$AA,$13,$FA,$A9,$FC,$5E,$C9,$E2,$3D,$80,  0, $D,$60,$F0,$D5,$60,$90,$30,$B2,$41,$2C,  0,$57,$67,$50,$59,$D5,$D9,$44,$99,$D4,  1,$39,$80,$95,$92,$73,  1,$E4,$6C,  0,$E6,  0,$EB,$EE,  0,$94; 1088
		dc.b $1E,$12,$81,$B2,$5A,$65,$30,$48,$18,  1,$AA,$81,$8B,$2A,$29,$60,$EB,$26,$45,$46,  0,  3,  9,$59,$30,$C6,$D8,$CE,$98,$24,$27,  0,$1E,$60, $E,$60, $F,$E9,$1A,$27,$17,$A7,$10,$9C,$4D,$25,$C5,$28,  0,$97,$B0,  1,$FF,$68,  0,$E6,$FC,$65,$44,$A1,$E3,$2A,$63,$C5; 1152
		dc.b $29,$2E,$20,  3,$EC,  0,$FD,$AF,$B8,  0,  0,$1E,  6,$C9, $D,$56,  9,  3, $B,$24,  0,$92,$80,$1D,$9D,$41,$67,$57,$65,$12,$67,$51,$DF,$FB,$DE,$F0,  0,$12,$83,$C2,$50,$36,$30,$B7,$79,$81,$85,$92,  0,  9,$2B,$B3,$A8,$2D,$8A,$9F,$D1,$AA,$29,$60,$EB,$26,$45,$46; 1216
		dc.b   0,$63,$DF,$FB,$DE,$F0,  3,$C1,$EC,$61,$28,$4D,$63,  3,  4,$81,$8C,$CA,  6,$AA,$EC,$EA, $B,$3A,$BB,$28,$93,$3A,$80,$27,$30,$12,$B2,$4E,$60,$FE,$FE,$AB,  0,  0,$94,  2,$40,$C0,$C1,$20,$A5,$6C,$90,$48, $D,$54, $C,$59,$51,$4B,  7,$59,$32,$2A,$30,  0,$18,$4A; 1280
		dc.b $C9,$86,$36,$C6,$78,$CE,$AD,$3C,$18,  0,  0, $F,  3,$64,$86,$AB,  4,$81,$85,$92,  0,$49,$40,$EE,$FD,$F7,$70,  0,  9,$41,$E1,$28,$1B,$18,$5B,$BC,$C0,$C2,$C9,  0,  4,$95,$D9,$D4,$16,$7B,$77,$FA,$C3,$B8,  0,$F0,$36,$48,$6A,$B0,$48,$18,$59,$20,  4,$94, $C,$59; 1344
		dc.b $51,$4B,  7,$59,$32,$2F,$EB,$BF,$5B,$DE,$1E,  6,$C9, $D,$56,  9,  3, $B,$24,  0,$92,$87,$67,$50,$59,$D5,$D9,$44,$99,$D4,  1,$39,$80,$C6,$96,$A6,  9,$3C,$D0,$9A,  9,$38,  0, $E,$60, $F,$5E,$FA,$61,$FA,$F4,$C3,$1B,$63,$3A,$60,$90,$4F,$E9,$5A,$80,  0,  0,$E6; 1408
		dc.b $FC,$65,$44,$A1,$E3,$2A,$63,$C5,$28,$7C,$53,$B0,  3,$98,  0,  0,$3F,$A4,$68,$9C,$5E,$9C,$42,$71,$34,$4E,$D4,$F1,$40,  4,$B9,$80,  0,  3,$9B,$F1,$95,$12,$87,$8C,$A9,$8F,$1F,$2B,$4F,$D3, $A,$9D,$9D,$41,$67,$57,$65,$12,$67,$50,  0,$B1,$C3,$1A,$1A,$4D,$39,$82; 1472
		dc.b $5A,$6C,$26,$C1,$2D,$87,$AC,$30,$B7,$7A,$BB,$28,$93,$3A,$80,$27,$30,$13,$4E,$60,$96,$9B,  9,$B0,$4B,$73,  0,$43,$BB,  9,$E1,$3E, $B,$26,$45,$46,  0,  3,  9,$59,$30,$C6,$D8,$CE,$98,$24,  4,$E0,$F3,  0,$7A,$F7,$F9,$77,  1,$63,$86,$34,$34,$9A,$73,  4,$B4,$D8; 1536
		dc.b $4D,$82,$58,  0,$39,$80,$3A,$FB,$80,$1E,  6,$C9, $D,$56,  9,  3, $B,$24,  0,$92,$81,$8B,$2A,$29,$60,$EB,$26,$45,$D5,$42,$33,$A8,  2,$73,  1,$8B,$41,$BF,$5B,$DE,$1E,  6,$C9, $D,$56,  9,  3, $B,$24,  0,$92,$87,$67,$50,$59,$D5,$D9,$44,$99,$D4,  0,  3,$C2,$56; 1600
		dc.b $4C,$31,$B6,$33,$A6,  9,  4,$EB,$74,$18,  0,  6,$30,$9A,  7,$BD,$3B,$D1,$42,$58,$23,$22,$D8,$28,$2C,$59,$41,$50,$59,$D4,$58,$1B,$E6,$B0,$37,$A5,$A6,$BD,$23,$E2,$7E,$CB,  0,  4,$A0,$F0,$94, $D,$92,$D3,$29,$82,$40,$C0, $D,$54, $C,$59,$51,$4B,  7,$59,$32,$2A; 1664
		dc.b $30,  0,$1B,$E5,$64,$C3,$1B,$63,$55,$70,$A6,$FC,$2D,$BF,$89,$E2,$26,$E2,$78,$A5, $F,$ED,$A9,$DB,$8D,$1F,$8A,$71,  0,  0,$3D,$80,$1E,$C0, $F,$60,  0,  0,$7B,  0,$3D,$80,$1E,$C0,  0,  0,$F6,  0,$7B,  0,$3D,$80,  0,  1,$EC,  0,$7F,$DA,  0,$39,$80,  5, $D,  4; 1728
		dc.b $D4,$34,$4E,$27,$F6,$D4,$3C,$68,$F4,$4A,  1,$FB,$40,  3,$F3,  0, $E,$27,$88,$9B,$89,$E2,$94,$3F,$B6,$A7,$6E,$34,$7E,$29,$C4,  7,$FD,$A0,  3,$9B,$F1,$95,$12,$87,$8C,$A9,$8F,$14,$A4,$B8,$80, $F,$B0,  3,$F6,$80,  7,$FE,$91,$A2,$71,$7A,$71,  9,$C4,$D2,$5C,$52; 1792
		dc.b $80,  9,$7B,  0,$1F,$87,$6C,$B1,$C2,$6C,$12,$C3,$98,  0,  0,$3F,$A4,$68,$9C,$5E,$9C,$42,$71,$34,$4E,$D4,$F1,$40,  4,$B9,$80,  7,$13,$C4,$4D,$C4,$F1,$4A,$1F,$DB,$53,$B7,$1A,$3F,$14,$E2,  5,$7B,$A3,$E0,  1,$FF,$50,  0,  2,$9A,$D3,$7F,$EC,$B4,$4D,$F3,$6F,$7D; 1856
		dc.b $EF,$BC,$EF,$4D,$3F,$4F,$43,$BC,  1,$FF,$50,  0,  0,$7E,$D7,$F6,$4F,$BE,$5B,$D3,$7E,$3B,$F1,$DF,$1E,$CB,$BD,$37,$80,$3D,$80,  0,  1,$EC,  0,$F6,  0,$7B,  0,  0,  3,$D8,  1,$EC,  0,$F6,  0,  0,  7,$B0,  3,$D8,  1,$EC,  0,  0, $F,$60,  3,$FE,$D0,  1,$CC,  1; 1920
		dc.b $AD,$26,$E7,$40,$FF,$C2,$4A,$DF,$F4,$43,$5A,$D2,$9A,$D7,$8D,$78,$D6,$9F,$A2,$4F,$D1,$25,$78,$D7,$8D,$73,$50,  1,$AF,$30,  7,$30,  7,$30,  0,$1C,$C0,$1C,$C0,  0,$73,  0,  1,$CC,  1,$CC,  0,  7,$30,  0,$1C,$C0,$1C,$C0,  0,$73,  0,  1,$CC,  1,$CC,$6E,$D3,$76; 1984
		dc.b $80, $E,$7A,$B4,$CD,$36,$D3,$6D,$2E,$27,$76,$3F,$E6,$4D,$E3,$78,$DE,$37,$FE,$5A,$6D,$E7,$F6,$9F,$96,$DF,$33,$15,$96,$CD,$8E,$D2,$53,$45,$FD,$B6,$8C,$F4,$13,$50,$4C,$AF,$FA,$6F,$E2,$A5,  4,$D4,$9B,$8F,$F9,$57,$5D,$37,$56,  0,$4E,$60,  0,$C1,$BF,$A4,$8C,$18; 2048
		dc.b $30,$6A,$E6,$63,$D7,$F4,$60,  3,$CC,  0,  7,$30,  7,$31,$EF,$D4,  0,  6,$30,$9A,  7,$BD,$3B,$D1,$42,$58,$23,$22,$D8,$28,$2C,$59,$41,$50,$59,$D4,$58,$18,$4D,$60,$60,$96,$9A,  9,$1B,$A7,$65,$80,  2,$50,$78,$4A,  6,$C9,$69,$94,$C1,$20,$60,  6,$AA,  6,$2C,$A8; 2112
		dc.b $A5,$83,$AC,$99,$15,$18,  0, $C,$25,$64,$C3,$1B,$63,$3A,$42,$86,$16,$A0,  3,$98,  0,  0,$39,$80,$12,$B4,$AC,  1,$CC,  0,  0,$1C,$C0,$1E,$96,$F7,$78,$1B,$25,$84,$12,  6,  2,$C2,$65,$11,$3F,$A3,$59,$33,$A8,$B0,$30,$9A,$C0,$C1,$2D,$34,$26,$82,$58,  1,$CC,  0; 2176
		dc.b   0,$1C,$C0,$11,$BA,$76,$89,$86,$AB,  4,$81,$85,$92,  9,$60,  2,$BB,$4A,$25,$8B,$45,$18,  0, $C,$25,$64,$C3,$1B,$63,$3A,$60,$90,$9C,  0,$79,$80,  0,  3,$98,  3,$D2,$DE,$F0,$94, $D,$92,$D3,$29,$82,$40,$C0, $D,$54,$15,$46,$99,$9D,$5D,$94,$49,$9D,$40,$13,$98; 2240
		dc.b   9,$A7,$30,$4B,$4D,$82,$7E,$CA,$15,$CE,  0,  0, $F,$E9,$1A,$27,$17,$A7,$10,$9C,$4D,$13,$7B,$69,$6F,$D1,$98,$6A,$B0,$48,$18,$59,$20,$96,  0,$2B,$B6,$B7,$2A,$29,$60,$EB,$26,$45,$46,  0,  3,  9,$59,$30,$C6,$D8,$CE,$98,$24,$13,$FA,$56,$A0,  0,  0,$39,$BF,$19; 2304
		dc.b $51,$28,$78,$CA,$98,$F1,$FD,$11,$FC,$B5,$3B,  0,$39,$80,  0,  3,$98,  0,  0,$39,$80,  0,  3,$98,  1,$2B,$4A,$C0,$1C,$C0,  0,  1,$CC,  0,  0,$1C,$C0,  0,  1,$CC,  1,$FB,$40,  3,$FB,  0,  0,  3,$D8,  0,  0,$1E,$C0,  0,  0,$F6,  0,$7B,  0,$3D,$80,  0,  1,$EC; 2368
		dc.b   0,  0, $F,$60,  0,  0,$7B,  0,$1B,$7F,$4F,$5B,$80,  7,$FD,$C0, $E,$30,$4E,$F2,$A0, $F,$F7,$28,  3,$AF,$EB,$B3,  0,$7F,$84,  0,$73,$3D,$FD,$CB,$98,  0,$FF,$B8,  3, $E,$BD,$F9,$98,$F7,$40,  0,$7F,$DC,$A0,$7E,$FB,$D0,$5E,  0,$FF,  8,$18,$FA,$1F,$5F,$DF,$CF; 2432
		dc.b $D8,  1,$CC,  1,$5A,$56,  0,$4E,$60, $F,$7F,$DB,$80,$3D,$80,$1B,$B4,$BA,$20, $E,$60, $D,$DA,$6E,$D0,$7F,$D4,$73,  0,$73,  0,$73,  0,$7F,$D4,$7F,$D4,$73,  0,$75,$FD,$A8,  3,$D8, $F,$D9,$7E,$D8, $F,$FA,$8E,$60, $F,$DB,$FE,$D4,  0,  0,  0,  0,  6,$59,$E5,$7D; 2496
		dc.b $57,$E7,$92,$B4,$59,$58,$B2,$95,$A1,$56,$52,$D1,$FE,$1A,$96,$FE, $D,$CB,$EE,$55,$22,$97,$2F,$E8,$FA,$B7,$A3,$23,$29,$B8,$C6,$B9,$37,$A1,$68,$DC,$6E,$52,$D1,$68,$DC,$AC,$55,$8A,$A2,$DC,$6E,$5B,$8F,$56,$F4,$63,$72,$9B,$8D,$16,$88,$D1,$B9,$6E,$37,$45,$A2,$D1; 2560
		dc.b $B8,$DC,$6E,$53,$E8,$8A,$57,$F4,$71,$FD,$1F,$A5,$CB,$2B,$8A,$D6,$D4,$5A,$7E,$8D,$2E,$56,$31,$68,$B4,$6E,$5B,$8D,$D1,$6F,$E0,$B1,$5F,$E1,$AD,$DD,$4B,$15,$FD,$19,$62,$C9,$E8,$C8,$C6,$EF,$46,$EA,$59,$3F,$86,$5A,$5D,$4F,$A7,$E8,$CA,$DC,$54,$C4,$D2,$2C,$B7,$52; 2624
		dc.b $2C,$AC,$8C,$55,$8D,$15,$95,$15,$94,$AB,$23,$2B,$22,$DC,$A9,$FA,$35,$2C,$54,$D1,$4C,$6E,$8B,$2B,$46,$EA,$70,$A2,$DF,$91,$CA,$AC,$96,$F4,$CC,$D5,$5F,  3,$95,$57,$AD,$FC, $E,$55,$5F,$C3,$A6,$39,$C7,$92,$7E,$EB,$96,$57,$D2,$AE,$59,$9A,$5C,$79,$67,$CA,$AC,$8F; 2688
		dc.b $4A,$AF,$C8,$F0,$AE,$A3,$91,$E1,$7A,$DF,$52,$74,$E1,$7D,$5C,$A3,$9C,$B9,$7E,$EA,$59,$F2,$AA,$97,$E4,$B7,$F0,$5B,$F3,$AA,$6B,$9F,$F4,$78,$B1,$67,$B8,$AC,$98,$C4,$A9,$FD,$1C,$64,$C8,$C6,$38,$FF,$CE,$E4,$FE,$8B,$2C,$BF,$4F,$13,$B8,$A9,$D9,$52,$26,$3B,$95,$8A; 2752
		dc.b $95,$D8,$AB,$29,$53,$4D,$3B,$7E,$D4,  0,$26,$69,$7B,$AB,$16,$53,$12,$A5,$A8,$DF,$B2,  2,$4D,$26,$76,$2C,$AD,$25,$65,$2B,$72,$95,$DC,$55,$37,$18,$95,$3C,$76,$3C,$53,$62,$BB,$1D,$95,$37,$3E,$C9,$D7,$63,$17,$8C,$98,$27,$F0,$CD,$D4,$D2,$BF,$D1,$A6,$C5,$65,$B8; 2816
		dc.b $AC,$9B,$65,$76,$2A,$54,$B1,$67,$67,$FD,$18,$4B,$8F,$F9,$FB,$27,$F0,$CD,$C7,$A9,$F4,$FD,$BA,$A6,$C6,$27,$63,$B1,$54,$8E,$C5,$4F,$E8,$CC,$66,$ED,$B7,$8F,$D3,$F6,$62,$D3,$5D,$35,$D8,$F1,$8D,$CF,$B1,$52,$C9,$1D,$CA,$6E,$2A,$9B,$45,$23,$5E,$9B,$1B,$9D,$83,  0; 2880
		dc.b   6,$BE,$FF,$A2,$DF,$FA,$32,$B3,$31,$53,$B4,$CB,$8B,$22,$8C,$58,$27,$6D,$BF,$A8,$AD,$12,$D2,$8A,$31,$6D,$8A,$98,$B2,$7E,$DC,$AA,$2E,$31,$4D,$A5,$B1,$54,$FD,$39,$ED,$A5,$7F,$A5,  0,$30,$69,$94,$FF,$4F,$6F,$44,$BB,$7F,$E8,$8A,$D6,$ED,$19,$AE,$5C,$7F,$47,$32; 2944
		dc.b $B2,$31,$62,$B2,$FE,$9C,$99,$F7,$FE,$8B,$F4,$BD,$B6,$96,$E3,$19,$2E,$AB,$28,$D2,$27,$62,$B7,$16,$54,$B9,$4D,$CB,$B1,$65,$FD,$1A,$CB,$F4,$6E,$C9,$1D,$C5,$8B,$29,$D9,$D9,$4E,$E4,$65,$FD,$3A,$96,$53,$BA,$2C,$7A,$95,$63,$FC,$33,$FB,$4D,$DD,$B6,$56,$8B,$1B,$94; 3008
		dc.b $C5,$B1,$F7,$48,$DC,$7F,$47,$B1,$52,$AC,$59,$76,$3D,$59,$4E,$E5,$DC,$BF,$B5,$A7,$1D,$94,$B1,$B8,$7A,$1B,$91,$52,$E4,$F4,$2C,$8A,$7F,$4E,$D1,$3B,$75,$D8,$EC,$B2,$D8,$F1,$F4,$FC,$B7,$F4,$77,$34,$A2,$54,$B7,$A1,$56,$4F,$D1,$AE,$AC,$18,$1A,$6F,$FD,$13,$4B,$F6; 3072
		dc.b $EB,$71,$5D,$C7,$65,$2A,$63,$B9,$7F,$87,$19,$BD,$F5,$61,$BF,$FC,$9B,$7A,$24,$4F,$E9,$E2,$76,$45,$3B,$1D,$A2,$FB,$44,$A9,$EB,$B7,$E8,$DF,$69,$5C,$63,$DB,$7F,$6D,$38,$EE,$2A,$63,$4E,$B2,$68,$EC,$56,$6D,$D1,$45,$31,$D8,$C4,$A9,$65,$FD,$BC,$9B,$AE,$ED,$FD,$BF; 3136
		dc.b $4C,$B2,$5D,$8E,$CA,$55,$3F,$4E,$A9,$B1,$D9,$76,$2A,$77,$29,$8E,$E4,$89,$62,$BB,$18,$A2,$98,$DD,$25,$4B,$8D,$CA,$58,$DC,$59,$51,$8D,$CB,$B2,$B2,$32,$6C,$8D,$2F,$42,$D2,$F7,  0,$FE,$8D,$2E,$48,$96,$8B,$2E,$CF,$B2,$EC,$BB,$4B,$71,$5D,$9B,$D3,$F4,$EA,$54,$B7; 3200
		dc.b $A1,$62,$C7,$F8,$7A,$C7,$F4,$65,$8E,$E8,$A3,$26,$C5,$5F,$68,$DC,$58,$AD,$C9,$71,$64,$B9,$5B,$16,$57,$B7,$95,$B0,$B4,$D1,$EF,$F7,$11,$AD,$2E,$4B,$92,$37, $B,$93,$F6,$4F,$DD,$DE,$FE,$A9,$72,$56,$FE,$FE,$41,$3D,$E2,$13,$DE,$3F,$BF,$FD,$E0,  0,$3F,$7F,$70,$4E; 3264
		dc.b $FE,$A9,$DF,$DD,$DE,  0,$1D,$FE,$53,$5D,$E4,$91,$4B,$93,$B9,$23,$E5,$DD,$35,$C9,$14,$FE,$9D,$6F,$72,$7B,$C4,$24,$5E,$35,$F5,$AD,$22,$F1,$4B,$A2,$91,$4B,$87,$5F,$70,$97,$57,$77,$77,$94,$5F,$BA,$68,$FB,$F7,$5D,$FB,$21,$75,$7D,$66,$EA,$95,$A5,$77,$7E,$F9,$FB; 3328
		dc.b $93,$DD,$EB,$4B,$BB,$A2,$3F,$A6,$1E,$E8,$D7,$75,$77,$4D,$D6,$E8,$A7,$5B,$92,$7C,$6E,$3F,$AD,$8A,$51,$29,$EA,$21,$84,$FD,$D3,$F9,$5A,$79,$A2,$97,$24,$7D,$E4,$AF,$14,$8D,$C8,$B2,$89,$52,$B3,$DA,$79,$61,$39,$A1,$9E,$8D,$E5,$35,$C9,$E4,$91,$F2,$BB,$A8,$B9,$23; 3392
		dc.b $74,$42,$7B,$FE,$CB,$CB,$B8,$5D,$1F,$24,$B9,$23,$DC,$2B,$BA,$21,$23,$EF,$37,$51,$EE,$91,$7A,$C2,$5C,$9E,$E3,$DD,$3D,$EB,$13,$56,$9E,$E0,$25,$C1,$FA,$A7,$5A,$C2,$4F,$68,$FB,$A7,$76,$10,$AC,$E1,$3E,$CF,  5,$96,$DD,$C8,$D5,$1D,$FB,$15,$67,$DF,$43,$71,$F2,$F5; 3456
		dc.b $17,$24,$52,$35,$A5,$A7,$D6,$9F,$BD,$B4,$EF,$59,$84,$F2,$A6,$D3,$AB,$1F,$2B,$55,$71,$80,$8D,$7F,$C1,$94,$6D,$38,$53,$EB,$DE,$F4,$3B,$93,$3B,$50,$ED,$BD,$33,$B7,$AD,$A7,$86,  1,$27,$EE,$9D,$33,$B3,$F9,$4B,$67,$D8,$C2,$A9,$CF,$E8,$B0,$52,$D0,$33,$CA,$78,$2C; 3520
		dc.b $27,$A4,$2C,$69,$6C,$1E,$92,$A0,$A4,$BB,$BB,$C2,$77,$5D,$19,$A3,$EA,$95,$A4,$FF,$AF,$C2,$18,$77,$E1,$DD,$4D,$7C,$A8,$62,$FD,$C1,$3F,$A6,$1E,$E8,$FB,$FE,$C8,$5D,$14,$8B,$F5,$48,$BD,$C9,$70,$4F,$E9,$D7,$1A,$D2,$23,$AD,$D1,$4B,$A2,$26,$88,$4B,$92,$29,$E5,$D4; 3584
		dc.b $25, $F,$74,$5F,$75,$A7,$EE,$D8,$ED,$2D,$8E,$D8,$EE,$A1,$A6,$CF,$84,$A8,$69,$B2,$FA,$DB,$D6,$B8,$8B,$4F,$6C,$D2,$22,$69,$ED,$2C,$A7,$C2,$92,$C1,$4C,$2B,$45,$B8,$DF,$55,$EB, $F,$5C,$B3,$5A,$A5,$52,$9A,$B9,$70,$AA,$F3,$55,$7C,$2F,$AA,$F5,$E8,$97,$D5,$7E,$49; 3648
		dc.b $E7,$D2,$59,$DD,$D3,$3C,$AA,$CF,$91,$CF,$D1,$E3,$56,$4E,$B9,$9E,$1C,$8E,$66,$AB,$B9,$4A,$AE,$87,$3B,$EA,$CE,$FA,$8D,$55,$AE,$77,$D5,$7D,$7D,$2F,$AB,$2B,$F8,$1E,$55,$65,$8F,$9F,$49,$5F,$E7,$D1,$3C,$DF,$85,$D9,$55,$79,$E1,$CB,$2A,$AF,$3C,$B3,$7A,$9A,$FC,$CD; 3712
		dc.b $49,$E6,$6F,$A8,$E4,$6F,$E1,$7F,$9E,$46,$FB,$AA,$39,$1E,$15,$D4,$72,$3C,$2F,$5B,$EA,$4E,$9C,$2F,$AB,$94,$73,$97,$2F,$DD,$4B,$3E,$55,$52,$FC,$96,$FE, $B,$7E,$75,  0,  0,$4F,$1A,  7,$F1,$A0, $F,$5E,$80, $D,  2,$7E,$59,$34,  0,  0,  2,$78,$D0,  0,$13,$4F,$1A; 3776
		dc.b   0,$9A,$78,$D2,$6F,$15,$A7,$80,  0, $F,$A2,$46,$B0,$F1,  0,  0,$9B,$9E,$B0,$37,$45,$3F,$2C,  0,$1F,$B5,$FD,$A0,$7F,$1A,  0,$26,$88,$7F,  2,$6D,  0, $F,$A4,$7F,$2C,$13,$44,$FC,$B0,  0,  4,$F1,$F9,$6F,  1,$3C,$56,  0,  1,$34,$13,$68,  0,$F1,$A0,  0,$26,$9E; 3840
		dc.b $34, $F,$A0,  1,$F4,$4D,  2,$78,$88,$78,$80,  2,$44,$26,$9F,$96,$8E,$82,$68,$80,  0,$4F,$CB,$27,$80,$9F,$96,  0,$25,$60,$3C,$77,  0,$9F,$96, $F,$A0,$13,$69,$F9,$68,$EE,  0,  7,$D3,$F2,$C0,$69,$F9,$6D,$3C,  1,$BA,$21,$EB,$FD,$BB,$EE,$AF,$C0,$D1,$3C,  0,  2; 3904
		dc.b $68,$9D,$7C,$6E,$D0,$27,$8F,$CB,$24,$40,$7A,$FC, $D,$22,  3,$C7,$75,$7A,  1,$10,  0,$9B,$4D,$DE,$37,  4,$88,  0,  1,$F9,$6A,$C0,  1,$FF,$2D,$58, $F,$10,$F1,  0,  1,$37,$50,$26,$88,  0,$3C,$52,$B0,$26,$AC,  7,$DC,$13,$48,$FE,$5A,$B0,$34,$88,  2,$21,$F4,$4A; 3968
		dc.b $C0,  0,$25,$69,$58,  0,  0,  0,$D3,$F2,$D1,$D0,  4,$8A,$6E, $F,$14,$FD,$B8,$7A,$D3,$4F,$CB,  0,  2,$56,$91,$9B,$70,$D3,$FA,$40,$3D,$61,$37,$56,  3,$EE,$AD,$34,$1B,$80,$15,$A6,$E0,$3F,$2D,$E3,$F6,$40,  0,$91,$78,$A5,$61,$34,$4D,$2B,  0,  4,$DC,$37,$56,$1F; 4032
		dc.b $70,  0,  7,$AF,$70,$7A,$F7,  0,  4,$DB,$9E,$B0,$FD,$6E,$5C,$CD,$5D,$25,$79,$AA,$BE,  7,$2A,$AF,$5B,$F8,$1C,$AA,$BF,$87,$4C,$73,$8F,$24,$FD,$D7,$2C,$AF,$A5,$5C,$B3,$2B,$4C,$EF,$8E,$66,$AC,$8D,$F7,$7E,$E9,$3A,$79,$DD,$C1,$F9,$70,$37,$D5,$91,$CF,$91,$BE,$AC; 4096
		dc.b $8E,$77,$B5,$52,$AA,$F3,$E6,$95,$65,$9F,$F0,$72,  9,$E3,$40,  0, $F,$E3,$40,  0,$4F,$DA,$56,  2,$75,  0,  0,  3,$C4,  9,$A2,  6,$EA,$D3,$70,$9B,$F6,$5A,$56,  2,$68,$9B,$80,  1,$3F,$AA,  5,$60,$4D,$59,$E1,$95,$F5,$25,$57,$45,$92,$AE,$95,$67,$78,$13,$78,  0; 4160
		dc.b   9,$A2,  3,$E9,$B8, $C,$B8,$65,$86,$F4,$5B,$A3,$7A,$55,$D2,$AC,$EF, $F,$A0,$FD,$90,$1A,$6E,$AC,$26,$95,$87,$F1,$A0,$AC,  4,$8A,$6E,  9,$FD,$50,  0,$4F,$DA,$80,$34,  9,$A6,$E0,  3,$E8,$26,$D3,$76,$81,$E3,$A0,  0,$56,$3C,$47,$75,$60,$4D,$58,$FC,$B6,$E7,$AF; 4224
		dc.b $F6,$E1,$2B,$DD,$A5,$63,$F6,$43,$4A,$C0,  2,$BD,  0,$4F,$D9,  0,$3F,$6E,$13,$4D,$D5,$80,  0,  1,$34,$4D,$2B,  9,$A0,$DC,  0,$AC,$25,$F5,$67,$D3,$34,$52,$D1,$64,$B9,$4B,$2D,$57,$C6,$E5,$62,$AC,$55,$16,$E3,$72,$DC,$7A,$B7,$A3,$1B,$94,$B5,$59,$67,$CB,$CE,$F1; 4288
		dc.b $BB,$4A,$C0,$9A,$B4,$FD,$BD,$61,$32,$E1,$D3,$3A,$D4,$B4,$59,$2E,$52,$CA,$91,$B9,$5A,$FC,$98,$AA,$45,$2E,$5F,$D1,$F5,$6F,$46,$46,$53,$71,$9E,$D7,$F9,$DF,$D0, $F,$DB,$D6,  2,$57,$A6,$E0,$F5,$80,  3,$D7,$B9,$2B,  3,$F6,$E9,$58,$7D,  0,$4D,$D5,$80,$F5,$E9,$E2; 4352
		dc.b $B0,  0,$78,$BF,$ED,$C3,$FE,$DC,  0,$1F,$F6,$F5,$80,$95,$EE,  0,  9,$B4,$4F,$DA,$D6,$13,$4D,$C1,$F4,$DD,$58,  9,$FB,$77,$FD,$93,$C7,$87,$5F,$1E,$77,$44,  0,$37,$25,$69,$FB,$AF,$EC,$D7,$75,$69,$FB,$BA,$9B,$39,$97,$33,$CB,$81,$CD,$39,$5D,$51,$AA,$FC,$CF,$4A; 4416
		dc.b $8A,$D7,$51,$AA,$FC,$FA,$57,$7D,$57,$E7,$79,$E1,$7E,$55,$5E,$D9,$1B,$F3,$6A,$AF,$65,$37,$F0,$A8,$DF,$57, $E,$55,$1A,$AF,$E1,$5D,$46,$AB,$D3,$A2,$DF,$D3,$CD,$32,$BF,$A5,$D9,$CB,$33,$CB,$3A,$B2,$CF,$2F,$D1,$AE,$55,$5E,$1F,$39,$57,$7F, $B,$FA,$26,$54,$37,$A7; 4480
		dc.b   3,$9F,$4B,$AB,$F3,$8D,$DD,$6B,$BA,$8A,$6A,$FD,$4A,$D2,$39,$4B,$3F,$3E,$89,$E6,$FC,$2E,$CA,$AB,$CF, $E,$59,$55,$79,$E5,$9B,$D4,$D7,$E6,$6A,$4F,$33,$7D,$57,$B4,$7C,$55,$78,$7D,$C9,$9D,$F5,$D5,$7D,$71,$4A,$64,$8D,$4E,$55,$1E,$17,$27,$9F,$F0,$94,$FA,$72,$CB; 4544
		dc.b $85,$FD,  2,$7E,$C8,$68,$26,$DD,$FA,$9F,$D4,$5D,$E8,$63,$C3,$F7,$BD,$39,  1,$FB,$7A,$C3,$D6,$F5,$CD,$D7,$84,$73,$4B,$DA,$F3,$96,$69,$7A,$E5,$52,$F9,$A7,$4F,$3B,$B8,$3F,$2E,  6,$FA,$B2,$39,$F2,$37,$D5,$91,$CE,$F6,$AA,$55,$5E,$7C,$D3,$CE,$FC,$6A,$E1,$C9,$F3; 4608
		dc.b $A3,$53,$27,$F3,$E8,$95,$6B,$50,$4F,$D4,$FE,$A1,$3F,$53,$C1,$B5,$C8, $F,$3F,$D5,$CA,$AA,$5D,$4E,$49,$FA,$8F,$D4,$9C,$F5,$6C,$BC,$DF,$A5,$1A,$F7,$AA,$BB,$DF,$CF,$21,$E7,$D2,$59,$D1,$A9,$94,$B8,$72,$7F,$3C,$93,$85,$ED,$56,$49,$C3,$93,$FE,$A3,$F5,$3F,$A8,$5A; 4672
		dc.b $37,$E8,$B3,$37,$F9,$F4,$A8,$1F,$D4,$FE,$A9,$3F,$53,$E9,$C2,$5F,$AB,$FD,$46,$55,$3F, $C,$AA,$CF,$91,$CE,$59,$DD,$D2,$FC,$93,$CF,$A5,$EB,$D1,$2F,$A8,$D5,$5F, $B,$EA,$35,$72,$E1,$57,$26,$E1,$91,$AA,$F3,$7F, $E,$95,$72,$3C,$2F,$CA,$AB,$FA,$57,$7D,$57,$E6,$B5; 4736
		dc.b $D4,$6A,$BF,$3A,$AF,$CC,$F4,$AA,$5C,$AE,$A8,$E6,$79,$70,$39,$AE,$79,$1C,$AA,$BF,$85,$F5,$2D,$59,$66,$A0,$63, $B,$60,  0,  1,$E0,$A5,$40,$99,$80,$97,$72,$95,$3E,$5F,$BF,$F5,  0,  0,$2E,$F2,$7E,$EF,$28,$5B,  0,  6,  0,$4A,  1,$19,$FB,$FB,$B0,  2,$68,$61,$8C; 4800
		dc.b   0,$4F,$29,$F1,$F2,$A7,$72,$B2,$BD,$C2,$50,$50,$24,$D4,  2,$CB,$46,$F2,$85,$80,  1,$A8,$A0,$63,$87,$E8,$ED,$87,$EB,$E2,$25,$EE,$62,$1D,$44,$AE,$93,$6A,$AD,$46,$B6,  0,$24,$6E,$9F,  2,$B5,$DC,$31,$A1,$52,$A5,$66,$C2,$78,$79,$7E,$B6,$50,$B6,  0,  7,$82,$A6; 4864
		dc.b   0,$4A,$1D,$DE,$40,  0,$12,$16,$F2, $F, $B,$57,$DD,$80,$92,$D2,$E4,$EF,$12,$60,$12,$38,$E0,$DD,$C6,$8B,$32,$85,$38, $A,$5B,  2,$C1,$82,$29,$F2,$96,$FA,$AC,$9F,$AC,$7A,$C6,$B4,  9,$A2,$50,  7,$D0,$4D,$B8,$4D,$58,  3,$5A,$78,$D0,  4,$A1,$E2,$BA,  0,$94,$14; 4928
		dc.b $3B,$63,$DA,$B1,$8F,$60,  0,$12,$AE,$55,$9A,$C0,$12,$AC,  0, $D,$60,$4D,$58,  0,$77,$7F,$30, $C,$68,$C6,$71,$70,  8,$B2,$C2,$8C,$5A,$D8,$4F,$26,$59,$42,$8C,$98,$62,$DA,$AB,$AB,$AB,$AE,$2D,$8F,$EF,$3D,$78,$79,  7,$DC,  4,$D5,$80,$94,$D6,$80,  0,  0,$3D,$F6; 4992
		dc.b $C2,$7B,$6A,$A1,$22,$CA, $A,$F7,$DC,$24,$C3,$D0,$E1,$EB,$82,$B0,$13,$2A,$2F,$90,$C0,$B2,$89,$AF,$CF,$BB,$F5,$94,$D6,$87,$6A,$C3,$ED,$41,$35,  0,$4A,  1,$AD,  0,  2,$68,$5B,  0,$1E, $A,$5B, $C,$69,$8A,$E3, $B,$25,$31,$89,$54,$5B,$77,$D8,$D0,$DB,$15,$B0,$30; 5056
		dc.b $C1,$D9,$ED,$29,$DE,$92,$53,$82,$33,$AA,$2A,$55,$9F,$77, $C,$33,$3C,$53,$B6,$34,$4D,$E7,$7E,$D4,$9A,$80, $D,$77,$EB,$BC,  0,  0,  0, $C,$7B,$DE,$D8,$51,$75,$69,$CC,$2C,$C5,$52,$79,$BD,$61,$6F,$29,$F0,  3,$C8,$6A,$B2,$86,  5,$4F,$96,$34,$63,$84,$A7,$B6,$57; 5120
		dc.b $E1, $C,$24,$BB,$F1,$A6,$F0,$26,$A0,$13,$6F,$97,$6A,$F1,$5A,$CE,$F1,$2D,$E0,  0,  0,  0,$42,$C2,$65,$6C,  4,$AD,$82,$2E,$2C,$F8,$4D,$62,$C8,$A7,  4,$5C,$5A,$4A,$8B,$25,$94,$FE,$5F,$CD,  3,  4,$B6,  2,$4B,$39,$65,$C2,$79,$60,$91,$9E,$4A,$8A,$7D,$70,$FE,$68; 5184
		dc.b   0,$27,$96,$AB,$3A,$58,$E0,$B2,$C1,$8E,$1F,$AD,$3E,$40,$63,$6C,  4,$CC,$B3,$E1,$3A,$60,$91,$3E,$A5,$4A,$FE,$F7, $F,$D6,$80,$1F,$40,$9E,$34,$DC,$13,$4F,$17,$2E,$66,$A7,$A9,$2A,$E5,$C2,$AB,$CD,$55,$F0,$BE,$AB,$D7,$A2,$5F,$55,$F9,$27,$9F,$49,$67,$77,$4C,$F2; 5248
		dc.b $AB,$3E,$47,$3A,$1A,$AF,$E0,$73,$A6,$46,$FE,  7,$81,$E1,$C8,$E6,$6A,$BB,$94,$AA,$E8,$73,$BE,$AC,$EF,$A8,$D5,$5A,$E7,$7D,$57,$D7,$D2,$FA,$B2,$BF,$81,$BE,$7C,$AA,$FD,$A4,$F8,$EF,$5D,$FB,$3E,$FE,$C9,$E1,$16,$6D,$EA,$EA,$9B,$E5,$C7,$6D,$E9,$1C,$57,$85,$66,$85; 5312
		dc.b $7D,$52,$92,$E2,$F4,$DF,$AE,$9C,$46,$3D,$8F,$5C,$95,$37,$72,$AB,$7A,$EF,$4E, $B,$DB,$79,$AC,  0,$34,$F1,$58,  9,$A4,$7F,$2D,$58,  0,$24,$40,$9B,$C2,$56,  2,$56,  0,$13,$6E,$8D,$60,  0,$9B,$80,$7F,$1B,$B4,$AC,  0,  4,$53,$40,$9F,$D5,$7F,$1A,  1,$5B,$E8,$12; 5376
		dc.b $B8,$81,$FB,$21,$58,$11,$AC,$25,$71, $F,$5C,$6B,  9,$A0,$9B,$74,$A8,$1E,$21,$EB,$D2,$80,  1,$2B,$F3,$C9,$7A,$79,$E7,$7D,$57,$D7,$D2,$FA,$B2,$BF,$81,$BF,$3C,$AA,$EB,$98,  0,$75,$E9,$E7,$2C,$EE,$E9,$9E,$55,$67,$C8,$E7,$7D,$59,$75,$BC,  0,$23,$CB,$84,$73,$3C; 5440
		dc.b $39,$1E,$17,$D5,$91,$CB,$38,$E7,$95,$4B,$55,$F9,$80,  4,$79,$70,$8D,$F5,$70,$E5,$51,$BE,$A3,$97,  6,$BE,$3D,$AD,$EB,$E6,  0,$4D,$E3,$7C,$66,$DC,$1F,$4A,$F6,$A0,$9B,$7E,$3B,$C6,$3F,$A7,$1A,$D3,$1A,$F4,$4A,$4B,$78,$1B,$D2,$80,  7,$EC,$9B,$DF,$B0,$4D,$93,$7E; 5504
		dc.b $3E,  6,$AB,$BF,$1E,$3B,$27,$A2,$50,$A9,$E1,$5A,$2E,$F9,$F0,$9B,$88,$D7,$8C,$DD,$82,$98,$E5,$E9,$BB,$95,$48,$A9,$C9,$33,$56,$A8,$D4,$99,$9A,$92,$AE,$5C,$2A,$BC,$D5,$5F, $B,$EA,$BD,$7A,$25,$F5,$5F,$92,$79,$F4,$96,$77,$74,$CF,$2A,$B3,$E4,$78,$65,$53,$FE,$A3; 5568
		dc.b $93,$E7,$46,$A6,$4F,$E7,$D0, $C,$7F,$53,$FA,$84,$FD,$4F,  6,$D7,$29,$74,$AB,$1C,$AB,$CF,$1B,$F8,  0,$73,$D5,$B2,$F3,$7E,$9E,$60,  0,$FF,$A9,$FD,$52,$7E,$A7,$D3,$84,$BF,$57,$C0,  0,$1F,$87,$27,$E1,$7B,$6B,$50,  0, $B,$F5,$6F,$D5,$BD,$5F,$AB,  0,$63,$E7,$96; 5632
		dc.b $35,$51,$B3,$E5,$2F,$D4,$72,  0,  0,  0,$7E,$9E,$6F,$95,$1A,$99,$BF,$2E,  0,  0,$25,$FA,$9E,  7,$95,$D4,$6C,$CF,$2F,$3E,$84,  0; 5696
UnkComp_Map128_GHZ:dc.b	 $A,$E3,$D1,$A3,$E8,$FA,$3F,$E8,$FF,$A1,$F4,$5D,$17,$44,$8F,$A2,$E8,$B1,$FF,$47,$F4,$7F,$47,$D1,$D1,$A3,$44,$51,$A2,$42,$8F,$D1,$23,$FF,$FC, $F,$F1,$8F,$9C,$4C,$7A,$31,$D1,$A3,$F4,$42,$87,$42,$8D,$17,$46,$8D,$12,$34,$68,$F4,$68,$E8,$D1,$A3,$46,$95,$3F,$D3; 0
					; DATA XREF: ROM:0001BFF4o
					; ROM:0001C054o
		dc.b $27,$FA,$54,$FF,$4A,$9F,$E9,$D1,$D1,$F4,$C8,$FA,$7E,$8F,$A3,$15,$6A,$D1,$AB,$57,$46,$8F,$E3,$FF,$FF,$FE,$9F,$FE,$9F,$56,$AD,$1F,$A3,$84,$28,$F0,$45,$17,  1,$18,$46,$8C,$AB,$4E,$9D,$3A,$74,$E9,$42,$D4,$E9,$42,$F4,$E1,$7E,$28,$6B, $F,$E8,$49,$FD, $E,$CF,$F4; 64
		dc.b $74,$74,$68,$74,$3A,$74,$74,$45,$1D,$1E,$BD,  9,$29,$D1,$F9,$3E,$8F,$13,$FF,$89,$5F,$EA,$14,$AE,$5C,$9D,$7A,$35,$E8,$F4,$E8,$95,$F4,$24,$7D,$1F,$66,$8D,$93,$35,$6B,$DB,$AD,$6E,$B9,$BA,$F6,$EB,$DB,$A3,$6E,$8B,$6E,$A6,$91,$BA,$16,$E8,$6E,$D5,$C9,$57,$B4,$21; 128
		dc.b $28,$DA,$14,$7D,$22,$14,$69,$11,$A4,$88,$4F,$4D,$4E,$89,$22,$72,$BD,$19,$B7,$47,$46,$8D,$12,$34,$68,$D1,$AB,$B5,$D1,$ED,$D1,$D4,$58,$26,$48,$B8,$27,$D1,$94,$DA,$3D,$1A,$3A,$32,$94,$F1,  9,$FC,  0,$AD,$A1,$68,$8D,$7A,$D4,$6B,$9B,$D1,$BF,$6E,$9D,$3D,$BA,$35; 192
		dc.b $C8,$53,$BF,$46,$DC,$23,$46,$CD,$1A,$37,$68,$50,$B3,$46,$8D,$1A,$36,$7A,$34,$7A,$14,$75,$E8,$D1,$A3,  8,$F4,$68,$FC,$68,$EE,$10,$FA,$1B,$84,$28,$D3,$A7,$47,$4E,$8D,$1A,$34,$74,$68,$D5,$AF,$6E,$ED,$1B,$B4,$6E,$D1,$BB,$46,$DD,$1B,$7A,$1B,$87,$77, $E,$D0,$F7; 256
		dc.b $6E,$5C,$BB, $E,$D1,$B8,$42,  3,$9B,$B4,$5E,$ED,$1F,$47,$FB,$9F,$C5,$27,$E7,$E7,$CA,$4E,$9D,$FB,$37,$EE,$31,$60,$C6,$E2,$FD,$83,  7,$76,$2C,$51,$A3,$42,$A6,$8D,$1A,$16,$6C,$DD,$B7,$66,$AD,$1D,$1B,  4,$68,$D1,$AC,$47,$E0,$6C,$BB,$A4,$68,$95,$A3,$6E,$8D, $A; 320
		dc.b $34,$68,$91,$23,$46,$E1,$22,$37,$48,$C7,$80,$88,$27,$A2,$58,$9D,$FA,$36,$F4,$68,$D3,$A2,$B7,$5E,$8D,$3A,$F4,$69,$11,$A4,$4B,$A3,$E9,$74,$E9,$29,$74,$A8,$53,$A7,$46,$8D,$3D, $F,$43,$4A,$BB,$43,$5E,$B1,$24,$A7,$4E,$BD,$BB,$76,$E9,$D1,$B7,$5E,$9D,$1A,$71,$5E; 384
		dc.b $BB,$5F,$A7,$94,$E9,$D0,$B3,$5C,$CD,$9B,$34,$68,$D1,$D1,$A2,$B3,$4B,$A3,  8,$D4,$23,$5A,$8D,$5A,$A4,$68,$99,$B3,$46,$AD,$AA,$B6,$EA,$D5,$A3,$56,$8D, $A,$B4,$CA,$D5,$A1,$57,$7E,$8F,$F4,$7F,$E8,$E6,$8E,$50,$A7,$D1,$A7,$D1,$F4,$BA,$37,$72,$FD,$1E,$8D,$1D,$1B; 448
		dc.b $9E,$8D,$5A,$15,  8,$C2,$34,$E9,$D0,$A3,$57,$A3,$A3,$F4,$60,$7E,$90,$FF,$9F,$A4,$F8,$FD,$FA,$35,$EB,$D7,$A3,$46,$AC,$A3,$42,$8D,$1A,$35,$EB,$D1,$B3,$46,$FD,$1B,$77,$5F,$D0,$D7,$7F,$F5,$AC,$D9,$B7,$A3,$46,$8D,$1A,$27,$F4,$74,$45,$19,$28,$91,$A9,$F4,$28,$D1; 512
		dc.b $A2,$46,$8D,$1A,$43,$F4,$2D,$D1,$B7,$46,$AD,$DA,$34,$68,$D1,$A3,$4E,$EB,$D9,$10,$F3,$94,$3F,$F0,$84,$59,$A1,$5E,$BD,$13,$F0,$8C,$23,$7B,$E0,$A1,$45,$83,$28,$50,$A1,$79,$44,$AD,$FB,$D4,$6D,$D8,$A2,$7E,$F1,$9A,$34,$68,$D0,$A3,$21,$DA,$30,$51,$82,$BD,$7A,$76; 576
		dc.b $69,$D3,$BD,$46,$ED,$1A,$34,$6D,$D9,$BB,$56,$8D,$7A,$35,$E8,$D1,$A3,$46,$9D,$1A,$34,$7F,$47,$F4,$7F,$47,$F4,$5D,  9,$A2,$E8,$51,$F4,$28,$BF,  8,$47,$D1,$A1,$E8,$D0,$F4,$68,$68,$CF,$A3,$E8,$FD,$1A,$1E,$89,$1F,$FE,$31,$FF,$8C,$77,$EF,$D9,$2E,$46,$CD,$93,$36; 640
		dc.b $4C,$57,$AF,$67,$46,$11,$FE,$68,$C8,$7E,$89, $B,  6,$6C,$59,$86,$88,$D9,$B3,$46,$CC,$A3,$6F,$A2,$BB,$46,$8D,$1B,$7B,$FA,$44,$3F,$CB,$84,$FE,$FD,$30,$48,$9D,$1B,$B4,$E9,$D1,$FF,$BF,  1,$53,$F7,$88,$55,$3B,$76,$ED,$D3,$B4,$2E,$4A,$37,$C9,$D1,$FF,$47,$FD,$1F; 704
		dc.b $F4,$7F,$D9,$D9,$A3,$F0,$8F,$F0,$3C,$51,$D1,$D9,$FF,$FF,$FF,$1F,$FD,$7C,$AB,$46,$AC,$A3,$5E,$8D,$18,$6E,$91,$A2,$3F,$FD,$22,$51,$F4,$C9,$61,$98,$46,$AC,$A3,$46,$8D,$7A,$16,$EA,$21,$42,$BF,$9A,$BA,$53,$57,$58,$AD,$5A,$D7,$F7,$2B,$91,$B8,$56,$89,$CA,$F9,$B8; 768
		dc.b $A3,$47,$FD,$1F,$FD,$1F,$F4,$88,$D1,$A8,$46,$51,$D1,$9F,$44,$8B,$F4,$48,$BF,$67,$46,$8D,$BB,$34,$6D,$D3,$A3,$AB,$B9,$B8,$43,$2E,$C0,$56,$ED,$1B,$75,$68,$F6,$D4,$6D,$D7,$AB,$7A,$F5,$1F,$4C,$8F,$DF,$23,$F5,$78,$EA,$FE,$AF,$FA,$BA,$B5,$88,$C2,$3A,$BA,$31,$E9; 832
		dc.b $51,$8E,$42,$35,$69,$51,$2B,$76,$89,$22,$75,$6B,$D5,$A3,$56,$E9,$1A,$44,$6E,$DF,$BF,$4E,$8D,$93,$A7,$E8,$D1,$B1,$54,$8D,$52,$7E,$38,$F0,$BE,$3E,$BE,$1B,$23,$2B,$D1,$AF,$14,$6B,$D1,$AF,$34,$3A,$21,$D1,$51,$3B, $B,$82,$F4,$6E,$D7,$B7,$5E,$8D,$1B,$B6,$6E,$D1; 896
		dc.b $BB,$66,$85,$9A,$15,$AD,$D0,$B3,$62,$D5,$DA,$56,$6E,$CB,$B0,$ED,$92,$74,$4B,$95,$E8,$9B,$A3,$66,$8D,$3A,$46,$EA,$54,$8B,$7E,$87,$D1,$D0,$B4,$A3,$5A,$12,$23,$66,$BD,$7A,$B4,$6A,$D3,$B3,$48,$8D,$DA,$34,$68,$C2,$54,$68,$D1,$A3,$46,$CD,$9A,$75,$C8,$D3,$84,$65; 960
		dc.b $1A,$27,$EF,$D1,$AB,$46,$AD,$DB,$34,$6E,$D5,$A3,$46,$DD,$3B,$35,$4F,$D1,$B2,$42,$85,$BA,$24,$69,$D1,$A3,$66,$9E,$8D,$9A,$35,$E8,$D1,$B3,$66,$9D,$3A,$34,$C8,$D3,$A3,$76,$AD,$5B,$B2,$8D,$3B,$F7,$ED,$91,$B7,$46,$9F,$A3,$FB,$D5,$BF,$BC,$7C,$F4,$5E,$3F,$7A,$1F; 1024
		dc.b $BF,$46, $A,$30,$85,$1A,$34,$68,$91,$A3,$76,$ED,$19,$66,$8D,$5A,$34,$61,$9B,$36,$6C,$D1,$2B,$56,$8D,$1A,$A4,$FA,$9D,$4B,$5D,$1B,$CF,$E8,$DE,$7D,$3A,$AD,$78,$5E,$13,$A3,$9E,$88,$74,$54,$5F,$42,$A8,  5,$6A,$D1,$AE,$4E,$8D,$3B,$97,$1C,$25,$FD,$9A,$34,$68,$99; 1088
		dc.b $DD,$A4,$A3,$FE,$89,$17,$AC,$47,$E3,$46,$FD,$7A,$1F,$D7,$9F,$48,$9D,$9A,$36,$6C,$DB,$E8,$D1,$D5,$D1,$A7,$46,$DD,$EB,$3F,$FE, $F,$FD,$1F,$FD,  9,$FE,$8C,$7E,$51,$F4,$68,$BE,$8F,$FF,$FE,$99,$1F,$A3,$3D,$1F,$FD,$1F,$C7,$D0,$9F,$FA,$13,$C0,$D3,$D6,  5,$A9,$91; 1152
		dc.b $A4,$43,$C2,$1D,$17,$28,$D1,$AB,$46,$FD,$1D,$18,$D1,$C2,$BF,$47,$E8,$74,$6F,$DB,$AB,$46,$A9,$FA,$34,$88,$7A,$3A,$2E,$8D,$3A,$34,$6B,$D5,$A3,$27,$A3,$47,$D1,$A3,$62,$95,$1A,$34,$A8,$D1,$A3,$5C,$8D,$7A,$34,$74,$69,$D1,$A3,$56,$DD,$1A,$36,$7A,$37,$EA,$9F,$3F; 1216
		dc.b $56,$DD,$1A,$37,$E8,$CA,$35,$6D,$D5,$BF, $D,$91,$A7,$46,$D9,$7A,$34,$68,$D7,$BB,$76,$8D,$1A,$35,$E8,$D1,$A7,$46,$E1,$12,$3B,$A1,$A3,$76,$8D,$1F,$A3,$E7,$E8,$74,$3F,$FE,$3F,$1E,$8D,$D2,$B4,$69,$C2,$14,$68,$47,$56,$3A,$34,$34,$63,$47,$FF,$E7,$F8,$FC,$33,$34; 1280
		dc.b $63,$45,$4F,$D1,$A3,$FA,$3E,$34,$7F,$1F,$42,$11,$9E,$9C,$F4,$7E,$8F,$A3,$E8,$F4,$48,$E8,$D1,$FC,$74,$7C,$61,$1F,$3D,$1F,$3D,$1F,$9A,$3F,$86,$FF,$A7,$46,$8D,$5E,$11,$AB,$FD,$1C,$7A,$3F,$D1,$E4,$5D,$EE,$DD,$AF,$46,$AD,$1A,$F4,$6C,$D0,$D1,$FE,$3F,$D5,$9F,$EF; 1344
		dc.b $D9,$A3,$46,$BD,$FA,$34,$6C,$11,$23,$47,$FF,$47,$FF,$47,$FF,$47,$FD,$1D,$1A,$34,$67,$47,$47,$FD,$1C,$7D,$1F,$F4,$6F,$9E,$23,$56,$A1,$5D,$1A,$BA,$37,$EA,$F4,$68,$FC,$D1,$AB,$5E,$ED,$62,$17,$EE,$DF,$BF,$7F,$84,$5A,$2F,$E6,$8B,$FE,$6D,$26,$21,$2D,$11,$5F,$5E; 1408
		dc.b $ED,$7A,$34,$7F,$F4,$88,$87,$E9,$10,$C9,  8,$D1,$A3,$46,$8D,$1A,$7E,$A3,$AA,$F9,$E8,$BE,$7A,$2F,$FD,$1F,$1F,$FF,$9F,$FE,$8E,$93,$E8,$E3,$FA,$7F,$E8,$FF,$A3,$FA,$94,$62,$AD,$1F,$A3,$83,$47,$83,$FE,$A5,$53,$B6,$EA,$50,$A3,$6A,$DD,$5A,$B4,$6A,$68,$D0,$AD,$5E; 1472
		dc.b $AD,$38,$4F,$A3,$4F,$BB,$42,$8D, $B,$55,$E8,$50,$AF,$5E,$8E,$9D,$1D,$3A,$3A,$74,$74,$E8,$D3,$A3,$9E,$DD,$1A,$AE,$8E,$87,$46,$CD,$1D,$1A,$34,$6F,$D1,$BF,$46,$FD,$1B,$F5,$EC,$E8,$D9,$A3,$67,$6D,$D9,$87,$E8,$DF,$A3,$7E,$8E,$FF,$46,$C2,$C3,$A3,$AC,$60,$EC,$B9; 1536
		dc.b $60,$17,$A2,$B8,$5E,$CD,$1A,$30,$CD,$DB,$37,$E9,$99,$23,$49,$B3,$B7,$D9,$94,$BA,$26,$7E,$8D, $F,$DF,$B1,$B8,$66,$9D,$3A,$37,$48,$DC,$A3,$68,$8D,$1F,$84,$7F,$DE,$9B,$A4,$68,$FA,$33,$FF,$E8,$7F,$CD, $F,$D8,$18,$56,$9D,$BA,$74,$3C,$23,$45,$4A,$8D,  8,$4E,$A5; 1600
		dc.b  $B,$B5,$6A,$DC,$A2,$43,$54,$8D,$1A,$38,$6C,  1,$FD,  8,$4B,$FA,$10,$99,$23,$F3,$D0,$AF,$46,$BF,$FA,$B5,$34,$E7,$44,$E9, $A,$36,$C8,$51,$B7,$5E,$DD,$1B,$E4,$4B,$D1,$A3,$B0,$28,$FF,$F4,$7F,$FA,$D3,$64,$53,$A3,$23,$E8,$FF,$E8,$D3,$21,$5E,$8D,$5A,$34,$6A,$D3; 1664
		dc.b $A3,$E8,$FA,$3E,$8F,$A3,$FA,$3F,$AB,$54,$AD,$FA,$74,$6A, $C,$A7,$F4,$EA,$53,$A9,$5F,$46,$8F,$E8,$FA,$3A,$7A,$D1,$88,$14,$41,$42,$3A,$94,$6C,$D1,$A7,$42,$9D,$1A,$34,$25,$78,$FD,$1A,$D4,$8C,$D5,$AB,$62,$8D,$5B,  4,$6B,$DD,$A7,$66,$8D,$9D,$5B,$3A,$B6,$7A,$54; 1728
		dc.b $88,$D5,$AB,$56,$AD,$1B,$25,$28,$82,$B5,$41,$5A,$AA,$B5,$4A,$D8,$84,$E8,$D7,$A3,$5E,$BD,$4A,$F5,$6B,$D5,$AF,$56,$8D,$5A,$15,$68,$D7,$A3,$46,$8E,$88,$83,$52,$A3,$AF,$57,$AF,$57,$AF,$4E,$91,$BA,$B4,$66,$95,$3A,$24,$AA,$19,$B0,$72,$95,$1A,$34,$5F,$5F,$FD,$5F; 1792
		dc.b $F5,$68,$D5,$B7,$F4,$5D,$17,$44,$16,$23,$F4,$68,$D1,$A3,$46,$8D,$BA,$3E,$8E,$11,$F4,$68,$D1,$A3,$66,$CD,$9C,$B3,$50,$A5,$9A,$87,$6D,$3A,$3D,$5D,$1A,$44,$3D,$1A,$24,$6A, $A,$B7,$6D,$D9,$B7,$7E,$8B,$D1,$FF,$46,$3F,$E8,$FA,$17,$FC,$74,$68,$FF,$A3,$FE,$D1,$1F; 1856
		dc.b $F4,$88,$E8,$E8,$C2,$3A,$3A,$31,$EC,$8C,$7C,$83,$1F,$4E,$22,$8C,$A7,$A2,$D1,$D1,  4,$FA,$34,$64,$7F,$D3,$FF,$D1,$FF,$D1, $F,$E8,$D1,$D1,$A3,$42,$8D,$3A,$34,$6E,$DD,$D1,$B7,$46,$DD,$1B,$72,$8D,$1A,$34,$6A,$8A,$A2,$A9, $A,$85,$68,$94,$2A,$E8,$94,$9F,$FF,$C7; 1920
		dc.b $FC,$70,$D1,$7A,$D7,$E5,$1A,$3D,$C2,$17,  4,$A3,  8,$DD,$A3,$6E,$9D,$1A,$4F,$46,$B7,$A3,$E8,$D6,$7A,$F5,$68,$D4,$BF,$56,$A5,$5B,$F4,$6A,$D1,$BF,$7E,$CC,$7B,$33,$D9,$8E,$CD,$27,$FF,$7F,$BF,$7F,$BF,$7E,$AD,$2A,$A2,$95,$2A,$A4,$29,$12,$AA,$42,$94,$7D,$2A,$5D; 1984
		dc.b $A6,$1B,$46,$8F,$94,$6A,$D7,$A1,$4E,$85,$3A,$14,$E8,$F4,$7F,$A3,$C5,$52,$34,$65,$5E,$91,$12,$BF,$D2,$2A,$FE,$B1,$3F,$D1,$A4,$F8,$E2,$FD,$E2,$67,$EC,$52,$24,$42,$8D,$DA,$27,$6B,$D5,$A3,$56,$FD,$5B,$F5,$6A,$AA,$D5,$2B,$3F,$F8,$FF,$C5, $E,$47,$CA,$32,$8C,$F0; 2048
		dc.b $8B,$FE,$20,$7F,$3C,$23,$46,  6,$8D,$1D,$1A,$33,$83,$21, $A,$11,$23,$E6,$F2,$78,$FF,$3C,$FC,$7A,$12,$8B,$43,$A1,$D0,$A3,$47,$D1,$65,  8,$C1,$A1,$46,$68,$CC,$8F,$E5,  9,$E3,$3A,$14,$48,$D0,$80,$84,$E8,$80,$A2,$28,$65,$19,$44,  2,$14,$48,$51,$BD,$7E,$8D,$EB; 2112
		dc.b $F4,$6F,$5F,$BF,$7E,$FD,$1B,$B4,$68,$F4,$7F,$D1,$FF,$72,$8D,$FA,$3B,$8A,$3F,$BC,$FC,$7D,$E7,$FF,$D6,$3F,$5E,$C5,$19,$FA,$39,$1D,$1C,$A1,$A3,$3F,$A3,$77,$EE,$FE,$FD,$1A,$36,$F6,$66,$8D,$1D,$1A,$B4,$59,$FD, $D,$CF,$F4,$21,$A4,$45,$13,$54,$74,$E8,$E9,$A9,$D1; 2176
		dc.b $A7,$43,$1A,$35,$68,$E5,$3A,$3A,$3F,$3F,$F0,$7F,$8E,$27,$CB,$4E,$8D,$39,$46,$88,$A3,$4E,  9,$46,$8D,$1B,$F4,$68,$F4,$6C,$FA,$3F,$46,$8D,$1A,$34,$7D,$1F,$A3,$E8,$FA,$3A,$34,$7F,$47,$3E,$87,$F8,$65,$EA,$FF,$84,$72,$11,$D1,$E8,$E8,$D0,$A3,$FF,$F4,$3A,$3F,$C9; 2240
		dc.b $A2,$E8,$E8,$D0,$E8,$DB,$A3,$3A,$23,$A3,$43,$E8,$FF,$97,$27,$FF,$E8,$C7,$E2,$8D,$FF,$FA,$31,$47,$E8,$FF,$A3,$28,$B1,$30,$8A,$71, $E,$AE,$25,$DA,$3F,$47,$45,$E8,$7F,$AB,$2A,$FA,$B2,$AC,$AB,$15,$65,$5A,$14,$67,$FF,$A2,$4F,$D5,$E8,$E8,$E8,$D1,$D1,$95,$62,$AF; 2304
		dc.b $AB,$FA,$BF,$F8,$A3,$FE,$8D,$5F,$AB,$D1,$FA,$3F,$EA,$D1,$7C,$C2,$29,$98,$56,$7F,$E8,$FF,$E8,$FF,$E8,$FF,$BB,$BB,$46,$8D,$1A,$B0,$8C,$D1,$51,$E8,$A8,$E8,$A8,$D3,$DF,$A3,$46,$8D,$1F,$E8,$E8,$FE,$91,$1D,$1A,$3F,$1A,$3E,$36,$F8,$66,$8E,$8F,$E8,$D8,$FA,$34,$7F; 2368
		dc.b $47,$A3,$FF,$47,$FF,$1F,$FF,$F1,$47,$42,$11,$C9,$FF,$46,$8D,$19,$E8,$71,$9E,$87,$47,$8F,$FF,$FE,$79,$1F,$F0,$23,$89,$42,$8E,$8E,$51,$A3,  8,$F0,$11,$FD, $D,$18,$42,$84,$A1,$46,$89,$1A,$34,$68,$93,$A7,$4E,$9D,$3A,$7A,$4A,$70,$93,$4B,$54,$2E,$11,$A3,$F8,$57; 2432
		dc.b $C6,$8D,$42,$B4,$29,$D1,$82,$98,$21,$46,$7E,$8D,$27,$E8,$A9,$13,$4C,$84,$F4,$89,$D3,$A7,$4E,$9D,$1C,$75,  1, $E,$26,$A9,$42,$15,$28,$CD,$1A,$B5,$69,$D1,$A7,$B3,$4E,$AD,$33,  4,$E9,$BB,$24,$9A,$C5,$B6,$7A,$73,$4F,$46,$8C,$31,$46,$C4,$2A,$48,$28,$48,$67,$F3; 2496
		dc.b $FD,$25,$6C,$72,$B9,$9A,$15,$EC,$D7,$AF,$57,$61,$22,$18,  0,  4,$21,$42,$8D,$9B,$34,$68,$99,$AB,$76,$8D,$1E,$8E,$50,$E8,$E5,$15,$1C,$A1,$78,$89,$FA,$34,$74,$68,$D1,$A1,$46,$89,$1A,$14,$68,$D1,$B7,$58,$DD,$7B,$F5,$8F,$11,$B0,$ED,$97,$CD,$87,$DF,$A2,$68,$CD; 2560
		dc.b $B3,$34,$6C,$D7,$87,$68,$56,$21,$61,$AC,$5B,$60,$CB,$61,$D8,$3F,$73,$60,$FD,$AB,$C5,$88,$61,$AB,$57,$22,$D1,$FA,$22,$EF,$91,$28,$91,  5,$FC,$E7,$B1,$D8,  0,$27,$9B,$30,$4B,$14,$48,$91,$86,$60,$A2,$A3,  8,$42,$14,$48,$D0,$80,$9D,$BA,$35,$69,$94,$43,$9A,$69; 2624
		dc.b $4C,$D2,$97,$69,$C2,$B4,$4A,$DD,$BB,$49,$10,$40,$42,$8D,$44,$F6,$9C,$66,$D1,$46,$1C,$26,$4A,$9D,$B8,$4C,$ED,$3A,$50,$52,$23,$77,$48,$9E,$84,$A3,$D0,$A3,$50,$8D, $A,$24,$6F, $C,$A9,$42,$8D,$2A,$B4,$C8,$91,$94,$4A,$D3,$AF,$56,$AD,$3A,$B4,$DA,$A5,$8B,$EF,$56; 2688
		dc.b $53,$D3,$F6, $A,$D1,$B1,$2A,$52,$AA,$96,$33,$60,$99,$3B,  4,$C9,$E9,$16,$A7,$78,$A1,$2D,$E2,$57,$E9,$D3,$A3,$54,$FD,$32,$45,$EA,$D5,$AB,$56,$AE,$8C,  0,  0,  1,$7F,  1, $C,$D6,  0,$D7,$10, $D,$DB,  0,$DC,$10, $D,$E0,  0,$E1,  1,$AB,  1,$AC,$10,  9,$E5,  0; 2752
		dc.b $E6,  1,$AD,  1,$AE, $B,  1,$AF,  1,$B0,$1C,$67,  0,$79,$10,$B1,  1,$B2,$1C,$10,  8,$B3,  1,$B4, $C,$83,  0,$F6,$3C,$B3,  0,$10,$ED,  0,$85,  0,$D8,  0,$D9,  0,$DA,$64, $B,$DD,  0,$DE,  0,$DF,$10, $B,$E2,  0,$E3,  0,$E4,$10, $B,$E7,  0,$E8,$94, $D,$E9,$7C; 2816
		dc.b   6,  6,  8,$10,$7C,  6,  8,$10,$7C,  6,  7,  0,$EA,  4,$27,$7C,$82,  6,$27,$54,$13,$54,$2F,$54,$2E,$54, $D,$50,$B5,$50,$B9,$50, $A, $E,$23,$54,$21,$54,$1E,$54,$1D,$50,  2,$1E,$50, $A,$23,  4,  1,  4,$26,  2,$25,  0,  2,$26,  2,  1,  2,  1,$42,  0,$76,  2; 2880
		dc.b  $B,$12,$6E,  1,$45,  2, $A,$10,  8,  0,$B8,  0,$B6,  2,$30,$43,  8,  1,$41,$3C,  2,$12,$80,$B9,$54,$B5,$82,  9,$80, $A,$82,$80, $B,$82,  6,$78,  7,  1,$44,$40,  6,$78,  9,$72,$52,  7,$76,  6,$70,$19,  2,$11,$F4,$84,  6,$C1,  0,$C2,  0,$C3,$F4,$84,  6,$C6; 2944
		dc.b   0,$C7,  0,$C8,$F4,$84,  7,$CB,  0,$CC,  0,$CD,$F4,$84,  7,$D0,  0,$D1,  0,$D2,$84,  8,  1,  7,$D4,$10,$21,  3,$50,$29,$84,$10,  8,$C4,  0,$C5,$D0, $D,$C9,  0,$CA,$10, $D,$CE,  0,$CF,$A4, $B,  1,$D3,$98,  7,$28, $C,$A4, $A,$98,  9,$28,$10,  8,$84, $A,$10; 3008
		dc.b  $D,$50,$13,$50,$14,$54,  2,$33,$54,$32,$54,$31,$54,$30,  4,$88,$50,$24,  0,$24,$50,$23,$50,$37,$54,$36,$54,$35,$54,$34,$54,$3C,$26,  7,$39,  4,$25,  4,$24,  4,$38,$54,$3E,$3E, $E,  4,$40,$10,$18,  0,$28,$90,$10,$54,$3B,  4,$3A,$10, $D,$3D,$84,$14,$10,  8; 3072
		dc.b   4,$3F,$84,$14,$B0,$89,$B0,  3,  1,$44,$84,$14,$B0,  8,$CE,$68,  7,$B0,  7,$CE,  0,$20,$F6,  6,$86, $A,$F6,  6,$86, $A,$F6,  6,$86,$2D,$E0,$F6,  6,$86,$10,$FC,  7,$E6,  7,  1,$EC,  7,  0,$D5,$98,  0,  2,$83,$E0,  1,$10,$10,$14,$13,$10,$13,  4,$A0,$44,$10; 3136
		dc.b $11,$14,$23,$10,$23,  4,$50,$23,$95,$22,  1,$6B,  1, $A,  5,$6B,$12, $D,  9,$22, $F, $A, $C, $A,$7A,  1, $B,$7E,  4, $F,$E0,  7,  2,  8,$12,$10,$74,  2,  7,$6E,$C4,  9,$72,  4,$D8, $A,$C4,$10,$12,$C8,  6,$10,  9,  1,$43,  1,$40,$10,$D4,  1,$86,  4,$47,$12; 3200
		dc.b   6,  0,$B6,$58,$54,$5C,$54,$4C,$54,$4A,$54,$45,$54,$43,$50,$42,$58,$54,$5C,$C4,  6,$54,$1C,$54,$1B,$24,$28,$C4,$C8,$80,$10,$CC, $A,$90,  6,$CC, $A,$10,  7,  0,$B8,$D4,  7,$10,$4A,  9,$47,  0,$84,$E6,$72,$76,$45,$50,$4A,$50,$4C,$E6,  7,$1B,$50,$1C,$3A,  6; 3264
		dc.b $E6,  6,$36,$BC,  9,$80,$1A,$64,  9,$FC, $C,$64,$FC, $B,$64,$FC, $B,$64,  8,$7A,  7,$E8,  9,$7A,  7,$10, $A,$7A,  6,$10,  4,  3,$80,  7,$20,$EA,$A4,$FC, $C,  1,$FC, $C,  1,$E4,$72, $D,$76, $A, $F,$4A,  2,$76,  8,$F0,$10,$4A,  2,$18,$A2,$58,$F0,$20,$4A,  2; 3328
		dc.b $18,  6,$50,$46,$F0,$88,  2,$18,  6,$FC,$10,  7,$BC,$2F,  2,$50,  2,$3E,  6,$46,$BC,$21,$3E,  8,$28,$BC,$3E,  9,$10,$FC,  9,$10,$11,$12,$77,$76,$27,  2,  9,$F4,$38,  6,$90,  9, $E,$10, $F,$58,$1C,$36, $D,$10,$25,  0,$17, $F,$9A,$54,$29, $F,  8,$F0,$10,$1A; 3392
		dc.b   6,$10,  9,$20,$4C,$24,$54,$76,$60,$14,  2,$76,  6,$50,$12,$C8,  6,$10,$76,$50,$6E, $E,  6,  1,$42,$7C,  7,$10,  8,$43,$10, $E,  2,$C4,$7A,$50,$2A,$54,  2,$29, $C,$88,  7,$14,$50,$16,$54,  2,  6, $A,$C6,  6,$96,$7C,$9A,$C0,  6,$AC,  6,$38,$50, $C,$C8,$86; 3456
		dc.b   6,$77,$10,  9,$10,  7,$84,  6,$54, $C,$18, $D,$6E,$C0,  8,$60,  7,$EC,  2,$30,  9,$E6,  7,$36,  8,$D6,  6,  2,$52,$14,  2,$2A,  0,  6,$CC,  6,$58,  7,$3C,  7,$AC,$DE,$10, $A,$10,  6,$C8,$1A,$72,$29,  2, $E,$6C,  6,$1F,$20,  8,  6,$10,$6B,$20,  1,  2,$8E; 3520
		dc.b  $E,$20,$50, $B,$10,$56,$76,  6,  2,  9,$20,$90,  7,  0,$98,  2,  7,$10,$1F,  1,$86,  0,$41,  2,  1,$88,$10,  8,$14,$D8,  2,$10,$72,$10,  1,  2,$14,$D8,  2,$10,  8,$78,  9,  0,  8,  2,  8,$73,$FA,  7,$68,  8,  2,$37,$66,  6,  2,  9,$6E,$10,$10,$76, $F,$E8; 3584
		dc.b   9,$28,  8,$59, $B,  2,  6,  1, $A,  2,  6,  1, $A,  2,  6,  1, $A,  2,  6,  1, $E,$F2,  7,$10,$1A,$CE, $A,  4,  5,$EA,$72,  2, $E,$DE,  2,$8C,  8,$1A,$E3,  0,$E4,$8C,  9,$1C,$72,$8C,  8,$1A,$8C,$11,$8A,$20,$7E,$7A,  6,$7A,$82,  3,$4E,  7,  1,$F9,$7C,$F0; 3648
		dc.b $14,$4E,  6,$10,  7,$7D,$F0,$24,$10, $A,$F9,$7E,$F1,$89,$F0,  1,$5E,$F9,$81,$F9,$80,$F9,$7F, $E,$30,$52,$50,$68,$50,$69,$F0,$74,  2,$6A,$30,$74,  0,$70,$10,$6C,$54,$6D,  4,  2,$6A,$6F,  0,$71,$7A, $C,$D8,  9,$62,  7,$CA,  6,$7E,$2E,$50,  2,$2F,$F2,$EE,$13; 3712
		dc.b $7E,$1E,$BE,  7,$EE,$F0,$7E,  6,$26,$F2,$F0,  8,  8,$50,  9,  8,$4C,$77,$10, $A,  2,  8,$10,$A8,  8,$38,  6,$42,$14,$4C, $A,$EA, $C,$A0,  9,$52, $E,$B8,$72,  7,$A2,$52,  9,$DA, $F,$10, $B,$2A,$EA, $A,  0,$15,$F0,$19,$E0,$12,  4,$47,$C8,$47,  1,$88,$54,$86; 3776
		dc.b  $B,$84,$9A,  9,$46,  7,$C0, $D,$2E,  7,$58,  2,  8,$58,  7,  2,$60,$58,  6,  2,  9,$9E,$B6,  2,  9,$4E,$10, $C,$20,$4B,$54,$4A,$50,  2,  6,$28,$1E,$82,  8,$54,$28,$BC,$82,  7,$50,$16,  2,$30,$8E, $F,  1,  0,  1,  2,$11,$5A,  7,$F0,$40,$30,  9,$BE,  8,$10; 3840
		dc.b $32,$C8,  8,$EE,  6,$9A,$1A,$98,$92, $B,$54,$18,$54,$45,$10,  7,$1F,$F0,$20,$18,$54,$1D,$76,  6,$64,$72,$18,  4,$25,$74,  2,$60, $C,$64,$10,  2,$15,$E8,  7,  4, $B,$47,$5A,$54,$43,$50,  2,$45,$92,$10,$1C,$50,  2,$1D,$14,  7,$10,$8A,$25,  2,$92,  8,$30,$2F; 3904
		dc.b   4, $D,$1E, $C,$A0,$10,$B0,$18,$F8,$37,  2,$25,$AE,$12,$10, $A,$C0,$20,  2,$38,$F8, $C, $A,$41,$10,  9,$14,$F0,$46,$10,  6,$54,$1D,$82,  6,$F0,$92,$F8,  6,$82,  6,$10,$40, $C,$6A,$40, $B,$AA,  8,$92, $C,$10,$11,$42,  7,$2E,  7,$51,$22, $A,$1E,$5F,$C4, $A; 3968
		dc.b $BC,  1,$85,$B0, $C,$BE,$B0, $E,$32,$B0, $D,$C4,$B0, $C,$7C, $E,$30,$B0,  8,$14,$D0,  8,$D2, $C,$7E,  6,$38,  7,  0,$26,$14,$10, $C,$3E,$1C,$40,$16,$2E,  8,  0,  8,$10, $C,$58,$20,$13,$34,$10, $C,$3C,$14,  2,$3C,$20, $F,  8,  6,  2,  6,  4, $F,$30,$10,$10; 4032
		dc.b $13,  2,  8,$30,$13,$34,$10,$30,$11,$10,$23,  2,  8,$30,  2,$20,$DA, $B,$30,  2,$10,$C0,  8,$31,$44,$10,  6,$C0,  8,$30,$72,$20,  7,$43,  1,$40,$62,$31,$41,$20,  7,$24,  7,  4,$40,$A6, $F,  1,$61,$3D,$7B,$10, $E,$90, $E,$34,$D0,  8,$7E,$73,  1,$44,$10,  6; 4096
		dc.b $90, $A,$10,$7C,$10,  9, $C,$E0,  6,$FE, $A,$20, $C,  2,$10,$10,$1A,$10,$3D,$7C,$A0, $F,$7D,$10, $E,$35,$89,$3D,$7E,$10, $C,$82,$12,$1D,$7F,$1D,$80,$1D,$81,$AE,  2,  0,$6A,$10,$74,$10,$70,$14,$74,  2,$69,$14,$68,$10,$13,$F8,$6F,  0,$71,  0,$6D,  2,$10,$6D; 4160
		dc.b $14,$6C,$10,$23,$7E,  9,  2,$29,$8E, $D,$20,  9,$12, $A,$EE, $C,$3A,$13,$84, $D,$36,$20, $C,$3A,$60,$12,$84,$3E,$4A, $F,$BC, $E,$40,  6,$AA,$17,$A0, $F,$E0,$16,$AA, $A,  8,  7,$30, $A,$B0,$10,$13,$14,$4B,$14,$4A,$10,  2,$4B,$36,$23,$14,$21,$14,$1E,$14,$1D; 4224
		dc.b $10,$1E,$10,$21,$34,$80,  9,$7E, $A,$FA, $C,  1,  0,  1,$E0,$20,$7E,  8,$8A,  9,$80,$30, $A,$14,$80, $F,$14,$80,$7E,$80,  7,$32,$80,$7E,$80,$19,$D2,  0,$F1,  0,$F2,  4,$EA,  6,$10,$1C,$90,$10,$49,  4,$7F,$B0,$32,$74,  2,$84,  0,$EF,  0,$F0,  4,$2E, $A,  2; 4288
		dc.b   7,$2E,  9,  2,  6,$3C, $D,$B8,  8,  8, $C,$B4,$30,$78,  7,$80,$2C,$7E,$10,$F8, $B,  0,$50,$29,$54,$29,$4C, $A,$51,$44,$14,$54,$14,  6,  2,$14,$F0,$11,$50,$23,  0,$24,  4,$24,  6,  2, $A,$A0,$C0, $F,$10,$4E,  6,$86,  6,$20,$42,  9,$1A,$10, $E, $A,$10, $B; 4352
		dc.b $14,$77,$50,$2A,$54,  2,$7E,$7C,  2,$16,$54,  2,$7E,$54,$7C,  2,$7C,$7E,$CA,$24,  2,$C4,$16,$BE,  6,$D0,$88,  6,$D6,  7,$10, $C,$80,  6,  4,$1E, $F,$B0, $B,  2,  6,$10, $C,$56,$10, $D, $C,$10,$1E,  6,$C2,  6,$6C,$20,$3E, $B,$22,$20,$BC,  7,$C0,  6,$30,$14; 4416
		dc.b $8A, $D,  8,  6,$40,  9,$2A,$6E, $A,$6C, $A,$B8,  9,$10, $F,$6E, $A,$E6,$2E,$80,$10,$61,  9,$16,  6,$10,$19,$10,  9,$10,$37, $C,  6,$10, $B,  1,$7F,$90,$11,$10,$41,$50,$10,$10,$1F,  1,$7F,  1, $B,$D6,  0,$D7,  0,$D8,$10, $B,$DB,  0,$DC,  0,$DD,$10, $B,$E0; 4480
		dc.b   0,$E1,  0,$E2,$10, $B,$E5,  0,$E6,  0,$E7,$D3,$AF,  1,$B0,  4, $B,$E9,$10,$B1,  1,$B2,  4,$10,  9,$B3,  1,$B4,  4,$10, $F,  4,$27,  0,$B3,  0, $C,  4, $A,$EA,  0,$D9,  0,$DA,$7C,  9, $C,$DE,  0,$DF,$7C,  9, $C,$E3,  0,$E4,$7C,  9, $C,$E8,$7C, $B, $C,  1; 4544
		dc.b $AB,  1,$AC,$7C, $D,$AD,  1,$AE,$7C, $C,  0,$67,  0,$79,$7C,  9,  1,$83,  0,$F6,$7C,$10,  6,  3,$F0,$10,$54,$2F,$54,$B9,$54,$B5,$50,  2,$B9,$50, $A,$13,$F0,$11,$54,$21,$54,$1E,$54,$1D,$50,  2,$1E,$50, $A,$23,$A0,$72,$C0,  7,$C2,  7,  0,$B0,  2,  6,  0, $E; 4608
		dc.b $40,$DE,  6,$92,$40,$A2,  6,$9E,  8,  0, $F,  1,  0,  1,$72,$80,  6,$54, $D,$50,$8A,$50,$2E, $E,$23,$80,  9,$82, $E,$C0,  6,$80,$82,$E0,$2E, $C,$40,$1E, $D,  2,  6,$10, $D,$22,  7,$1E,$2C,$E2, $D,$74, $D,$58,$10,$33,$12, $C,  4,$41,  2,$47,$94,  8,  2,$11; 4672
		dc.b $E0,$1F,$10,$30,$1E,$17,$47,$C8,  7,$41,$72,  2,$4B,$54,$4A,$54,$45,$54,$43,  2,$6A,$84,  8,$54,$1C,$50,$1B,$3E,  7,$84,  4,$84,$20,  9,$A2,  8,$D0, $D,$30,$15,  0, $C,$F0,$10,$50,$43,$50,$45,$50,$4A,$50,$4B,$70,  7,  2,$74,$7A,$70,  6,$72,$74,$7A,$EE,$10; 4736
		dc.b $F0,  6,$EE, $B,$F0,$EE,  6,$16,$A8,  6,$F8,  6,$6C,$EE,$15,  1,  8,$C1,  0,$C2,  0,$C3,  0,$C4,$10,  9,$C6,  0,$C7,  0,$C8,  0,$C9,$10,  9,$CB,  0,$CC,  0,$CD,  0,$CE,$10,  9,$D0,  0,$D1,  0,$D2,  0,$D3,$42, $D,$D4,$52, $F,$10,  6,$5A,  0,$5B,  4,  4,$10; 4800
		dc.b   8, $F,  0,$5D,  0,$65,  4,  4,  1,$27,  0,$D5,  4, $E,$C5,$34, $F,$CA,$10, $F,$CF,$F5,$5E,$30,$10,$14,$33,$14,$66,$10, $D,$10,$2E,$10,$2F,$14,$13,$30,$12,$30,$11,$14,$37,$14,$1D,$10,  2,$1E,$10,$21,$10,$23,$30,$6E,$20,$72,  4,$39,$FE, $A,$20,$10,  0, $C; 4864
		dc.b $10,  6,  0,  7, $A,$10,$16,$82, $A,$20,  7,  2,  9,$10,$F4,$7F,$90,$90,  1,  9,  4,  0,$10,$10,$14,$2F,$14,$2E,$14, $D,$12,$14,  2,$11,$14,$21,$14,$1E,$12,$14,$1E,$D6,$90, $D,  2,$D0,  6,$92,  7,  2,$10,  6,$E6, $A, $A,  6,$1C,  6,  2,  0, $F,  6,  3,  2; 4928
		dc.b   8,$7E,  6,$C5,$10,$2F,$10,$13,  2,$12,$7E,  7,$CA,$86,  2,$6E,$7E,  7,$CF,$84,$EA,  6,$7E,  7,  4,$50,  7,$D4, $C,  4,$10,  8, $C,$F6,  7,$10, $C,$FE,  7,$84,$76,$D5, $C,$EE,$90,$11,$10,  8,$41,$10,$4D,$10,$4E,$10,$4F,$10,  7,$15,$10,$19,$10,$34,$10,$35; 4992
		dc.b $10,$1C,$10,  7,$1F,$10,$20,  0,$38,  0,$24,  4,$10,  7,  8,  6,$1A,$10, $D,$78,$20, $E,$43,$20, $F,$8C,$10,$52,$10,$53,$F4,$F8,$10,$50,$10,$3D,$10,$37,$F4,$F8,$10,$3E,  0,$3F,  0,$39,$6A, $A,  0,$F0,  6,$10, $A,$30, $E,$7A,  9,$80,  9,  0, $E,$1E,  6,$40; 5056
		dc.b  $C,  3,  0, $E,$50,$90,$2E,$8E,  2,$2E,  2,$90, $D,  2,$34,  0, $F,$32, $F,$88,$16,  2, $B,  0,$18,  1,  7,$50,$2F,  6,$12,$10,  9, $A,  6,$28,  9,  0,  9,$EC,$FC,$70,  8,$AF,  1,$B0,$F0,$F8,  7,  1,$B1,  1,$B2,$FC,$F8,  7,  1,$B3,  1,$B4,  0, $D,$B3,  0; 5120
		dc.b $10,$83,  0,$85,  0,$1A,$50,$4D,$50,$4E,$50,  0,  9,$50,$19,$50,$34,$50,$35,$50,  0,  9,$50,  0,$15,  8,$10, $E,  6,$10, $E,$73,  0, $F,  1,  0,  1,$8C,$50,$52,$50,$53,$76,$FA,  7,  1,$3D,$50,$37,$F2,$F8,$FA,  6,  0,  7,$76,$30,  0, $E,$E0, $A,$18,$88,$DA; 5184
		dc.b  $A,$20, $D,  8,  9,  0,$10,$90,$10,$D0,$1B,$52,$20, $C,$E6,$10,$41,$90,$10,$FE, $D,$D0,  8,$A6, $A,$10,  7,$50,$E6,$6A,  9,$26,  6,$10,$28,$B2,$1C,$A0,$1B,$B6,$20, $F,  1,$86,  0,$36,$41,  1,$88,  8,  4,$47,  4,  1,  2,$BA,  8,$14,  2,$4B,$14,$4A,$14,$45; 5248
		dc.b $BA,  8,$14,  2,$38,$B8,  8,$2C,$38,  6,$F0, $F,$B0, $F,$10,$40,$F2, $F,$4A,  7,$20,  9,$4A,  7,$BC,$47,$8A,$10,$43,  2,$78,$4A,$10,$4B,$8A,$1C,  2,$C0,  7,  2,$A4,  2,$AC, $B,  2, $F,  0,$43,$FE, $A,$E0,  7,$FE,  9,$B8,  7,$10,$13,$32,  9,  0, $F,  0,  9; 5312
		dc.b $10,  8,  0,  8,  0,$20, $C,  0, $C, $C,$F0,  8,  8, $C,$10,  8,  0,$FC,  0,  7,$54,$28,  7,  0,$7F,  2,  0, $E,  2,  0, $E,  0,$70,  8,$FC,$DC,$F0,$14,  0,$B8,$D4,$78,  8,$E2, $A,$F0,$16,$10,  9,$CE, $D,$D0,$BC, $A,$9C,$74,  2,  4,$56,  8,$45,$54,$13,  2; 5376
		dc.b $50,$46,  0,$51,$10,  7,$23,  2,$B0,$5F,$10,  6,$24,  2,  8,$10,$17,  0,$12,$FC, $A,$20,  6,$62,  8,$18,  6,$42, $B,$52,  6, $C,  6,  2,$10,  8,$7A, $F,$10,$1F,$A0,$20,$10, $A,  6, $A,$20, $D,$40,$10,$10,$2D, $A,  6,$A0,$16,$9E,  9,$10,  7,$A6, $B,$4C,$10; 5440
		dc.b $2A,$BE,  6,$4C,$6E,  6,$7A,$86, $B,$10,  0,$18,$D8,  8,$20, $E,$D0,  8,$10, $D,$32, $B,$20,  6,  0,$23,$10,  9,  0,$13,  2, $C,$DE, $F,$10,  6,$FE,  9,$F0,$32,$78,  6,$CA,$A2,  8,$A0,$11,$10,$22,$2C,$88, $B, $C,$10, $D,$40, $B,$20,$15,$10, $A,$64,  9,$70; 5504
		dc.b  $E,  1,  0,  1,$B0,  9,$B0,  8,$5A,  9,$2A, $D,$10,$3F,$E2, $D,  0,$1F,$F8,  7,$86,  8,$A0, $A,$76,$10, $A,$56, $D,$10,$33,  2,  7,$68,  8,$42,  8,$F6, $D,$26,$88,  6,$A2,$17,$2A,$1C,$3A,$1B,$E0,  2,  7,$98,  8,$18,  8,$10, $C,$41,  4,$47,$10, $B,$15,$30; 5568
		dc.b $19,$14,$4B,$F8,$40,  0,$47,  1,$88,$30,$20,$1C,$F8,$7E, $A,$30,$E4,$F8,  6,$7E, $A,$F8, $A,$7E,$19,$5C, $C,$4A,  2,$5C, $B,$4A,  2,$5C,  9,$2A,  6,$5C, $C,$60,$5C,$22,  2,$1E,$90,$10,$D0,$2D,$10, $E,$2E,  0,  6,$20,  8,$86, $A,$10,$1A,$8E, $E,$50,  0, $E; 5632
		dc.b $DE,$16,  0, $A,$6A,$2C,$10,$76,  7,  8,  8,$D0, $E,$A0, $F,$32,$20, $F,  1,$86,$36,  1,$88,  8,$40,$50,$13,  2,  6,  6,$4B,$54,$4A,$54,$45,$50,$23,  2,  6,  6,$21,$54,$1E,$54,$1D,$A8,  9,  8,  4,$25,$80,$1F,$82,$A6, $E,$A0,$20,$10, $C, $A,$47,$8A,$84,$50; 5696
		dc.b $43,  2,$78,$4A,$50,$4B,$8A,$1C,  2,$1D,$50,$1E,$50,$21,$88,$1E,  2,$78,$26,$18,  0,$1D,$10,$1E,$B6,$40, $D,$20, $F,$40, $D,$7C,$F0,$86,  4,$41,  2,$40,$10,$4D,$10,$4E,$10,$4F,$6C, $D,$42,  6,$46, $A, $C,$BC, $D,$6E,$1C, $C,  2,$84,$2A,  9,$47,$10,$52,$10; 5760
		dc.b $53,$14,$13,$2A, $C,$10,$3D,$10,$3E,$28, $C,  9,  0,$3F,  0,$40,$1C,$10,$50, $C,  8, $C,  6,$76,  6,  2,$10,$34,$10,$35,$10,$36,$76,  7,  2,  0,$38,  0,$24,$38,$32,$11,$AC, $A,$8C,  7,$EC,$1F,$78,  8,$82,$16,$10,$37,$98,  6,  2,  9,$39,$A2,  8,  1,$16,  8; 5824
		dc.b  $C, $B,$10,$25,$A8,  6,$8C,  0,$24,$D6,  0,$D7,  0,$D8,  0,$D9,  0,$DA,  4,  0,  1,  4,$DB,  0,$DC,  0,$DD,  0,$DE,  0,$DF,$10,  7,$E0,  0,$E1,  0,$E2,  0,$E3,  0,$E4, $E,$10,$E5,  0,$E6,  0,$E7,  0,$E8, $E,  6,  2,  1,$AB,  1,$AC,  0,$E9,$2B,$10,  8,$AD; 5888
		dc.b   1,$AE,$10,  6,$3E,$3A,  4,$79,  4,$67,$10,  7,$27,$10,$3B,$10,$3C,  4,$85,$10,$EC,$10,$8A,$10,$2D,$10,$2E,$10,$33,$8A,  1,  9,  1,$AF,  1,$B0, $E, $A,$4A,$B1,  1,$B2,$74,  7,$5A,  0,$5B,  4,$5A,  1,$B3,  1,$B4,$64,  6,  0,$5D,  0,$65,  4,  4,$B3,  0,$B4; 5952
		dc.b   0,  3,$64,$58,$66,$14, $D,$10,$B5,$10,$B9,$10,$13,$64,$58,$36,$14,$36,  4,$5E,$10,$23,$EE,  7,$25,$7A,  4,  2,$FA,  2, $A,$F8,$2E,$1E,$14,$37,  2,$1C,$14,$24,$2E,$26,  4,$39,  2,$28, $B,  2, $A,$B0,  8, $E,  6,$6C,$2D,  2,$12,  1,  0,  1,$4E,  4,$76,  2; 6016
		dc.b   8,  5, $C,$3E, $B,  5,$45,  4,$6E,$10,  6,  0,$B8,  4,$B6,  2,  5,$43,$10,  7,$EA,$10,$10, $A,$7E,$2F,  2,$2E,$FA,$38,  8,$6C,  7,$72,  2,$46,  0,$51,$10,  7,$23,  2,$6E,  0,$5F,$10,  6,$26,  7,$10,$19,$74,$21,$F0, $C,$EE, $C,$88,  8,$FC,$24,$15,$10,$19; 6080
		dc.b $8A,  6,$FA,  7,$1F,$10,$20,$8A,  6,$10,  8,$80,$AE,$10,$10,$A0,$1C,$3C,$20, $D,$30,$10,$10,  7,$7C,$10,$27,$AC,  9,$10,  7,$A0,$11,$40,$10, $C,$F0,  9,$20,  9,$10,$2A,$8E, $D,$C0, $A,  2,  6,$10,$10,$E2,$13,  1,$44,$52,  7,$86,  9,$FC,$E6,$50, $B,$72,  9; 6144
		dc.b $F2,  7,$10, $B,$92, $A,$B6, $A,$92,  7,$E6,$16,  7,$76,$20,$6C,  7,$E0,  8,$D0, $F,  2,$2A,$10, $A,$34,  8,$20,  9, $A,$10, $B,$40,$10,$E2, $B,$90, $A,$36, $A,  0,$1A,$B4, $A,$E0,$22,$50,$1A,$D0,$14,$B0,$20,$82, $D,$E0,  9,$82,  7,$4E,  8,$46,$42,$4E,$1F; 6208
		dc.b $20,$6E,$B0,  4,$78,$10,  7,$C4,  9,$10,$1C,$D0, $A,$30,$72,$30,  1,  2, $D, $A,$30,$8C,  2,$8D,$30,$8E,$30,$8F,$10,  8,$90,  2,$38,$91,$38,$92,$38,$93,$38,$94,$38,$95,  4,$B7,  2,  0,$90,  0,$97,  8,$98,  2,$38,$99,$38,$9A,$8E, $F,$C4,$80,  8,$10,  8,$D0; 6272
		dc.b  $A,$10,$AA,$7E,  6,$D2,$10,$30,$6E,$31,$44, $B,$10,$31,$43,$30,$D0, $B,$40,$20,$C0, $B,$10,$38,$9B,$10, $E,$30,$68,$30,$69,$30,$9C,$38,$9D,$38,$9E,$38,$9F,$92,$A0,$30,$6C,$34,$6D,$30,$A2,$B8,$38,$A3,$38,$A4,$38,$A5,$12,$74, $A,$12,$A8,$10, $C,$24,$3C,$AC; 6336
		dc.b $10,$B8,$5C,  6,$30,$A3,$30,$20,  6,$1E,  6,$AE,$30,$AF,$30,$B0,$10, $B,$B1,$30,$B2, $E,$3C,$B2,$10,  6,$3C,$A7,$3C,$A6, $C, $E,$B0,$3C,$AF,$38,$A1,$90,$D2,$B2,  6,$A0,$A6,$38,$A7,$72, $A,$10,$A9,$30,$AA,$10, $C,$3C,$AB,$38,$AD,$10, $C,$30,$A9,$38,$20, $D; 6400
		dc.b $30,$A6,$30,$40, $D,$3C,$B1,$F0,$10, $A,$AE,$10, $E,$90,  6,$34,$AA,$3C,$A9,  4,$90,$A8,$3C,$A3,$10,  7,$AD,$38,$AB,$10,$38,$AC,$E4,$10,$16,$3C,$AA,$34,$30,$34,$A8,$34,$30,  8,$A7,$34,$A6,$10,$A5,$34,$A4,$F0,  8,$34,$A1,$34,$A0,$12,$9F,$10,  9,$9B,$34,$9A; 6464
		dc.b $34,$99,$12,$C2, $A,$34,$95,$34,$94,$34,$93,$A0,  7,$90, $B,$10,$26,  4,  6,$21,$40,$82,$20,  7,  0,  7,$34,$9E,$24,$9D,$20,$8C,  2,  9, $B,$72, $C,$97, $C,$90,  2, $A,$34,$92,$34,$91,  4,$90,  2,  6,  0,$B7,  2,$36,$73,$64, $A,$3C,$8F,$64, $D,$74, $D,$76; 6528
		dc.b   7,$20, $A,$96,  6,$10,$19,$24,  7,$50,$14,$2A,  6,  2,$76,  0,  1,$3C,$8E,$3C,$8D,$3C,$8C,  2,$30,$96,$30,$6B,$34,$69,$34,$68,$5A,  6,  2,$6E,$30,$6F,$30,$6D,$34,$6C,$D8, $C,$30,  6,$6E, $A,$10,$14,$EA,  9,$5C,$10,$10,  8,$7A,  8,$34,$10,  1,$7F,  1,$37; 6592
		dc.b $D6,  0,$D7,  0,$D8,  0,$D9,  0,$DA,$10,  7,$DB,  0,$DC,  0,$DD,  0,$DE,  0,$DF,$10,  7,$E0,  0,$E1,  0,$E2,  0,$E3,  0,$E4,$10,  7,$E5,  0,$E6,  0,$E7,  0,$E8,$44, $D,$E9,$C4,$7F,  1,$10,$90,$10,$10,  1, $A,$10, $F,  9, $E,  9, $F,  0,$EA,  0,  3,  1, $B; 6656
		dc.b  $F,  8,$10,  1,$14,$14,$13,$10,$13,$10,  9,$11,$10,$24,$14,$23,$10,$23,$30,  9,$8E,$1C,$10,$10,$9C, $D,$E4,$AC, $E,$6E,$10,  8,$FE,  7,$77,$20,  9,$F6, $B,$EE, $A,  1,$40,$40,$18,$26,  8,  1,$86,  4,$41,  2,$47,$7E,  7,$90,  9,$84,  8,$C0,  9,$24,$14,$20; 6720
		dc.b  $A,$E0,$16,$CE,$10,$DE,$11,  0,$16,$47,  0,$10,  2,$14,$13,  2,$4B,$14,$4A,$14,$45,$14,$43,  2,$23,  2,$21,$14,$1E,$14,$1D,$14,$1C,$10,$1B,$A4,$B8,$9C,$26,  2,$25,  4,  0,  4,$32,$6E,$BC,$18,$CE,  7,$77,$E6,  7,$AE,  6,$E6, $A,$18,  6,  2,$1D,$10,$43,$10; 6784
		dc.b $45,$10,$4A,$10,$4B,$10,$BC,  2,$74,$1D,$10,$1E,$10,$21,$10,$BC,  2,  0,$74,  4,  2,$6E,  8,$78,  8,$6E, $A, $A,  6,$6E, $A,$78,$25,$92,  9,$AB,  1,$AC,$58,$AF,  1,$B0,$16,$C1,  1,$AD,  1,$AE,$10,$B1,  1,$B2,$10,$C6,  4,$79,  4,$67,$10,$B3,  1,$B4,$10,$CB; 6848
		dc.b   4,$85,  4,$83,  4,$27,  0,$B3,  0,$10,  6,$D0,$50,$13,  2,$54,$2F,$54,$B9,$54,$B5,$54,$31,$54,$30,  4,$3A,$50,$24,  2,$23,$50,$37,$54,$36,$54,$35,$54,$34,$54,$3C,$68,  7,$39,$3E,$24,  4,$38,$54,$3E,$7E, $E,  4,$CA,$C2,  0,$C3,  0,$C4,  0,$C5,$B0,  9,$C7; 6912
		dc.b   0,$C8,  0,$C9,  0,$CA,$10,  9,$CC,  0,$CD,  0,$CE,  0,$CF,$10,  9,$D1,  0,$D2,  0,$D3,$C0,$10,  7,  1,$D4,$D0,  6,$10,  6,$54,$3B,  4,$88,$10, $D,$3D,$84,$14,$3A,$10,  8,  4,$3F,$84,$14,$33,$54,$56,$54,$4E,$54,$4D,$54,$42,$DA,  4, $A,$C8,  7,$6C,$1A,$10; 6976
		dc.b   8,$B4,$34,  6,$FA,  7,$68,  7,$20,  8,$90,$40,$10, $B,$40,$14,$1A,  8,$80, $E,  4, $D,$94,$30,  8,$50,$13,$88,  7,$30,  7,  0,$24,$8C,$14,$98,$B0,  9,$20,$DC,$30,  8,$68,$10,$20,  7,$9C,  8,$80,$19,$C1,$82,  9,  1,  6,$C6,$82,  9,  1,  6,$CB,$82,  9,  1; 7040
		dc.b   6,$D0,$82,  9,  1, $A,$82,  6,$10,$26,  3,  2,$D5,  4, $F,$6C,$7F,  1,  9,$C0,$13,$F0,$12,$10,  9,$23,  2,$F0,$6E,$21,  9,$C8,  8,$10,$56,  0,  0,  1,  1,$7F,$90, $C,$54,  6,$10, $A,$54,  6,$10, $A,$54,  6,$10, $A,$54,  6,$34,  8,$42,  6,$E9,$10,  9,$42; 7104
		dc.b   6,$10, $A,$42,  6,$E9,$FE,$41,  0,$84,$42,  7,$20,$C4, $A,  1,  6,$C4, $A,  1,  6,$C4, $A,  1,  6,$E8,$FC,$4E,$55,$48,  2,  6,$C4,$B5,$28,$8B,$54,$23,  2,  7,$21,$92,$3C,$A8,  6,  2,  0,$3C, $A,$7E,  8,$16,$40,  8,$7E,  7,$46,  6,$10,  6,  2,  9,$EC,  0; 7168
		dc.b   7,$86,$15,$C0,  6,$DC,  8,$42,$AC,$10,  6,$42,  1, $A,$C0,  7,$8B,$84,  6,  1,  9,$C0,  7,$14,$42,  1, $B,$84,$D4,  7,$50,$2F,$50,$13,$AE,  7,$14,$37,$50,$21,$50,$23,$66,  7,$68,$39,$46,  0,$12,$F8,  8,$50,$47,$10,$12,$62,$10, $C,$62,$30,$10,$B0,$BA,  6; 7232
		dc.b $10,$53,$BA,  0,$BB,  4,  4,$10, $A,$BC,  0,$BF,  4,$BC,  1,$86,$FE,  2,  0,$E2,$90, $B,$10, $B,$3A,$50,$3B,$10,  9, $C,$50,$3C,$50,$3D,  4,  3,  4,$85,$50,$EC,$50,$8A, $C,$50,$3E,  0,$3F,$54,$13,$51,$48, $A,$1B, $C,  0,$40,  1,$42,$54,$3E, $A,$25, $C,$F8; 7296
		dc.b   6,$7E,  8,$8A,  9,$80,$10,$58,$C0,$50,$2F,$46,  2,  6,$58,$36,$BA,  2,  7,$58,$4E,$BA, $A,$72,$4A,  4,  8,$74,  6,$86,  6,$1C,  6,$6A,  4,$6E,  6,  6,  2,$1B,  1,$14, $F,$E6,$A8,$EC,  4,  1,$10,$10,$14,$13,$10,$13,  4,  2,$CE,$10,$11,$14,$23,$10,$23,  4; 7360
		dc.b   2,$CE,$5C,$46,  6,  2,$67,  0,$79,$10,  6,  8,$10,  8,  6,  9,$83,  0,$85,  1,$86,  4,$47,$98,  9,$12, $A,$7E, $B,$76,  1, $B,$7C,$24,$74,  2,  7,$A4,$74,  2,  7,$44,  6,$78,  7,$54,  8,$76,  7,$16,$20,$78, $A,$10,  6,$F8,  8,$47,$84,$66,$D8,  6,$14,$4C; 7424
		dc.b $14,$4A,$14,$45,$14,$43,$10,$42,$D8,  6,$14,$21,$14,$1E,$14,$1D,$14,$1C,$14,$1B,$E8,  4,$26,  0,  4,$4C,$1D,  2,$33,$72,$76,$45,$10,$4A,$10,$4C,$E6,  7,$1B,$10,$1C,$10,$1D,$10,$1E,$10,$21,$E6,  6,$FC,  4,$BC,$14,  2, $D,$E0,  7,$10,$30,  1,$70,$58,  7,$DE; 7488
		dc.b   6,  1,$2F,$C1,  0,$C2,$10, $D,$C6,  0,$C7,$10, $D,$CB,  0,$CC,$10, $D,$D0,  0,$D1,$38,  9,$C3,  0,$C4,  0,$C5,$38, $B,$C8,  0,$C9,  0,$CA,$60, $B,$5E,$60, $B,$A2,  8,$30,  8,$10, $E,$3E,$C4,$27,$30,$BE, $B,$14,$2F,$14,$2E,$BE, $C,$46,$BE, $C,$46,$80, $F; 7552
		dc.b   1,  0,  1,$B8,  9,$CD,  0,$CE,  0,$CF,$B8, $B,$D2,  0,$D3,$CC, $D,$D4, $C, $F,$D5,$2A,  4,$14, $D,  2,$10,  2,$78,$2F,$82,  2,$B6,$82, $B,$23,$B6,$82, $B,  0,$26,  1, $C,$38, $C,  1,$38,  7,  1,  9,$B8, $C,  1,$B8,$D0, $C,$B8,  1,$6B,  1,  9,  5,$6B,$B8; 7616
		dc.b  $A,$E0,$3C,$62,  7,$7F,$70,$7A,$10,$DC,  2,  6,  8,  7,$DC,  2,  6,$80,  7,$38,  7,$3A,  8,$BC,  8,$10,  8,$3C,  9,$45, $A,  7,$3C,  8,$1D, $A,  6,$3C,  9,$25,  0,$8A,$86,$50, $E,$7A, $A,$80,  9,$6A,  8,$70,  8,$10, $E,$B8,$7A,$CE,$30,$7A,  9,  8,  2,$7A; 7680
		dc.b   9, $A,$1C,$7A, $A, $A,$80, $F,  0,$44,$22, $F,$10,$18,$44,  6,$10,  8,$44,  8,$7C, $C, $C,$7C, $C,$C4,  6,$7E, $A,$C4,  6,$7E, $A,$D4,$10,  1,$24,$7C, $C,  1,$7C, $C,  1,$36,$7E, $A,$90,  6,$BA, $A,$A0, $A,$D4,$F6,$10,  8, $A,$27,$C6,$C2,$D5,  4,$27,$7C; 7744
		dc.b   6,$3E,  8,$14,$2F,$7C,  6,$3E,  8,$14,$21,$7C,  6,$EE,  8,$86,$88,$10,$C4,$34,  2,  7,$88,  3,$F8,$FA,  7,$88,$F8,$7A,  4,  7,  0,$B4,$F8,$88, $B,$84,  8,$88,  3,$50,$29,$54,$29,$14, $A,$50,$13,$50,$14,$54,$14,$50,$94,  9,$50,$23,  0,$24,  4,$24,$50,$84; 7808
		dc.b   9,$36,  7,$94, $A,$1E,  7,  1,$A9,  1,$AA,  4,$42,  1,$44,$20,$F1,  0,$F2,  4, $A,$42,$10, $A,  1,$43,  1,$41,$20, $D,  1,$3F,$78,  9,  4,  7,$58,  9,  4,$28,$DE,  8,$10,$18,$B8,  1,$40,$B0, $D,$72, $C,$10, $D,$73,  0,$77,$10, $D,$50,$20,$10,$10,  4,$7F; 7872
		dc.b $4C, $A,$50,  7,$4C, $C,$2E,  2,$4C,  7,$50,$52,$D0,  9,$50,$56,  9,$16,$42,  0,$76,  2,  6,  1,$44,$10,  7,$45,  2,  6,$30,$20,$43,  0,$B6,  2,  7,$10,  2, $B,$C4,$84,$80,  9,$C8,  6,$14, $A,$D0,  6,$14, $A,$42,  7,$10,  1,$AB,  1,$AC,$70,  9,$AF,  1,$B0; 7936
		dc.b   1,$AD,  1,$AE,$60,  7,$10,$B1,  1,$B2,  0,$67,  0,$79,  1,$41,$10,  7,$B3,  1,$B4,$10,$BE,  8,  0,$B3,  0,$10,$83,  0,$85,$90,$11,$10,  8,$41,$10,$4D,$10,$4E,$10,$4F,$10,  7,$15,$30,$19,$10,$34,$10,$35,$50,$10,  6,$1F,$30,$20,  0,$38,  0,$24,  4,$10,  7; 8000
		dc.b $20,  8,  6,$B8,$10, $F,  6,$10, $E,$73,$10, $F,  1,  0,  1,$8C,$10,$52,$10,$53,$3A,$FA,$30,$FA,$50,$10,$3D,$10,$37,$F2,$F8,$FA,$30,  8,$3E,  0,$3F,  0,$39,$76,  6,  6,$20,$30,$40,$AE, $C,$10,$58,  7,  1,$18,$21,$42,$1C,  9,$6E,$20,  6,$98,  7,  0,$77,$10; 8064
		dc.b   7,$EE, $D,$10,  1,$D6,  0,$D7,  0,$D8,  0,$D9,  0,$DA,$63,  7,$DB,  0,$DC,  0,$DD,  0,$DE,  0,$DF,$10,  7,$E0,  0,$E1,  0,$E2,  0,$E3,  0,$E4,$2A,  1,$E5,  0,$E6,  0,$E7,  0,$E8,$2A,  7,  1,  6,$E9,$2A,  9,$10, $C,$2A,$10, $C,$B4,  7,$10, $C,  1,  7,$24; 8128
		dc.b  $A,$5E, $E,$CA,$9A,  7,$A4, $A,$9A,  6,$A4, $A,$9A,  6,$9E,  7,  1,$9A,  6,$10, $A,$6A, $A,$10,$15,$34,$16,$40,  4,$24,$10,$40,$44,  8,$10,$40,$44,$ED,  0,$F6,$46,$40,  4,$54,$13,$54,$2F,$54,$2E,$54,$89,$50,$B5,$50,$B9,$50,$2F,  2,$54,$23,$54,$21,$54,$1E; 8192
		dc.b $54,$1D,$50,  2,$1E,$50,$21,  2,$2E,$30,  8,$2E,$80, $F,  2,$A0,$1F,$10,$11,$EA,  4,$7A,  2,$7E,  6,$80,  2, $E,$80,  2, $D,$6A, $B,  2,$16,$70,$30,$C0,  6,$10, $A,$40,  1,$9B,  1,$9C,$11,  9,$74,$9D,  1,$9E,$10, $D,$9F,  1,$A0,$10,  9,$74,  1,$95,  1,$96; 8256
		dc.b $F2, $A,  6, $F,  1, $C,  6,$AA,$10,$2E, $C,  6,$2E, $E,$D2,$10,  1,  6,$2E, $A,  1, $A,$DC,  7,$B8,  6,$72,  8,$CA,$11,$A1,$11,$A2,$72, $A,$CA,$A3,  1,$A4,$72, $B,$CA,$97,  1,$98,$42,  6,$7E,$27,  0,$B3,$11,$93,$11,$94,$10,$4A,$10,$4C,$FE,  6,$14,$B9,$7A; 8320
		dc.b   8,$FE,  6,$14,$1E,$7A,  8,$FE,  7,  0,$11,$3A,$78,$90,$48,$3A,$78,$10,$48,$3A,$78,$10,$48, $A,  0,  4,$B4,  4,$B3,$FE,$48,$14,$B5,$AC,$B5,$10,$78,$38,$14,  2,$1D,$14,$82, $C,$23,  4,$25,$74,$82, $A,  0,$12,$76, $C,  1,$48, $C,  1,$48, $C,  1,$48,$17,$10; 8384
		dc.b  $C,  1, $A,$10, $C,  1,$6B,  1,  9,  5,$6B,$10,  9,$D5,  0,$B8, $B,$C0,  2,  6,  1,$6F,$7A,$7A, $D,$10,$10,$34,  2,  8,  7,$11,$11,$A5,$11,$A6,$14,$3A,  6,$23,  0,$72,  1,$A7,  1,$A8,$C6,$B0,  8,$86,  5,$92,  5,$91,$10, $A,$74,$4C,$15,$90,$14,$45,  2,$10; 8448
		dc.b $43,$10,  4,$4A,$30,  8,$32,$88,$30,  8,  2,$8A,$86,$3C,$40, $C,$EC, $A,$90,$EC, $B,$61,  6,$7A,  6,  1,  9,$7A,  8,$B0,  8,$7A,  8,$B4,  8,$7A,  9, $A,$1C,$7A, $A, $A,$80, $F,$88,$FF,  4,$FE,  4,$FD,  4,$FC,  0,$FB,  0,  4,$FD,  0,$FF,  5,  3,  5,  2,  5; 8512
		dc.b   1,  5,$5B,$FB,$ED,  1,  3,  8, $F,  6,  1,  7,  1,  8,$22,  2,$11,$29,$16,$13,$18,$39,  1,$36,  4, $A,$5C,  1,$5D,  1,$3E,  1,$3D,  1,$3B,  4,  5,  8,  2,$1B,  1,$1C,  1,$1D,  1,$1E,  8,$65,  1,$5F,  2,$30,  6,$86, $A,$91,  4,  5,  4,$86, $A,$58, $F,  8; 8576
		dc.b $8C,$1A,$80, $F,$82,  5,$37,  6,$74,$3F,  4,$80,$82,$84,$76,$2A,$80,  6, $C,  5, $E,  1,$11,  2,$1F,$45,$21,  2,$70,  1,$2B,$16,  5,$5E,  1,$23,  1,$62,  1,$2F,  2,$71,  1,$6D,  2,$32,  5,$35,  1,$35,  4,  5,$34,  1,$33,  4,  2, $A,  0,$F8, $C,  9,$33,  8; 8640
		dc.b   0,$F9,  2,  8,  8,  2,  6,  8,$F9,  4,  4,  0,$FA, $E,  4, $C,$FA,  8,  8, $A, $C,  6,  2,  7, $C,$FA,  0,  1,$7A,$2E,  4,$7C,$12,  9,$12,  5,$16,  1,$15,$74,$80,  6,  5,$19,  1,  2,$2F, $D,$72,  9,$35,  2,$80,$7A,  7, $C, $A,  2,$82,$5E,$F8,  5,$7E,$72; 8704
		dc.b  $A, $C,$70, $A,  8,$FA,$82, $A,  7, $C,$82,  4,  8, $E,$8E, $C,  1,$12,$E6,$76,  6,  1,  6,$E6,$76,  6,  1,  6,$E6,$76, $A,$E6,  6,$76, $A,$F0, $F,$10,$10,$40,  7,$20,$10,  1,$57,  1,$66, $B,  9,$5A,  0,$5B,  4,$5A,  1,$67,$10,  9,$5D,  0,$65,  4,$5D,  1; 8768
		dc.b $68,$C0,$90, $D,$F0,  7,$10,$17,$3A,$C0,$F6,$10,  7,$27,$50,$3B,$50,$3C,$72,$2F,$54,$32,$50,$8A,$50,  4,$33,$50,$3D,$50,$3E,$74,$21,$54,$36,$50,$1A,$50,$1C,$50,$1D,  0,$3F,  0,$40,$62,$FE, $A,$7C,$10,  6,$58,  7,$4C,$66,$50,$2F,$51,$48, $C,  7,$3C,$4C,$46; 8832
		dc.b $21,$50,$23, $C,  7,$3E,$4C,$44,  1, $C,  7,$58,  1,$42,  0,$76,  1,$44, $C,  6,$A2,  6,  1,$45,  0,$72,$5A, $B,$43,  0,$B6,  1,$41,$FE,$1F,$80,  8,  1,  8,$90, $F,$34,$9C, $D,$10,$23,$10, $F,$40, $F,$30,$10,$21,  0,  7,  1,$39,$7B,$20,  3,$10,$29,$10,$2A; 8896
		dc.b $14,  2,$29,$16,$30,$13,$10,$14,$10,$16,$14,  2,  1,$96,$30,$72,$24,  2,  4,  2,$96,$C0,$10,$31,  6,  6,$10,  9,$30,  6, $C,$1E,  8,$10,  7,$1E, $B,  8,$73,$1C,  0,$77,$10,  6,  0,  7,$90,  6,$7C,$90,$F0,  6,$10,  6,$7D,$10, $C,$39,$7E,$31,$89,$40,$83,  0; 8960
		dc.b $85,$19,$81,$19,$80,$19,$7F, $E,$1E,  1,$10,$68,$10,$69,$10,$74,  2,  0,$6A,  0,  4,$70,$10,$6C,$14,$6D,  4,  2,$B6,$6F,  0,$71,$AA, $B,$9E,$18,$18,  2,  8,$90,$18,  2,  8,$BE,$14,$D8,$2A,$D8,$E0,  8,$D0,$10,$50,$30,$80,$70,  1,$7F,  1,$11,$10,$F3,  2, $E; 9024
		dc.b $42,$11,$B5,  1,$B6,  4, $C,  0,$7C,  0,$7D,  4,$4C,$80,$7F,  4,$7F,  4,$7F,  4,$34,$63,  0,$64,  4, $C,$10,$7E,$10,$7F,  4, $D,$80,$10,$81,  4, $C,  0,$80,  0,  4,$1C,$81,  0,  1,$80,$7F,$81,$50,$70,$50,$6B,  2,  8,$F0,  2,$A0,$72,$A0,  1,  2,$FD,$89,$F5; 9088
		dc.b $7F,$F5,$80,$F5,$24,$B4,$CD,$89,$C5,$7E,$90,  6,  4,$7A,  1,$52,$C0,  1,$C5,$88,  1, $A,$72,$10,$9A,$10, $E,$7B,$10, $E,$CD,$53,$10, $F,$50, $D,  8,$74,$82, $A,$10,$6A,$F1,$81,$F1,$80,$F1,$7F,$F1,$8B,$A1,$49,  2,$21,$47,$26,  6,$31,$4F,$31,$8B,  1,$49,  2; 9152
		dc.b $10,  4,  2,$31,$4B,$31,$10, $E,$4C,$10, $A,  4,$31,$4D,$10,  8,$BE,  7,$10,$10,$30,  5,$4E,$10,$90,$CC,$54,$9F, $A,$E2,$C1,$8C,$C5,$56,$12, $C,  5,$7A,$C1,$8D,$C5,$55,$C5,$26,$A4,  6,$6E,$51,$72,$51,$73,$51,$74,$51,$75,$54,$14,$54,$7B,$C0, $A,  2,$54,$24; 9216
		dc.b $54,$82,$50,$6D,  2,  0,  2,  8,$80,$27,$39,$4B,$35,$4E,  5,$82,  1,$4A, $E,  7,$F0,$8A, $E,  8,$31,$78,$31,$79, $E, $A,$51,$76,$51,$77,$51,$8A,$45, $E,  6,$8C,$76,$75,$50,$90,$51,  6,$7B,$8E,$74,$6F,$10,$5F,$50,  6,$82,$8E,$34,$45,$16,$5F,  6,$44,  8,$10; 9280
		dc.b  $B,$10,$70,$10,$6B,  2,  6,$30,  2,$20,$72,$20,  1,  2,$3D,$89,$35,$7F,$35,$80,$35,  0,  7, $E,  0, $B,$30,  1,$35,  0, $D,$10,  0, $D,$10,  0, $D,$10,$3D,  0, $D,$10,  0,  9,$74,$82,  8,  2,$6A,$31,$81,$31,$80,$31,$7F,$31,$8B,$21,$49,  2,$B0,  7,  1,$4F; 9344
		dc.b   1,  0, $F,  1,$4B,$10, $F,$4C,$10, $F,$4D,$10,  8,  1,  6,  9,$10,$10,$30,  0,  8,$90,$3C,  0, $F,$31,$8C,$35,  0, $F,$31,$8D,$35,$55,$35,  0, $B,  1,$72,$35,$58,$35,$57,$15,$60,$14,  1,$7B,$C0, $B,$6B,$14,$24,$14,$82,$10,$6D,  2, $A,  0,$28,  9,$4B,  5; 9408
		dc.b $83,  0, $A,  9,$4F, $E, $A,  1,$78,  1,$79, $E, $A,$15,$6A,$15,$69,$15,$83,$15,  0,  9,$76,$75,$10,$6E,$11,$51,  6,$7B,$8D,$76,$6F,$10,$5F,  6,$82,$8E,  0,$20,$46,$D6,  0,$D7,  0,$D8,  0,$D9,  0,$DA,$8B,  7,$DB,  0,$DC,  0,$DD,  0,$DE,  0,$DF,$10,  7,$E0; 9472
		dc.b   0,$E1,  0,$E2,  0,$E3,  0,$E4,$10,  7,$E5,  0,$E6,  0,$E7,  0,$E8,$A7, $D,$E9,$B7, $F,$10,$30,  1,$7F,$A0,$1A,$4E,  6,$10,  8,  6, $A,  3,  2,$EA,$10,  8,$10,$34,  2,$12,$10,  9,$38,  2,$6E,$30,  9,$74,  6,$6E,$D1, $A,$10, $F,  1,$7F,  1,$7F,  1,$5B,  1; 9536
		dc.b $5B,  1,$67,  5,$5B,$12, $D,$66, $D, $B, $F,  4,  3,  1,$68,$CA,  1,$7E,  0,  0,  1,  1,  8,$50,$10,$54,$13,  2,$50,$13,$10,  9,$11,$54,$23,  2,$50,$23,$36, $A,  4,  1,  2,$30, $A,$10,$49,$FB,  2,  9,$FC,  0,$FD,  0,$FF,$10, $A,$29,  1,  3,  1,  8,$22, $B; 9600
		dc.b $1A,  8,  5,  1,  6,  1,  7,$1A, $A,  1,$36,$1E, $C,  5,$39,  1,$38,  1,$37,  1,$39, $E,  7,$3E,  5,$3D,  1,$3C,  5,$3B,  1,$3D, $A,  1,$3F,  1,$5C,  1, $C,  1, $D,  5, $E,  1,$28,  1,$29,  1,$2A,  1,  8, $D,$7C, $B,$FE,$7E,$95,$7C,  9,  2,$7E, $E,  5,  8; 9664
		dc.b   5,  7,  5,  6,  5,  5,$88,$12,$94, $D,$84, $D,$80,$38,  5,$36,$86,  1,$5D,  2,  5,$5C,$80,$3C,  1,$3B,$86,  1, $F,$80, $B,$6C,  5,  4,$12,  1,$15,  5,$2B,  1,$2C,  1,$2D,  1,$2E,  9,$2B,  5,$13,  1,$2F,  1,$32,  4,$30,  1,$31,  8,  2,$26, $D,$33,  1,$34; 9728
		dc.b   9,$35,  1,$35,  4,  2,  5, $A,$33,  0,$F8,  4,  1,  2, $A,  2,$11,$F9,  2,$15,$FA,  2, $E, $E,  2, $B,$7E,$80, $A,  1,$64,$82,$72,$80, $B,$23,  1,$24,  5,$33,$82,  5,$80,  7,$78,$68,$82,$16, $C,$54,  6,$14, $E,  9,$70,$14,$7C,$15,$80,$C6,  6,$80,  9,$FC; 9792
		dc.b  $B,$80,  7,$F0,$12,$88,$1D,$37,$B2,$36,$FE,  8, $E,$74,$3E,  1,$7E,$3F,  0, $A,$6C,$7A,  2, $B,$38,  8,  4,$FF,  4,$FD,  4,$86,$44,  8,  4,  5,  3,$75,  5,  0,$5E,$10, $C, $E,$1F,$7A,$FA,  6,$10,  7,$7A,$80,$FA,$7E,$84,$7E, $D,  2,$64,  1,$5E,  1,$63,$10; 9856
		dc.b  $B,$74,  1,$6D,  1,$6F,  1,$6E,  4,$6E,$76,$78,  9,  2,  5,  2, $A,$86,  7,$F9,$72,$7C,  7,$FA,$15,$74,  6,$72,$13,$80, $F,$78,  7,  5,$84,$1C,  1,$1E,$90,$76,  2,$6E,  5,$84,$25,$8C,$62,$6E,  0,$76,$8A,$72,  6, $A,$34,  8,  6,  2,  8,  0,  9,$FC, $C,$82; 9920
		dc.b $24,$3E, $D,  4,  0, $B,$86,  6,  0,$31,$80,  4,$82,  7,$78,$3B,  5,$3D,  2,$80,  5,$6C,$78,$FA,$11, $A,  6,  4,$FE,$F8, $C,$3C,  2,$F8,  6,  5,$6E,$1D,$92,$1C,$7C, $E,$80,  9,$80,  4,  2,$FE,  2, $D,$78,$80,  6,$8A,  6,$20,  1,$70,  1,$2B,  2,$12,  9,$17; 9984
		dc.b   5,$15,  9,$15,$FE,$71,$84,  5,  4,$19,  5,$1A,  4,$F6,  4,  6, $A,$F8,  8,  0, $D,$86,  8,$F8,$14,  0,$20,$16,  2,$16,$78,  2,$12,  8, $A,$72,$7C,  4,  2,$26,  8, $C,$72,$80,  6,$80,  8,  0,  6,$8A, $A,$78,  2,$18,$80,$21,$F7,$7F,  1,$7F,  1,$32,  4,  3; 10048
		dc.b   2,  6,  0,  2,  8,$14,$13,  2,  6,$10,  2, $A,$23,  2,  6,$10,  2,  8,$62,  2,$6E,  7,  2,  9,$10,  7,  1,  0,  1,$80,$34,$7C,  8,  6,$7C, $C,  6,$7C, $B,  6,$6C, $C,$82,  8,$10, $D,$FC, $D,$7B,$FC, $F,$82,$1E,$7C,$12,$78,$7C,$12,  6,  6,$36,  1,$3A,$FE; 10112
		dc.b $FC,  6,$3D, $C,$1B,$E8,$1D,  1,$1E,  1,$27,$84,  7,$46,$FE,  8, $B,$FE,  8,  7,$72,$12,$88,$1E,$F6,  7,$84,$84,  7,$7A,$F6,$86,  8,  1,$5C,$FA,$FE, $F,$80,$82,  1,$1F,  2,$21,  1,$22,  2,$84,  6,  0,$25,  2,$84,  7,$78,$6C,$7E,  4,  5,  6,$8E,$8C, $C,  8; 10176
		dc.b $35,$84,$8A,  6,  2, $A,$14,  7,  8,$F9,  4,  8,  4, $C,$10, $C,  2, $A,$78,  8,  8,$FA,  4,  6, $C,$FA,$78,$13,  1,$14,  4,  1,$17,  2,  8,$7A,$80,$1A,  2,$18,  1,$19,$84,$32,$78,  6,$82,$84,$6E,  4, $C,$72, $A,  6,  4,$8A, $A, $C,$62,$82,  8,$7C,  7,  6; 10240
		dc.b   8,  2,  8,$88,$7A,  7,  2,$7E, $A,$4E,$14,$F0,$28,$22,  8,  0, $C,$F4,  0,  1,  8, $A,$39,$F4,$3C,  4,$80,$86,$10,$7A,  5, $E,$7A,$28,  4,$60,  2,$7E, $C,$4C,$7E,$1B,$14,$1E, $C,$16,$F2,$5D,  2,  5,  2,  8,  4,$8E,$74,  2, $A,$82,$17,  2,$15,  5,$14,$7A; 10304
		dc.b $2C,  4,$61,  2,  5,$18,  2,$1A,$FE,  0,  4,$62,  2,  0,$FC,$86,$FC, $A,$84,  6, $C,$F2,  8, $A,$F8,  7,$84,  4,  6,$84, $E,  8,$16, $A,  8,$7A,$82,  6, $C, $A,$74,  2, $A,  1,$2D,$74,  2, $A,$82,$78,  7,$82,  2,$70,  7,$FA,  4,  5, $E,$74,$6C,  2,  6,$F4; 10368
		dc.b $72,  6,$F6,$90,$92, $A, $A,$7E,  4, $A,$C4,  6,$80,$24,$1E, $B,$1C,  7,$90, $C,  4, $C,$78,$38,  5,  4,$74,$FA,  6,$3C,$82,$8E,$5E,$7E, $D,$2A,$E6,$14,  5,  7,  5,$88,$92,$34,$84, $F,  6,$80,  4,$FC,$86,$1D,  2,  4, $C,  8,$1B,$80,$F6,$7E,  8,  0,$F6,$7E; 10432
		dc.b   9,$32,$80,$F4,$82,  7,$86,  2,$68,  5,$80,$9A,$FE, $A,$9A,  6,$EA,  8,  8,  6,  6,$8C,  6,$72,$8C,$FE,  7,  0,$7F,  0,$7F,  0,$7F,  0,$7F,  0, $B,$FA,  0,  0; 10496
;
; yet another leftover chunk
;
Leftover_E0178:	dc.b $7F,  0, $B,$FA,  0,  0,  0,  0,$78,$CB,$D0,$C1,$11,$59,$C4,$EA,  3,$47,$50,$70,$74,$82,$50,$12,$1A,$3A,  8,$68,$EA,$23,$AF,$4B,$D0,$5E,$E2,$22,$22,$22,$2B,$DD,$6D,$97,$D6,$FA,$A8,$95,$54,$4A,$B3,$12,$AA,$DE,$A2,$F5,$94,$E0,$18,$2B,$55,$66,$29,$C7,$6D,$3D; 0
		dc.b $88,$8A,$D5,$22,$22,$22,$B5,$D6,  5,$7B,$92,$8E,$C6,$8E,$10,$73,$F9,$EB,$34,$A8,$67,$9A,$5C,$20,$21,$98,$30,$60,$D2,$B8,$D4,$EB,$72,$46,$EA,$B8,$FA,$9B,$2D,$6C,$35,$6C,$C2,$99,$1E,$E8, $F,$D6,$1F,$EB,$4F,$F9,$8A,$6B,$D0,$FA,$69,$76,$47,$D1,$4D,$72,$3F,$23; 64
		dc.b $D0,$F2,$F2,$86,$9D,$30,$F2,$AB,  3,$FD,$6D,$54,$AF,$56,$C4,$B7,$C9,$7F,$58,$CB,$95,$D0,$5C,$AE,$A5,$C4,$44,$56,$77, $A,$39, $F,$85,$3F,$90,$7F,$C1,$D6,  8,$8A,$FD,$D2,$DD,$17,$C3,  8,$BC,$64,$47,$96,$11,$73,$CF,$A3,  3,$AB,$F7,$C0,$5C,$36,$BF,$37,$45,$5B; 128
		dc.b $6F,$51,$AC,$33,$3C, $F,$C8,$FA,$BA,$5D,$ED,$D4,$C3,$28,$6C,$88,$A4,$C3,  9,$9C,$C4,$84,$C4,$84,$F2,$FE,$6E,$57,$59,$1F,$1A,  3,$14,$15,$BA,$88,$E4,$22,$22,$22,$96,$B4,$87,$89,$F0,$76,$29,$20,$8E,  9,$40,$63,$85,$F8,$A5,$87, $B,$F1,$47,$7F,$45,$1C,$86,$11; 192
		dc.b $90,$70, $E,$1F,$A8,$72,$18,$3D,$66,$11,$C6,$28,$10,$C5,$E8,$C9,$44,$1F,$E8,$34,$2B,$7E,$E2,$5A,$D9,$1C,$8E,$6F,$40,$62,$9E,$84,$78,$FE,$E4,$1E,$3F,$B8,$10,$F1,$22,$22,$22,$2B,$DC,$8E,$83,$93,$14,$83,$81,$84,$93,$93,$1B,$DC,$85,$7F,$A2,$39,$35,$C1,$C8,$EF; 256
		dc.b $E4,$59,$2C,$3F,$51,$24,$61,$FB,$93,$D7,$FA,$8C,$7F,$B2,$DF,$F8,$22,$22,$FE,$45,$37,$FA,$37,$F4,$7F,$F0,$44,$44,$5F,$F8,$FF,$C9,$51,$C8,$F8,$39,$38,$C9,$C2,$EC,$64,$E4,$E3,$7B,$90,$AF,$72,$39,$1F,$CD,$F5,$3C,$EB,$73,$F9,$BB,$89,$A4,$BD,$9D,$C1,$B7,$D7,$3E; 320
		dc.b $6F,$CE,$A0,$F1,$3D,$68,$F8,$E6,$9D,$FC,$4E,$EF,$EF,$6B,$FE,$C1,$17,$A7,$F2,$3F,$FD,$9D,$73,$86,$30,$F2,$FF,$8F,$FE,  8,$8B,$FF,$3F,$FE,$FF,$B1,$51,$C8,$F8,$39,$38,$88,$38,$5C,$28,$E4,$E3,$7B,$90,$AF,$72,$39,$1F,$FA,$6B,$AB,$75,$41,$8C,$DE,$C3,$89,$A4,  5; 384
		dc.b $6E,$AB,$90,$48,$56,$E7,$E7,$51,$2D,$68,$F8,$E6,$8F,$FD,$B6,$75,$1E,$DE,$5E,$1E,$9F,$A8,$24,$B5,$CF,$FD,$37,$A3,$6F,$F6,$CF,$DB,$7E,$7E,$DB,$FF,$7F,$FB,$EF,$DC,$7E,$E4,$8B,$FF,$1F,$FF,$28,$FF,$91,$A3,$DE,$C3,$F8,$72,$EE,$22,$22,$22,$22,$29,$77,$30,$FE,$1B; 448
		dc.b $47,$BE,$77,$CF,$BE,$2D,$FC,$30,$DD,$CC, $F,$B8,$C1,$37,$71,$86,$EE,$60,$DE,$62,$42,$2F,$8C,$84,$5F,$18,$79,$E2,$7D,$D2,$EE,$97,$F0,$F1,$3E,$F8,$94,$23,$DA,$22,$66,$36,$8E,$70,$7C,$F4,$12,$FC,$AE,$94,$9E,$CD,$56,$99,$4A,$76,$D5,$3B,$6A,$D9,$3A,$69,$AA,$FD; 512
		dc.b $20,$F6,$88,$31,$B4,$1C,$4E,$3D,$A2,$26,$42,$3D,$A3,  1,$B4,$34,$59,$F2,$5B,$69,$7E,$CD,$56,$9E,$AB,$4C,$8A,$9B,$27,$7A,$FE,$56,$9A,$4D,$F2,$88,$DA,$18,$47,$B4,$48,$E6,$71,$FE,$B9,$8F,$E9,$C3,$BE,$CF,$22,$22,$22,$2B,$3E,$1D,$E6,$3F,$A6,$71,$FE,$BC,$BF,$64; 576
		dc.b $FE,$63,$93,$2C,$C7,$31,$33,$7C,$F4, $F,$67,$87,$9A,$C9,$66,$A6,$19,$4F,$56,$C6, $C,$A5,$65,$BD,$4F,$56,$C6, $C,$B3,$53, $C,$F0,$F3,$58,$3E,$7A,  7,$B2,$CC,$73,$13,$37,$F3,$1C,$9B,$F6,$44,$44,$47,$FA,$2A,$4C,$E3,$49,$BE,$72,$9B,$D5,$F2,$9B,$D5,$F4,$9B,$D6; 640
		dc.b $93,$7A,$CA,$6F,$57,$CA,$6F,$57,$D2,$6F,$5A,$4E,$34,$99,$C5,$F2,$FD,$91,$11,$75,$FF,$DF,$FE,$7F,$F7,$BF,$B5,$3B,$51,$FB,$28,$F5,$BD,$FF,$94,$FF,$BF,$FC,$FF,$EF,$D6,$44,$5D,$7D,$F1,$6F,$33,$89,$F6,$35,$89,$BD,$7C, $D,$5E,$1E,$BD,$D3,$88,$7F,$ED,$26,$F0,$F8; 704
		dc.b   8,$9B,$D7,$F4,$93,$78,$7A,$F6,$35,$88,$7F,$9C,$DE,$23,$DD,$16,$8F,$59,$11,$7F,$88,$E3,$DD,$CD,$67,$B4,$F1,$F0,$E4,$7A,$18,$7F,$E5,$7B,$6C,$8A,$BE,$93,$57,$F2,$97,$87,$E5,$5F,$B2,$67,$E0,$CA,$71,$D8,$AF,$65,$68,$9E,$D9,$88,$8E,$EE,$6A,$7F,$D2,$39,$91,$17; 768
		dc.b $59,$8E,$7D,$C2,$22,$7B,$4E,$26,$A6,$F3,$5D,$46,$AD,$E0,$BA,$B6,$76,$D5,$37,$AC,$B9,$3D,$68,$F5,$EE,$FC,$AB,$D5,$F3,$D0,$4D,$E6,$AF,$C4,$F6,$CC,$73,$EE,$8F,$59,$11,$1F,$F8,$B6,$4C,$E3,$DD,$B2,$6F,$9F,$9C,$DE,$BD,$E6,$F5,$7C,$9E,$6F,$57,$C1,$E6,$F5,$7C,$9E; 832
		dc.b $AF,$A3,$D5,$F2,$79,$BD,$7B,$CE,$27,$E6,$D1,$EF,$EB,$22,$2E,$BF,$EB,$F3,$FE,$9C,$C7,$77,$23,$56,$F0,$98,$57,$B3,$CD,$4D,$5E,$CF,$53,$58,$3C,$D4,$D5,$ED,$DB,$60,$D4,$7D,$FC,$8F,$F8,$7F,$A2,$EF,$FD,$37,$59,$11,$4E,$D1,$5E,$42,  1,$E2,$62,$93,$A2,$CF,$50,$A3; 896
		dc.b $E7,$B2,$5E, $B,$B2,$4F,$9E,$A1,$41,$B2,$8A,$CB,$28,$BE,$2B,$25,$E4,$44,$45,$FC,$28,$72,$38,$BF,$96,$A8,$85,$D5,$B3,$96,$A8,$85,$D5,$B2,$1C,$8E,$2F,$87,$F0,$88,$BA,$FF,$EF,$FF,$4F,$FA,$7F,$DF,$AC,$8B,$AF,$BE,$2C,$A7,$17,$9C,$F6,$9C,$5E,$73,$D3,$BE,$2D,$D6; 960
		dc.b $45,$FE,$23,$8F,$7C,$76,$6A,$FD,$A4,$7F,$4B,$FB,$48,$FE,$56,$3D,$FC,$FA,$C8,$BA,$C1,$8E,$7D,$A6,$B3,$FC,$AA,$9B,$E6,$B3,$FC,$AA,$9B,$D4,$C7,$3E,$C7,$FE,$22,$2E,$BF,  8,$B4,$7B,$1C,$F4,$D5,$F9,$47,$9C,$F4,$D5,$F9,$4F,  8,$B4,$7C,$3A,$C8,$BA,$FF,$EF,$FD,$4C; 1024
		dc.b $7F,$A9,$8F,$FD,$FA,$C8,$BF,$65,$2F, $E,$7B,$17,$96,$80,$F6,$2F,$2D,  1,$EC,$5E,$5E,$1F,$A6,$5E,$40,  0,$EF,$71,$DD,$DD,$CC,$CC,$FC,$F8, $B,$CC,$C6,$FD,$FA,$F6,$FD,$18,$46,$FC,$BF,$66,$FC,$DF,$FF,$EA,$13,$C2,$FC,$FE,$DF,$FC,$DC,$FC,$ED,$FF,$87,$CF,$FB,$ED; 1088
		dc.b $F6,$66,$FB,$66,$6F,$FF,$FB,$BB,$FF,$FC,  0,$23,$EE,$FB,$FC,$EE,$DB,$FC,$8D,$31,$E0,$EE,$EF,$FC,$E6,$FC,$F6,$86,$21,$FC,$6F,$FC,$E6,$FF,$FC,$BF,$7E,  0,$FC,$6F,$BE,$DD,$D6,$BE,$DD,$DC,$10,$1B,$EA,$FC,$F8, $A,$AC,$D6,$FC,$FD,$F6,$31, $E,$FC,$D0,$CC,$FC,$CF; 1152
		dc.b $6F,  7,$1C,$FB,$C6,$FF,$F6,$A0,$A1,$B9,$99,$FE,$F0,$FD,$98,$88,$FB,$98,$87,$66,$B9,$FD,$78,$B9,$86,$6F,  4,$68,$88,$98,$76,$88,$FC,$FC,$67,$FC,$F1,$C3,$10,$FC,$FC,$78,$FC,$D9,$87,$FC,$B9,$86,  3,$FD,$88,$FD,$D1,$88,$FF,$D9,$FB,  4,$38,$6A,$D9,$C4,$FB,$BD; 1216
		dc.b $BB,$EE,  0,  1,$38,$94,$FC,$38,$4A,$23,$8A,$FC,$FE,$54,$DF,$BD,$7E,$D5,$39,$FC,$FB,$FC,$FE,$FA,$F1,$FF,$BC,$FC,$F6,$C0,$30,$83,$1E,$99,$9D,$BE,$88,$89,$FC,  3,$FB,$77,$88,$99,$DF,$88,$78,$89,$9B,$A6,$60,  9,$F3,$9D,$99,$FC,$F8,$15,$E4,$1F,  2,$FC,$89,$99; 1280
		dc.b $DB,$99,$C7,$BF,$FD,$C4,$85,$BE,$DB,$3E,$FF,$BD,$DE,$F1,$FC,$80,$48,$EE,$A0,$FC, $C,$A0,$F0,$FC,$F1,$FC,$FC,$82,$F0, $D,$FC,$DD,$DF,$6C,$1F,$82,$CC,$DF,$6F,$BC,$CC,$6F,$77,$CC,$CC,$64,$BC,$68,$F8,  9,$5C,$66,$F2,$FC,$DC,$BF,$FC,$ED,  0,$80,$AE,$F1,$3D,$2E; 1344
		dc.b $FF,  3,$20,$FC,$BB,$BF,$1D,$9F,$A0,$40,$24,$E0,$FC,$FE,$AC,$FC,$30,$C2,$13,$FC,$FD,$FE,$FC,$BF,$DD,$14,$54,$EB, $E,$EB,$DE,$82,$F0, $D,$7E,$F5,  0,$F0, $B,$69,$88,$70,$F8, $E,$FC,$B6,$66,$FF,$CB,$29,$86,$94,$CC,$8B,$DB,$FC,$ED,$8E,$C3,$86,$ED,$ED,$CB,$FC; 1408
		dc.b $EE,$CD, $C,$F2,$6B,$FC,  8,$63,$D6,$F8,$4E,$EE,$E6,$E4,$6F,$88,$51,$FC,$D6,$D4,$BB,$FF,$94,$F8,$11,$8D,$8D,  1,$F1,$EE,$F8, $E,$CB,$A0,$C6,$90,$F1,$C6,$21,  0,$5C,$C6, $F,$DD,$C4,  7,$26, $C,$C0,$BC,$BC,$FC,$BB,$B7,$DA,$20,$B9,$99,$6F,  0,$F0,  9,$77,  0; 1472
		dc.b $F7,  4,$F0, $E,  0,$F0, $F,$BF,  0,$F1,$C2,$18,$E6,  0,$F1,$6D,$FB,$BD,$69,$FF,$63,  8,$FC,$BC,$F4,$CB,$AC,$BE,$36,$60,$FC,$4E,$E9,$D6,$CD,$F1,$DB,$7E,$5C,$CC,$C2,  0,$82,$FC,$6F,$FC,  2,  0,$E3,$87,$F1,$7B,$78,$FC,$B6, $D,$39,$BD,$45,$F1,$BD,$3C,$F1,$FD; 1536
		dc.b $2D,$F1,$B6,$36,$8E,$91,  0,$F0,$34,$FE,  0,$F1,$BE,$81,$BE,$CF,$71,$18,$FC,$CC,$FC,$BC,$EF,$AC,$BC,$EE,$20,$56,$FC,$81,$DF,$FC,$DD,$1E,$F1,  0,$F0, $E,$C1,$58,$82,$F0,$10,$FC,$81,$F1,$6B,$BC,$BC,$34,$E9,$5C,$C0,$BD,$BD,$DD,$82,$F1,$FC,$C3,$EF,$28,$DF,$CD; 1600
		dc.b $EE,$DE,$DF,$BA,$F1,$BF,$FD,$FC,$22,$E9,$C4,$B1,$E4,$FE,$FC,$FF,$DD,$FC,$FD,$92,$61,$80,$F2,$82,$F0,$11,$A0,  0,$F0,$28,$77,$FC,$D7,$67,$8C,$21,$FC,$78,$FC,$88,$FC,$D8, $E,$30,$F8,$D8,$98,$E6,$1E,$DD,$ED,$3C,$45,$FC,$ED,$E8,$88,$87,$FC,$EE,  7,$D1,$12,$FC; 1664
		dc.b $F8, $B,$E1,$FC,$F8, $D,$D8,$FC,$FD,$C8,  2,$20,$FC,$8E,$F3,$8A,$49,$87,$FC,$82,$F8,$12,$60,$77,$78,$DD,$89,  1,$62,$87,$78,$89,$A3,$97,$BF,$88,  7,  1,$23,$F2,$98,$99,$FC,$9B,$F4,$E7,$86,$81,$FC,$77,$77,$FC,$76,$67,$F7,$88,$E4,$FC,$F4,$EC,$FF,$F8,$2B,$B5; 1728
		dc.b $C0,$C6,$99,$FF,$60,  0,$F8,$12,$9C,$FC,$18,$86,$8C,$79,$97,$79,$9D,$97,$A4,$46,$80,$8D,$A9,$E9,$9D,$79,$FC,$79,$96,$94,$8D,$B9,$F8, $A,$89,$A1,$F8,$16,$E8,$FC,$FE,$E8,$EE,$E0,$30,$8D,$32,$89,$99,$87,$FD,$98,$7D,$BC,$6A,$FD,$77,$DD,$98,$87,$F2,$F1,  0,$F8; 1792
		dc.b $14,$7E,$E0,$13,$60,$F0, $F,$ED,  8,$AD,$60,$CD,$C3,$8D,  0,$F1,$98,$BA,$F1,$68,$8C,$FC,$F8, $C,$AC,$FC,$FE,$87,$FC,$8E,$15,$FE,$FC,$7E,  0,$F0,$35,$FC,$F8,$13,$47,$DD,$C7,$67,$DD,$ED,$C7,$E1,$1F,$78,$ED,$FC,$88,$ED,$EE,$C8,$78,$EE,$E8,$88,$34,$A1,$95,$6D; 1856
		dc.b $F1,$F5,$E9,$76,$FC,$10,$CA,$42,$6E,$F1,$FF,$F8,$11,$FD,$E9,$FC,$D8,$EB,$D7,$89,$BD,  5,$F8,$ED,  0,$F8,$2A,$77,$78,$78,$E8,$E9,$87,$6F,$F1,$99,$15,$20,$3B,$F2,$E8,$EC,$9F,$F2,$E6,$FC,$66,$12,$59,$8A,$FC,$F4,$FF,$F8,$23,$89,  0,$F1,$B2,$A1,$F8,  0,$F8,$2B; 1920
		dc.b $9C,$EC,$E9,$87,$7D,$9C,$AA,$20,$EC,$EA,$65,$E9,$EC,$EE,$91,$F8,$24,$F8,$ED,$FC,$FF,$E9,$86,$C1,$86,$87,$FD,$77,$7D,$FA,  0,$F0,$39,$B6,  0,$DC,  0,$F1,$DD,  0,$F1,$8D,$3C,$F1,$3B,$23,$89,$FC,$89,$8D,$F8,$FC,$5E,$E2,$1D,$71,$FC,$89,$FC,$FD,$99,$97,$FC,$1A; 1984
		dc.b $98,$7E,$2C,$B6,$E8,$8E,$EC,$E9,$D4,$7D,  0,$F0,$1D,$D7,$25,$46,$FC,$F8, $A,$D8,$E6,$FD,$F8,$FC,$F2,$21,$AD,  0,$E1,$FC,$ED,$FC,$EE,$CD,$34,$E6,$68,$6D,$FC,$FF,$AC,$FC,$F8, $F,$E8,$FC,$F8, $A,  0,$C0,$12,$D7,$98,$D9,$76,$7B,$A1,$A4,$D9,$77,$44,$F1,$78,$88; 2048
		dc.b $67, $B,$E1,$FA,$89,$11,$54,$D0,$F1,$98,$F8,$FC,$A1,$F3,$1C,$E2,$27,$F1,$55, $B,  1,$C1,$FC,$F8,  9,$17,$F2,$96,$E8,$14,$FF,$F8,$21,$D8,$72,$E1,$1A,$23,$56,  0,$E1,$FF,$D9,$8D,$7E,$79,$FC,$40,$A8,$EF,$FC,$89,$AC,$CC,$20,$F1,$8A,$45, $C,$E0, $F,$D9,$DA,  8; 2112
		dc.b $E2,$FC,$89,  0,$E6,$BE,$D5,$58,$FC,$F8,$17,$14,$E2,$FC,$FE,  1,$E3,$8E,$F5,$7E,  1,$E1,$80,$F7,$F8,$FC,$EE,$89,$99,$78,$6C,$F1,$7D,$DD,$B0,$6A,$98,$F9,$DD,$78,  0,$E0,$3A,  0,$F6,$A0,$C0,$1F,  0,$D0,$1F,  0,$C3,$18,$FF,$F8,$19,$77,$FD,  7,$67,$FC,$78,$43; 2176
		dc.b $1C,$FC,$88,$FC,  8,$F8,  8,$98,$80,$CF,$FC,$2E,$FC,  8,$88,$87,$28,$28,$FC,$1E,$FC,$F8,$1C,$DC,$FC,$FC,$C8,$FE,$22,  9,$F3,$A4,$FC,$89,$F8,$17,$30,$C8,$98,$89,$87,$78,$89,  0,$D0,$60,$C6,$68,$60,$FF,$F8,$12,$90,$FC,$80,$79,  0,$D1,$90,$1B,  1,$F4,$E9,$80; 2240
		dc.b $F4,$E9,$90,$79,$FC,$DA,$6B,$79,$80,  0,$D0,$42,$70,  0,$D1,  0,$98,$87,$FB,$F0,$1C,$FF,$F8,$20,$80,$15,$B9,$FC,$FD,$6F,$F1,$FC,$F8,$18,$9D,$DC,$70, $E,$9A,$98,$F8,$3A,$EC,$E8,$20,  8,$88,$95,$6D,$F1,$F5,$E9,$76,$94,$AD,$FC,  0,$D0,$17,$FD,$E9,$FC,$EC,$ED; 2304
		dc.b $89,$F8,$ED,$AB,$55,$85,$F8,$2B,$78,$78,$E8,$E9,  0,$D0,$4F,$7E,$F8,$2B,$90,$EC,$E9,$E0,$D9,$EC,$EB,$B5,$4A,$65,$E9,$EC,$EE,  0,$D0,$37,$70,$C2,$E1,$FF,$F8,$40,$20,$F2,$11,$50,$3B,$89,$F7,$6A,$FC,$5E,$E2,$EC,$88,$FC,$89,$FC,$FD,$99,$97,$FC,$25,$B2,$DF,$98; 2368
		dc.b $FB,$E9,$E0,$8D,$F0,$E8,$1E,  7,$25,$55,$FC,$F8, $A,  8,$EC,$FD,$F8,$FC,$FE,$40,$E6,$FC,$F8,$27,$C4,$F8, $B,$AD,  5,$91,$F8,$13,$AC,$E9,$76,$B0,$E9,  0,$D0,$69,  8,$72,$E1,$66,$B5,$AA,  0,$E1,$73,$E9,$C0,$F2,$79,$BC,$F6,$20,$F0, $A, $C,$E0, $A,$4D,$EA,$58; 2432
		dc.b   1,  8,$E2,$FC,$89,  0,$E6,  0,$D0,$2B,$CC, $A,$EA,$F5,$70,  1,$E1,$F8,$73,$F1,  0,$D1,$6C,$F1,$70,$11,$15,  0,$98, $E,$FD,$FF,$F8,$80,  0,$F0,  0,  0,  0,  0,  0,  0; 2496
S1Nem_EndingGraphics:dc.b $80,$25,$80,	3,  1,$14,  7,$25,$13,$35,$12,$45,$1A,$55,$16,$65,$18,$74,  4,$81,  3,	0,$16,$37,$27,$7A,$82,	6,$38,$83,  4,	6,$16,$36,$86,	7,$78,$18,$F6,$38,$F8,$87,  7,$79,$88,	6,$39,$8A,  5,$15,$8B,	5,$17,$17,$75,$8C,  5,$14,$17,$76,$8D,	4,  5,$17; 0
		dc.b $74,$8E,  4,  8,$17,$77,$8F,  5,$19,$18,$F7,$FF,$44,$44,$44,$44,$FD,$AF,$EC,$E7,$79,$5E,$6A,$68,$F5,$B0,$37,$75,$2A,$89,$81,$D9,$4F,$50,$56,$77,$21,$E9,$AD,$CA,$BD,$D1,$10,$84,$93,$48,$21,$69,  9,$30,$49,$B4,$82,$20,$3B,$16,$DE,$6D,$21,$26,  9,$36,$90,$44; 64
		dc.b $4E,$BF,$98,$EF,$D1,$11,$3F,$EC,$88,$96,$BD,$53,  3,  3,$FA,$C7,$8C,$36,  2,$7F,$5A,$F5,$C7,$9D,$57,$CA,$CB,$CA,$95,$F8,$CF,$EB,$25,$1B,$5B,$BB,$62, $F,$E6,$A6,$B4,$AB,$D6,$85,$AD,$4E,  1,$5D,$6F,$4F,$E8,$EB,$F6,$6F,$B7,$21,$A3,$68,$E4,$EF,$46,$E7,$DA,$BC; 128
		dc.b $50,$B1,$AD,$1E,$83,$8A,$E8,$69,$4F,$F4,$68,$3F,$47,$A6,$11,$B3,$B6,$E6,$39,$DB,$9A,$44,$FF,$30,$46,$14,$53,$4A,$54,$4B,$F5,$99,$F8,$3B,$73,$26,$FC,$C6,$B9,$C5,$6F,$FD,$64,$18,$18,$E0,$FF,$59,$B0,$13,$15,$BA,$22,$5B,$FE,$C9,$35,$92,$CE,$E6,$A6,$FE,$D7,$5F; 192
		dc.b $14,$F0,$88,$9F, $B,$FA,$62,$B8, $A,$F7,$37,$A3,$AB,$D4,$F6,$56,$70,$D3,$84,$6B,$2F,$33,$5F,$63,$76,$9D,$67, $E, $D,$DD,$50,$B5,$82,$20,$44,$D3,  7,  5,$93,$40,$B1,$6D,$D3,  2,$4D,$20,$85,$A4,$24,$C1,$1F,$62,$21,$69,$2C,$D8,$63,$F1,$2B,$A1,$E0,$FE,$99,$F8; 256
		dc.b $7B,$9B,$96,$2A,$F5,$43,$FB,$DE,$B5,$BA,$4D,$64,$B3,$B9,$AB,$D3,$C3,$F8,$3E,  1,$BB,$A9,$54,$44,$C0,$44,$D3,  7,  5,$92,$42,$6C,$FE,$8F,$E8,$C2,  9,$34,$82,$16,$90,$93,  4,$9B,$48,$77,$FD,$69,$DB,$4A,$73,$6C,$AE,$B2,$BA,$CD,$B3,$6C,$B8,$F7,$39,$1E,$F0,$EB; 320
		dc.b $C3,$74,$EE,$BB,$58,$53,$62,$D3,$5D,$D8,$68,$11,$C1,$1B,$7E,$48,$83,$14,$F4,$D6,$6D,$74,$EF,$D1,$11,$12,$51,$28,$C0,$87,$83,  7,$30,$AF, $D,$35,$46,$C2,$DA, $B,$3C,$4E,$14,$3E,$6C, $C,$3C,$16,$DC,$FA,$22,$7E,$8A,$CF,$7A,$74,$3B,$BF,$47,$DB,$79,  3,$F9,$2D; 384
		dc.b $83,$89,$D2,$26,$25,$1F,$AD,$EC,$FC,$61,$78,$C2,$E5,$32,$99,$9F,$B8,$7C,$CA,$3D,$C6,$4C,$7E,$B6,$91,$9D,$52,$C2,$4C,$F4,$B0,$B3,$3C,$6B,$8B,  9,$C1,$85,$CC,$1E,$E6,$11,$12,$71,$28,$9C,$1C,$BE,$6C, $C,$3C,$18,$35,$EB,$D2,$8B,$F9,$AB,$D8,$1B,$AC,$AE,$1F,$A1; 448
		dc.b $F6,$12,$57,$51,$8A, $C, $C,$5F,$74,$44,$3F,$C6,$9F,$54,$EB,$2F,$D9,$C0,$7F,$DF,$72,$DC,$36,$B9,$39,$B6,$57,$55,$53,$F1,$5B,$56,$D5,$71,$D8,$D4,$56,$8A,$FC,$F0,$DC,$C7,$48,$DA,$C2,$9B,$16,$9A,$EE,$C3,$40,$8E,  8,$DB,$F2,$44,$15,$CF,$A6,$B3,$4F,$DB,$F3,$1D; 512
		dc.b $3B,$A2,$59,$69,$FC,$6A,  9,$52,$B2,$ED,$A1,$FB,$D9,$FE,$C4,$FE,$A9,$FB,$79,$9A,$D0,$89,  7,$5B, $F,$E3,$11,$7B,$5E,$C1,$3A,$D7,$F7,$93,$F4,$56,$7B,$D3,$A1,$DD,$FA,$3E,$DB,$C8,$1F,$C9,$6C,$1C,$4F,$2B,$31,$2B,$FE,$A3,$DD,$FC,$E1,$7C,$E1,$6A,$95,$F8,$95,$67; 576
		dc.b $D8,$3D,$64,$B4,$A8,$A9,  0,  0; 640
S1Nem_CreditsFont:dc.b $80,$60,$80,  3,	 0,$14,	$A,$25,$16,$35,$17,$46,$39,$57,$77,$65,$1A,$74,	 7,$81,	 3,  1,$16,$37,$82,  4,	 6,$17,$7B,$28,$F9,$83,	 5,$13,$15,$12,$26,$32,$57,$76,$84,  5,$18,$85,	 6,$3C,$86,  4,	 8,$16,$3A,$87,	 3,  2,$16,$33,$26,$36,$36,$38,$48,$F8,$57,$7A;	0
		dc.b $FF,$AF,$E9,  6,$3D,$6C,$C6, $B,$64,$10,$98,$6C,$EA,$61,$78,$16,$E1,$B5,$E3,$BB,$EB,$CB,$EE,$1B,$BC,$C2,$F0,$20,$84,$C3,$66,$C6, $B,$64,$18,$F5,$B7,$BB,$FB,$DB,$A2,$C3,$26,$30,$5B,$36,$90,$43,$36,$C4,$81,$90,$58,  6,$D3, $A,$8E,$56,$23,$E0,$6F,$C5,$E5,$DE; 64
		dc.b $41,$60,$11,$9B,$62,$40,$E6,$D2,  8,$64,$C6, $B,$6D,$D1,$61,$FC,$21,$EE,$EC,$61,$5C,$A3,$3B,$30,$33,$B9,$54,$A9,$81,$95,$8A,$AC,$53,  3,$21,$80,$55,$7E,$52,$6C, $C,$84,$E9,$57,$E5,$28,$89, $C,$66,  8,$C7,$16,$43,$2D,$F2,$3D,  8,$DA,$37,$BF,$EC,$B3,$83,$79; 128
		dc.b $10,$D6,$54,$8D,$E4,$43,$5B,$14,$8D,$E4,$43,$5B,$14,$8D,$E4,$43,$62,$B1,$48,$4E,$D2,$A5,$6C, $D,$F3,$EF,$31,$B5,$8F,$F0,$F7,$8F,$88,$1E,$DC,$46,$D1,$5B,$E4,$43,$59,  9,$D2,$B2,$A2,$25,$4A,$88,$56,$65,$53,$E6,$75,$8E,$72,$54,$46,$74,$AD,$FB,$3D,$19,$D9,$57; 192
		dc.b $40,$E4,$41,$11,$B4,  6,$1E,$EE,$C7,$D9,$8E,$37,$47,$23,$99,$98,$42,$7B,$CC,$2B,$48,$2A,$9A,$A5,$64,$33,$BC,$EC,$BB,$A1,$E5,$D5,$1B,$21,$95,$A4,$79,$FD,$35,$6D,$B8,$3F,$B3,$F6,$23,$8F,$F9,$46,$B7,$D2,$67,$E6,$7B,$BE,$93,$3D,$E4,$79,$3A,$F2,$8B,$DD,$51,$BC; 256
		dc.b $8F,$39,$C3,$8F,$D9,  8,$F4, $F,$6B,$7C,$69,$3E,$96,$93,$BB,$BE,$95,$BE,  1,$EC,$23,$D6,$9B,$E2,$2B,$F8,$66,$B8,$A2,$38,  7,$BC,$ED,$B7,$3B,$58,$8F,$D9,$95,$6D,$FA,$36,$DE,$14,$57,$F0,$F7,$1C,$5F,$8B,$FF, $F,$71,$F1, $E,$18,$47,$A0,$7B,$5B,$E3,$49,$DD,$DD; 320
		dc.b $F4,$B4,$9E,$DC,$51,$EC,$23,$D7,$3F,$39,$F4,$5A,$A4,$C6, $B,  4,$D2, $A,$93,$62,$56,$98,$58,$1B,$D4,$DF,$53,$EF,$30,$B0,$37,  9,$B1,$2B,$26,$90,$55,$26,$30,$5A,$8A,$82,$D6,$47,$DD,$91,$6D,$7F,$48,$47,$A0,$7B,$5B,$87,$77,$77,$77,$77,$56,$F8,  7,$B0,$8F,$55; 384
		dc.b $FD,$28,$D1,$77,$77,$77,$2D,$DD,$1F,$D9,$51,$8C,$E2,$BF,$87,$B8,$E2,$FC,$5F,$F8,$7B,$8F,$88,$7B,$46,$D0,$58,$1C,$8F,$56,$4D,$23,$7F,$CA,$CB,$96,$C7,$9A,$67,$BB,$6B,$C6,$D7,$98,$6E,$65,$E7,$79,$59,$54,$10,$72,$22,  4,$6D,  5,$9C,$C6,$D1,$63,$91,$A8,$A5,$79; 448
		dc.b $EA,$5D,$F1,$E6,$9B,$CD,$33,$BF,$38,$6E,$F3,$FC,$AF,$32,$65,$78,$39,$1A,$31,$B4,$57,$BE,$58,$31,$EB,$66,$30,$5B,$20,$84,$C3,$67,$53, $B,$C0,$B7, $D,$AF,$1D,$DF,$5E,$5F,$70,$DD,$E6,$17,$81,  4,$26,$1B,$36,$30,$5B,$20,$C7,$AD,$BD,$DF,$DE,$DD,$16,$19,$31,$82; 512
		dc.b $D9,$B4,$82,$19,$B6,$24, $C,$82,$C0,$34,$66,$15,$1A,$39,$17,$B1,$C8,$D1,$98,$54,$64,$16,  1,$19,$B6,$24, $E,$6D,$20,$86,$4C,$60,$B6,$DD,$16,$D7,$B1,$1E,$81,$ED,$6F,$8D,$27,$77,$77,$D2,$D2,$7B,$71,$47,$B0,$8F,$5C,$FC,$E7,$D1,$6A,$93,$18,$2C,$13,$48,$22,$13; 576
		dc.b $62,$56,$98,$58,  6,$D3,$7D,$4F,$BC,$C2,$C5,$9B,$69,$D2, $B, $C,$84,$F7,$93,$61,$5D,$A4,$AC,$51,$CB,$78,$31,$B4, $F,$7A,$63,$D6,$CC,$60,$B6,$41,  9,$86,$CE,$A6,$17,$81,$6E,$1B,$5E,$3B,$BE,$BC,$BE,$E1,$BB,$CC,$2F,  2,  8,$4C,$36,$6C,$60,$B6,$41,$8F,$5B,$7B; 640
		dc.b $BF,$BD,$BA,$2C,$32,$63,  5,$B3,$69,  4,$33,$6C,$48,$19, $C,$20,$6D,$95,$CB,$E8,$BE,$56,$90,$C2,  4,$66,$D8,$90,$39,$B4,$82,$19,$31,$82,$DB,$74,$5B,$5E,$C4,$7A,  7,$B5,$B8,$BE,$2C,$C0,$CA,$DE,  5,$58,$B3,$6F,$2C,$5D,$19,$59,$8A,$A5,$75,$53,$60,$C0,$CC,$63; 704
		dc.b $CA,$34,$B1,$DD,$4A,$B7,$C8,$86,$11,$B4,$7B,$EF,  6,$36,$80,$51,$C8,$89,$99,$85,$79,$85,$8B,$4C,$79,$89,$11,$89,$89,$15,$5D,$52,$35,$12,$82,$1B,$12,$34,$C2,$41,$1E,$60,$86,$A9,$9A,$6B,$14,$5A,$E8,$B7,$25,$BB,$FF,$C9,$8F,$5C,  4,$5B,$F6,$75,$31,$C6,$E1,$59; 768
		dc.b $3D,$B1,$65,$BC,$B9,$54,$AE,$84,$C2,$AD,$E5,$4A,$EA,$FB,$8E,$2D,$31,$C0,$45,$BF,$66,$C7,$AE,$1A,$FF,$39,$F4,$5A,$A4,$C5,$5B,$31,$3B,$EC,$37,$BA,$D4,$B7,$A4,$26,$15,$D5,$2E,$65,$BD,$F0,$FA,$43,$7A,$CC,$4E,$F2,$62,$AD,$9F,$45,$B5,$F2,$23,$D0,$3D,$AD,$C3,$BB; 832
		dc.b $BB,$DE,$7C,$91,$1D,$E6,$CE,$B0,$10,$47,$2C,$D8,$AD,$F2, $C,$7A,$DB,$DF,$78,$11,$B4,  2, $E,$47,$95,$45,$DD,$C1,$D2,$D1,$9D,$C8,$98,$90,$22,$62,$6B,$13,$AC,$CE,$2F,$9B,$48,$A1,$96,$E8,$B6,$DD,$16,$1E,$EF,$EC,$31,$EB,$66,$30,$5B,$20,$84,$9B,$3A,$96,$19,$60; 896
		dc.b $11,$85,$53,$E6,$7C,$AB,$30,$3F,$B3,$1E,  4,$44,$C2,$A4,$66,$15,$8C,$C2,$EE,$B5,$F0, $F,$61,$1E,$B9,$F9,$CF,$A2,$D5,$26,$30,$58,$26,$90,$56,$F3,$12,  6,$E8,$17,$E6,  1,$E5,$A7,$CE,$29,$1A,$F2,$41,$52,$61,$2D,$C7,$17,$E2,$FF,$C3,$DC,$7C,$43,$86,$11,$E8,$1E; 960
		dc.b $D6,$E1,$DD,$D6,$93,$BB,$BB,$DB,$8A,$3D,$84,$7A,$78,$11,$B4, $F,$D0,$E4,$69,$52,$B9,$EF,$97,$3C,$5F,$8B,$E5,$DC,$E9,$68,$BB,$D2,$B1,  7,$22,$20,$46,$D0,$F5,$1E,$81,$ED,$6F,$8B,$6D,$63,$95,$FA,$37,$F6,$57,$76,$2E,$EE,$EF,$59,$DC,$E5,$78,$DB,$E7,$9F,$50,$3B; 1024
		dc.b $11,$F1,$CE,$DD,$F2,$3C,$9E,$B9,$47,$DD,$CB,$3B,$BB,$D6,$7D,$F2,$37,$DA,$1C,$7C,$88,$F4, $F,$6B,$7C,$69,$3B,$BB,$BB,$BE,$95,$BE,  1,$EC,$23,$D7,$3F,$39,$F4,$7D,$89,$31,$E8,$B6,$6D,$22,$86,$65,  9,$DE,$6D,$30,$44,$87,$98,$A3,$53,$7D,$4F,$99, $F,$31,$46,$A6; 1088
		dc.b $D3,  4,$66,$50,$9D,$66,$D2,$28,$49,$8F,$45,$B3,$E8,$FB,$EF,$F3,$1E,$A0,$F6,$35,$C3,$BB,$BB,$BB,$BB,$DF,$8A,$3D,$8C,$7A,$87,$11,$E8,$1E,$D6,$F8,$D2,$77,$77,$77,$7D,$2B,$7C,  3,$D8,$47,$AD,$37,$C4,$16,$FE,$19,$43,$81,$32,$36,$C2,$A3,$FB,$3E,$F2,$BC,$86,$10; 1152
		dc.b $DF,$6E,$76,$C2,$1B,$FE,$CE,$FF,$B3,$BE,$D8,$54,$78,$13,$23,$F8,$65, $F,$88,$3F,$D2,$A6,$EF, $B,$B9,$9B,$BB,$FF, $A,$F1,$C5,$8E,$5D,$D3,$89,$5F,$1E,$5C,$CA,$36,  8,$4B,$66,$30,$7F,$66,$18,$C7,$1E,$F9,$6F,$88,$AF,$E1,$9A,$E1,$DD,$DD,$DF,$53,$D2,$EF,$89,$1A; 1216
		dc.b $CE,$41,$56,$46, $B, $D,$A0,$B6,$BE,$44,$7A,  7,$B5,$B8,$BE,$2C,$C0,$C9,$AB,$C0,$88,$86,$A6,$22,$51,$74,$65,$E0,$62,$8C,$C7,$8C,$10,$98,$CE,  1,$61,$98,$9D,$B3,$13,$BA,$13,$33,  7,$22,$88,$8D,$A0,$C3,$C1,$8D,$A0,$14,$72,$22,$66,$61,$5E,$63,$3B,$4C,$66,$18; 1280
		dc.b $88,$CC,$4C,$20,$DE,  9,$94,$58,$79,$22,$AF,$12,  5,$A9,$A0,$14,$3C,$A6,$91, $D,$6C,$5F,$8B,$76,$23,$D4,$3D,$47,$A0,$7B,$5B,$E3,$49,$DD,$DD,$DD,$F4,$AD,$F0, $F,$61,$1E,$B9,$F9,$CF,$A3,$EC,$49,$8F,$44,$66,$D2,$28,$66,$50,$9D,$E6,$D3,  4,$48,$79,$8E,$66,$FA; 1344
		dc.b $9F,$32,$1E,$63,$99,$B4,$C1,$19,$94,$27,$59,$B4,$8A,$12,$63,$D1,$19,$F4,$7D,$F7,$F9,$11,$E8,$1E,$D6,$E1,$DD,$6B,$CD,$33,$BB,$BB,$DB,$8A,$3D,$84,$7A,$7E,$B8,$81,$BF,$EC,$F7,$C9,$95,$A6,$D8,$2A,$D8,$2B,$2D,$FF,$28,$26,$7A,$13,$12,$34,$C3,$F2,$94,$AA,$42,$44; 1408
		dc.b $35,$7E,$52,$A2,$A4,$24,$6F,$F9,$4A,$20,$C9,$58,$C1,$CB,$78,$11,$B4,$3D,$47,$A0,$7B,$5B,$E3,$49,$F4,$B4,$9D,$DD,$DE,$DC,$51,$EC,$23,$D6,$9B,$E2,$2B,$F8,$66,$B8,$A2,$38,  7,$BC,$ED,$B7,$3B,$58,$8F,$D9,$95,$63, $A, $B,$52,$3F,$36,$2C,$EF,$C9,$D4,$68; 1472
S1Nem_EndingSONICText:dc.b $80,$30,$80,	 6,$3A,$15,$1B,$24,  9,$35,$1A,$45,$18,$54, $A,$64,  5,$74,  4,$81,  5,$16,$82,	 3,  1,$17,$7B,$28,$F8,$83,  3,	 0,$15,$19,$26,$3B,$48,$FA,$84,	 4,  6,$16,$3C,$28,$F9,$85,  4,	 8,$15,$1C,$27,$7A,$86,	 5,$17,$87,  4,	 7,$FF,$D1, $D,$12,$5A,	 8; 0
		dc.b $E8,$DD,$B4,$5E,$9C,$26,$33,$80,$E9,$41,$C5, $B,$A8,$85, $C,$46, $B,$45,$FC,$AF,$7D,$1F,  1, $D,$D5,$FD,$C3,$47,$BB,$55,$85,$3A,$DE,  6,  8,$8F,$E2,$4F,$F0,$93,$EA,$6F,$EA,$F3,  7,$A3,  8,$89,$A7,$87,$C7,$7A,$F4,$C0,$EF,$B3, $D,  2,$84,$22,$E4,$8D,$5A,$1A; 64
		dc.b $3C,$83,$79,$F6,$18,$FA,  6,$7B,$86,$81,$42, $A,$B2,$24,$2D,$D4,$25,  5,$7C, $F,$72, $C,$37,$5F,$30,$D3,$F0,$98,$CE,$F3,$B7,$8D,$C3,$EB,$35,$CA,$E5,$67,$4F,$1B,$87,$DE,$77,$94,$D9,$A3,$7C,$1F,$CB,$E8,$B8,$B4,$97,$1D,$19,$B0,$AB,$D1,$15,$65,$75,$B6,$8A,$DB; 128
		dc.b $76,$D5,$F6,$EB,$65,$22,$6F,$37,$91,$36,$14,$5C,$51,$71,$45,$D4,$A2,$75,$F5,$2F,$E9,$F0,$1A,$F8, $D,$7C,  6,$BE,  3,$5E,$5F,$D3,$CF,$D6,$88,$6F,$42,$1A, $F,$70,$11,$11,$27,$BD,  7,$E4,$F0,$EB,$35,$65,$65,$2B,$75,$22,$4C,$FE,$D5,$F5,$FB,$34,$44,$81,$42,$1A; 192
		dc.b  $F,$7B,$21,$BD,$26,$33,$4F,  8,$16,$16,$14,$61,$E2,$B3,$D3,  3,$83, $D,  0,$E0,$43,$9A, $E,$68,$3A,$E5,$78,$A0,$AD,$D4,$AB,$2D,$AB,$38,$E5,  4,$4A,$14,$1F,  1,$CC,$88,$73,$D1,$86,$80,$76,$C0,$A5,$66,$73,$D4,$3C,$BC,  5,$85,$85,  9, $F,$2F,$1D,$66,$73,$8F; 256
		dc.b $8D, $F,$94,$42,$B6,$5B,$A8,$2B,$65,$75,$B2,$2D,$95,$D6,$D4, $D,$5D,$6C,$A5,$11,$24,$7C,$E3,$E1,$3B,$9C,$F1,$E5,$E0,$35,$F0,$1A,$F8, $D,$7C,  6,$BE,$38,$F2,$F1,$DC,$E7,$FA,$5B,$FE,$25,$D6,$C6,$85,$D6,$C6,$85,$D6,$CA,$11,$11,$24,$AB,$85,$B2,$DC,$51,$B2,$DC; 320
		dc.b $51,$B2,$DC,$51,$B7,$C8,$9B,$FC,$68,$A7,$78,$E3,$EB,$C8,$2D,$36,$22,$88,$A6,$82,$D3,$6E,$3E,$9B,$B5,$FE,$97,$43,$FA,$88,$88,$85,$6E,$B6,$50,$EA,$51,$11,$11,$11,$11,$2B,$FE,$9F,$F2,$46,$E3,$6A,$D9,$B3,$48,$F3,$AB,$6A,$EC,$2D,$AB,$B6,  7,$98,$B6,$4D,$E5,$B8; 384
		dc.b $C5,$3E,  4,$8F,$94,$44,$44,$44,$D3,$A2,$22,$22,$22,$22,$24,$89,$FD,$A6,$3E,$13,$EA,$5F,$D3,$E0,$35,$F0,$1A,$F8, $D,$7C,  6,$BC,$BF,$A7,$9F,$A9,$F8,$C7,$C8,$44,$49,$2B,$65,$BD,$11,$56,$57,$5B,$22,$D9,$5D,$6C,$A4,$2D,$D6,$CA,$51,$3E,$46,$BE,$13,$19,$DE,$76; 448
		dc.b $F1,$B8,$7D,$66,$B9,$5C,$AC,$E9,$E3,$70,$FB,$CE,$F2,$A4,$36,$C8,$86,$83,$D1,$78,$12,$5C,$61,$C5,  4,$4A,$15,$CC,$66,$AC,$AC,$A5,$6E,$A4,$2F,$17,$2A,$E2,$8B,$8A,$2F,  3,  4,$43,$41,$C1, $C,$9B,$1E,  9,$6B,$FB,$BB,$48,$E0,$C7,$E4,$6B,$F2,$38,$1C,$12,$D7,$F7; 512
		dc.b $76,$91,$E0,$DF,$A6,$13,$D9,$E0,$38,$10,$EB,$65,$BD,  3,$FB,$3D,$DB,$A7,$FD,$A8,$BF,$46,$44,$14,$44,$4C,  6,$D1,$E5,$B7,$C7,$1D,$67,$AE,$E5,$D6,$CB,$95,$7A,$16,$FD,$99,$8F,$CB,$FE,$D5,$87,$B4,$96,$E3,$4B,$5B,$36,$6D,$D8,$79,$D5,$B5,$76,$16,$D5,$DB,$56,$1E; 576
		dc.b $69,$AD,$93,$79,$6E,$31,  0; 640
; --------------------------------------------------------------------------------------
; ToeJam & Earl REV00 data, likely due to it once occupying the cartridge, best
; just to remove it given it takes up ONE TENTH of the cartridge space
; --------------------------------------------------------------------------------------

Leftover_E166F:
		incbin	"misc/leftovers/E166F.bin"

; end of 'ROM'
		END
